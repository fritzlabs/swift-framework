[{"/Users/vagrant/git/Source/FritzCore/APIClient.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8531, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum Response</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 269}], "key.bodylength": 96, "key.bodyoffset": 291, "key.doc.column": 13, "key.doc.comment": "Represents an HTTP response", "key.doc.declaration": "public enum Response", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"13\" column=\"13\"><Name>Response</Name><USR>s:9FritzCore8ResponseO</USR><Declaration>public enum Response</Declaration><CommentParts><Abstract><Para>Represents an HTTP response</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "Response", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 237, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Response</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 112, "key.name": "Response", "key.namelength": 8, "key.nameoffset": 281, "key.offset": 276, "key.parsed_declaration": "public enum Response", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 294, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case success(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "success(data:)", "key.namelength": 19, "key.nameoffset": 299, "key.offset": 299, "key.parsed_declaration": "case success(data: Data)", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(Response.Type) -> (Data) -> Response", "key.typeusr": "$sy9FritzCore8ResponseO10Foundation4DataV_tcACmcD", "key.usr": "s:9FritzCore8ResponseO7successyAC10Foundation4DataV_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 321, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error(error: <Type usr=\"s:s5ErrorP\">Error</Type>, response: <Type usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</Type>?, data: <Type usr=\"s:10Foundation4DataV\">Data</Type>?)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>response</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct>?</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 60, "key.name": "error(error:response:data:)", "key.namelength": 60, "key.nameoffset": 326, "key.offset": 326, "key.parsed_declaration": "case error(error: Error, response: HTTPURLResponse?, data: Data?)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(Response.Type) -> (Error, HTTPURLResponse?, Data?) -> Response", "key.typeusr": "$sy9FritzCore8ResponseOs5Error_p_So17NSHTTPURLResponseCSg10Foundation4DataVSgtcACmcD", "key.usr": "s:9FritzCore8ResponseO5erroryACs5Error_p_So17NSHTTPURLResponseCSg10Foundation4DataVSgtcACmF"}]}], "key.typename": "Response.Type", "key.typeusr": "$s9FritzCore8ResponseOmD", "key.usr": "s:9FritzCore8ResponseO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RequestError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 435}], "key.bodylength": 79, "key.bodyoffset": 468, "key.doc.column": 13, "key.doc.comment": "Represents an internal HTTP client error", "key.doc.declaration": "public enum RequestError : Error", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"19\" column=\"13\"><Name>RequestError</Name><USR>s:9FritzCore12RequestErrorO</USR><Declaration>public enum RequestError : Error</Declaration><CommentParts><Abstract><Para>Represents an internal HTTP client error</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "RequestError", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 390, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 461}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RequestError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 106, "key.name": "RequestError", "key.namelength": 12, "key.nameoffset": 447, "key.offset": 442, "key.parsed_declaration": "public enum RequestError: Error", "key.parsed_scope.end": 24, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 471, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidData</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidData</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "invalidData", "key.namelength": 11, "key.nameoffset": 476, "key.offset": 476, "key.parsed_declaration": "case invalidData", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO11invalidDatayA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 490, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidResponse</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidResponse</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "invalidResponse", "key.namelength": 15, "key.nameoffset": 495, "key.offset": 495, "key.parsed_declaration": "case invalidResponse", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO15invalidResponseyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 513, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidURL</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidURL</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "invalidURL", "key.namelength": 10, "key.nameoffset": 518, "key.offset": 518, "key.parsed_declaration": "case invalidURL", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10invalidURLyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 531, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case statusCode</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>statusCode</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "statusCode", "key.namelength": 10, "key.nameoffset": 536, "key.offset": 536, "key.parsed_declaration": "case statusCode", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10statusCodeyA2CmF"}]}], "key.typename": "RequestError.Type", "key.typeusr": "$s9FritzCore12RequestErrorOmD", "key.usr": "s:9FritzCore12RequestErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestCompletionHandler = (<Type usr=\"s:9FritzCore8ResponseO\">Response</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1331}], "key.doc.column": 18, "key.doc.comment": "Type to handle network request completion", "key.doc.declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"52\" column=\"18\"><Name>RequestCompletionHandler</Name><USR>s:9FritzCore24RequestCompletionHandlera</USR><Declaration>public typealias RequestCompletionHandler = (Response) -&gt; Void</Declaration><CommentParts><Abstract><Para>Type to handle network request completion</Para></Abstract></CommentParts></Other>", "key.doc.line": 52, "key.doc.name": "RequestCompletionHandler", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 1285, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestCompletionHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore8ResponseO\">Response</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 55, "key.name": "RequestCompletionHandler", "key.namelength": 24, "key.nameoffset": 1348, "key.offset": 1338, "key.parsed_declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "(Response) -> ().Type", "key.typeusr": "$sy9FritzCore8ResponseOcmD", "key.usr": "s:9FritzCore24RequestCompletionHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestOptions = [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1442}], "key.doc.column": 18, "key.doc.comment": "Type to represent request body/url options", "key.doc.declaration": "public typealias RequestOptions = [String : Any]", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"55\" column=\"18\"><Name>RequestOptions</Name><USR>s:9FritzCore14RequestOptionsa</USR><Declaration>public typealias RequestOptions = [String : Any]</Declaration><CommentParts><Abstract><Para>Type to represent request body/url options</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "RequestOptions", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1395, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestOptions</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 40, "key.name": "RequestOptions", "key.namelength": 14, "key.nameoffset": 1459, "key.offset": 1449, "key.parsed_declaration": "public typealias RequestOptions = [String: Any]", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "[String : Any].Type", "key.typeusr": "$sSDySSypGmD", "key.usr": "s:9FritzCore14RequestOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestHeaders = [<Type usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1529}], "key.doc.column": 18, "key.doc.comment": "Type to represent request headers", "key.doc.declaration": "public typealias RequestHeaders = [HTTPHeader : String]", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"18\"><Name>RequestHeaders</Name><USR>s:9FritzCore14RequestHeadersa</USR><Declaration>public typealias RequestHeaders = [HTTPHeader : String]</Declaration><CommentParts><Abstract><Para>Type to represent request headers</Para></Abstract></CommentParts></Other>", "key.doc.line": 58, "key.doc.name": "RequestHeaders", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1491, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestHeaders</decl.name> = [<ref.enum usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</ref.enum> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "RequestHeaders", "key.namelength": 14, "key.nameoffset": 1546, "key.offset": 1536, "key.parsed_declaration": "public typealias RequestHeaders = [HTTPHeader: String]", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "[HTTPHeader : String].Type", "key.typeusr": "$sSDy9FritzCore10HTTPHeaderOSSGmD", "key.usr": "s:9FritzCore14RequestHeadersa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPMethod : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1609}], "key.bodylength": 85, "key.bodyoffset": 1641, "key.doc.column": 13, "key.doc.comment": "HTTP methods we use", "key.doc.declaration": "public enum HTTPMethod : String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"61\" column=\"13\"><Name>HTTPMethod</Name><USR>s:9FritzCore10HTTPMethodO</USR><Declaration>public enum HTTPMethod : String</Declaration><CommentParts><Abstract><Para>HTTP methods we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 61, "key.doc.name": "HTTPMethod", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1585, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1633}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPMethod</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 111, "key.name": "HTTPMethod", "key.namelength": 10, "key.nameoffset": 1621, "key.offset": 1616, "key.parsed_declaration": "public enum HTTPMethod: String", "key.parsed_scope.end": 66, "key.parsed_scope.start": 61, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1644, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case get = &quot;GET&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 1655}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>get</decl.name> = <syntaxtype.string>&quot;GET&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "get", "key.namelength": 3, "key.nameoffset": 1649, "key.offset": 1649, "key.parsed_declaration": "case get = \"GET\"", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3getyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1663, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case post = &quot;POST&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 6, "key.offset": 1675}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>post</decl.name> = <syntaxtype.string>&quot;POST&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "post", "key.namelength": 4, "key.nameoffset": 1668, "key.offset": 1668, "key.parsed_declaration": "case post = \"POST\"", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO4postyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1684, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case put = &quot;PUT&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 1695}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>put</decl.name> = <syntaxtype.string>&quot;PUT&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "put", "key.namelength": 3, "key.nameoffset": 1689, "key.offset": 1689, "key.parsed_declaration": "case put = \"PUT\"", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3putyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1703, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case delete = &quot;DELETE&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 8, "key.offset": 1717}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>delete</decl.name> = <syntaxtype.string>&quot;DELETE&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "delete", "key.namelength": 6, "key.nameoffset": 1708, "key.offset": 1708, "key.parsed_declaration": "case delete = \"DELETE\"", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO6deleteyA2CmF"}]}], "key.typename": "HTTPMethod.Type", "key.typeusr": "$s9FritzCore10HTTPMethodOmD", "key.usr": "s:9FritzCore10HTTPMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPHeader : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1753}], "key.bodylength": 285, "key.bodyoffset": 1785, "key.doc.column": 13, "key.doc.comment": "HTTP headers we use", "key.doc.declaration": "public enum HTTPHeader : String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"69\" column=\"13\"><Name>HTTPHeader</Name><USR>s:9FritzCore10HTTPHeaderO</USR><Declaration>public enum HTTPHeader : String</Declaration><CommentParts><Abstract><Para>HTTP headers we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "HTTPHeader", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1729, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1777}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPHeader</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 311, "key.name": "HTTPHeader", "key.namelength": 10, "key.nameoffset": 1765, "key.offset": 1760, "key.parsed_declaration": "public enum HTTPHeader: String", "key.parsed_scope.end": 77, "key.parsed_scope.start": 69, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 31, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1788, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case appToken = &quot;x-fritz-token&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 15, "key.offset": 1804}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>appToken</decl.name> = <syntaxtype.string>&quot;x-fritz-token&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 26, "key.name": "appToken", "key.namelength": 8, "key.nameoffset": 1793, "key.offset": 1793, "key.parsed_declaration": "case appToken = \"x-fritz-token\"", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO8appTokenyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 33, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1822, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentType = &quot;content-type&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 14, "key.offset": 1841}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentType</decl.name> = <syntaxtype.string>&quot;content-type&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 28, "key.name": "contentType", "key.namelength": 11, "key.nameoffset": 1827, "key.offset": 1827, "key.parsed_declaration": "case contentType = \"content-type\"", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO11contentTypeyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 47, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1858, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case instanceIdentifier = &quot;x-fritz-instance-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1884}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>instanceIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-instance-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 42, "key.name": "instanceIdentifier", "key.namelength": 18, "key.nameoffset": 1863, "key.offset": 1863, "key.parsed_declaration": "case instanceIdentifier = \"x-fritz-instance-id\"", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO18instanceIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 45, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1908, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sessionIdentifier = &quot;x-fritz-session-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 20, "key.offset": 1933}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-session-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 40, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1913, "key.offset": 1913, "key.parsed_declaration": "case sessionIdentifier = \"x-fritz-session-id\"", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO17sessionIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1956, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case userAgent = &quot;user-agent&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 1973}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>userAgent</decl.name> = <syntaxtype.string>&quot;user-agent&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 24, "key.name": "userAgent", "key.namelength": 9, "key.nameoffset": 1961, "key.offset": 1961, "key.parsed_declaration": "case userAgent = \"user-agent\"", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO9userAgentyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1988, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentEncoding = &quot;content-encoding&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 18, "key.offset": 2011}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentEncoding</decl.name> = <syntaxtype.string>&quot;content-encoding&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "contentEncoding", "key.namelength": 15, "key.nameoffset": 1993, "key.offset": 1993, "key.parsed_declaration": "case contentEncoding = \"content-encoding\"", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO15contentEncodingyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 37, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2032, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentLength = &quot;content-length&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 16, "key.offset": 2053}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentLength</decl.name> = <syntaxtype.string>&quot;content-length&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 32, "key.name": "contentLength", "key.namelength": 13, "key.nameoffset": 2037, "key.offset": 2037, "key.parsed_declaration": "case contentLength = \"content-length\"", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO13contentLengthyA2CmF"}]}], "key.typename": "HTTPHeader.Type", "key.typeusr": "$s9FritzCore10HTTPHeaderOmD", "key.usr": "s:9FritzCore10HTTPHeaderO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2188}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2181}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}], "key.bodylength": 400, "key.bodyoffset": 2211, "key.doc.column": 20, "key.doc.comment": "Class for communicating with the Fritz API", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"81\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 81, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 2073, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 418, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 2200, "key.offset": 2194, "key.parsed_declaration": "public final class APIClient", "key.parsed_scope.end": 96, "key.parsed_scope.start": 81, "key.runtime_name": "_TtC4main9APIClient", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2333}], "key.doc.column": 14, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"87\" column=\"14\"><Name>session</Name><USR>s:9FritzCore9APIClientC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2299, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 2344, "key.offset": 2340, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore9APIClientC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2400}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2393}], "key.bodylength": 30, "key.bodyoffset": 2433, "key.doc.column": 19, "key.doc.comment": "Required initializer", "key.doc.declaration": "public required init(session: Session)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/APIClient.swift\" line=\"90\" column=\"19\"><Name>init(session:)</Name><USR>s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc</USR><Declaration>public required init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 90, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 2366, "key.filepath": "/Users/vagrant/git/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 55, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 2409, "key.offset": 2409, "key.parsed_declaration": "public required init(session: Session)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 90, "key.substructure": [], "key.typename": "(APIClient.Type) -> (Session) -> APIClient", "key.typeusr": "$s7session9FritzCore9APIClientCAB7SessionC_tcD", "key.usr": "s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc"}], "key.typename": "APIClient.Type", "key.typeusr": "$s9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}]}}, {"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7728, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultMaxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 252}], "key.doc.column": 12, "key.doc.comment": "Default to 10 retries, last retry is ~1 hour", "key.doc.declaration": "public let kDefaultMaxRetries: UInt", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"11\" column=\"12\"><Name>kDefaultMaxRetries</Name><USR>s:9FritzCore18kDefaultMaxRetriesSuvp</USR><Declaration>public let kDefaultMaxRetries: UInt</Declaration><CommentParts><Abstract><Para>Default to 10 retries, last retry is ~1 hour</Para></Abstract></CommentParts></Other>", "key.doc.line": 11, "key.doc.name": "kDefaultMaxRetries", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 203, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultMaxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 33, "key.name": "kDefaultMaxRetries", "key.namelength": 18, "key.nameoffset": 263, "key.offset": 259, "key.parsed_declaration": "public let kDefaultMaxRetries: UInt = 12", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore18kDefaultMaxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}], "key.doc.column": 12, "key.doc.comment": "Status codes to retry if received", "key.doc.declaration": "public let kDefaultRetryStatusCodes: Set<Int>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"14\" column=\"12\"><Name>kDefaultRetryStatusCodes</Name><USR>s:9FritzCore24kDefaultRetryStatusCodesShySiGvp</USR><Declaration>public let kDefaultRetryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry if received</Para></Abstract></CommentParts></Other>", "key.doc.line": 14, "key.doc.name": "kDefaultRetryStatusCodes", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 294, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 51, "key.name": "kDefaultRetryStatusCodes", "key.namelength": 24, "key.nameoffset": 343, "key.offset": 339, "key.parsed_declaration": "public let kDefaultRetryStatusCodes: Set<Int> = [502, 503]", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore24kDefaultRetryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 417}], "key.doc.column": 12, "key.doc.comment": "Error codes to retry", "key.doc.declaration": "public let kDefaultRetryErrorCodes: Set<Int>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"17\" column=\"12\"><Name>kDefaultRetryErrorCodes</Name><USR>s:9FritzCore23kDefaultRetryErrorCodesShySiGvp</USR><Declaration>public let kDefaultRetryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "kDefaultRetryErrorCodes", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 392, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 121, "key.name": "kDefaultRetryErrorCodes", "key.namelength": 23, "key.nameoffset": 428, "key.offset": 424, "key.parsed_declaration": "public let kDefaultRetryErrorCodes: Set<Int> = [", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore23kDefaultRetryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultExponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 595}], "key.doc.column": 12, "key.doc.comment": "1 second multiplier for exponential backoff", "key.doc.declaration": "public let kDefaultExponentialMultiplier: UInt32", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"24\" column=\"12\"><Name>kDefaultExponentialMultiplier</Name><USR>s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp</USR><Declaration>public let kDefaultExponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>1 second multiplier for exponential backoff</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "kDefaultExponentialMultiplier", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 547, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultExponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 48, "key.name": "kDefaultExponentialMultiplier", "key.namelength": 29, "key.nameoffset": 606, "key.offset": 602, "key.parsed_declaration": "public let kDefaultExponentialMultiplier: UInt32 = 1000", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class BatchedRequestQueue&lt;Element&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1475}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1468}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1407}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1407}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1407}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1407}], "key.bodylength": 6209, "key.bodyoffset": 1517, "key.doc.column": 20, "key.doc.comment": "This class attemmpts to strategically batch send requests and batch retry requests on failures.\nThe main flow of this class looks like:\n\nSUCCESS:\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush was successful\n\nFAILURE\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush failed\n4. Add items back into items array\n5. Stop processing queue (maintenance mode)\n5. If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck\n\nHEALTHCHECK SUCCESS\n1. We received a successful healthcheck\n2. Start processing items again (disable maintenance mode)\n\nHEALTHCHECK FAILURE\n1. We received a failed healthcheck, exponential backoff and retry health check", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue<Element>", "key.doc.discussion": [{"Para": "SUCCESS:"}, {"List-Number": ""}, {"Para": "FAILURE"}, {"List-Number": ""}, {"Para": "HEALTHCHECK SUCCESS"}, {"List-Number": ""}, {"Para": "HEALTHCHECK FAILURE"}, {"List-Number": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"51\" column=\"20\"><Name>BatchedRequestQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>This class attemmpts to strategically batch send requests and batch retry requests on failures. The main flow of this class looks like:</Para></Abstract><Discussion><Para>SUCCESS:</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush was successful</Para></Item></List-Number><Para>FAILURE</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush failed</Para></Item><Item><Para>Add items back into items array</Para></Item><Item><Para>Stop processing queue (maintenance mode)</Para></Item><Item><Para>If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck</Para></Item></List-Number><Para>HEALTHCHECK SUCCESS</Para><List-Number><Item><Para>We received a successful healthcheck</Para></Item><Item><Para>Start processing items again (disable maintenance mode)</Para></Item></List-Number><Para>HEALTHCHECK FAILURE</Para><List-Number><Item><Para>We received a failed healthcheck, exponential backoff and retry health check</Para></Item></List-Number></Discussion></CommentParts></Class>", "key.doc.line": 51, "key.doc.name": "BatchedRequestQueue", "key.doc.type": "Class", "key.doclength": 754, "key.docoffset": 652, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BatchedRequestQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 6246, "key.name": "BatchedRequestQueue", "key.namelength": 19, "key.nameoffset": 1487, "key.offset": 1481, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 262, "key.parsed_scope.start": 51, "key.substructure": [{"key.annotated_decl": "<Declaration>Element</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 7, "key.name": "Element", "key.namelength": 7, "key.nameoffset": 1507, "key.offset": 1507, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Element.Type", "key.typeusr": "$sxmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7Elementxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.FlushHandler = ([<Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1521}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>FlushHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 80, "key.name": "FlushHandler", "key.namelength": 12, "key.nameoffset": 1538, "key.offset": 1528, "key.parsed_declaration": "public typealias FlushHandler = ([Element], @escaping RequestCompletionHandler) -> Void", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "([Element], @escaping (Response) -> ()) -> ().Type", "key.typeusr": "$sySayxG_y9FritzCore8ResponseOctcmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12FlushHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.HealthcheckHandler = (@escaping (<Type usr=\"s:Sb\">Bool</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1612}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>HealthcheckHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 65, "key.name": "HealthcheckHandler", "key.namelength": 18, "key.nameoffset": 1629, "key.offset": 1619, "key.parsed_declaration": "public typealias HealthcheckHandler = (@escaping (Bool) -> Void) -> Void", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "(@escaping (Bool) -> ()) -> ().Type", "key.typeusr": "$syySbccmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var batchThreshold: <Type usr=\"s:Su\">UInt</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1774}], "key.bodylength": 81, "key.bodyoffset": 1807, "key.doc.column": 14, "key.doc.comment": "Number of events to store before flushing queue", "key.doc.declaration": "public var batchThreshold: UInt { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"60\" column=\"14\"><Name>batchThreshold</Name><USR>s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp</USR><Declaration>public var batchThreshold: UInt { get }</Declaration><CommentParts><Abstract><Para>Number of events to store before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "batchThreshold", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 1720, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>batchThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 108, "key.name": "batchThreshold", "key.namelength": 14, "key.nameoffset": 1785, "key.offset": 1781, "key.parsed_declaration": "public var batchThreshold: UInt", "key.parsed_scope.end": 62, "key.parsed_scope.start": 60, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var flushInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1939}], "key.bodylength": 72, "key.bodyoffset": 1979, "key.doc.column": 14, "key.doc.comment": "Number of seconds before flushing queue", "key.doc.declaration": "public var flushInterval: TimeInterval { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"65\" column=\"14\"><Name>flushInterval</Name><USR>s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp</USR><Declaration>public var flushInterval: TimeInterval { get }</Declaration><CommentParts><Abstract><Para>Number of seconds before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 65, "key.doc.name": "flushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 1893, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flushInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 106, "key.name": "flushInterval", "key.namelength": 13, "key.nameoffset": 1950, "key.offset": 1946, "key.parsed_declaration": "public var flushInterval: TimeInterval", "key.parsed_scope.end": 67, "key.parsed_scope.start": 65, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2096}], "key.doc.column": 14, "key.doc.comment": "Queue to call delegate methods on", "key.doc.declaration": "public let flushQueue: DispatchQueue", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"70\" column=\"14\"><Name>flushQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp</USR><Declaration>public let flushQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to call delegate methods on</Para></Abstract></CommentParts></Other>", "key.doc.line": 70, "key.doc.name": "flushQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 2056, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flushQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "flushQueue", "key.namelength": 10, "key.nameoffset": 2107, "key.offset": 2103, "key.parsed_declaration": "public let flushQueue: DispatchQueue", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "DispatchQueue", "key.typeusr": "$sSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2185}], "key.doc.column": 14, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"73\" column=\"14\"><Name>maxRetries</Name><USR>s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 73, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2136, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 2196, "key.offset": 2192, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2254}], "key.doc.column": 14, "key.doc.comment": "Status codes to retry a request", "key.doc.declaration": "public let retryStatusCodes: Set<Int>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"76\" column=\"14\"><Name>retryStatusCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp</USR><Declaration>public let retryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 76, "key.doc.name": "retryStatusCodes", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 2216, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "retryStatusCodes", "key.namelength": 16, "key.nameoffset": 2265, "key.offset": 2261, "key.parsed_declaration": "public let retryStatusCodes: Set<Int>", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2332}], "key.doc.column": 14, "key.doc.comment": "Error codes to retry a request", "key.doc.declaration": "public let retryErrorCodes: Set<Int>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"79\" column=\"14\"><Name>retryErrorCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp</USR><Declaration>public let retryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 79, "key.doc.name": "retryErrorCodes", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 2295, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryErrorCodes", "key.namelength": 15, "key.nameoffset": 2343, "key.offset": 2339, "key.parsed_declaration": "public let retryErrorCodes: Set<Int>", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2411}], "key.doc.column": 14, "key.doc.comment": "Pass through to OperationRetrier", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"82\" column=\"14\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Pass through to OperationRetrier</Para></Abstract></CommentParts></Other>", "key.doc.line": 82, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 2372, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 2422, "key.offset": 2418, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var onFlush: (([Element], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2489}], "key.doc.column": 14, "key.doc.comment": "Block to be called on flush", "key.doc.declaration": "public var onFlush: (([Element], @escaping RequestCompletionHandler) -> Void)?", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"85\" column=\"14\"><Name>onFlush</Name><USR>s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp</USR><Declaration>public var onFlush: (([Element], @escaping RequestCompletionHandler) -&gt; Void)?</Declaration><CommentParts><Abstract><Para>Block to be called on flush</Para></Abstract></CommentParts></Other>", "key.doc.line": 85, "key.doc.name": "onFlush", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2455, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>onFlush</decl.name>: <decl.var.type>((<decl.var.parameter><decl.var.parameter.type>[Element]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter>@escaping <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype>)?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "onFlush", "key.namelength": 7, "key.nameoffset": 2500, "key.offset": 2496, "key.parsed_declaration": "public var onFlush: FlushHandler?", "key.parsed_scope.end": 85, "key.parsed_scope.start": 85, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(([Element], @escaping (Response) -> ()) -> ())?", "key.typeusr": "$sySayxG_y9FritzCore8ResponseOctcSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var apiHealthcheck: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.<Type usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2581}], "key.doc.column": 14, "key.doc.comment": "Block to be called when asking for a healthcheck", "key.doc.declaration": "public var apiHealthcheck: FritzCore.BatchedRequestQueue<Element>.HealthcheckHandler?", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"88\" column=\"14\"><Name>apiHealthcheck</Name><USR>s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp</USR><Declaration>public var apiHealthcheck: FritzCore.BatchedRequestQueue&lt;Element&gt;.HealthcheckHandler?</Declaration><CommentParts><Abstract><Para>Block to be called when asking for a healthcheck</Para></Abstract></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "apiHealthcheck", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 2526, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>apiHealthcheck</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<ref.typealias usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "apiHealthcheck", "key.namelength": 14, "key.nameoffset": 2592, "key.offset": 2588, "key.parsed_declaration": "public var apiHealthcheck: HealthcheckHandler?", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(@escaping (Bool) -> ()) -> ()?", "key.typeusr": "$syySbccSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var items: [Element] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2667}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2660}], "key.doc.column": 27, "key.doc.comment": "Current items in queue", "key.doc.declaration": "public private(set) var items: [Element] {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"91\" column=\"27\"><Name>items</Name><USR>s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp</USR><Declaration>public private(set) var items: [Element] {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Current items in queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 91, "key.doc.name": "items", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 2631, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>items</decl.name>: <decl.var.type>[Element]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "items", "key.namelength": 5, "key.nameoffset": 2684, "key.offset": 2680, "key.parsed_declaration": "public private(set) var items: [Element] = []", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Element]", "key.typeusr": "$sSayxGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isApiHealthy: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2809}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2802}], "key.doc.column": 27, "key.doc.comment": "If true, we are processing available items, if false we are waiting for API to recover", "key.doc.declaration": "public private(set) var isApiHealthy: Bool {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"94\" column=\"27\"><Name>isApiHealthy</Name><USR>s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp</USR><Declaration>public private(set) var isApiHealthy: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>If true, we are processing available items, if false we are waiting for API to recover</Para></Abstract></CommentParts></Other>", "key.doc.line": 94, "key.doc.name": "isApiHealthy", "key.doc.type": "Other", "key.doclength": 91, "key.docoffset": 2709, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isApiHealthy</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "isApiHealthy", "key.namelength": 12, "key.nameoffset": 2826, "key.offset": 2822, "key.parsed_declaration": "public private(set) var isApiHealthy = true", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type> = kDefaultMaxRetries, retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = kDefaultRetryStatusCodes, retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = kDefaultRetryErrorCodes, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type> = kDefaultExponentialMultiplier)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3187}], "key.bodylength": 391, "key.bodyoffset": 3455, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flushQueue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type> = kDefaultMaxRetries</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryStatusCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = kDefaultRetryStatusCodes</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryErrorCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = kDefaultRetryErrorCodes</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type> = kDefaultExponentialMultiplier</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 653, "key.name": "init(session:flushQueue:maxRetries:retryStatusCodes:retryErrorCodes:exponentialMultiplier:)", "key.namelength": 259, "key.nameoffset": 3194, "key.offset": 3194, "key.parsed_declaration": "public init(session: Session, flushQueue: DispatchQueue, maxRetries: UInt = kDefaultMaxRetries, retryStatusCodes: Set<Int> = kDefaultRetryStatusCodes, retryErrorCodes: Set<Int> = kDefaultRetryErrorCodes, exponentialMultiplier: UInt32 = kDefaultExponentialMultiplier)", "key.parsed_scope.end": 115, "key.parsed_scope.start": 105, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>.Type) -> (Session, DispatchQueue, UInt, Set<Int>, Set<Int>, UInt32) -> BatchedRequestQueue<Element>", "key.typeusr": "$s7session10flushQueue10maxRetries16retryStatusCodes0f5ErrorH021exponentialMultiplier9FritzCore014BatchedRequestC0CyxGAG7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32VtcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7session05flushE010maxRetries16retryStatusCodes0j5ErrorL021exponentialMultiplierACyxGAA7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 113, "key.bodyoffset": 3859, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 3851, "key.offset": 3851, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 122, "key.parsed_scope.start": 117, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore19BatchedRequestQueueCfd"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func add(_ item: <Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4008}], "key.bodylength": 269, "key.bodyoffset": 4042, "key.doc.column": 15, "key.doc.comment": "Add an item to the queue", "key.doc.declaration": "public func add(_ item: Element)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"125\" column=\"15\"><Name>add(_:)</Name><USR>s:9FritzCore19BatchedRequestQueueC3addyyxF</USR><Declaration>public func add(_ item: Element)</Declaration><CommentParts><Abstract><Para>Add an item to the queue</Para></Abstract></CommentParts></Function>", "key.doc.line": 125, "key.doc.name": "add(_:)", "key.doc.type": "Function", "key.doclength": 29, "key.docoffset": 3977, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>item</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 297, "key.name": "add(_:)", "key.namelength": 20, "key.nameoffset": 4020, "key.offset": 4015, "key.parsed_declaration": "public func add(_ item: Element)", "key.parsed_scope.end": 136, "key.parsed_scope.start": 125, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Element) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC3addyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func flush(force: <Type usr=\"s:Sb\">Bool</Type> = false)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4398}], "key.bodylength": 155, "key.bodyoffset": 4438, "key.doc.column": 15, "key.doc.comment": "Flush all items, if force is true then will flush regardless of healthy api", "key.doc.declaration": "public func flush(force: Bool = false)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"139\" column=\"15\"><Name>flush(force:)</Name><USR>s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF</USR><Declaration>public func flush(force: Bool = false)</Declaration><CommentParts><Abstract><Para>Flush all items, if force is true then will flush regardless of healthy api</Para></Abstract></CommentParts></Function>", "key.doc.line": 139, "key.doc.name": "flush(force:)", "key.doc.type": "Function", "key.doclength": 80, "key.docoffset": 4316, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>flush</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>force</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 189, "key.name": "flush(force:)", "key.namelength": 26, "key.nameoffset": 4410, "key.offset": 4405, "key.parsed_declaration": "public func flush(force: Bool = false)", "key.parsed_scope.end": 147, "key.parsed_scope.start": 139, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19BatchedRequestQueueC5flush33_3CCE68730D8FEA873DE9CED2E1F8F915LL5itemsySayxG_tF\">flush(items:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Bool) -> ()", "key.typeusr": "$s5forceySb_tcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clear()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4651}], "key.bodylength": 48, "key.bodyoffset": 4672, "key.doc.column": 15, "key.doc.comment": "Clears all items in the queue WITHOUT flushing", "key.doc.declaration": "public func clear()", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift\" line=\"150\" column=\"15\"><Name>clear()</Name><USR>s:9FritzCore19BatchedRequestQueueC5clearyyF</USR><Declaration>public func clear()</Declaration><CommentParts><Abstract><Para>Clears all items in the queue WITHOUT flushing</Para></Abstract></CommentParts></Function>", "key.doc.line": 150, "key.doc.name": "clear()", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 4598, "key.filepath": "/Users/vagrant/git/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clear</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "clear()", "key.namelength": 7, "key.nameoffset": 4663, "key.offset": 4658, "key.parsed_declaration": "public func clear()", "key.parsed_scope.end": 154, "key.parsed_scope.start": 150, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5clearyyF"}], "key.typename": "BatchedRequestQueue<Element>.Type", "key.typeusr": "$s9FritzCore19BatchedRequestQueueCyxGmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC"}]}}, {"/Users/vagrant/git/Source/FritzCore/Configuration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 615, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzConfiguration) public class Configuration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 244}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 183}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 183}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 183}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 183}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 157}], "key.bodylength": 331, "key.bodyoffset": 282, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 272}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Configuration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 363, "key.name": "Configuration", "key.namelength": 13, "key.nameoffset": 257, "key.offset": 251, "key.parsed_declaration": "public class Configuration: NSObject", "key.parsed_scope.end": 26, "key.parsed_scope.start": 12, "key.runtime_name": "FritzConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 288}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "default", "key.namelength": 7, "key.nameoffset": 306, "key.offset": 295, "key.parsed_declaration": "public static let `default` = Configuration(session: .default)", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "s:9FritzCore13ConfigurationC7defaultACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 362}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 356}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 373, "key.offset": 369, "key.parsed_declaration": "@objc public let session: Session", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)session"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 401}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 395}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 412, "key.offset": 408, "key.parsed_declaration": "@objc public let sessionManager: SessionManager", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "SessionManager", "key.typeusr": "$s9FritzCore14SessionManagerCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)sessionManager"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSession:) public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 474}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 448}], "key.bodylength": 106, "key.bodyoffset": 505, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSession:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 131, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 481, "key.offset": 481, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 21, "key.substructure": [], "key.typename": "(Configuration.Type) -> (Session) -> Configuration", "key.typeusr": "$s7session9FritzCore13ConfigurationCAB7SessionC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(im)initWithSession:"}], "key.typename": "Configuration.Type", "key.typeusr": "$s9FritzCore13ConfigurationCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration"}]}}, {"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9260, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct CompressionLevel : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1238}], "key.bodylength": 583, "key.bodyoffset": 1288, "key.doc.column": 15, "key.doc.comment": "Compression level whose rawValue is based on the zlib's constants.", "key.doc.declaration": "public struct CompressionLevel : RawRepresentable", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"34\" column=\"15\"><Name>CompressionLevel</Name><USR>s:9FritzCore16CompressionLevelV</USR><Declaration>public struct CompressionLevel : RawRepresentable</Declaration><CommentParts><Abstract><Para>Compression level whose rawValue is based on the zlib\u2019s constants.</Para></Abstract></CommentParts></Class>", "key.doc.line": 34, "key.doc.name": "CompressionLevel", "key.doc.type": "Class", "key.doclength": 71, "key.docoffset": 1167, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 1270}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CompressionLevel</decl.name> : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 627, "key.name": "CompressionLevel", "key.namelength": 16, "key.nameoffset": 1252, "key.offset": 1245, "key.parsed_declaration": "public struct CompressionLevel: RawRepresentable", "key.parsed_scope.end": 57, "key.parsed_scope.start": 34, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rawValue: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1387}], "key.doc.column": 16, "key.doc.comment": "Compression level in the range of `0` (no compression) to `9` (maximum compression).", "key.doc.declaration": "public let rawValue: Int32", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"37\" column=\"16\"><Name>rawValue</Name><USR>s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp</USR><Declaration>public let rawValue: Int32</Declaration><CommentParts><Abstract><Para>Compression level in the range of <codeVoice>0</codeVoice> (no compression) to <codeVoice>9</codeVoice> (maximum compression).</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "rawValue", "key.doc.type": "Other", "key.doclength": 89, "key.docoffset": 1294, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 1398, "key.offset": 1394, "key.overrides": [{"key.usr": "s:SY8rawValue03RawB0Qzvp"}], "key.parsed_declaration": "public let rawValue: Int32", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let noCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1419}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 61, "key.name": "noCompression", "key.namelength": 13, "key.nameoffset": 1437, "key.offset": 1426, "key.parsed_declaration": "public static let noCompression = CompressionLevel(Z_NO_COMPRESSION)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV02noC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestSpeed: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1492}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestSpeed</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 53, "key.name": "bestSpeed", "key.namelength": 9, "key.nameoffset": 1510, "key.offset": 1499, "key.parsed_declaration": "public static let bestSpeed = CompressionLevel(Z_BEST_SPEED)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV9bestSpeedACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1557}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "bestCompression", "key.namelength": 15, "key.nameoffset": 1575, "key.offset": 1564, "key.parsed_declaration": "public static let bestCompression = CompressionLevel(Z_BEST_COMPRESSION)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV04bestC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaultCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1635}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaultCompression", "key.namelength": 18, "key.nameoffset": 1653, "key.offset": 1642, "key.parsed_declaration": "public static let defaultCompression = CompressionLevel(Z_DEFAULT_COMPRESSION)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV07defaultC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1720}], "key.bodylength": 39, "key.bodyoffset": 1750, "key.doc.declaration": "init?(rawValue: Self.RawValue)", "key.doc.discussion": [{"Para": "If there is no value of the type that corresponds with the specified raw value, this initializer returns `nil`. For example:"}, {"CodeListing": ""}], "key.doc.full_as_xml": "<Function><Name>init(rawValue:)</Name><USR>s:SY8rawValuexSg03RawB0Qz_tcfc</USR><Declaration>init?(rawValue: Self.RawValue)</Declaration><CommentParts><Abstract><Para>Creates a new instance with the specified raw value.</Para></Abstract><Parameters><Parameter><Name>rawValue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The raw value to use for the new instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>If there is no value of the type that corresponds with the specified raw value, this initializer returns <codeVoice>nil</codeVoice>. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Legal\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"PaperSize.Legal\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Tabloid\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>", "key.doc.name": "init(rawValue:)", "key.doc.parameters": [{"discussion": [{"Para": "The raw value to use for the new instance."}], "name": "rawValue"}], "key.doc.type": "Function", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "init(rawValue:)", "key.namelength": 21, "key.nameoffset": 1727, "key.offset": 1727, "key.overrides": [{"key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}], "key.parsed_declaration": "public init(rawValue: Int32)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelVyACs5Int32Vcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$s8rawValue9FritzCore16CompressionLevelVs5Int32V_tcD", "key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1797}], "key.bodylength": 39, "key.bodyoffset": 1829, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init(_:)", "key.namelength": 23, "key.nameoffset": 1804, "key.offset": 1804, "key.parsed_declaration": "public init(_ rawValue: Int32)", "key.parsed_scope.end": 55, "key.parsed_scope.start": 52, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelV8rawValueACs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$sy9FritzCore16CompressionLevelVs5Int32VcD", "key.usr": "s:9FritzCore16CompressionLevelVyACs5Int32Vcfc"}], "key.typename": "CompressionLevel.Type", "key.typeusr": "$s9FritzCore16CompressionLevelVmD", "key.usr": "s:9FritzCore16CompressionLevelV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct GzipError : Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1940}], "key.bodylength": 1999, "key.bodyoffset": 1978, "key.doc.column": 15, "key.doc.comment": "Errors on gzipping/gunzipping based on the zlib error codes.", "key.doc.declaration": "public struct GzipError : Swift.Error", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"61\" column=\"15\"><Name>GzipError</Name><USR>s:9FritzCore9GzipErrorV</USR><Declaration>public struct GzipError : Swift.Error</Declaration><CommentParts><Abstract><Para>Errors on gzipping/gunzipping based on the zlib error codes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 61, "key.doc.name": "GzipError", "key.doc.type": "Class", "key.doclength": 65, "key.docoffset": 1875, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 1965}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>GzipError</decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2031, "key.name": "GzipError", "key.namelength": 9, "key.nameoffset": 1954, "key.offset": 1947, "key.parsed_declaration": "public struct GzipError: Swift.Error", "key.parsed_scope.end": 137, "key.parsed_scope.start": 61, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore9GzipErrorV\">GzipError</Type>.Kind : <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2027}], "key.bodylength": 991, "key.bodyoffset": 2056, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 2045}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore9GzipErrorV\">GzipError</ref.struct>.<decl.name>Kind</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1014, "key.name": "Kind", "key.namelength": 4, "key.nameoffset": 2039, "key.offset": 2034, "key.parsed_declaration": "public enum Kind: Equatable", "key.parsed_scope.end": 95, "key.parsed_scope.start": 64, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2187, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case stream</Declaration>", "key.doc.column": 14, "key.doc.comment": "The stream structure was inconsistent.\n\n- underlying zlib error: `Z_STREAM_ERROR` (-2)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"68\" column=\"14\"><Name>stream</Name><USR>s:9FritzCore9GzipErrorV4KindO6streamyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The stream structure was inconsistent.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_STREAM_ERROR</codeVoice> (-2)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 68, "key.doc.name": "stream", "key.doc.type": "Other", "key.doclength": 114, "key.docoffset": 2065, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>stream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 2192, "key.offset": 2192, "key.parsed_declaration": "case stream", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6streamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2405, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case data</Declaration>", "key.doc.column": 14, "key.doc.comment": "The input data was corrupted\n(input stream not conforming to the zlib format or incorrect check value).\n\n- underlying zlib error: `Z_DATA_ERROR` (-3)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"74\" column=\"14\"><Name>data</Name><USR>s:9FritzCore9GzipErrorV4KindO4datayA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The input data was corrupted (input stream not conforming to the zlib format or incorrect check value).</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_DATA_ERROR</codeVoice> (-3)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 74, "key.doc.name": "data", "key.doc.type": "Other", "key.doclength": 189, "key.docoffset": 2208, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>data</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "data", "key.namelength": 4, "key.nameoffset": 2410, "key.offset": 2410, "key.parsed_declaration": "case data", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO4datayA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2533, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case memory</Declaration>", "key.doc.column": 14, "key.doc.comment": "There was not enough memory.\n\n- underlying zlib error: `Z_MEM_ERROR` (-4)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"79\" column=\"14\"><Name>memory</Name><USR>s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>There was not enough memory.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_MEM_ERROR</codeVoice> (-4)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 79, "key.doc.name": "memory", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 2424, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>memory</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "memory", "key.namelength": 6, "key.nameoffset": 2538, "key.offset": 2538, "key.parsed_declaration": "case memory", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2709, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case buffer</Declaration>", "key.doc.column": 14, "key.doc.comment": "No progress is possible or there was not enough room in the output buffer.\n\n- underlying zlib error: `Z_BUF_ERROR` (-5)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"84\" column=\"14\"><Name>buffer</Name><USR>s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>No progress is possible or there was not enough room in the output buffer.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_BUF_ERROR</codeVoice> (-5)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 84, "key.doc.name": "buffer", "key.doc.type": "Other", "key.doclength": 147, "key.docoffset": 2554, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>buffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "buffer", "key.namelength": 6, "key.nameoffset": 2714, "key.offset": 2714, "key.parsed_declaration": "case buffer", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2895, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case version</Declaration>", "key.doc.column": 14, "key.doc.comment": "The zlib library version is incompatible with the version assumed by the caller.\n\n- underlying zlib error: `Z_VERSION_ERROR` (-6)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"89\" column=\"14\"><Name>version</Name><USR>s:9FritzCore9GzipErrorV4KindO7versionyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The zlib library version is incompatible with the version assumed by the caller.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_VERSION_ERROR</codeVoice> (-6)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 89, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 157, "key.docoffset": 2730, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>version</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "version", "key.namelength": 7, "key.nameoffset": 2900, "key.offset": 2900, "key.parsed_declaration": "case version", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7versionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3019, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case unknown(code: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.doc.column": 14, "key.doc.comment": "An unknown error occurred.\n\n- parameter code: return error by zlib", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"94\" column=\"14\"><Name>unknown(code:)</Name><USR>s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>An unknown error occurred.</Para></Abstract><Parameters><Parameter><Name>code</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>return error by zlib</Para></Discussion></Parameter></Parameters></CommentParts></Other>", "key.doc.line": 94, "key.doc.name": "unknown(code:)", "key.doc.parameters": [{"discussion": [{"Para": "return error by zlib"}], "name": "code"}], "key.doc.type": "Other", "key.doclength": 94, "key.docoffset": 2917, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unknown</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 18, "key.name": "unknown(code:)", "key.namelength": 18, "key.nameoffset": 3024, "key.offset": 3024, "key.parsed_declaration": "case unknown(code: Int)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "(GzipError.Kind.Type) -> (Int) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOSi_tcAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF"}]}], "key.typename": "GzipError.Kind.Type", "key.typeusr": "$s9FritzCore9GzipErrorV4KindOmD", "key.usr": "s:9FritzCore9GzipErrorV4KindO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kind: <Type usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3074}], "key.doc.column": 16, "key.doc.comment": "Error kind.", "key.doc.declaration": "public let kind: Kind", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"98\" column=\"16\"><Name>kind</Name><USR>s:9FritzCore9GzipErrorV4kindAC4KindOvp</USR><Declaration>public let kind: Kind</Declaration><CommentParts><Abstract><Para>Error kind.</Para></Abstract></CommentParts></Other>", "key.doc.line": 98, "key.doc.name": "kind", "key.doc.type": "Other", "key.doclength": 16, "key.docoffset": 3054, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kind</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "kind", "key.namelength": 4, "key.nameoffset": 3085, "key.offset": 3081, "key.parsed_declaration": "public let kind: Kind", "key.parsed_scope.end": 98, "key.parsed_scope.start": 98, "key.typename": "GzipError.Kind", "key.typeusr": "$s9FritzCore9GzipErrorV4KindOD", "key.usr": "s:9FritzCore9GzipErrorV4kindAC4KindOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let message: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3135}], "key.doc.column": 16, "key.doc.comment": "Returned message by zlib.", "key.doc.declaration": "public let message: String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift\" line=\"101\" column=\"16\"><Name>message</Name><USR>s:9FritzCore9GzipErrorV7messageSSvp</USR><Declaration>public let message: String</Declaration><CommentParts><Abstract><Para>Returned message by zlib.</Para></Abstract></CommentParts></Other>", "key.doc.line": 101, "key.doc.name": "message", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 3101, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>message</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "message", "key.namelength": 7, "key.nameoffset": 3146, "key.offset": 3142, "key.parsed_declaration": "public let message: String", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore9GzipErrorV7messageSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var localizedDescription: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3899}], "key.bodylength": 34, "key.bodyoffset": 3940, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>localizedDescription</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 69, "key.name": "localizedDescription", "key.namelength": 20, "key.nameoffset": 3910, "key.offset": 3906, "key.parsed_declaration": "public var localizedDescription: String", "key.parsed_scope.end": 135, "key.parsed_scope.start": 132, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore9GzipErrorV20localizedDescriptionSSvp"}], "key.typename": "GzipError.Type", "key.typeusr": "$s9FritzCore9GzipErrorVmD", "key.usr": "s:9FritzCore9GzipErrorV"}]}}, {"/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1142, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(DeviceOrientationManager) public class DeviceOrientationManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 259}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 227}], "key.bodylength": 832, "key.bodyoffset": 308, "key.doc.column": 14, "key.doc.comment": "Tracks Device Orientation changes.", "key.doc.declaration": "@objc(DeviceOrientationManager) public class DeviceOrientationManager : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift\" line=\"14\" column=\"14\"><Name>DeviceOrientationManager</Name><USR>c:@M@FritzCore@objc(cs)DeviceOrientationManager</USR><Declaration>@objc(DeviceOrientationManager) public class DeviceOrientationManager : NSObject</Declaration><CommentParts><Abstract><Para>Tracks Device Orientation changes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "DeviceOrientationManager", "key.doc.type": "Class", "key.doclength": 39, "key.docoffset": 188, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 298}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(DeviceOrientationManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DeviceOrientationManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 875, "key.name": "DeviceOrientationManager", "key.namelength": 24, "key.nameoffset": 272, "key.offset": 266, "key.parsed_declaration": "public class DeviceOrientationManager: NSObject", "key.parsed_scope.end": 45, "key.parsed_scope.start": 14, "key.runtime_name": "DeviceOrientationManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var orientation: <Type usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 353}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 346}], "key.doc.column": 28, "key.doc.comment": "Current device orientation.", "key.doc.declaration": "public private(set) var orientation: UIDeviceOrientation {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift\" line=\"17\" column=\"28\"><Name>orientation</Name><USR>s:9FritzCore24DeviceOrientationManagerC11orientationSo08UIDeviceD0Vvp</USR><Declaration>public private(set) var orientation: UIDeviceOrientation {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Current device orientation.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 312, "key.filepath": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</ref.enum></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 371, "key.offset": 366, "key.parsed_declaration": "public private(set) var  orientation: UIDeviceOrientation", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UIDeviceOrientation", "key.typeusr": "$sSo19UIDeviceOrientationVD", "key.usr": "s:9FritzCore24DeviceOrientationManagerC11orientationSo08UIDeviceD0Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 414}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 407}], "key.bodylength": 109, "key.bodyoffset": 431, "key.filepath": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 423, "key.offset": 423, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 23, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(DeviceOrientationManager.Type) -> () -> DeviceOrientationManager", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCycD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 553, "key.filepath": "/Users/vagrant/git/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 545, "key.offset": 545, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(DeviceOrientationManager) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager(im)dealloc"}], "key.typename": "DeviceOrientationManager.Type", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager"}]}}, {"/Users/vagrant/git/Source/FritzCore/Errors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2574, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorCode) public enum ErrorCode : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 202}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 180}], "key.bodylength": 119, "key.bodyoffset": 230, "key.doc.column": 13, "key.doc.comment": "The type of error encountered", "key.doc.declaration": "@objc(FritzErrorCode) public enum ErrorCode : Int", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"12\" column=\"13\"><Name>ErrorCode</Name><USR>c:@M@FritzCore@E@FritzErrorCode</USR><Declaration>@objc(FritzErrorCode) public enum ErrorCode : Int</Declaration><CommentParts><Abstract><Para>The type of error encountered</Para></Abstract></CommentParts></Other>", "key.doc.line": 12, "key.doc.name": "ErrorCode", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 146, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 225}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorCode)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ErrorCode</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 141, "key.name": "ErrorCode", "key.namelength": 9, "key.nameoffset": 214, "key.offset": 209, "key.parsed_declaration": "public enum ErrorCode: Int", "key.parsed_scope.end": 18, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 233, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompilation</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompilation</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "modelCompilation", "key.namelength": 16, "key.nameoffset": 238, "key.offset": 238, "key.parsed_declaration": "case modelCompilation", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelCompilation"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 257, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryption</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryption</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "modelDecryption", "key.namelength": 15, "key.nameoffset": 262, "key.offset": 262, "key.parsed_declaration": "case modelDecryption", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDecryption"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 280, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownload</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownload</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "modelDownload", "key.namelength": 13, "key.nameoffset": 285, "key.offset": 285, "key.parsed_declaration": "case modelDownload", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDownload"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 301, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sessionDisabled</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionDisabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "sessionDisabled", "key.namelength": 15, "key.nameoffset": 306, "key.offset": 306, "key.parsed_declaration": "case sessionDisabled", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeSessionDisabled"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 324, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelInitialization</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInitialization</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "modelInitialization", "key.namelength": 19, "key.nameoffset": 329, "key.offset": 329, "key.parsed_declaration": "case modelInitialization", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelInitialization"}]}], "key.typename": "ErrorCode.Type", "key.typeusr": "$s9FritzCore9ErrorCodeOmD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzError) public final class FritzError : <Type usr=\"c:objc(cs)NSError\">NSError</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 635}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 628}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 567}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 567}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 567}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 567}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 17, "key.offset": 549}], "key.bodylength": 1167, "key.bodyoffset": 668, "key.doc.column": 20, "key.doc.comment": "Class representing a Fritz-related error\n\n- Note: You subscribe to a notification to be notified anytime an error is encountered in the SDK.\n\n- SeeAlso: `Notification.Name.fritzError`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError", "key.doc.discussion": [{"Note": ""}, {"See": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"29\" column=\"20\"><Name>FritzError</Name><USR>c:@M@FritzCore@objc(cs)FritzError</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError</Declaration><CommentParts><Abstract><Para>Class representing a Fritz-related error</Para></Abstract><Discussion><Note><Para>You subscribe to a notification to be notified anytime an error is encountered in the SDK.</Para></Note><See><Para><codeVoice>Notification.Name.fritzError</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 29, "key.doc.name": "FritzError", "key.doc.type": "Class", "key.doclength": 196, "key.docoffset": 352, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 659}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzError)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzError</decl.name> : <ref.class usr=\"c:objc(cs)NSError\">NSError</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSError"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1195, "key.name": "FritzError", "key.namelength": 10, "key.nameoffset": 647, "key.offset": 641, "key.parsed_declaration": "public final class FritzError: NSError", "key.parsed_scope.end": 63, "key.parsed_scope.start": 29, "key.runtime_name": "FritzError", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 705}], "key.doc.column": 14, "key.doc.comment": "Session error ocurred in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"32\" column=\"14\"><Name>session</Name><USR>s:9FritzCore0A5ErrorC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session error ocurred in</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 674, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 716, "key.offset": 712, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore0A5ErrorC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 778}], "key.doc.column": 14, "key.doc.comment": "Model identifier related to error", "key.doc.declaration": "public let modelIdentifier: String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"35\" column=\"14\"><Name>modelIdentifier</Name><USR>s:9FritzCore0A5ErrorC15modelIdentifierSSvp</USR><Declaration>public let modelIdentifier: String</Declaration><CommentParts><Abstract><Para>Model identifier related to error</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 738, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 789, "key.offset": 785, "key.parsed_declaration": "public let modelIdentifier: String", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore0A5ErrorC15modelIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 844}], "key.doc.column": 14, "key.doc.comment": "Actual thrown error", "key.doc.declaration": "public let error: Error", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"38\" column=\"14\"><Name>error</Name><USR>s:9FritzCore0A5ErrorC5errors0C0_pvp</USR><Declaration>public let error: Error</Declaration><CommentParts><Abstract><Para>Actual thrown error</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "error", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 818, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "error", "key.namelength": 5, "key.nameoffset": 855, "key.offset": 851, "key.parsed_declaration": "public let error: Error", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:9FritzCore0A5ErrorC5errors0C0_pvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func post(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1121}], "key.bodylength": 131, "key.bodyoffset": 1220, "key.doc.column": 22, "key.doc.comment": "Posts a Fritz error to the default notification center", "key.doc.declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"46\" column=\"22\"><Name>post(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ</USR><Declaration>public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Posts a Fritz error to the default notification center</Para></Abstract></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "post(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1060, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 224, "key.name": "post(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1140, "key.offset": 1128, "key.parsed_declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC4post5erroryAC_tFZ\">post(error:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 100, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1229, "key.offset": 1225, "key.parsed_declaration": "let error = FritzError(session: session, modelIdentifier: modelIdentifier, code: code, error: error)", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC5errors0C0_pvp\">error</RelatedName>"}], "key.typename": "FritzError", "key.typeusr": "$s9FritzCore0A5ErrorCD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZAHL0_ACvp"}], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> ()", "key.typeusr": "$s7session15modelIdentifier4code5errory9FritzCore7SessionC_SSAE9ErrorCodeOs0I0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1395}], "key.bodylength": 182, "key.bodyoffset": 1482, "key.doc.column": 10, "key.doc.comment": "Create an internal Fritz error", "key.doc.declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"52\" column=\"10\"><Name>init(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc</USR><Declaration>public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Create an internal Fritz error</Para></Abstract></CommentParts></Function>", "key.doc.line": 52, "key.doc.name": "init(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 35, "key.docoffset": 1358, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 263, "key.name": "init(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1402, "key.offset": 1402, "key.parsed_declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 52, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:\">init(coder:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> FritzError", "key.typeusr": "$s7session15modelIdentifier4code5error9FritzCore0F5ErrorCAE7SessionC_SSAE0H4CodeOs0H0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init?(coder aDecoder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1735}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1726}], "key.bodylength": 59, "key.bodyoffset": 1774, "key.doc.column": 19, "key.doc.comment": "Do not create an instance of this class directly", "key.doc.declaration": "required public init?(coder aDecoder: NSCoder)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Errors.swift\" line=\"60\" column=\"19\"><Name>init(coder:)</Name><USR>c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:</USR><Declaration>required public init?(coder aDecoder: NSCoder)</Declaration><CommentParts><Abstract><Para>Do not create an instance of this class directly</Para></Abstract></CommentParts></Function>", "key.doc.line": 60, "key.doc.name": "init(coder:)", "key.doc.type": "Function", "key.doclength": 53, "key.docoffset": 1671, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder</decl.var.parameter.argument_label> <decl.var.parameter.name>aDecoder</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(coder:)", "key.namelength": 30, "key.nameoffset": 1742, "key.offset": 1742, "key.overrides": [{"key.usr": "c:objc(pl)NSCoding(im)initWithCoder:"}], "key.parsed_declaration": "required public init?(coder aDecoder: NSCoder)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc\">init(session:modelIdentifier:code:error:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (NSCoder) -> FritzError?", "key.typeusr": "$s5coder9FritzCore0B5ErrorCSgSo7NSCoderC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:"}], "key.typename": "FritzError.Type", "key.typeusr": "$s9FritzCore0A5ErrorCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - JSON", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1841}]}}, {"/Users/vagrant/git/Source/FritzCore/FritzCore.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8112, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 741}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 663}], "key.bodylength": 2351, "key.bodyoffset": 775, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 765}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2379, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 754, "key.offset": 748, "key.parsed_declaration": "public class FritzCore: NSObject", "key.parsed_scope.end": 94, "key.parsed_scope.start": 23, "key.runtime_name": "FritzCore", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configuration) public static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 950}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 927}], "key.bodylength": 617, "key.bodyoffset": 998, "key.doc.column": 21, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(configuration) public static var configuration: Configuration { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/FritzCore.swift\" line=\"30\" column=\"21\"><Name>configuration</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration</USR><Declaration>@objc(configuration) public static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 900, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configuration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 659, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 968, "key.offset": 957, "key.parsed_declaration": "public static var configuration: Configuration", "key.parsed_scope.end": 45, "key.parsed_scope.start": 30, "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(orientationManager) public static var orientationManager: <Type usr=\"c:@M@FritzCore@objc(cs)DeviceOrientationManager\">DeviceOrientationManager</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1681}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 1651}], "key.bodylength": 656, "key.bodyoffset": 1745, "key.doc.column": 23, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(orientationManager) public static var orientationManager: DeviceOrientationManager { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/FritzCore.swift\" line=\"49\" column=\"23\"><Name>orientationManager</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)orientationManager</USR><Declaration>@objc(orientationManager) public static var orientationManager: DeviceOrientationManager { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "orientationManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 1622, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(orientationManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)DeviceOrientationManager\">DeviceOrientationManager</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 714, "key.name": "orientationManager", "key.namelength": 18, "key.nameoffset": 1699, "key.offset": 1688, "key.parsed_declaration": "public static var orientationManager: DeviceOrientationManager", "key.parsed_scope.end": 64, "key.parsed_scope.start": 49, "key.typename": "DeviceOrientationManager", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)orientationManager"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configure) public static func configure()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2455}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 2436}], "key.bodylength": 96, "key.bodyoffset": 2487, "key.doc.column": 22, "key.doc.comment": "Configure the Fritz SDK", "key.doc.declaration": "@objc(configure) public static func configure()", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/FritzCore.swift\" line=\"68\" column=\"22\"><Name>configure()</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configure</USR><Declaration>@objc(configure) public static func configure()</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK</Para></Abstract></CommentParts></Function>", "key.doc.line": 68, "key.doc.name": "configure()", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 2406, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configure)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 122, "key.name": "configure()", "key.namelength": 11, "key.nameoffset": 2474, "key.offset": 2462, "key.parsed_declaration": "public static func configure()", "key.parsed_scope.end": 71, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:\">configure(with:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configure"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configureWith:) public static func configure(with configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2670}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2646}], "key.bodylength": 101, "key.bodyoffset": 2735, "key.doc.column": 22, "key.doc.comment": "Configure the Fritz SDK with a custom configuration", "key.doc.declaration": "@objc(configureWith:) public static func configure(with configuration: Configuration)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/FritzCore.swift\" line=\"75\" column=\"22\"><Name>configure(with:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:</USR><Declaration>@objc(configureWith:) public static func configure(with configuration: Configuration)</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK with a custom configuration</Para></Abstract></CommentParts></Function>", "key.doc.line": 75, "key.doc.name": "configure(with:)", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 2588, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configureWith:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>configuration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 160, "key.name": "configure(with:)", "key.namelength": 44, "key.nameoffset": 2689, "key.offset": 2677, "key.parsed_declaration": "public static func configure(with configuration: Configuration)", "key.parsed_scope.end": 78, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configure\">configure()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> (Configuration) -> ()", "key.typeusr": "$s4withy9FritzCore13ConfigurationC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3042}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 3020}], "key.bodylength": 31, "key.bodyoffset": 3093, "key.doc.column": 22, "key.doc.comment": "Enables Fritz SDK logging\n\n- Parameter level:\n-- 0: Debug logging\n-- 1: Info logging\n-- 2: Warn logging\n-- 3: Error logging\n-- 4: Disable logging", "key.doc.declaration": "@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/FritzCore.swift\" line=\"91\" column=\"22\"><Name>setLogLevel(_:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:</USR><Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)</Declaration><CommentParts><Abstract><Para>Enables Fritz SDK logging</Para></Abstract><Parameters><Parameter><Name>level</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para> \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 91, "key.doc.name": "setLogLevel(_:)", "key.doc.parameters": [{"discussion": [{"Para": " \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging"}], "name": "level"}], "key.doc.type": "Function", "key.doclength": 176, "key.docoffset": 2841, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(setLogLevel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setLogLevel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>level</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 76, "key.name": "setLogLevel(_:)", "key.namelength": 30, "key.nameoffset": 3061, "key.offset": 3049, "key.parsed_declaration": "public static func setLogLevel(_ level: LogLevel)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 91, "key.substructure": [], "key.typename": "(FritzCore.Type) -> (LogLevel) -> ()", "key.typeusr": "$syy9FritzCore8LogLevelOcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:"}], "key.typename": "FritzCore.Type", "key.typeusr": "$s9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Instance Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3132}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Session Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3628}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - User Agent", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5654}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>struct Date : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</Type>, <Type usr=\"s:SL\">Comparable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8011}], "key.bodylength": 76, "key.bodyoffset": 8034, "key.doc.declaration": "struct Date : ReferenceConvertible, Comparable, Equatable", "key.doc.discussion": [{"Para": "A `Date` is independent of a particular calendar or time zone. To represent a `Date` to a user, you must interpret it in the context of a `Calendar`."}], "key.doc.full_as_xml": "<Class><Name>Date</Name><USR>s:10Foundation4DateV</USR><Declaration>struct Date : ReferenceConvertible, Comparable, Equatable</Declaration><CommentParts><Abstract><Para><codeVoice>Date</codeVoice> represents a single point in time.</Para></Abstract><Discussion><Para>A <codeVoice>Date</codeVoice> is independent of a particular calendar or time zone. To represent a <codeVoice>Date</codeVoice> to a user, you must interpret it in the context of a <codeVoice>Calendar</codeVoice>.</Para></Discussion></CommentParts></Class>", "key.doc.name": "Date", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Date</decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</ref.protocol>, <ref.protocol usr=\"s:SL\">Comparable</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 93, "key.modulename": "Foundation", "key.name": "Date", "key.namelength": 4, "key.nameoffset": 8028, "key.offset": 8018, "key.parsed_declaration": "public extension Date", "key.parsed_scope.end": 234, "key.parsed_scope.start": 230, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func elapsed() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.bodylength": 45, "key.bodyoffset": 8063, "key.filepath": "/Users/vagrant/git/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>elapsed</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 72, "key.name": "elapsed()", "key.namelength": 9, "key.nameoffset": 8042, "key.offset": 8037, "key.parsed_declaration": "func elapsed() -> Double", "key.parsed_scope.end": 233, "key.parsed_scope.start": 231, "key.substructure": [], "key.typename": "(Date) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:10Foundation4DateV9FritzCoreE7elapsedSdyF"}], "key.typename": "Date.Type", "key.typeusr": "$s10Foundation4DateVmD", "key.usr": "s:10Foundation4DateV"}]}}, {"/Users/vagrant/git/Source/FritzCore/Logger.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2120, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum LogLevel : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 349}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 343}], "key.bodylength": 116, "key.bodyoffset": 376, "key.doc.column": 13, "key.doc.comment": "Logging level for the SDK\n\n- debug: log all logs\n- info: log info logs or higher\n- warn: log warning logs or higher\n- error: log error logs only\n- none: disable logging", "key.doc.declaration": "@objc public enum LogLevel : Int", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"18\" column=\"13\"><Name>LogLevel</Name><USR>c:@M@FritzCore@E@LogLevel</USR><Declaration>@objc public enum LogLevel : Int</Declaration><CommentParts><Abstract><Para>Logging level for the SDK</Para></Abstract><Discussion><List-Bullet><Item><Para>debug: log all logs</Para></Item><Item><Para>info: log info logs or higher</Para></Item><Item><Para>warn: log warning logs or higher</Para></Item><Item><Para>error: log error logs only</Para></Item><Item><Para>none: disable logging</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "LogLevel", "key.doc.type": "Other", "key.doclength": 196, "key.docoffset": 147, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 371}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>LogLevel</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 137, "key.name": "LogLevel", "key.namelength": 8, "key.nameoffset": 361, "key.offset": 356, "key.parsed_declaration": "public enum LogLevel: Int", "key.parsed_scope.end": 26, "key.parsed_scope.start": 18, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 379, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case debug = 0</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 392}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>debug</decl.name> = <syntaxtype.number>0</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "debug", "key.namelength": 5, "key.nameoffset": 384, "key.offset": 384, "key.parsed_declaration": "case debug = 0", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelDebug"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 396, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case info</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>info</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "info", "key.namelength": 4, "key.nameoffset": 401, "key.offset": 401, "key.parsed_declaration": "case info", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelInfo"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 408, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case warn</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>warn</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "warn", "key.namelength": 4, "key.nameoffset": 413, "key.offset": 413, "key.parsed_declaration": "case warn", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelWarn"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 420, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 425, "key.offset": 425, "key.parsed_declaration": "case error", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelError"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 433, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case none</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>none</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "none", "key.namelength": 4, "key.nameoffset": 438, "key.offset": 438, "key.parsed_declaration": "case none", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelNone"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var shared: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 448}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shared</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 36, "key.name": "shared", "key.namelength": 6, "key.nameoffset": 466, "key.offset": 455, "key.parsed_declaration": "public static var shared: LogLevel = .error", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "LogLevel", "key.typeusr": "$s9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore8LogLevelO6sharedACvpZ"}], "key.typename": "LogLevel.Type", "key.typeusr": "$s9FritzCore8LogLevelOmD", "key.usr": "c:@M@FritzCore@E@LogLevel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Logger</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 495}], "key.bodylength": 1601, "key.bodyoffset": 517, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Logger</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1617, "key.name": "Logger", "key.namelength": 6, "key.nameoffset": 509, "key.offset": 502, "key.parsed_declaration": "public struct Logger", "key.parsed_scope.end": 77, "key.parsed_scope.start": 28, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 523}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>level</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "level", "key.namelength": 5, "key.nameoffset": 534, "key.offset": 530, "key.parsed_declaration": "public let level: LogLevel", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "LogLevel", "key.typeusr": "$s9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore6LoggerV5levelAA8LogLevelOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 555}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 566, "key.offset": 562, "key.parsed_declaration": "public let name: String", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type>, level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type> = .shared)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 584}], "key.bodylength": 47, "key.bodyoffset": 638, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type> = .shared</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 95, "key.name": "init(name:level:)", "key.namelength": 45, "key.nameoffset": 591, "key.offset": 591, "key.parsed_declaration": "public init(name: String, level: LogLevel = .shared)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(Logger.Type) -> (String, LogLevel) -> Logger", "key.typeusr": "$s4name5level9FritzCore6LoggerVSS_AC8LogLevelOtcD", "key.usr": "s:9FritzCore6LoggerV4name5levelACSS_AA8LogLevelOtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func debug(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 737}], "key.bodylength": 171, "key.bodyoffset": 773, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `debug`", "key.doc.declaration": "public func debug(_ items: Any...)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"40\" column=\"15\"><Name>debug(_:)</Name><USR>s:9FritzCore6LoggerV5debugyyypd_tF</USR><Declaration>public func debug(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>debug</codeVoice></Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "debug(_:)", "key.doc.type": "Function", "key.doclength": 43, "key.docoffset": 692, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>debug</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 201, "key.name": "debug(_:)", "key.namelength": 22, "key.nameoffset": 749, "key.offset": 744, "key.parsed_declaration": "public func debug(_ items: Any...)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 40, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 831, "key.offset": 827, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func info(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1004}], "key.bodylength": 169, "key.bodyoffset": 1039, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `info` or lower", "key.doc.declaration": "public func info(_ items: Any...)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"47\" column=\"15\"><Name>info(_:)</Name><USR>s:9FritzCore6LoggerV4infoyyypd_tF</USR><Declaration>public func info(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>info</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "info(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 951, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>info</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "info(_:)", "key.namelength": 21, "key.nameoffset": 1016, "key.offset": 1011, "key.parsed_declaration": "public func info(_ items: Any...)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1096, "key.offset": 1092, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func warn(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1268}], "key.bodylength": 169, "key.bodyoffset": 1303, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `warn` or lower", "key.doc.declaration": "public func warn(_ items: Any...)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"54\" column=\"15\"><Name>warn(_:)</Name><USR>s:9FritzCore6LoggerV4warnyyypd_tF</USR><Declaration>public func warn(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>warn</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 54, "key.doc.name": "warn(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1215, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>warn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "warn(_:)", "key.namelength": 21, "key.nameoffset": 1280, "key.offset": 1275, "key.parsed_declaration": "public func warn(_ items: Any...)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 54, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1360, "key.offset": 1356, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func error(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1533}], "key.bodylength": 171, "key.bodyoffset": 1569, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `error` or lower", "key.doc.declaration": "public func error(_ items: Any...)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"61\" column=\"15\"><Name>error(_:)</Name><USR>s:9FritzCore6LoggerV5erroryyypd_tF</USR><Declaration>public func error(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>error</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "error(_:)", "key.doc.type": "Function", "key.doclength": 52, "key.docoffset": 1479, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 201, "key.name": "error(_:)", "key.namelength": 22, "key.nameoffset": 1545, "key.offset": 1540, "key.parsed_declaration": "public func error(_ items: Any...)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 61, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1627, "key.offset": 1623, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func log(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1855}], "key.bodylength": 115, "key.bodyoffset": 1889, "key.doc.column": 15, "key.doc.comment": "Prints to stdout\n- Note: Should use one of the functions above that are controlled by log level", "key.doc.declaration": "public func log(_ items: Any...)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Logger.swift\" line=\"69\" column=\"15\"><Name>log(_:)</Name><USR>s:9FritzCore6LoggerV3logyyypd_tF</USR><Declaration>public func log(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout</Para></Abstract><Discussion><Note><Para>Should use one of the functions above that are controlled by log level</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 69, "key.doc.name": "log(_:)", "key.doc.type": "Function", "key.doclength": 106, "key.docoffset": 1747, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>log</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 143, "key.name": "log(_:)", "key.namelength": 20, "key.nameoffset": 1867, "key.offset": 1862, "key.parsed_declaration": "public func log(_ items: Any...)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 69, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1898, "key.offset": 1894, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF"}], "key.typename": "Logger.Type", "key.typeusr": "$s9FritzCore6LoggerVmD", "key.usr": "s:9FritzCore6LoggerV"}]}}, {"/Users/vagrant/git/Source/FritzCore/Notifications.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1302, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2613, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RetryResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 156}], "key.bodylength": 29, "key.bodyoffset": 181, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RetryResult</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 48, "key.name": "RetryResult", "key.namelength": 11, "key.nameoffset": 168, "key.offset": 163, "key.parsed_declaration": "public enum RetryResult", "key.parsed_scope.end": 13, "key.parsed_scope.start": 10, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 184, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case success</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "success", "key.namelength": 7, "key.nameoffset": 189, "key.offset": 189, "key.parsed_declaration": "case success", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO7successyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 199, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 204, "key.offset": 204, "key.parsed_declaration": "case error", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO5erroryA2CmF"}]}], "key.typename": "RetryResult.Type", "key.typeusr": "$s9FritzCore11RetryResultOmD", "key.usr": "s:9FritzCore11RetryResultO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct OperationRetryHandler</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 213}], "key.bodylength": 438, "key.bodyoffset": 250, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>OperationRetryHandler</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 469, "key.name": "OperationRetryHandler", "key.namelength": 21, "key.nameoffset": 227, "key.offset": 220, "key.parsed_declaration": "public struct OperationRetryHandler", "key.parsed_scope.end": 28, "key.parsed_scope.start": 15, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 299}], "key.doc.column": 14, "key.doc.comment": "Queue to dispatch retry operation on", "key.doc.declaration": "public let retryQueue: DispatchQueue", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"18\" column=\"14\"><Name>retryQueue</Name><USR>s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp</USR><Declaration>public let retryQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to dispatch retry operation on</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "retryQueue", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 256, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryQueue", "key.namelength": 10, "key.nameoffset": 310, "key.offset": 306, "key.parsed_declaration": "public let retryQueue: DispatchQueue", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "DispatchQueue", "key.typeusr": "$sSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retry: (@escaping (<Type usr=\"s:9FritzCore11RetryResultO\">RetryResult</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 412}], "key.doc.column": 14, "key.doc.comment": "Perform a retry and call completion handler with result of retry", "key.doc.declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"21\" column=\"14\"><Name>retry</Name><USR>s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp</USR><Declaration>public let retry: (@escaping (RetryResult) -&gt; Void) -&gt; Void</Declaration><CommentParts><Abstract><Para>Perform a retry and call completion handler with result of retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "retry", "key.doc.type": "Other", "key.doclength": 69, "key.docoffset": 341, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retry</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore11RetryResultO\">RetryResult</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "retry", "key.namelength": 5, "key.nameoffset": 423, "key.offset": 419, "key.parsed_declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(@escaping (RetryResult) -> ()) -> ()", "key.typeusr": "$syyy9FritzCore11RetryResultOccD", "key.usr": "s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onSuccess: () -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}], "key.doc.column": 14, "key.doc.comment": "Retrier received a successful retry, will not retry again", "key.doc.declaration": "public let onSuccess: () -> Void", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"24\" column=\"14\"><Name>onSuccess</Name><USR>s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp</USR><Declaration>public let onSuccess: () -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier received a successful retry, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "onSuccess", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 477, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onSuccess</decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "onSuccess", "key.namelength": 9, "key.nameoffset": 552, "key.offset": 548, "key.parsed_declaration": "public let onSuccess: () -> Void", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "() -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onFailure: (<Type usr=\"s:Su\">UInt</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 651}], "key.doc.column": 14, "key.doc.comment": "Retrier retried the maximum number of times, will not retry again", "key.doc.declaration": "public let onFailure: (UInt) -> Void", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"27\" column=\"14\"><Name>onFailure</Name><USR>s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp</USR><Declaration>public let onFailure: (UInt) -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier retried the maximum number of times, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "onFailure", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 579, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onFailure</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "onFailure", "key.namelength": 9, "key.nameoffset": 662, "key.offset": 658, "key.parsed_declaration": "public let onFailure: (UInt) -> Void", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(UInt) -> ()", "key.typeusr": "$syySucD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp"}], "key.typename": "OperationRetryHandler.Type", "key.typeusr": "$s9FritzCore21OperationRetryHandlerVmD", "key.usr": "s:9FritzCore21OperationRetryHandlerV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class OperationRetrier</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 698}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 691}], "key.bodylength": 1883, "key.bodyoffset": 728, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OperationRetrier</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1908, "key.name": "OperationRetrier", "key.namelength": 16, "key.nameoffset": 710, "key.offset": 704, "key.parsed_declaration": "public final class OperationRetrier", "key.parsed_scope.end": 99, "key.parsed_scope.start": 30, "key.runtime_name": "_TtC4main16OperationRetrier", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 771}], "key.doc.column": 14, "key.doc.comment": "Delegate to handle retry cases", "key.doc.declaration": "public let handler: OperationRetryHandler", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"33\" column=\"14\"><Name>handler</Name><USR>s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp</USR><Declaration>public let handler: OperationRetryHandler</Declaration><CommentParts><Abstract><Para>Delegate to handle retry cases</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "handler", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 734, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>handler</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "handler", "key.namelength": 7, "key.nameoffset": 782, "key.offset": 778, "key.parsed_declaration": "public let handler: OperationRetryHandler", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "OperationRetryHandler", "key.typeusr": "$s9FritzCore21OperationRetryHandlerVD", "key.usr": "s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 867}], "key.doc.column": 14, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"36\" column=\"14\"><Name>maxRetries</Name><USR>s:9FritzCore16OperationRetrierC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 818, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 878, "key.offset": 874, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore16OperationRetrierC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 957}], "key.doc.column": 14, "key.doc.comment": "Millisecond multiplier to adjust exponential curve", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"39\" column=\"14\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Millisecond multiplier to adjust exponential curve</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 900, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 968, "key.offset": 964, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isPaused: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1051}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1044}], "key.doc.column": 27, "key.doc.comment": "Is the retry loop currently paused", "key.doc.declaration": "public private(set) var isPaused: Bool {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"42\" column=\"27\"><Name>isPaused</Name><USR>s:9FritzCore16OperationRetrierC8isPausedSbvp</USR><Declaration>public private(set) var isPaused: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Is the retry loop currently paused</Para></Abstract></CommentParts></Other>", "key.doc.line": 42, "key.doc.name": "isPaused", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 1003, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isPaused</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "isPaused", "key.namelength": 8, "key.nameoffset": 1068, "key.offset": 1064, "key.parsed_declaration": "public private(set) var isPaused: Bool = true", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore16OperationRetrierC8isPausedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var attemptedRetries: <Type usr=\"s:Su\">UInt</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1136}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1129}], "key.doc.column": 27, "key.doc.comment": "Number of attempted retries", "key.doc.declaration": "public private(set) var attemptedRetries: UInt {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"45\" column=\"27\"><Name>attemptedRetries</Name><USR>s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp</USR><Declaration>public private(set) var attemptedRetries: UInt {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Number of attempted retries</Para></Abstract></CommentParts></Other>", "key.doc.line": 45, "key.doc.name": "attemptedRetries", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1095, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>attemptedRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "attemptedRetries", "key.namelength": 16, "key.nameoffset": 1153, "key.offset": 1149, "key.parsed_declaration": "public private(set) var attemptedRetries: UInt = 0", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type>, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1185}], "key.bodylength": 118, "key.bodyoffset": 1279, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>handler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 206, "key.name": "init(handler:maxRetries:exponentialMultiplier:)", "key.namelength": 85, "key.nameoffset": 1192, "key.offset": 1192, "key.parsed_declaration": "public init(handler: OperationRetryHandler, maxRetries: UInt, exponentialMultiplier: UInt32)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 47, "key.substructure": [], "key.typename": "(OperationRetrier.Type) -> (OperationRetryHandler, UInt, UInt32) -> OperationRetrier", "key.typeusr": "$s7handler10maxRetries21exponentialMultiplier9FritzCore16OperationRetrierCAD0H12RetryHandlerV_Sus6UInt32VtcD", "key.usr": "s:9FritzCore16OperationRetrierC7handler10maxRetries21exponentialMultiplierAcA0C12RetryHandlerV_Sus6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func start()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1431}], "key.bodylength": 88, "key.bodyoffset": 1452, "key.doc.column": 15, "key.doc.comment": "Start the retry loop", "key.doc.declaration": "public func start()", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"54\" column=\"15\"><Name>start()</Name><USR>s:9FritzCore16OperationRetrierC5startyyF</USR><Declaration>public func start()</Declaration><CommentParts><Abstract><Para>Start the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 54, "key.doc.name": "start()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1404, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>start</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 103, "key.name": "start()", "key.namelength": 7, "key.nameoffset": 1443, "key.offset": 1438, "key.parsed_declaration": "public func start()", "key.parsed_scope.end": 58, "key.parsed_scope.start": 54, "key.substructure": [], "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore16OperationRetrierC5startyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stop()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1574}], "key.bodylength": 23, "key.bodyoffset": 1594, "key.doc.column": 15, "key.doc.comment": "Stops the retry loop", "key.doc.declaration": "public func stop()", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift\" line=\"61\" column=\"15\"><Name>stop()</Name><USR>s:9FritzCore16OperationRetrierC4stopyyF</USR><Declaration>public func stop()</Declaration><CommentParts><Abstract><Para>Stops the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "stop()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1547, "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stop</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 37, "key.name": "stop()", "key.namelength": 6, "key.nameoffset": 1586, "key.offset": 1581, "key.parsed_declaration": "public func stop()", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore16OperationRetrierC4stopyyF"}, {"key.annotated_decl": "<Declaration>let base: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>base</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "base", "key.namelength": 4, "key.nameoffset": 2290, "key.offset": 2286, "key.parsed_declaration": "let base = Double(2)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg4baseL_Sdvp"}, {"key.annotated_decl": "<Declaration>let exponent: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponent</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "exponent", "key.namelength": 8, "key.nameoffset": 2315, "key.offset": 2311, "key.parsed_declaration": "let exponent = Double(attemptedRetries)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg8exponentL_Sdvp"}, {"key.annotated_decl": "<Declaration>let milliseconds: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>milliseconds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "milliseconds", "key.namelength": 12, "key.nameoffset": 2359, "key.offset": 2355, "key.parsed_declaration": "let milliseconds = pow(base, exponent) * Double(exponentialMultiplier)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg12millisecondsL_Sdvp"}, {"key.annotated_decl": "<Declaration>let millisecondJitter: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>millisecondJitter</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "millisecondJitter", "key.namelength": 17, "key.nameoffset": 2434, "key.offset": 2430, "key.parsed_declaration": "let millisecondJitter = arc4random_uniform(exponentialMultiplier * 10)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg17millisecondJitterL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let waitTime: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>waitTime</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "waitTime", "key.namelength": 8, "key.nameoffset": 2509, "key.offset": 2505, "key.parsed_declaration": "let waitTime = Int(milliseconds) + Int(millisecondJitter)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg04waitP0L_Sivp"}], "key.typename": "OperationRetrier.Type", "key.typeusr": "$s9FritzCore16OperationRetrierCmD", "key.usr": "s:9FritzCore16OperationRetrierC"}]}}, {"/Users/vagrant/git/Source/FritzCore/Session.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2197, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSession) public final class Session : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 785}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 778}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 697}], "key.bodylength": 1379, "key.bodyoffset": 816, "key.doc.column": 20, "key.doc.comment": "Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.\n\n- Note: By default the SDK will read your App Token from the `FritzToken` line in your apps Info.plist. However, by providing a `Session` when conforming to `BaseIdentifiedModel` you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"17\" column=\"20\"><Name>Session</Name><USR>c:@M@FritzCore@objc(cs)FritzSession</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject</Declaration><CommentParts><Abstract><Para>Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract><Discussion><Note><Para>By default the SDK will read your App Token from the <codeVoice>FritzToken</codeVoice> line in your apps Info.plist. However, by providing a <codeVoice>Session</codeVoice> when conforming to <codeVoice>BaseIdentifiedModel</codeVoice> you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "Session", "key.doc.type": "Class", "key.doclength": 549, "key.docoffset": 147, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 806}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Session</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1405, "key.name": "Session", "key.namelength": 7, "key.nameoffset": 797, "key.offset": 791, "key.parsed_declaration": "public final class Session: NSObject", "key.parsed_scope.end": 63, "key.parsed_scope.start": 17, "key.runtime_name": "FritzSession", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>.Info : <Type usr=\"s:Se\">Decodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 822}], "key.bodylength": 96, "key.bodyoffset": 853, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 842}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class>.<decl.name>Info</decl.name> : <ref.protocol usr=\"s:Se\">Decodable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Decodable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 121, "key.name": "Info", "key.namelength": 4, "key.nameoffset": 836, "key.offset": 829, "key.parsed_declaration": "public struct Info: Decodable", "key.parsed_scope.end": 23, "key.parsed_scope.start": 19, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 858}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 869, "key.offset": 865, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 888}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 899, "key.offset": 895, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 918}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 929, "key.offset": 925, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV9namespaceSSvp"}], "key.typename": "Session.Info.Type", "key.typeusr": "$s9FritzCore7SessionC4InfoVmD", "key.usr": "s:9FritzCore7SessionC4InfoV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(defaultSession) public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1024}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1000}], "key.doc.column": 21, "key.doc.comment": "Default session to use throughout SDK", "key.doc.declaration": "@objc(defaultSession) public static let `default`: FritzCore.Session", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"27\" column=\"21\"><Name>default</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession</USR><Declaration>@objc(defaultSession) public static let `default`: FritzCore.Session</Declaration><CommentParts><Abstract><Para>Default session to use throughout SDK</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "default", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 956, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(defaultSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 406, "key.name": "default", "key.namelength": 7, "key.nameoffset": 1042, "key.offset": 1031, "key.parsed_declaration": "public static let `default`: Session =", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1480}], "key.doc.column": 14, "key.doc.comment": "App token sent on all requests", "key.doc.declaration": "public let apiKey: String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"37\" column=\"14\"><Name>apiKey</Name><USR>s:9FritzCore7SessionC6apiKeySSvp</USR><Declaration>public let apiKey: String</Declaration><CommentParts><Abstract><Para>App token sent on all requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "apiKey", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 1443, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 1491, "key.offset": 1487, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1535}], "key.doc.column": 14, "key.doc.comment": "Api to connect to", "key.doc.declaration": "public let apiUrl: String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"40\" column=\"14\"><Name>apiUrl</Name><USR>s:9FritzCore7SessionC6apiUrlSSvp</USR><Declaration>public let apiUrl: String</Declaration><CommentParts><Abstract><Para>Api to connect to</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "apiUrl", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 1511, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 1546, "key.offset": 1542, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1615}], "key.doc.column": 14, "key.doc.comment": "Namespace for local storage of Fritz files", "key.doc.declaration": "public let namespace: String", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"43\" column=\"14\"><Name>namespace</Name><USR>s:9FritzCore7SessionC9namespaceSSvp</USR><Declaration>public let namespace: String</Declaration><CommentParts><Abstract><Para>Namespace for local storage of Fritz files</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "namespace", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1566, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 1626, "key.offset": 1622, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC9namespaceSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1689}], "key.bodylength": 35, "key.bodyoffset": 1727, "key.doc.column": 14, "key.doc.comment": "Current settings for this session", "key.doc.declaration": "public var settings: SessionSettings { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"46\" column=\"14\"><Name>settings</Name><USR>s:9FritzCore7SessionC8settingsAA0C8SettingsVvp</USR><Declaration>public var settings: SessionSettings { get }</Declaration><CommentParts><Abstract><Para>Current settings for this session</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "settings", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1649, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>settings</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 67, "key.name": "settings", "key.namelength": 8, "key.nameoffset": 1700, "key.offset": 1696, "key.parsed_declaration": "public var settings: SessionSettings", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.typename": "SessionSettings", "key.typeusr": "$s9FritzCore15SessionSettingsVD", "key.usr": "s:9FritzCore7SessionC8settingsAA0C8SettingsVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: <Type usr=\"s:SS\">String</Type>, apiUrl: <Type usr=\"s:SS\">String</Type>, namespace: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1836}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1792}], "key.bodylength": 101, "key.bodyoffset": 1900, "key.doc.column": 10, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"52\" column=\"10\"><Name>init(apiKey:apiUrl:namespace:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:</USR><Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 52, "key.doc.name": "init(apiKey:apiUrl:namespace:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 1769, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:apiUrl:namespace:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>apiUrl</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>namespace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 159, "key.name": "init(apiKey:apiUrl:namespace:)", "key.namelength": 55, "key.nameoffset": 1843, "key.offset": 1843, "key.parsed_declaration": "public init(apiKey: String, apiUrl: String, namespace: String)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 52, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:\">init(apiKey:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String, String, String) -> Session", "key.typeusr": "$s6apiKey0A3Url9namespace9FritzCore7SessionCSS_S2StcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:) public convenience init(apiKey: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2062}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2055}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 2028}], "key.bodylength": 97, "key.bodyoffset": 2096, "key.doc.column": 22, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:) public convenience init(apiKey: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/Session.swift\" line=\"60\" column=\"22\"><Name>init(apiKey:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:</USR><Declaration>@objc(initWithAppToken:) public convenience init(apiKey: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 60, "key.doc.name": "init(apiKey:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 2005, "key.filepath": "/Users/vagrant/git/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 120, "key.name": "init(apiKey:)", "key.namelength": 20, "key.nameoffset": 2074, "key.offset": 2074, "key.parsed_declaration": "public convenience init(apiKey: String)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:\">init(apiKey:apiUrl:namespace:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String) -> Session", "key.typeusr": "$s6apiKey9FritzCore7SessionCSS_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:"}], "key.typename": "Session.Type", "key.typeusr": "$s9FritzCore7SessionCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession"}]}}, {"/Users/vagrant/git/Source/FritzCore/SessionEvent.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1325, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 213}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 152}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 152}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 152}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 152}], "key.bodylength": 1082, "key.bodyoffset": 241, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1104, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 227, "key.offset": 220, "key.parsed_declaration": "public struct SessionEvent", "key.parsed_scope.end": 41, "key.parsed_scope.start": 11, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>.EventType : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 247}], "key.bodylength": 749, "key.bodyoffset": 278, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 270}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>.<decl.name>EventType</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 774, "key.name": "EventType", "key.namelength": 9, "key.nameoffset": 259, "key.offset": 254, "key.parsed_declaration": "public enum EventType: String", "key.parsed_scope.end": 27, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 63, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 283, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationDidEnterBackground = &quot;app_did_enter_background&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 320}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidEnterBackground</decl.name> = <syntaxtype.string>&quot;app_did_enter_background&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 58, "key.name": "applicationDidEnterBackground", "key.namelength": 29, "key.nameoffset": 288, "key.offset": 288, "key.parsed_declaration": "case applicationDidEnterBackground = \"app_did_enter_background\"", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO29applicationDidEnterBackgroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 351, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationWillEnterForeground = &quot;app_will_enter_foreground&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 27, "key.offset": 389}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillEnterForeground</decl.name> = <syntaxtype.string>&quot;app_will_enter_foreground&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 60, "key.name": "applicationWillEnterForeground", "key.namelength": 30, "key.nameoffset": 356, "key.offset": 356, "key.parsed_declaration": "case applicationWillEnterForeground = \"app_will_enter_foreground\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO30applicationWillEnterForegroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 57, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 421, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationDidBecomeActive = &quot;app_did_become_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 455}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidBecomeActive</decl.name> = <syntaxtype.string>&quot;app_did_become_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 52, "key.name": "applicationDidBecomeActive", "key.namelength": 26, "key.nameoffset": 426, "key.offset": 426, "key.parsed_declaration": "case applicationDidBecomeActive = \"app_did_become_active\"", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO26applicationDidBecomeActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 59, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 483, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationWillResignActive = &quot;app_will_resign_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 24, "key.offset": 518}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillResignActive</decl.name> = <syntaxtype.string>&quot;app_will_resign_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 54, "key.name": "applicationWillResignActive", "key.namelength": 27, "key.nameoffset": 488, "key.offset": 488, "key.parsed_declaration": "case applicationWillResignActive = \"app_will_resign_active\"", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO27applicationWillResignActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 39, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 547, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelInstalled = &quot;model_installed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 17, "key.offset": 569}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInstalled</decl.name> = <syntaxtype.string>&quot;model_installed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 34, "key.name": "modelInstalled", "key.namelength": 14, "key.nameoffset": 552, "key.offset": 552, "key.parsed_declaration": "case modelInstalled = \"model_installed\"", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO14modelInstalledyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 56, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 591, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownloadCompleted = &quot;model_download_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 621}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadCompleted</decl.name> = <syntaxtype.string>&quot;model_download_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 51, "key.name": "modelDownloadCompleted", "key.namelength": 22, "key.nameoffset": 596, "key.offset": 596, "key.parsed_declaration": "case modelDownloadCompleted = \"model_download_completed\"", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO22modelDownloadCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 50, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 652, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownloadFailed = &quot;model_download_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 679}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadFailed</decl.name> = <syntaxtype.string>&quot;model_download_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 45, "key.name": "modelDownloadFailed", "key.namelength": 19, "key.nameoffset": 657, "key.offset": 657, "key.parsed_declaration": "case modelDownloadFailed = \"model_download_failed\"", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO19modelDownloadFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 707, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompileCompleted = &quot;model_compile_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 736}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileCompleted</decl.name> = <syntaxtype.string>&quot;model_compile_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelCompileCompleted", "key.namelength": 21, "key.nameoffset": 712, "key.offset": 712, "key.parsed_declaration": "case modelCompileCompleted = \"model_compile_completed\"", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelCompileCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 48, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 766, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompileFailed = &quot;model_compile_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 22, "key.offset": 792}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileFailed</decl.name> = <syntaxtype.string>&quot;model_compile_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 43, "key.name": "modelCompileFailed", "key.namelength": 18, "key.nameoffset": 771, "key.offset": 771, "key.parsed_declaration": "case modelCompileFailed = \"model_compile_failed\"", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO18modelCompileFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 60, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 819, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryptionCompleted = &quot;model_decryption_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 28, "key.offset": 851}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionCompleted</decl.name> = <syntaxtype.string>&quot;model_decryption_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 55, "key.name": "modelDecryptionCompleted", "key.namelength": 24, "key.nameoffset": 824, "key.offset": 824, "key.parsed_declaration": "case modelDecryptionCompleted = \"model_decryption_completed\"", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO24modelDecryptionCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 884, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryptionFailed = &quot;model_decryption_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 913}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionFailed</decl.name> = <syntaxtype.string>&quot;model_decryption_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelDecryptionFailed", "key.namelength": 21, "key.nameoffset": 889, "key.offset": 889, "key.parsed_declaration": "case modelDecryptionFailed = \"model_decryption_failed\"", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelDecryptionFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 30, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 943, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case prediction = &quot;prediction&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 961}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>prediction</decl.name> = <syntaxtype.string>&quot;prediction&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 25, "key.name": "prediction", "key.namelength": 10, "key.nameoffset": 948, "key.offset": 948, "key.parsed_declaration": "case prediction = \"prediction\"", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO10predictionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 46, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 978, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case inputOutputSample = &quot;input_output_sample&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1003}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>inputOutputSample</decl.name> = <syntaxtype.string>&quot;input_output_sample&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 41, "key.name": "inputOutputSample", "key.namelength": 17, "key.nameoffset": 983, "key.offset": 983, "key.parsed_declaration": "case inputOutputSample = \"input_output_sample\"", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO17inputOutputSampleyA2EmF"}]}], "key.typename": "SessionEvent.EventType.Type", "key.typeusr": "$s9FritzCore12SessionEventV0D4TypeOmD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1034}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "type", "key.namelength": 4, "key.nameoffset": 1045, "key.offset": 1041, "key.parsed_declaration": "public let type: EventType", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "SessionEvent.EventType", "key.typeusr": "$s9FritzCore12SessionEventV0D4TypeOD", "key.usr": "s:9FritzCore12SessionEventV4typeAC0D4TypeOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1066}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "data", "key.namelength": 4, "key.nameoffset": 1077, "key.offset": 1073, "key.parsed_declaration": "public let data: RequestOptions", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:9FritzCore12SessionEventV4dataSDySSypGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sessionIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1103}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 51, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1114, "key.offset": 1110, "key.parsed_declaration": "public let sessionIdentifier = FritzCore.sessionIdentifier", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore12SessionEventV17sessionIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let timestamp: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1167}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>timestamp</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "timestamp", "key.namelength": 9, "key.nameoffset": 1178, "key.offset": 1174, "key.parsed_declaration": "public let timestamp = Date().timeIntervalSince1970", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore12SessionEventV9timestampSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type>, data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1224}], "key.bodylength": 45, "key.bodyoffset": 1276, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>type</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init(type:data:)", "key.namelength": 43, "key.nameoffset": 1231, "key.offset": 1231, "key.parsed_declaration": "public init(type: EventType, data: RequestOptions)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 37, "key.substructure": [], "key.typename": "(SessionEvent.Type) -> (SessionEvent.EventType, [String : Any]) -> SessionEvent", "key.typeusr": "$s4type4data9FritzCore12SessionEventVAE0F4TypeO_SDySSypGtcD", "key.usr": "s:9FritzCore12SessionEventV4type4dataA2C0D4TypeO_SDySSypGtcfc"}], "key.typename": "SessionEvent.Type", "key.typeusr": "$s9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/vagrant/git/Source/FritzCore/SessionManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7587, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum SessionManagerError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 173}], "key.bodylength": 17, "key.bodyoffset": 213, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 206}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SessionManagerError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 51, "key.name": "SessionManagerError", "key.namelength": 19, "key.nameoffset": 185, "key.offset": 180, "key.parsed_declaration": "public enum SessionManagerError: Error", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 216, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case disabled</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>disabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "disabled", "key.namelength": 8, "key.nameoffset": 221, "key.offset": 221, "key.parsed_declaration": "case disabled", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(SessionManagerError.Type) -> SessionManagerError", "key.typeusr": "$sy9FritzCore19SessionManagerErrorOACmcD", "key.usr": "s:9FritzCore19SessionManagerErrorO8disabledyA2CmF"}]}], "key.typename": "SessionManagerError.Type", "key.typeusr": "$s9FritzCore19SessionManagerErrorOmD", "key.usr": "s:9FritzCore19SessionManagerErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 301}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 233}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 233}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 233}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 233}], "key.bodylength": 1703, "key.bodyoffset": 339, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 329}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1736, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 313, "key.offset": 307, "key.parsed_declaration": "public final class SessionManager: NSObject", "key.parsed_scope.end": 69, "key.parsed_scope.start": 16, "key.runtime_name": "_TtC4main14SessionManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 379}], "key.doc.column": 14, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"19\" column=\"14\"><Name>session</Name><USR>s:9FritzCore14SessionManagerC7sessionAA0C0Cvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 345, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 390, "key.offset": 386, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAA0C0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiClient: <Type usr=\"s:9FritzCore9APIClientC\">APIClient</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 451}], "key.doc.column": 14, "key.doc.comment": "API client to make requests with", "key.doc.declaration": "public let apiClient: APIClient", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"22\" column=\"14\"><Name>apiClient</Name><USR>s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp</USR><Declaration>public let apiClient: APIClient</Declaration><CommentParts><Abstract><Para>API client to make requests with</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "apiClient", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 412, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiClient</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore9APIClientC\">APIClient</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "apiClient", "key.namelength": 9, "key.nameoffset": 462, "key.offset": 458, "key.parsed_declaration": "public let apiClient: APIClient", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "APIClient", "key.typeusr": "$s9FritzCore9APIClientCD", "key.usr": "s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestQueue: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;<Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 528}], "key.doc.column": 14, "key.doc.comment": "Queue to batch and retry requests", "key.doc.declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"25\" column=\"14\"><Name>trackRequestQueue</Name><USR>s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp</USR><Declaration>public let trackRequestQueue: BatchedRequestQueue&lt;SessionEvent&gt;</Declaration><CommentParts><Abstract><Para>Queue to batch and retry requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "trackRequestQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 488, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestQueue</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;<ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "trackRequestQueue", "key.namelength": 17, "key.nameoffset": 539, "key.offset": 535, "key.parsed_declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore14SessionManagerC17trackRequestQueue7flushed17completionHandlerySayAA0C5EventVG_yAA8ResponseOctF\">trackRequestQueue(flushed:completionHandler:)</RelatedName>"}], "key.typename": "BatchedRequestQueue<SessionEvent>", "key.typeusr": "$s9FritzCore19BatchedRequestQueueCyAA12SessionEventVGD", "key.usr": "s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let fileManager: <Type usr=\"c:objc(cs)NSFileManager\">FileManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 624}], "key.doc.column": 14, "key.doc.comment": "Default file manager", "key.doc.declaration": "public let fileManager: FileManager", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"28\" column=\"14\"><Name>fileManager</Name><USR>s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp</USR><Declaration>public let fileManager: FileManager</Declaration><CommentParts><Abstract><Para>Default file manager</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "fileManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 597, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fileManager</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSFileManager\">FileManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "fileManager", "key.namelength": 11, "key.nameoffset": 635, "key.offset": 631, "key.parsed_declaration": "public let fileManager: FileManager = .default", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "FileManager", "key.typeusr": "$sSo13NSFileManagerCD", "key.usr": "s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let logger: <Type usr=\"s:9FritzCore6LoggerV\">Logger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 706}], "key.doc.column": 14, "key.doc.comment": "Private logger instance", "key.doc.declaration": "public let logger: FritzCore.Logger", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"31\" column=\"14\"><Name>logger</Name><USR>s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp</USR><Declaration>public let logger: FritzCore.Logger</Declaration><CommentParts><Abstract><Para>Private logger instance</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "logger", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 676, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>logger</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore6LoggerV\">Logger</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "logger", "key.namelength": 6, "key.nameoffset": 717, "key.offset": 713, "key.parsed_declaration": "public let logger = Logger(name: \"SessionManager\")", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "Logger", "key.typeusr": "$s9FritzCore6LoggerVD", "key.usr": "s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1070}], "key.bodylength": 573, "key.bodyoffset": 1101, "key.doc.column": 10, "key.doc.comment": "Required initializer", "key.doc.declaration": "public init(session: Session)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"42\" column=\"10\"><Name>init(session:)</Name><USR>s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc</USR><Declaration>public init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 42, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1043, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 598, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 1077, "key.offset": 1077, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 56, "key.parsed_scope.start": 42, "key.substructure": [{"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 1326}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1331, "key.offset": 1331, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 1504}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1509, "key.offset": 1509, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}], "key.typename": "(SessionManager.Type) -> (Session) -> SessionManager", "key.typeusr": "$s7session9FritzCore14SessionManagerCAB0D0C_tcD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func trackEvent(_ event: <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1742}], "key.bodylength": 125, "key.bodyoffset": 1789, "key.doc.column": 15, "key.doc.comment": "Track an event, taking into account blacklisted events", "key.doc.declaration": "public func trackEvent(_ event: SessionEvent)", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzCore/SessionManager.swift\" line=\"59\" column=\"15\"><Name>trackEvent(_:)</Name><USR>s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF</USR><Declaration>public func trackEvent(_ event: SessionEvent)</Declaration><CommentParts><Abstract><Para>Track an event, taking into account blacklisted events</Para></Abstract></CommentParts></Function>", "key.doc.line": 59, "key.doc.name": "trackEvent(_:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1681, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackEvent</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>event</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 166, "key.name": "trackEvent(_:)", "key.namelength": 33, "key.nameoffset": 1754, "key.offset": 1749, "key.parsed_declaration": "public func trackEvent(_ event: SessionEvent)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 59, "key.substructure": [], "key.typename": "(SessionManager) -> (SessionEvent) -> ()", "key.typeusr": "$syy9FritzCore12SessionEventVcD", "key.usr": "s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 111, "key.bodyoffset": 1929, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 120, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 1921, "key.offset": 1921, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 68, "key.parsed_scope.start": 64, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionManager) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager(im)dealloc"}], "key.typename": "SessionManager.Type", "key.typeusr": "$s9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Initialize", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2048}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Healthcheck", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3959}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4671}]}}, {"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3456, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 217}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 156}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 156}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 156}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 156}], "key.bodylength": 2075, "key.bodyoffset": 257, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 248}], "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2109, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 231, "key.offset": 224, "key.parsed_declaration": "public struct SessionSettings: Codable", "key.parsed_scope.end": 59, "key.parsed_scope.start": 11, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 312}], "key.doc.column": 14, "key.doc.comment": "If false, no calls will be made to the API", "key.doc.declaration": "public let apiRequestsEnabled: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"14\" column=\"14\"><Name>apiRequestsEnabled</Name><USR>s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp</USR><Declaration>public let apiRequestsEnabled: Bool</Declaration><CommentParts><Abstract><Para>If false, no calls will be made to the API</Para></Abstract></CommentParts></Other>", "key.doc.line": 14, "key.doc.name": "apiRequestsEnabled", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 263, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiRequestsEnabled</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "apiRequestsEnabled", "key.namelength": 18, "key.nameoffset": 323, "key.offset": 319, "key.parsed_declaration": "public let apiRequestsEnabled: Bool", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 385}], "key.doc.column": 14, "key.doc.comment": "Settings refresh interval", "key.doc.declaration": "public let settingsRefreshInterval: TimeInterval", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"17\" column=\"14\"><Name>settingsRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp</USR><Declaration>public let settingsRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>Settings refresh interval</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "settingsRefreshInterval", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 353, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>settingsRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "settingsRefreshInterval", "key.namelength": 23, "key.nameoffset": 396, "key.offset": 392, "key.parsed_declaration": "public let settingsRefreshInterval: TimeInterval", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 492}], "key.doc.column": 14, "key.doc.comment": "Control model I/O sampling based on ratio, 0-1", "key.doc.declaration": "public let modelInputOutputSamplingRatio: Float", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"20\" column=\"14\"><Name>modelInputOutputSamplingRatio</Name><USR>s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp</USR><Declaration>public let modelInputOutputSamplingRatio: Float</Declaration><CommentParts><Abstract><Para>Control model I/O sampling based on ratio, 0-1</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "modelInputOutputSamplingRatio", "key.doc.type": "Other", "key.doclength": 51, "key.docoffset": 439, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputOutputSamplingRatio</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "modelInputOutputSamplingRatio", "key.namelength": 29, "key.nameoffset": 503, "key.offset": 499, "key.parsed_declaration": "public let modelInputOutputSamplingRatio: Float", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 588}], "key.doc.column": 14, "key.doc.comment": "Control batch size of track requests", "key.doc.declaration": "public let trackRequestBatchSize: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"23\" column=\"14\"><Name>trackRequestBatchSize</Name><USR>s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp</USR><Declaration>public let trackRequestBatchSize: Int</Declaration><CommentParts><Abstract><Para>Control batch size of track requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "trackRequestBatchSize", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 545, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestBatchSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "trackRequestBatchSize", "key.namelength": 21, "key.nameoffset": 599, "key.offset": 595, "key.parsed_declaration": "public let trackRequestBatchSize: Int", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 685}], "key.doc.column": 14, "key.doc.comment": "Control if events are gzipped in track response", "key.doc.declaration": "public let gzipTrackEvents: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"26\" column=\"14\"><Name>gzipTrackEvents</Name><USR>s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp</USR><Declaration>public let gzipTrackEvents: Bool</Declaration><CommentParts><Abstract><Para>Control if events are gzipped in track response</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "gzipTrackEvents", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 631, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>gzipTrackEvents</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "gzipTrackEvents", "key.namelength": 15, "key.nameoffset": 696, "key.offset": 692, "key.parsed_declaration": "public let gzipTrackEvents: Bool", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let batchFlushInterval: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 769}], "key.doc.column": 14, "key.doc.comment": "Batch request flush interval in seconds", "key.doc.declaration": "public let batchFlushInterval: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"29\" column=\"14\"><Name>batchFlushInterval</Name><USR>s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp</USR><Declaration>public let batchFlushInterval: Double</Declaration><CommentParts><Abstract><Para>Batch request flush interval in seconds</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "batchFlushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 723, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>batchFlushInterval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "batchFlushInterval", "key.namelength": 18, "key.nameoffset": 780, "key.offset": 776, "key.parsed_declaration": "public let batchFlushInterval: Double", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 853}], "key.doc.column": 14, "key.doc.comment": "List of events we should not track", "key.doc.declaration": "public let eventBlacklist: Set<String>", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"32\" column=\"14\"><Name>eventBlacklist</Name><USR>s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp</USR><Declaration>public let eventBlacklist: Set&lt;String&gt;</Declaration><CommentParts><Abstract><Para>List of events we should not track</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "eventBlacklist", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 812, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>eventBlacklist</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "eventBlacklist", "key.namelength": 14, "key.nameoffset": 864, "key.offset": 860, "key.parsed_declaration": "public let eventBlacklist: Set<String>", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Set<String>", "key.typeusr": "$sShySSGD", "key.usr": "s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 966}], "key.doc.column": 14, "key.doc.comment": "TimeInterval to refresh active model settings from the server.", "key.doc.declaration": "public let activeModelRefreshInterval: TimeInterval", "key.doc.file": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzCore/SessionSettings.swift\" line=\"35\" column=\"14\"><Name>activeModelRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp</USR><Declaration>public let activeModelRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>TimeInterval to refresh active model settings from the server.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "activeModelRefreshInterval", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 897, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>activeModelRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "activeModelRefreshInterval", "key.namelength": 26, "key.nameoffset": 977, "key.offset": 973, "key.parsed_declaration": "public let activeModelRefreshInterval: TimeInterval", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type> = true, settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 30 * 60, modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type> = 0, gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type> = false, trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type> = 100, batchFlushInterval: <Type usr=\"s:Sd\">Double</Type> = 60.0, eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt; = [], activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 15 * 60)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1572}], "key.bodylength": 435, "key.bodyoffset": 1895, "key.filepath": "/Users/vagrant/git/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiRequestsEnabled</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>settingsRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 30 * 60</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelInputOutputSamplingRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>gzipTrackEvents</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trackRequestBatchSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 100</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>batchFlushInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 60.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventBlacklist</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.parameter.type> = []</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 15 * 60</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 752, "key.name": "init(apiRequestsEnabled:settingsRefreshInterval:modelInputOutputSamplingRatio:gzipTrackEvents:trackRequestBatchSize:batchFlushInterval:eventBlacklist:activeModelRefreshInterval:)", "key.namelength": 314, "key.nameoffset": 1579, "key.offset": 1579, "key.parsed_declaration": "public init(apiRequestsEnabled: Bool = true, settingsRefreshInterval: TimeInterval = 30 * 60, modelInputOutputSamplingRatio: Float = 0, gzipTrackEvents: Bool = false, trackRequestBatchSize: Int = 100, batchFlushInterval: Double = 60.0, eventBlacklist: Set<String> = [], activeModelRefreshInterval: TimeInterval = 15 * 60)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 49, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore15SessionSettingsV4fromACs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Bool, Double, Float, Bool, Int, Double, Set<String>, Double) -> SessionSettings", "key.typeusr": "$s18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushF014eventBlacklist011activeModeleF09FritzCore15SessionSettingsVSb_SdSfSbSiSdShySSGSdtcD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushJ014eventBlacklist011activeModeliJ0ACSb_SdSfSbSiSdShySSGSdtcfc"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$s9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 14, "key.name": "MARK: - Static", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2338}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 16, "key.name": "MARK: - Sampling", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2952}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/Array.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1973, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1098}], "key.bodylength": 823, "key.bodyoffset": 1148, "key.doc.declaration": "struct Array<Element>", "key.doc.discussion": [{"Para": "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the `Array` type to hold elements of a single type, the array\u2019s `Element` type. An array can store any kind of elements\u2014from integers to strings to classes."}, {"Para": "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s `Element` type. For example:"}, {"CodeListing": ""}, {"Para": "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"}, {"CodeListing": ""}, {"Para": "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."}, {"CodeListing": ""}, {"Para": "When you need to perform an operation on all of an array\u2019s elements, use a `for`-`in` loop to iterate through the array\u2019s contents."}, {"CodeListing": ""}, {"Para": "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."}, {"CodeListing": ""}, {"Para": "Use the `first` and `last` properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are `nil`."}, {"CodeListing": ""}, {"Para": "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"}, {"CodeListing": ""}, {"Para": "Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class."}, {"CodeListing": ""}, {"Para": "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."}, {"CodeListing": ""}, {"Para": "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."}, {"CodeListing": ""}, {"Para": "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."}, {"CodeListing": ""}, {"Para": "You can replace an existing element with a new value by assigning the new value to the subscript."}, {"CodeListing": ""}, {"Para": "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."}, {"Para": "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."}, {"Para": "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."}, {"Para": "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"}, {"CodeListing": ""}, {"Para": "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:"}, {"CodeListing": ""}, {"Para": "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."}, {"Para": "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."}, {"Para": "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."}, {"CodeListing": ""}, {"Para": "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."}, {"Para": "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array\u2019s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."}, {"CodeListing": ""}, {"Para": "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."}, {"Para": "When the destination array\u2019s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."}, {"Para": "When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."}, {"Note": ""}], "key.doc.full_as_xml": "<Class><Name>Array</Name><USR>s:Sa</USR><Declaration>struct Array&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.</Para></Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the <codeVoice>Array</codeVoice> type to hold elements of a single type, the array\u2019s <codeVoice>Element</codeVoice> type. An array can store any kind of elements\u2014from integers to strings to classes.</Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s <codeVoice>Element</codeVoice> type. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An array of 'Int' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// An array of 'String' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element</codeVoice> type of your array in the declaration. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Shortened forms are preferred]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The full type name is also allowed]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)</codeVoice> initializer.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Array Values<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to perform an operation on all of an array\u2019s elements, use a <codeVoice>for</codeVoice>-<codeVoice>in</codeVoice> loop to iterate through the array\u2019s contents.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Albemarle.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Brandywine.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Chesapeake.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>isEmpty</codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count</codeVoice> property to find the number of elements in the array.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I know 8 odd numbers.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>first</codeVoice> and <codeVoice>last</codeVoice> properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are <codeVoice>nil</codeVoice>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 15\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil, nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count</codeVoice> triggers a runtime error. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 7\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Triggers runtime error: Index out of range]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Adding and Removing Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)</codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)</codeVoice> method.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)</codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)</codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)</codeVoice>, <codeVoice>removeSubrange(_:)</codeVoice>, and <codeVoice>removeLast()</codeVoice> methods.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Ben's family is moving to another state]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// William is signing up for a different class]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Growing the Size of an Array<rawHTML><![CDATA[</h2>]]></rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.</Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)</codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity</codeVoice> and <codeVoice>count</codeVoice> properties to determine how many more elements the array can store without allocating larger storage.</Para><Para>For arrays of most <codeVoice>Element</codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element</codeVoice> type that is a class or <codeVoice>@objc</codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray</codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray</codeVoice> can become an <codeVoice>Array</codeVoice>, there are no guarantees about representation or efficiency in this case.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[100, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[1, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An integer type with reference semantics]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Modifications to an instance are visible from either array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Replacements, additions, and removals are still visible]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// only in the modified array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"10\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.</Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.</Para><Para>In the example below, a <codeVoice>numbers</codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers</codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers</codeVoice> are made in place, while the two copies continue to share the original storage.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The storage for 'numbers' is copied here]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'numbers' is [100, 200, 300, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray</codeVoice> instance instead of <codeVoice>Array</codeVoice>, use the type-cast operator (<codeVoice>as</codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element</codeVoice> type of your array must be a class, an <codeVoice>@objc</codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc</codeVoice> attribute), or a type that bridges to a Foundation type.</Para><Para>The following example shows how you can bridge an <codeVoice>Array</codeVoice> instance to <codeVoice>NSArray</codeVoice> to use the <codeVoice>write(to:atomically:)</codeVoice> method. In this example, the <codeVoice>colors</codeVoice> array can be bridged to <codeVoice>NSArray</codeVoice> because the <codeVoice>colors</codeVoice> array\u2019s <codeVoice>String</codeVoice> elements bridge to <codeVoice>NSString</codeVoice>. The compiler prevents bridging the <codeVoice>moreColors</codeVoice> array, on the other hand, because its <codeVoice>Element</codeVoice> type is <codeVoice>Optional&lt;String&gt;</codeVoice>, which does <emphasis>not</emphasis> bridge to a Foundation type.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// true]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// error: cannot convert value of type '[String?]' to type 'NSArray']]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Bridging from <codeVoice>Array</codeVoice> to <codeVoice>NSArray</codeVoice> takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an <codeVoice>@objc</codeVoice> protocol; otherwise, it takes O(<emphasis>n</emphasis>) time and space.</Para><Para>When the destination array\u2019s element type is a class or an <codeVoice>@objc</codeVoice> protocol, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> first calls the <codeVoice>copy(with:)</codeVoice> (<codeVoice>- copyWithZone:</codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray</codeVoice> that are already immutable, <codeVoice>copy(with:)</codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)</codeVoice> returns the same array, the instances of <codeVoice>NSArray</codeVoice> and <codeVoice>Array</codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array</codeVoice> share storage.</Para><Para>When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n</emphasis>) time. For example, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array&lt;Int&gt;</codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array</codeVoice> instance.</Para><Note><Para>The <codeVoice>ContiguousArray</codeVoice> and <codeVoice>ArraySlice</codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.</Para></Note></Discussion></CommentParts></Class>", "key.doc.name": "Array", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Array</decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</ref.protocol></decl.struct>", "key.groupname": "Collection/Array", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 867, "key.modulename": "Swift", "key.name": "Array", "key.namelength": 5, "key.nameoffset": 1115, "key.offset": 1105, "key.parsed_declaration": "public extension Array where Element: Comparable", "key.parsed_scope.end": 56, "key.parsed_scope.start": 24, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func argmax() -&gt; (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</Type>)</Declaration>", "key.bodylength": 238, "key.bodyoffset": 1264, "key.doc.column": 8, "key.doc.comment": "Returns the index and value of the largest element in the array.", "key.doc.declaration": "func argmax() -> (Int, Element)", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/Array.swift\" line=\"28\" column=\"8\"><Name>argmax()</Name><USR>s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF</USR><Declaration>func argmax() -&gt; (Int, Element)</Declaration><CommentParts><Abstract><Para>Returns the index and value of the largest element in the array.</Para></Abstract></CommentParts></Function>", "key.doc.line": 28, "key.doc.name": "argmax()", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 1151, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>argmax</decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 272, "key.name": "argmax()", "key.namelength": 8, "key.nameoffset": 1236, "key.offset": 1231, "key.parsed_declaration": "func argmax() -> (Int, Element)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 28, "key.substructure": [{"key.annotated_decl": "<Declaration>var maxIndex: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 16, "key.name": "maxIndex", "key.namelength": 8, "key.nameoffset": 1306, "key.offset": 1302, "key.parsed_declaration": "var maxIndex = 0", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF8maxIndexL_Sivp"}, {"key.annotated_decl": "<Declaration>var maxValue: Element</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxValue</decl.name>: <decl.var.type>Element</decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 22, "key.name": "maxValue", "key.namelength": 8, "key.nameoffset": 1327, "key.offset": 1323, "key.parsed_declaration": "var maxValue = self[0]", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "Element", "key.typeusr": "$sxD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF8maxValueL_xvp"}], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> () -> (Int, Element)", "key.typeusr": "$sSi_xtycD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func argsort(by areInIncreasingOrder: (<Type usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</Type>, <Type usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>) -&gt; [<Type usr=\"s:Sa\">Array</Type>.<Type usr=\"s:Sa5Indexa\">Index</Type>]</Declaration>", "key.bodylength": 79, "key.bodyoffset": 1667, "key.doc.column": 8, "key.doc.comment": "Returns the indices of the array's elements in sorted order.", "key.doc.declaration": "func argsort(by areInIncreasingOrder: (Element, Element) -> Bool) -> [Array.Index]", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/Array.swift\" line=\"44\" column=\"8\"><Name>argsort(by:)</Name><USR>s:Sa13CoreMLHelpersSLRzlE7argsort2bySaySiGSbx_xtXE_tF</USR><Declaration>func argsort(by areInIncreasingOrder: (Element, Element) -&gt; Bool) -&gt; [Array.Index]</Declaration><CommentParts><Abstract><Para>Returns the indices of the array\u2019s elements in sorted order.</Para></Abstract></CommentParts></Function>", "key.doc.line": 44, "key.doc.name": "argsort(by:)", "key.doc.type": "Function", "key.doclength": 73, "key.docoffset": 1507, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>argsort</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by</decl.var.parameter.argument_label> <decl.var.parameter.name>areInIncreasingOrder</decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sa\">Array</ref.struct>.<ref.typealias usr=\"s:Sa5Indexa\">Index</ref.typealias>]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 164, "key.name": "argsort(by:)", "key.namelength": 60, "key.nameoffset": 1588, "key.offset": 1583, "key.parsed_declaration": "func argsort(by areInIncreasingOrder: (Element, Element) -> Bool) -> [Array.Index]", "key.parsed_scope.end": 46, "key.parsed_scope.start": 44, "key.substructure": [], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> ((Element, Element) -> Bool) -> [Int]", "key.typeusr": "$s2bySaySiGSbx_xtXE_tcD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE7argsort2bySaySiGSbx_xtXE_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func gather(indices: [<Type usr=\"s:Sa\">Array</Type>.<Type usr=\"s:Sa5Indexa\">Index</Type>]) -&gt; [<Type usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</Type>]</Declaration>", "key.bodylength": 83, "key.bodyoffset": 1886, "key.doc.column": 8, "key.doc.comment": "Returns a new array containing the elements at the specified indices.", "key.doc.declaration": "func gather(indices: [Array.Index]) -> [Element]", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/Array.swift\" line=\"51\" column=\"8\"><Name>gather(indices:)</Name><USR>s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF</USR><Declaration>func gather(indices: [Array.Index]) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Returns a new array containing the elements at the specified indices.</Para></Abstract></CommentParts></Function>", "key.doc.line": 51, "key.doc.name": "gather(indices:)", "key.doc.type": "Function", "key.doclength": 82, "key.docoffset": 1751, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gather</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>indices</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sa\">Array</ref.struct>.<ref.typealias usr=\"s:Sa5Indexa\">Index</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.generic_type_param usr=\"s:Sa13CoreMLHelpersSLRzlE7Elementxmfp\">Element</ref.generic_type_param>]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 134, "key.name": "gather(indices:)", "key.namelength": 30, "key.nameoffset": 1841, "key.offset": 1836, "key.parsed_declaration": "func gather(indices: [Array.Index]) -> [Element]", "key.parsed_scope.end": 55, "key.parsed_scope.start": 51, "key.substructure": [{"key.annotated_decl": "<Declaration>var a: [Element]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>a</decl.name>: <decl.var.type>[Element]</decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 19, "key.name": "a", "key.namelength": 1, "key.nameoffset": 1895, "key.offset": 1891, "key.parsed_declaration": "var a = [Element]()", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "[Element]", "key.typeusr": "$sSayxGD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF1aL_ADvp"}], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> ([Int]) -> [Element]", "key.typeusr": "$s7indicesSayxGSaySiG_tcD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF"}], "key.typename": "Array<Element>.Type", "key.typeusr": "$sSayxGmD", "key.usr": "s:Sa"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/CGImage+CVPixelBuffer.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6079, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/CoreMLHelpers/CGImage+RawBytes.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3741, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/CoreMLHelpers/CGImagePropertyOrientation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2227, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>enum CGImagePropertyOrientation : <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1117}], "key.bodylength": 638, "key.bodyoffset": 1162, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.4.sdk/System/Library/Frameworks/ImageIO.framework/Headers/CGImageProperties.h", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>CGImagePropertyOrientation</decl.name> : <ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.enum>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 677, "key.modulename": "ImageIO.CGImageProperties", "key.name": "CGImagePropertyOrientation", "key.namelength": 26, "key.nameoffset": 1134, "key.offset": 1124, "key.parsed_declaration": "public extension CGImagePropertyOrientation", "key.parsed_scope.end": 50, "key.parsed_scope.start": 26, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ orientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type>)</Declaration>", "key.bodylength": 365, "key.bodyoffset": 1207, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CGImagePropertyOrientation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>orientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 408, "key.name": "init(_:)", "key.namelength": 40, "key.nameoffset": 1165, "key.offset": 1165, "key.parsed_declaration": "init(_ orientation: UIImage.Orientation)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So26CGImagePropertyOrientationV8rawValueABSgs6UInt32V_tcfc\">init(rawValue:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So26CGImagePropertyOrientationV13CoreMLHelpersEyABSo08UIDeviceC0Vcfc\">init(_: UIDeviceOrientation)</RelatedName>"}], "key.substructure": [], "key.typename": "(CGImagePropertyOrientation.Type) -> (UIImage.Orientation) -> CGImagePropertyOrientation", "key.typeusr": "$sySo26CGImagePropertyOrientationVSo07UIImageC0VcD", "key.usr": "s:So26CGImagePropertyOrientationV13CoreMLHelpersEyABSo07UIImageC0Vcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ orientation: <Type usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</Type>)</Declaration>", "key.bodylength": 179, "key.bodyoffset": 1619, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CGImagePropertyOrientation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>orientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 222, "key.name": "init(_:)", "key.namelength": 40, "key.nameoffset": 1577, "key.offset": 1577, "key.parsed_declaration": "init(_ orientation: UIDeviceOrientation)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So26CGImagePropertyOrientationV8rawValueABSgs6UInt32V_tcfc\">init(rawValue:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So26CGImagePropertyOrientationV13CoreMLHelpersEyABSo07UIImageC0Vcfc\">init(_: UIImage.Orientation)</RelatedName>"}], "key.substructure": [], "key.typename": "(CGImagePropertyOrientation.Type) -> (UIDeviceOrientation) -> CGImagePropertyOrientation", "key.typeusr": "$sySo26CGImagePropertyOrientationVSo08UIDeviceC0VcD", "key.usr": "s:So26CGImagePropertyOrientationV13CoreMLHelpersEyABSo08UIDeviceC0Vcfc"}], "key.typename": "CGImagePropertyOrientation.Type", "key.typeusr": "$sSo26CGImagePropertyOrientationVmD", "key.usr": "c:@E@CGImagePropertyOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>enum Orientation : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1803}], "key.bodylength": 384, "key.bodyoffset": 1841, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.4.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Orientation</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 416, "key.modulename": "UIKit.UIImage", "key.name": "UIImage.Orientation", "key.namelength": 19, "key.nameoffset": 1820, "key.offset": 1810, "key.parsed_declaration": "public extension UIImage.Orientation", "key.parsed_scope.end": 65, "key.parsed_scope.start": 52, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ cgOrientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type>)</Declaration>", "key.bodylength": 328, "key.bodyoffset": 1895, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CGImagePropertyOrientation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>cgOrientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 380, "key.name": "init(_:)", "key.namelength": 49, "key.nameoffset": 1844, "key.offset": 1844, "key.parsed_declaration": "init(_ cgOrientation: CGImagePropertyOrientation)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So18UIImageOrientationV8rawValueABSgSi_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(UIImage.Orientation.Type) -> (CGImagePropertyOrientation) -> UIImage.Orientation", "key.typeusr": "$sySo18UIImageOrientationVSo015CGImagePropertyB0VcD", "key.usr": "s:So18UIImageOrientationV13CoreMLHelpersEyABSo015CGImagePropertyB0Vcfc"}], "key.typename": "UIImage.Orientation.Type", "key.typeusr": "$sSo18UIImageOrientationVmD", "key.usr": "c:@E@UIImageOrientation"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8861, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func createPixelBuffer(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1207}], "key.bodylength": 338, "key.bodyoffset": 1281, "key.doc.column": 13, "key.doc.comment": "Creates a RGB pixel buffer of the specified width and height.", "key.doc.declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"30\" column=\"13\"><Name>createPixelBuffer(width:height:)</Name><USR>s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF</USR><Declaration>public func createPixelBuffer(width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Creates a RGB pixel buffer of the specified width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 30, "key.doc.name": "createPixelBuffer(width:height:)", "key.doc.type": "Function", "key.doclength": 70, "key.docoffset": 1136, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>createPixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 406, "key.name": "createPixelBuffer(width:height:)", "key.namelength": 42, "key.nameoffset": 1219, "key.offset": 1214, "key.parsed_declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 40, "key.parsed_scope.start": 30, "key.substructure": [{"key.annotated_decl": "<Declaration>var pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelBuffer", "key.namelength": 11, "key.nameoffset": 1288, "key.offset": 1284, "key.parsed_declaration": "var pixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF05pixelE0L_AGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 168, "key.name": "status", "key.namelength": 6, "key.nameoffset": 1322, "key.offset": 1318, "key.parsed_declaration": "let status = CVPixelBufferCreate(nil, width, height,", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF6statusL_s5Int32Vvp"}], "key.typename": "(Int, Int) -> CVBuffer?", "key.typeusr": "$s5width6heightSo11CVBufferRefaSgSi_SitcD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, cropX: <Type usr=\"s:Si\">Int</Type>, cropY: <Type usr=\"s:Si\">Int</Type>, cropWidth: <Type usr=\"s:Si\">Int</Type>, cropHeight: <Type usr=\"s:Si\">Int</Type>, scaleWidth: <Type usr=\"s:Si\">Int</Type>, scaleHeight: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1678}], "key.bodylength": 2042, "key.bodyoffset": 2032, "key.doc.column": 13, "key.doc.comment": "First crops the pixel buffer, then resizes it.", "key.doc.declaration": "public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"45\" column=\"13\"><Name>resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF</USR><Declaration>public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>First crops the pixel buffer, then resizes it.</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 1622, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropX</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropY</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 2390, "key.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.namelength": 322, "key.nameoffset": 1690, "key.offset": 1685, "key.parsed_declaration": "public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer,\n                              cropX: Int,\n                              cropY: Int,\n                              cropWidth: Int,\n                              cropHeight: Int,\n                              scaleWidth: Int,\n                              scaleHeight: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 104, "key.parsed_scope.start": 45, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let flags: <Type usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flags</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 47, "key.name": "flags", "key.namelength": 5, "key.nameoffset": 2039, "key.offset": 2035, "key.parsed_declaration": "let flags = CVPixelBufferLockFlags(rawValue: 0)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "CVPixelBufferLockFlags", "key.typeusr": "$sSo22CVPixelBufferLockFlagsVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF5flagsL_So07CVPixelE9LockFlagsVvp"}, {"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 2414, "key.offset": 2410, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>let offset: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "offset", "key.namelength": 6, "key.nameoffset": 2481, "key.offset": 2477, "key.parsed_declaration": "let offset = cropY*srcBytesPerRow + cropX*4", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6offsetL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 261, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 2527, "key.offset": 2523, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(data: srcData.advanced(by: offset),", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 2792, "key.offset": 2788, "key.parsed_declaration": "let destBytesPerRow = scaleWidth*4", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 248, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 2948, "key.offset": 2944, "key.parsed_declaration": "var destBuffer = vImage_Buffer(data: destData,", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 79, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3200, "key.offset": 3196, "key.parsed_declaration": "let error = vImageScale_ARGB8888(&srcBuffer, &destBuffer, nil, vImage_Flags(0))", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 152, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 3379, "key.offset": 3375, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 86, "key.parsed_scope.start": 86, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$syySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 3535, "key.offset": 3531, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 3603, "key.offset": 3599, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03dstdE0L_AKvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 287, "key.name": "status", "key.namelength": 6, "key.nameoffset": 3640, "key.offset": 3636, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(nil, scaleWidth, scaleHeight,", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, Int, Int, Int, Int, Int, Int) -> CVBuffer?", "key.typeusr": "$s_5cropX0A1Y0A5Width0A6Height05scaleB00dC0So11CVBufferRefaSgAH_S6itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4137}], "key.bodylength": 278, "key.bodyoffset": 4271, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"109\" column=\"13\"><Name>resizePixelBuffer(_:width:height:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 109, "key.doc.name": "resizePixelBuffer(_:width:height:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 4077, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 406, "key.name": "resizePixelBuffer(_:width:height:)", "key.namelength": 102, "key.nameoffset": 4149, "key.offset": 4144, "key.parsed_declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer,\n                              width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 115, "key.parsed_scope.start": 109, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CVBuffer, Int, Int) -> CVBuffer?", "key.typeusr": "$s_5width6heightSo11CVBufferRefaSgAD_S2itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildPixelBuffer(from image: <Type usr=\"c:@T@CGImageRef\">CGImage</Type>, in size: <Type usr=\"c:@S@CGSize\">CGSize</Type>? = nil) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4554}], "key.bodylength": 1137, "key.bodyoffset": 4647, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildPixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@T@CGImageRef\">CGImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>in</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1224, "key.name": "buildPixelBuffer(from:in:)", "key.namelength": 61, "key.nameoffset": 4566, "key.offset": 4561, "key.parsed_declaration": "public func buildPixelBuffer(from image: CGImage, in size: CGSize? = nil) -> CVPixelBuffer?", "key.parsed_scope.end": 155, "key.parsed_scope.start": 119, "key.substructure": [{"key.annotated_decl": "<Declaration>let frameSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>frameSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 72, "key.name": "frameSize", "key.namelength": 9, "key.nameoffset": 4654, "key.offset": 4650, "key.parsed_declaration": "let frameSize = size ?? CGSize(width: image.width, height: image.height)", "key.parsed_scope.end": 120, "key.parsed_scope.start": 120, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF9frameSizeL_AKvp"}, {"key.annotated_decl": "<Declaration>var pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "pixelBuffer", "key.namelength": 11, "key.nameoffset": 4730, "key.offset": 4726, "key.parsed_declaration": "var pixelBuffer:CVPixelBuffer? = nil", "key.parsed_scope.end": 122, "key.parsed_scope.start": 122, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF05pixelE0L_AGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 172, "key.name": "status", "key.namelength": 6, "key.nameoffset": 4769, "key.offset": 4765, "key.parsed_declaration": "let status = CVPixelBufferCreate(", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>let data: <Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 52, "key.name": "data", "key.namelength": 4, "key.nameoffset": 5086, "key.offset": 5082, "key.parsed_declaration": "let data = CVPixelBufferGetBaseAddress(pixelBuffer!)", "key.parsed_scope.end": 137, "key.parsed_scope.start": 137, "key.typename": "UnsafeMutableRawPointer?", "key.typeusr": "$sSvSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF4dataL_SvSgvp"}, {"key.annotated_decl": "<Declaration>let rgbColorSpace: <Type usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rgbColorSpace</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "rgbColorSpace", "key.namelength": 13, "key.nameoffset": 5141, "key.offset": 5137, "key.parsed_declaration": "let rgbColorSpace = CGColorSpaceCreateDeviceRGB()", "key.parsed_scope.end": 138, "key.parsed_scope.start": 138, "key.typename": "CGColorSpace", "key.typeusr": "$sSo15CGColorSpaceRefaD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF13rgbColorSpaceL_So07CGColornI0avp"}, {"key.annotated_decl": "<Declaration>let bitmapInfo: <Type usr=\"c:@E@CGBitmapInfo\">CGBitmapInfo</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bitmapInfo</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CGBitmapInfo\">CGBitmapInfo</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 127, "key.name": "bitmapInfo", "key.namelength": 10, "key.nameoffset": 5193, "key.offset": 5189, "key.parsed_declaration": "let bitmapInfo = CGBitmapInfo(rawValue: CGBitmapInfo.byteOrder32Little.rawValue | CGImageAlphaInfo.premultipliedFirst.rawValue)", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.typename": "CGBitmapInfo", "key.typeusr": "$sSo12CGBitmapInfoVD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF10bitmapInfoL_So08CGBitmapM0Vvp"}, {"key.annotated_decl": "<Declaration>let context: <Type usr=\"c:@T@CGContextRef\">CGContext</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>context</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CGContextRef\">CGContext</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 259, "key.name": "context", "key.namelength": 7, "key.nameoffset": 5323, "key.offset": 5319, "key.parsed_declaration": "let context = CGContext(", "key.parsed_scope.end": 140, "key.parsed_scope.start": 140, "key.typename": "CGContext?", "key.typeusr": "$sSo12CGContextRefaSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF7contextL_So09CGContextI0aSgvp"}], "key.typename": "(CGImage, CGSize?) -> CVBuffer?", "key.typeusr": "$s4from2inSo11CVBufferRefaSgSo07CGImageD0a_So6CGSizeVSgtcD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, output: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5847}], "key.bodylength": 361, "key.bodyoffset": 6036, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"160\" column=\"13\"><Name>resizePixelBuffer(_:width:height:output:context:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 160, "key.doc.name": "resizePixelBuffer(_:width:height:output:context:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 5787, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>output</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 544, "key.name": "resizePixelBuffer(_:width:height:output:context:)", "key.namelength": 175, "key.nameoffset": 5859, "key.offset": 5854, "key.parsed_declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer,\n                              width: Int, height: Int,\n                              output: CVPixelBuffer, context: CIContext)", "key.parsed_scope.end": 169, "key.parsed_scope.start": 160, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let ciImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ciImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "ciImage", "key.namelength": 7, "key.nameoffset": 6043, "key.offset": 6039, "key.parsed_declaration": "let ciImage = CIImage(cvPixelBuffer: pixelBuffer)", "key.parsed_scope.end": 163, "key.parsed_scope.start": 163, "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF7ciImageL_So7CIImageCvp"}, {"key.annotated_decl": "<Declaration>let sx: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sx</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 69, "key.name": "sx", "key.namelength": 2, "key.nameoffset": 6095, "key.offset": 6091, "key.parsed_declaration": "let sx = CGFloat(width) / CGFloat(CVPixelBufferGetWidth(pixelBuffer))", "key.parsed_scope.end": 164, "key.parsed_scope.start": 164, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2sxL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let sy: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sy</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 71, "key.name": "sy", "key.namelength": 2, "key.nameoffset": 6167, "key.offset": 6163, "key.parsed_declaration": "let sy = CGFloat(height) / CGFloat(CVPixelBufferGetHeight(pixelBuffer))", "key.parsed_scope.end": 165, "key.parsed_scope.start": 165, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2syL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let scaleTransform: <Type usr=\"c:@S@CGAffineTransform\">CGAffineTransform</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaleTransform</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGAffineTransform\">CGAffineTransform</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaleTransform", "key.namelength": 14, "key.nameoffset": 6241, "key.offset": 6237, "key.parsed_declaration": "let scaleTransform = CGAffineTransform(scaleX: sx, y: sy)", "key.parsed_scope.end": 166, "key.parsed_scope.start": 166, "key.typename": "CGAffineTransform", "key.typeusr": "$sSo17CGAffineTransformVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF14scaleTransformL_So08CGAffineN0Vvp"}, {"key.annotated_decl": "<Declaration>let scaledImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaledImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaledImage", "key.namelength": 11, "key.nameoffset": 6301, "key.offset": 6297, "key.parsed_declaration": "let scaledImage = ciImage.transformed(by: scaleTransform)", "key.parsed_scope.end": 167, "key.parsed_scope.start": 167, "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF11scaledImageL_So7CIImageCvp"}], "key.typename": "(CVBuffer, Int, Int, CVBuffer, CIContext) -> ()", "key.typeusr": "$s_5width6height6output7contextySo11CVBufferRefa_S2iAFSo9CIContextCtcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, factor: <Type usr=\"s:s5UInt8V\">UInt8</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6483}], "key.bodylength": 2277, "key.bodyoffset": 6582, "key.doc.column": 13, "key.doc.comment": "Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.", "key.doc.declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"178\" column=\"13\"><Name>rotate90PixelBuffer(_:factor:)</Name><USR>s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF</USR><Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.</Para></Abstract></CommentParts></Function>", "key.doc.line": 178, "key.doc.name": "rotate90PixelBuffer(_:factor:)", "key.doc.type": "Function", "key.doclength": 78, "key.docoffset": 6404, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rotate90PixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>factor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 2370, "key.name": "rotate90PixelBuffer(_:factor:)", "key.namelength": 67, "key.nameoffset": 6495, "key.offset": 6490, "key.parsed_declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.parsed_scope.end": 241, "key.parsed_scope.start": 178, "key.substructure": [{"key.annotated_decl": "<Declaration>let flags: <Type usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flags</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 47, "key.name": "flags", "key.namelength": 5, "key.nameoffset": 6589, "key.offset": 6585, "key.parsed_declaration": "let flags = CVPixelBufferLockFlags(rawValue: 0)", "key.parsed_scope.end": 179, "key.parsed_scope.start": 179, "key.typename": "CVPixelBufferLockFlags", "key.typeusr": "$sSo22CVPixelBufferLockFlagsVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5flagsL_So07CVPixelE9LockFlagsVvp"}, {"key.annotated_decl": "<Declaration>let sourceWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "sourceWidth", "key.namelength": 11, "key.nameoffset": 6964, "key.offset": 6960, "key.parsed_declaration": "let sourceWidth = CVPixelBufferGetWidth(srcPixelBuffer)", "key.parsed_scope.end": 189, "key.parsed_scope.start": 189, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11sourceWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>let sourceHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "sourceHeight", "key.namelength": 12, "key.nameoffset": 7022, "key.offset": 7018, "key.parsed_declaration": "let sourceHeight = CVPixelBufferGetHeight(srcPixelBuffer)", "key.parsed_scope.end": 190, "key.parsed_scope.start": 190, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF12sourceHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var destWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destWidth", "key.namelength": 9, "key.nameoffset": 7082, "key.offset": 7078, "key.parsed_declaration": "var destWidth = sourceHeight", "key.parsed_scope.end": 191, "key.parsed_scope.start": 191, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF9destWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>var destHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destHeight", "key.namelength": 10, "key.nameoffset": 7113, "key.offset": 7109, "key.parsed_declaration": "var destHeight = sourceWidth", "key.parsed_scope.end": 192, "key.parsed_scope.start": 192, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF10destHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var color: <Type usr=\"s:s5UInt8V\">UInt8</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 7144, "key.offset": 7140, "key.parsed_declaration": "var color = UInt8(0)", "key.parsed_scope.end": 193, "key.parsed_scope.start": 193, "key.typename": "UInt8", "key.typeusr": "$ss5UInt8VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5colorL_AHvp"}, {"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 7254, "key.offset": 7250, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 200, "key.parsed_scope.start": 200, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 244, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 7321, "key.offset": 7317, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(data: srcData,", "key.parsed_scope.end": 201, "key.parsed_scope.start": 201, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 7569, "key.offset": 7565, "key.parsed_declaration": "let destBytesPerRow = destWidth*4", "key.parsed_scope.end": 206, "key.parsed_scope.start": 206, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 246, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 7723, "key.offset": 7719, "key.parsed_declaration": "var destBuffer = vImage_Buffer(data: destData,", "key.parsed_scope.end": 211, "key.parsed_scope.start": 211, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 93, "key.name": "error", "key.namelength": 5, "key.nameoffset": 7973, "key.offset": 7969, "key.parsed_declaration": "let error = vImageRotate90_ARGB8888(&srcBuffer, &destBuffer, factor, &color, vImage_Flags(0))", "key.parsed_scope.end": 216, "key.parsed_scope.start": 216, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 152, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 8166, "key.offset": 8162, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 223, "key.parsed_scope.start": 223, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$syySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 8322, "key.offset": 8318, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 229, "key.parsed_scope.start": 229, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 8390, "key.offset": 8386, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 230, "key.parsed_scope.start": 230, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03dstdE0L_AFvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 285, "key.name": "status", "key.namelength": 6, "key.nameoffset": 8427, "key.offset": 8423, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(nil, destWidth, destHeight,", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, UInt8) -> CVBuffer?", "key.typeusr": "$s_6factorSo11CVBufferRefaSgAC_s5UInt8VtcD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/MLFeatureProvider+Helpers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 484, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/CoreMLHelpers/MLMultiArray+Image.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1347, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>class MLMultiArray : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1122}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1098}], "key.bodylength": 192, "key.bodyoffset": 1153, "key.doc.column": 12, "key.doc.declaration": "class MLMultiArray : NSObject", "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.4.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.4.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h\" line=\"28\" column=\"12\"><Name>MLMultiArray</Name><USR>c:objc(cs)MLMultiArray</USR><Declaration>class MLMultiArray : NSObject</Declaration><Abstract><Para> Multidimensional Array</Para></Abstract><Availability distribution=\"tvOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"watchOS\"><IntroducedInVersion>4.0</IntroducedInVersion></Availability><Availability distribution=\"iOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"macOS\"><IntroducedInVersion>10.13</IntroducedInVersion></Availability></Other>", "key.doc.line": 28, "key.doc.name": "MLMultiArray", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.4.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MLMultiArray</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 217, "key.modulename": "CoreML.MLMultiArray", "key.name": "MLMultiArray", "key.namelength": 12, "key.nameoffset": 1139, "key.offset": 1129, "key.parsed_declaration": "public extension MLMultiArray", "key.parsed_scope.end": 32, "key.parsed_scope.start": 25, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func image&lt;T&gt;(offset: <Type usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</Type>, scale: <Type usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>? where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.bodylength": 70, "key.bodyoffset": 1273, "key.doc.column": 8, "key.doc.comment": "Converts the multi-array to a UIImage.", "key.doc.declaration": "func image<T>(offset: T, scale: T) -> UIImage? where T : MultiArrayType", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MLMultiArray+Image.swift\" line=\"29\" column=\"8\"><Name>image(offset:scale:)</Name><USR>s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF</USR><Declaration>func image&lt;T&gt;(offset: T, scale: T) -&gt; UIImage? where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Converts the multi-array to a UIImage.</Para></Abstract></CommentParts></Function>", "key.doc.line": 29, "key.doc.name": "image(offset:scale:)", "key.doc.type": "Function", "key.doclength": 50, "key.docoffset": 1156, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>&lt;<decl.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 135, "key.name": "image(offset:scale:)", "key.namelength": 45, "key.nameoffset": 1214, "key.offset": 1209, "key.parsed_declaration": "func image<T: MultiArrayType>(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1223}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 1220, "key.offset": 1220, "key.parsed_declaration": "func image<T: MultiArrayType>(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp"}], "key.typename": "<T where T : MultiArrayType> (MLMultiArray) -> (T, T) -> UIImage?", "key.typeusr": "$s6offset5scaleSo7UIImageCSgx_xtc13CoreMLHelpers14MultiArrayTypeRzluD", "key.usr": "s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF"}], "key.typename": "MLMultiArray.Type", "key.typeusr": "$sSo12MLMultiArrayCmD", "key.usr": "c:objc(cs)MLMultiArray"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1231, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clamp&lt;T&gt;(_ x: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, min: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, max: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1098}], "key.bodylength": 68, "key.bodyoffset": 1161, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_requirement></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 125, "key.name": "clamp(_:min:max:)", "key.namelength": 44, "key.nameoffset": 1110, "key.offset": 1105, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 28, "key.parsed_scope.start": 24, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1119}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 13, "key.name": "T", "key.namelength": 1, "key.nameoffset": 1116, "key.offset": 1116, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp"}], "key.typename": "<T where T : Comparable> (T, min: T, max: T) -> T", "key.typeusr": "$s_3min3maxxx_xxtcSLRzluD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10570, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol MultiArrayType : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1122}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1098}], "key.bodylength": 199, "key.bodyoffset": 1166, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1154}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MultiArrayType</decl.name> : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 237, "key.name": "MultiArrayType", "key.namelength": 14, "key.nameoffset": 1138, "key.offset": 1129, "key.parsed_declaration": "public protocol MultiArrayType: Comparable", "key.parsed_scope.end": 31, "key.parsed_scope.start": 25, "key.runtime_name": "_TtP4main14MultiArrayType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1222, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1180, "key.offset": 1169, "key.parsed_declaration": "static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$sSo20MLMultiArrayDataTypeVD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func + (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "+(_:_:)", "key.namelength": 23, "key.nameoffset": 1243, "key.offset": 1231, "key.parsed_declaration": "static func +(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1poiyA2B_ABtFZ\">+ (_: CMTime, _: CMTime) -&gt; CMTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyxx_0C5ValueQztFZ\">+ (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyx0C5ValueQz_xtFZ\">+ (_: Self.RawValue, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1poiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "*(_:_:)", "key.namelength": 23, "key.nameoffset": 1289, "key.offset": 1277, "key.parsed_declaration": "static func *(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 12, "key.name": "init(_:)", "key.namelength": 12, "key.nameoffset": 1323, "key.offset": 1323, "key.parsed_declaration": "init(_: Int)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Int) -> Self", "key.typeusr": "$syxSicD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypePyxSicfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1358, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1342, "key.offset": 1338, "key.parsed_declaration": "var toUInt8: UInt8", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "UInt8", "key.typeusr": "$ss5UInt8VD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.typename": "MultiArrayType.Protocol", "key.typeusr": "$s13CoreMLHelpers14MultiArrayType_pmD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2029}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2005}], "key.bodylength": 3477, "key.bodyoffset": 2074, "key.doc.column": 15, "key.doc.comment": "Wrapper around MLMultiArray to make it more Swifty.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"55\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 55, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.doclength": 59, "key.docoffset": 1945, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 3516, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 2043, "key.offset": 2036, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 170, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 2057}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 2054, "key.offset": 2054, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2077}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "array", "key.namelength": 5, "key.nameoffset": 2088, "key.offset": 2084, "key.parsed_declaration": "public let array: MLMultiArray", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5arraySo07MLMultiD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let pointer: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2110}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "pointer", "key.namelength": 7, "key.nameoffset": 2121, "key.offset": 2117, "key.parsed_declaration": "public let pointer: UnsafeMutablePointer<T>", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "UnsafeMutablePointer<T>", "key.typeusr": "$sSpyxGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7pointerSpyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var strides: [<Type usr=\"s:Si\">Int</Type>] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2170}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2157}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>strides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "strides", "key.namelength": 7, "key.nameoffset": 2181, "key.offset": 2177, "key.parsed_declaration": "private(set) public var strides: [Int]", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7stridesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var shape: [<Type usr=\"s:Si\">Int</Type>] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2211}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2198}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "shape", "key.namelength": 5, "key.nameoffset": 2222, "key.offset": 2218, "key.parsed_declaration": "private(set) public var shape: [Int]", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2301}], "key.bodylength": 165, "key.bodyoffset": 2328, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array filled with all zeros.", "key.doc.declaration": "public init(shape: [Int])", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"65\" column=\"10\"><Name>init(shape:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc</USR><Declaration>public init(shape: [Int])</Declaration><CommentParts><Abstract><Para>Creates a new multi-array filled with all zeros.</Para></Abstract></CommentParts></Function>", "key.doc.line": 65, "key.doc.name": "init(shape:)", "key.doc.type": "Function", "key.doclength": 60, "key.docoffset": 2238, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(shape:)", "key.namelength": 18, "key.nameoffset": 2308, "key.offset": 2308, "key.parsed_declaration": "public init(shape: [Int])", "key.parsed_scope.end": 69, "key.parsed_scope.start": 65, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let m: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>m</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 85, "key.name": "m", "key.namelength": 1, "key.nameoffset": 2337, "key.offset": 2333, "key.parsed_declaration": "let m = try! MLMultiArray(shape: shape as [NSNumber], dataType: T.multiArrayDataType)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc1mL_So07MLMultiD0Cvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$s5shape13CoreMLHelpers10MultiArrayVyxGSaySiG_tcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>], initial: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2576}], "key.bodylength": 89, "key.bodyoffset": 2615, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array initialized with the specified value.", "key.doc.declaration": "public init(shape: [Int], initial: T)", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"74\" column=\"10\"><Name>init(shape:initial:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc</USR><Declaration>public init(shape: [Int], initial: T)</Declaration><CommentParts><Abstract><Para>Creates a new multi-array initialized with the specified value.</Para></Abstract></CommentParts></Function>", "key.doc.line": 74, "key.doc.name": "init(shape:initial:)", "key.doc.type": "Function", "key.doclength": 75, "key.docoffset": 2498, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initial</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init(shape:initial:)", "key.namelength": 30, "key.nameoffset": 2583, "key.offset": 2583, "key.parsed_declaration": "public init(shape: [Int], initial: T)", "key.parsed_scope.end": 79, "key.parsed_scope.start": 74, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int], T) -> MultiArray<T>", "key.typeusr": "$s5shape7initial13CoreMLHelpers10MultiArrayVyxGSaySiG_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2782}], "key.bodylength": 72, "key.bodyoffset": 2818, "key.doc.column": 10, "key.doc.comment": "Creates a multi-array that wraps an existing MLMultiArray.", "key.doc.declaration": "public init(_ array: MLMultiArray)", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"84\" column=\"10\"><Name>init(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc</USR><Declaration>public init(_ array: MLMultiArray)</Declaration><CommentParts><Abstract><Para>Creates a multi-array that wraps an existing MLMultiArray.</Para></Abstract></CommentParts></Function>", "key.doc.line": 84, "key.doc.name": "init(_:)", "key.doc.type": "Function", "key.doclength": 70, "key.docoffset": 2709, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 102, "key.name": "init(_:)", "key.namelength": 27, "key.nameoffset": 2789, "key.offset": 2789, "key.parsed_declaration": "public init(_ array: MLMultiArray)", "key.parsed_scope.end": 86, "key.parsed_scope.start": 84, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> (MLMultiArray) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSo07MLMultiD0CcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3177}], "key.bodylength": 33, "key.bodyoffset": 3200, "key.doc.column": 14, "key.doc.comment": "Returns the number of elements in the entire array.", "key.doc.declaration": "public var count: Int { get }", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"98\" column=\"14\"><Name>count</Name><USR>s:13CoreMLHelpers10MultiArrayV5countSivp</USR><Declaration>public var count: Int { get }</Declaration><CommentParts><Abstract><Para>Returns the number of elements in the entire array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 98, "key.doc.name": "count", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 3111, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 50, "key.name": "count", "key.namelength": 5, "key.nameoffset": 3188, "key.offset": 3184, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 100, "key.parsed_scope.start": 98, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3238}], "key.bodylength": 67, "key.bodyoffset": 3269, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 92, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 3245, "key.offset": 3245, "key.parsed_declaration": "public subscript(a: Int) -> T", "key.parsed_scope.end": 105, "key.parsed_scope.start": 102, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int) -> T", "key.typeusr": "$syxSicD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSicip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3341}], "key.bodylength": 119, "key.bodyoffset": 3380, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 152, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 3348, "key.offset": 3348, "key.parsed_declaration": "public subscript(a: Int, b: Int) -> T", "key.parsed_scope.end": 110, "key.parsed_scope.start": 107, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int) -> T", "key.typeusr": "$syxSi_SitcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3504}], "key.bodylength": 149, "key.bodyoffset": 3551, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 190, "key.name": "subscript(_:_:_:)", "key.namelength": 33, "key.nameoffset": 3511, "key.offset": 3511, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int) -> T", "key.parsed_scope.end": 115, "key.parsed_scope.start": 112, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int) -> T", "key.typeusr": "$syxSi_S2itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3705}], "key.bodylength": 179, "key.bodyoffset": 3760, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 228, "key.name": "subscript(_:_:_:_:)", "key.namelength": 41, "key.nameoffset": 3712, "key.offset": 3712, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int) -> T", "key.parsed_scope.end": 120, "key.parsed_scope.start": 117, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int) -> T", "key.typeusr": "$syxSi_S3itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>, e: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3944}], "key.bodylength": 209, "key.bodyoffset": 4007, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>e</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 266, "key.name": "subscript(_:_:_:_:_:)", "key.namelength": 49, "key.nameoffset": 3951, "key.offset": 3951, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int, e: Int) -> T", "key.parsed_scope.end": 125, "key.parsed_scope.start": 122, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int, Int) -> T", "key.typeusr": "$syxSi_S4itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(indices: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4221}], "key.bodylength": 105, "key.bodyoffset": 4260, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 138, "key.name": "subscript(_:)", "key.namelength": 25, "key.nameoffset": 4228, "key.offset": 4228, "key.parsed_declaration": "public subscript(indices: [Int]) -> T", "key.parsed_scope.end": 130, "key.parsed_scope.start": 127, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> ([Int]) -> T", "key.typeusr": "$syxSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSaySiGcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func transposed(_ order: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4686}], "key.bodylength": 268, "key.bodyoffset": 4740, "key.doc.column": 15, "key.doc.comment": "Returns a transposed version of this array. NOTE: The new array still uses\nthe same underlying storage (the same MLMultiArray object).", "key.doc.declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"144\" column=\"15\"><Name>transposed(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF</USR><Declaration>public func transposed(_ order: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Returns a transposed version of this array. NOTE: The new array still uses the same underlying storage (the same MLMultiArray object).</Para></Abstract></CommentParts></Function>", "key.doc.line": 144, "key.doc.name": "transposed(_:)", "key.doc.type": "Function", "key.doclength": 149, "key.docoffset": 4534, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>order</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 316, "key.name": "transposed(_:)", "key.namelength": 26, "key.nameoffset": 4698, "key.offset": 4693, "key.parsed_declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.parsed_scope.end": 153, "key.parsed_scope.start": 144, "key.substructure": [{"key.annotated_decl": "<Declaration>var newShape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newShape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "newShape", "key.namelength": 8, "key.nameoffset": 4796, "key.offset": 4792, "key.parsed_declaration": "var newShape = shape", "key.parsed_scope.end": 146, "key.parsed_scope.start": 146, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF8newShapeL_AFvp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 4821, "key.offset": 4817, "key.parsed_declaration": "var newStrides = strides", "key.parsed_scope.end": 147, "key.parsed_scope.start": 147, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func reshaped(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5077}], "key.bodylength": 415, "key.bodyoffset": 5134, "key.doc.column": 15, "key.doc.comment": "Changes the number of dimensions and their sizes.", "key.doc.declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"158\" column=\"15\"><Name>reshaped(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF</USR><Declaration>public func reshaped(_ dimensions: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Changes the number of dimensions and their sizes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 158, "key.doc.name": "reshaped(_:)", "key.doc.type": "Function", "key.doclength": 61, "key.docoffset": 5013, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 466, "key.name": "reshaped(_:)", "key.namelength": 29, "key.nameoffset": 5089, "key.offset": 5084, "key.parsed_declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.parsed_scope.end": 169, "key.parsed_scope.start": 158, "key.substructure": [{"key.annotated_decl": "<Declaration>let newCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "newCount", "key.namelength": 8, "key.nameoffset": 5143, "key.offset": 5139, "key.parsed_declaration": "let newCount = dimensions.reduce(1, *)", "key.parsed_scope.end": 159, "key.parsed_scope.start": 159, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF8newCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 5267, "key.offset": 5263, "key.parsed_declaration": "var newStrides = [Int](repeating: 0, count: dimensions.count)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$s13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6862}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 6838}], "key.bodylength": 3677, "key.bodyoffset": 6891, "key.doc.column": 15, "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"55\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 55, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 3700, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 6879, "key.offset": 6869, "key.parsed_declaration": "public extension MultiArray", "key.parsed_scope.end": 329, "key.parsed_scope.start": 218, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func image(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.bodylength": 348, "key.bodyoffset": 7320, "key.doc.column": 8, "key.doc.comment": "Converts the multi-array to a UIImage.\n\nUse the `offset` and `scale` parameters to put the values from the array in\nthe range [0, 255]. The offset is added first, then the result is multiplied\nby the scale.\n\nFor example: if the range of the data is [0, 1), use `offset: 0` and\n`scale: 255`. If the range is [-1, 1], use `offset: 1` and `scale: 127.5`.", "key.doc.declaration": "func image(offset: T, scale: T) -> UIImage?", "key.doc.discussion": [{"Para": "Use the `offset` and `scale` parameters to put the values from the array in the range [0, 255]. The offset is added first, then the result is multiplied by the scale."}, {"Para": "For example: if the range of the data is [0, 1), use `offset: 0` and `scale: 255`. If the range is [-1, 1], use `offset: 1` and `scale: 127.5`."}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"229\" column=\"8\"><Name>image(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF</USR><Declaration>func image(offset: T, scale: T) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Converts the multi-array to a UIImage.</Para></Abstract><Discussion><Para>Use the <codeVoice>offset</codeVoice> and <codeVoice>scale</codeVoice> parameters to put the values from the array in the range [0, 255]. The offset is added first, then the result is multiplied by the scale.</Para><Para>For example: if the range of the data is [0, 1), use <codeVoice>offset: 0</codeVoice> and <codeVoice>scale: 255</codeVoice>. If the range is [-1, 1], use <codeVoice>offset: 1</codeVoice> and <codeVoice>scale: 127.5</codeVoice>.</Para></Discussion></CommentParts></Function>", "key.doc.line": 229, "key.doc.name": "image(offset:scale:)", "key.doc.type": "Function", "key.doclength": 378, "key.docoffset": 6894, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 394, "key.name": "image(offset:scale:)", "key.namelength": 26, "key.nameoffset": 7280, "key.offset": 7275, "key.parsed_declaration": "func image(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 237, "key.parsed_scope.start": 229, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF\">image(channel:offset:scale:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> UIImage?", "key.typeusr": "$s6offset5scaleSo7UIImageCSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func toRawBytesRGBA(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; (bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)?</Declaration>", "key.bodylength": 903, "key.bodyoffset": 8004, "key.doc.column": 8, "key.doc.comment": "Converts the multi-array into an array of RGBA pixels.\n\n- Note: The multi-array must have shape (3, height, width). If your array\n  has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "func toRawBytesRGBA(offset: T, scale: T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"245\" column=\"8\"><Name>toRawBytesRGBA(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF</USR><Declaration>func toRawBytesRGBA(offset: T, scale: T) -&gt; (bytes: [UInt8], width: Int, height: Int)?</Declaration><CommentParts><Abstract><Para>Converts the multi-array into an array of RGBA pixels.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (3, height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 245, "key.doc.name": "toRawBytesRGBA(offset:scale:)", "key.doc.type": "Function", "key.doclength": 212, "key.docoffset": 7673, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toRawBytesRGBA</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>bytes</tuple.element.argument_label>: <tuple.element.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>width</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>height</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1020, "key.name": "toRawBytesRGBA(offset:scale:)", "key.namelength": 35, "key.nameoffset": 7893, "key.offset": 7888, "key.parsed_declaration": "func toRawBytesRGBA(offset: T, scale: T)\n                          -> (bytes: [UInt8], width: Int, height: Int)?", "key.parsed_scope.end": 274, "key.parsed_scope.start": 245, "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 8271, "key.offset": 8267, "key.parsed_declaration": "let height = shape[1]", "key.parsed_scope.end": 256, "key.parsed_scope.start": 256, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFALL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 8297, "key.offset": 8293, "key.parsed_declaration": "let width = shape[2]", "key.parsed_scope.end": 257, "key.parsed_scope.start": 257, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAKL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 60, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 8322, "key.offset": 8318, "key.parsed_declaration": "var bytes = [UInt8](repeating: 0, count: height * width * 4)", "key.parsed_scope.end": 258, "key.parsed_scope.start": 258, "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAJL_AIvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.typeusr": "$s6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func toRawBytesGray(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; (bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)?</Declaration>", "key.bodylength": 497, "key.bodyoffset": 9245, "key.doc.column": 8, "key.doc.comment": "Converts the multi-array into an array of grayscale pixels.\n\n- Note: The multi-array must have shape (height, width). If your array\n  has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "func toRawBytesGray(offset: T, scale: T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"282\" column=\"8\"><Name>toRawBytesGray(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF</USR><Declaration>func toRawBytesGray(offset: T, scale: T) -&gt; (bytes: [UInt8], width: Int, height: Int)?</Declaration><CommentParts><Abstract><Para>Converts the multi-array into an array of grayscale pixels.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 282, "key.doc.name": "toRawBytesGray(offset:scale:)", "key.doc.type": "Function", "key.doclength": 214, "key.docoffset": 8912, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toRawBytesGray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>bytes</tuple.element.argument_label>: <tuple.element.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>width</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>height</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 614, "key.name": "toRawBytesGray(offset:scale:)", "key.namelength": 35, "key.nameoffset": 9134, "key.offset": 9129, "key.parsed_declaration": "func toRawBytesGray(offset: T, scale: T)\n                          -> (bytes: [UInt8], width: Int, height: Int)?", "key.parsed_scope.end": 301, "key.parsed_scope.start": 282, "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 9382, "key.offset": 9378, "key.parsed_declaration": "let height = shape[0]", "key.parsed_scope.end": 289, "key.parsed_scope.start": 289, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFALL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 9408, "key.offset": 9404, "key.parsed_declaration": "let width = shape[1]", "key.parsed_scope.end": 290, "key.parsed_scope.start": 290, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAKL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 56, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 9433, "key.offset": 9429, "key.parsed_declaration": "var bytes = [UInt8](repeating: 0, count: height * width)", "key.parsed_scope.end": 291, "key.parsed_scope.start": 291, "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAJL_AIvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.typeusr": "$s6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func image(channel: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.bodylength": 522, "key.bodyoffset": 10044, "key.doc.column": 8, "key.doc.comment": "Converts a single channel from the multi-array to a grayscale UIImage.\n\n- Note: The multi-array must have shape (channels, height, width). If your\n  array has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "func image(channel: Int, offset: T, scale: T) -> UIImage?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift\" line=\"309\" column=\"8\"><Name>image(channel:offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF</USR><Declaration>func image(channel: Int, offset: T, scale: T) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Converts a single channel from the multi-array to a grayscale UIImage.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (channels, height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 309, "key.doc.name": "image(channel:offset:scale:)", "key.doc.type": "Function", "key.doclength": 235, "key.docoffset": 9747, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>channel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 582, "key.name": "image(channel:offset:scale:)", "key.namelength": 40, "key.nameoffset": 9990, "key.offset": 9985, "key.parsed_declaration": "func image(channel: Int, offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 328, "key.parsed_scope.start": 309, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF\">image(offset:scale:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 10317, "key.offset": 10313, "key.parsed_declaration": "let height = shape[1]", "key.parsed_scope.end": 319, "key.parsed_scope.start": 319, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF6heightL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 10343, "key.offset": 10339, "key.parsed_declaration": "let width = shape[2]", "key.parsed_scope.end": 320, "key.parsed_scope.start": 320, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF5widthL_Sivp"}, {"key.annotated_decl": "<Declaration>var a: <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type>&lt;T&gt;</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>a</decl.name>: <decl.var.type><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct>&lt;T&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 45, "key.name": "a", "key.namelength": 1, "key.nameoffset": 10368, "key.offset": 10364, "key.parsed_declaration": "var a = MultiArray<T>(shape: [height, width])", "key.parsed_scope.end": 321, "key.parsed_scope.start": 321, "key.typename": "MultiArray<T>", "key.typeusr": "$s13CoreMLHelpers10MultiArrayVyxGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF1aL_ACyxGvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (Int, T, T) -> UIImage?", "key.typeusr": "$s7channel6offset5scaleSo7UIImageCSgSi_xxtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$s13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6788, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func IOU(_ a: <Type usr=\"c:@S@CGRect\">CGRect</Type>, _ b: <Type usr=\"c:@S@CGRect\">CGRect</Type>) -&gt; <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1176}], "key.bodylength": 518, "key.bodyoffset": 1228, "key.doc.column": 13, "key.doc.comment": "Computes intersection-over-union overlap between two bounding boxes.", "key.doc.declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"27\" column=\"13\"><Name>IOU(_:_:)</Name><USR>s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF</USR><Declaration>public func IOU(_ a: CGRect, _ b: CGRect) -&gt; Float</Declaration><CommentParts><Abstract><Para>Computes intersection-over-union overlap between two bounding boxes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 27, "key.doc.name": "IOU(_:_:)", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 1098, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>IOU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 564, "key.name": "IOU(_:_:)", "key.namelength": 29, "key.nameoffset": 1188, "key.offset": 1183, "key.parsed_declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.parsed_scope.end": 42, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let areaA: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaA</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaA", "key.namelength": 5, "key.nameoffset": 1235, "key.offset": 1231, "key.parsed_declaration": "let areaA = a.width * a.height", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaAL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let areaB: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaB</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaB", "key.namelength": 5, "key.nameoffset": 1298, "key.offset": 1294, "key.parsed_declaration": "let areaB = b.width * b.height", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaBL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinX", "key.namelength": 16, "key.nameoffset": 1361, "key.offset": 1357, "key.parsed_declaration": "let intersectionMinX = max(a.minX, b.minX)", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinY", "key.namelength": 16, "key.nameoffset": 1406, "key.offset": 1402, "key.parsed_declaration": "let intersectionMinY = max(a.minY, b.minY)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxX", "key.namelength": 16, "key.nameoffset": 1451, "key.offset": 1447, "key.parsed_declaration": "let intersectionMaxX = min(a.maxX, b.maxX)", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxY", "key.namelength": 16, "key.nameoffset": 1496, "key.offset": 1492, "key.parsed_declaration": "let intersectionMaxY = min(a.maxY, b.maxY)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionArea: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionArea</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 137, "key.name": "intersectionArea", "key.namelength": 16, "key.nameoffset": 1541, "key.offset": 1537, "key.parsed_declaration": "let intersectionArea = max(intersectionMaxY - intersectionMinY, 0) *", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionAreaL_0A8Graphics7CGFloatVvp"}], "key.typename": "(CGRect, CGRect) -> Float", "key.typeusr": "$sySfSo6CGRectV_ABtcD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias NMSPrediction = (classIndex: <Type usr=\"s:Si\">Int</Type>, score: <Type usr=\"s:Sf\">Float</Type>, rect: <Type usr=\"c:@S@CGRect\">CGRect</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1749}], "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>NMSPrediction</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>classIndex</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>score</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>rect</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 71, "key.name": "NMSPrediction", "key.namelength": 13, "key.nameoffset": 1766, "key.offset": 1756, "key.parsed_declaration": "public typealias NMSPrediction = (classIndex: Int, score: Float, rect: CGRect)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "(classIndex: Int, score: Float, rect: CGRect).Type", "key.typeusr": "$sSi10classIndex_Sf5scoreSo6CGRectV4recttmD", "key.usr": "s:13CoreMLHelpers13NMSPredictiona"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1928}], "key.bodylength": 220, "key.bodyoffset": 2034, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"50\" column=\"13\"><Name>nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract></CommentParts></Function>", "key.doc.line": 50, "key.doc.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1829, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 320, "key.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.namelength": 83, "key.nameoffset": 1940, "key.offset": 1935, "key.parsed_declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.parsed_scope.end": 55, "key.parsed_scope.start": 50, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF\">nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], Float, Int) -> [Int]", "key.typeusr": "$s11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], indices: [<Type usr=\"s:Si\">Int</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3067}], "key.bodylength": 1015, "key.bodyoffset": 3279, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.\n\nBased on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc\n\n- Note: This version of NMS ignores the class of the bounding boxes. Since it\n  selects the bounding boxes in a greedy fashion, if a certain class has many\n  boxes that are selected, then it is possible none of the boxes of the other\n  classes get selected.\n\n- Parameters:\n  - predictions: an array of bounding boxes and their scores\n  - indices: which predictions to look at\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxBoxes: the maximum number of boxes that will be selected\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.discussion": [{"Para": "Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc"}, {"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"76\" column=\"13\"><Name>nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract><Parameters><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>indices</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>which predictions to look at</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxBoxes</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc</Para><Note><Para>This version of NMS ignores the class of the bounding boxes. Since it selects the bounding boxes in a greedy fashion, if a certain class has many boxes that are selected, then it is possible none of the boxes of the other classes get selected.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 76, "key.doc.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.doc.parameters": [{"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "which predictions to look at"}], "name": "indices"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected"}], "name": "maxBoxes"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 809, "key.docoffset": 2257, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>indices</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1221, "key.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.namelength": 189, "key.nameoffset": 3079, "key.offset": 3074, "key.parsed_declaration": "public func nonMaxSuppression(predictions: [NMSPrediction],\n                              indices: [Int],\n                              iouThreshold: Float,\n                              maxBoxes: Int) -> [Int]", "key.parsed_scope.end": 112, "key.parsed_scope.start": 76, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF\">nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let sortedIndices: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedIndices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "sortedIndices", "key.namelength": 13, "key.nameoffset": 3359, "key.offset": 3355, "key.parsed_declaration": "let sortedIndices = indices.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF13sortedIndicesL_AGvp"}, {"key.annotated_decl": "<Declaration>var selected: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selected</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "selected", "key.namelength": 8, "key.nameoffset": 3447, "key.offset": 3443, "key.parsed_declaration": "var selected: [Int] = []", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF8selectedL_AGvp"}], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], [Int], Float, Int) -> [Int]", "key.typeusr": "$s11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AESfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppressionMultiClass(numClasses: <Type usr=\"s:Si\">Int</Type>, predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], scoreThreshold: <Type usr=\"s:Sf\">Float</Type>, iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxPerClass: <Type usr=\"s:Si\">Int</Type>, maxTotal: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5311}], "key.bodylength": 1101, "key.bodyoffset": 5685, "key.doc.column": 13, "key.doc.comment": "Multi-class version of non maximum suppression.\n\nWhere `nonMaxSuppression()` does not look at the class of the predictions at\nall, the multi-class version first selects the best bounding boxes for each\nclass, and then keeps the best ones of those.\n\nWith this method you can usually expect to see at least one bounding box for\neach class (unless all the scores for a given class are really low).\n\nBased on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py\n\n- Parameters:\n  - numClasses: the number of classes\n  - predictions: an array of bounding boxes and their scores\n  - scoreThreshold: used to only keep bounding boxes with a high enough score\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxPerClass: the maximum number of boxes that will be selected per class\n  - maxTotal: maximum number of boxes that will be selected over all classes\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -> [Int]", "key.doc.discussion": [{"Para": "Where `nonMaxSuppression()` does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those."}, {"Para": "With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low)."}, {"Para": "Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py"}], "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"136\" column=\"13\"><Name>nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)</Name><USR>s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF</USR><Declaration>public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Multi-class version of non maximum suppression.</Para></Abstract><Parameters><Parameter><Name>numClasses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the number of classes</Para></Discussion></Parameter><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>scoreThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to only keep bounding boxes with a high enough score</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxPerClass</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected per class</Para></Discussion></Parameter><Parameter><Name>maxTotal</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>maximum number of boxes that will be selected over all classes</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Where <codeVoice>nonMaxSuppression()</codeVoice> does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those.</Para><Para>With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low).</Para><Para>Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py</Para></Discussion></CommentParts></Function>", "key.doc.line": 136, "key.doc.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.doc.parameters": [{"discussion": [{"Para": "the number of classes"}], "name": "numClasses"}, {"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "used to only keep bounding boxes with a high enough score"}], "name": "scoreThreshold"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected per class"}], "name": "maxPerClass"}, {"discussion": [{"Para": "maximum number of boxes that will be selected over all classes"}], "name": "maxTotal"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 1013, "key.docoffset": 4297, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppressionMultiClass</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>numClasses</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scoreThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxPerClass</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxTotal</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1469, "key.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.namelength": 351, "key.nameoffset": 5323, "key.offset": 5318, "key.parsed_declaration": "public func nonMaxSuppressionMultiClass(numClasses: Int,\n                                        predictions: [NMSPrediction],\n                                        scoreThreshold: Float,\n                                        iouThreshold: Float,\n                                        maxPerClass: Int,\n                                        maxTotal: Int) -> [Int]", "key.parsed_scope.end": 173, "key.parsed_scope.start": 136, "key.substructure": [{"key.annotated_decl": "<Declaration>var selectedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selectedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 29, "key.name": "selectedBoxes", "key.namelength": 13, "key.nameoffset": 5692, "key.offset": 5688, "key.parsed_declaration": "var selectedBoxes: [Int] = []", "key.parsed_scope.end": 142, "key.parsed_scope.start": 142, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF13selectedBoxesL_AIvp"}, {"key.annotated_decl": "<Declaration>let sortedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 88, "key.name": "sortedBoxes", "key.namelength": 11, "key.nameoffset": 6656, "key.offset": 6652, "key.parsed_declaration": "let sortedBoxes = selectedBoxes.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 171, "key.parsed_scope.start": 171, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF11sortedBoxesL_AIvp"}], "key.typename": "(Int, [(classIndex: Int, score: Float, rect: CGRect)], Float, Float, Int, Int) -> [Int]", "key.typeusr": "$s10numClasses11predictions14scoreThreshold03iouE011maxPerClass0G5TotalSaySiGSi_SaySi10classIndex_Sf0D0So6CGRectV4recttGS2fS2itcD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1924, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ prob: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:Sd\">Double</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1230}], "key.bodylength": 174, "key.bodyoffset": 1305, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Core ML classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "public func top(_ k: Int, _ prob: [String : Double]) -> [(String, Double)]", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift\" line=\"29\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF</USR><Declaration>public func top(_ k: Int, _ prob: [String : Double]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Core ML classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 29, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 117, "key.docoffset": 1112, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>prob</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 243, "key.name": "top(_:_:)", "key.namelength": 39, "key.nameoffset": 1242, "key.offset": 1237, "key.parsed_declaration": "public func top(_ k: Int, _ prob: [String: Double]) -> [(String, Double)]", "key.parsed_scope.end": 33, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF\">top(_: Int, _: [VNClassificationObservation]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [String : Double]) -> [(String, Double)]", "key.typeusr": "$sySaySS_SdtGSi_SDySSSdGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ observations: [<Type usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1623}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1599}], "key.bodylength": 203, "key.bodyoffset": 1719, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Vision classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.doc.file": "/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift\" line=\"40\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF</USR><Declaration>@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Vision classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 116, "key.docoffset": 1482, "key.filepath": "/Users/vagrant/git/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>observations</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 293, "key.name": "top(_:_:)", "key.namelength": 60, "key.nameoffset": 1635, "key.offset": 1630, "key.parsed_declaration": "public func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.parsed_scope.end": 44, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF\">top(_: Int, _: [String : Double]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [VNClassificationObservation]) -> [(String, Double)]", "key.typeusr": "$sySaySS_SdtGSi_SaySo27VNClassificationObservationCGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF"}]}}, {"/Users/vagrant/git/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5088, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/CoreMLHelpers/UIImage+Extensions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1714, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/CoreMLHelpers/UIImage+RawBytes.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2581, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11519, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 318}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 227}], "key.bodylength": 201, "key.bodyoffset": 353, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"15\" column=\"17\"><Name>ReadModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "ReadModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 195, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadModelProvider</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 230, "key.name": "ReadModelProvider", "key.namelength": 17, "key.nameoffset": 334, "key.offset": 325, "key.parsed_declaration": "public protocol ReadModelProvider", "key.parsed_scope.end": 23, "key.parsed_scope.start": 15, "key.runtime_name": "FritzReadModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 398, "key.doc.column": 7, "key.doc.comment": "A read model", "key.doc.declaration": "var model: MLModel { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"18\" column=\"7\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model</USR><Declaration>var model: MLModel { get }</Declaration><CommentParts><Abstract><Para>A read model</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 17, "key.docoffset": 359, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "model", "key.namelength": 5, "key.nameoffset": 382, "key.offset": 378, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: <Type usr=\"s:10Foundation3URLV\">URL</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 497}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 465}], "key.bodylength": 5, "key.bodyoffset": 547, "key.doc.column": 23, "key.doc.comment": "The url of the compiled model url in the bundle.", "key.doc.declaration": "@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: URL { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"22\" column=\"23\"><Name>urlOfModelInThisBundle</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle</USR><Declaration>@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: URL { get }</Declaration><CommentParts><Abstract><Para>The url of the compiled model url in the bundle.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "urlOfModelInThisBundle", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 410, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(urlOfModelInThisBundle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>urlOfModelInThisBundle</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "urlOfModelInThisBundle", "key.namelength": 22, "key.nameoffset": 517, "key.offset": 506, "key.parsed_declaration": "optional static var urlOfModelInThisBundle : URL", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "URL", "key.typeusr": "$s10Foundation3URLVD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle"}], "key.typename": "ReadModelProvider.Protocol", "key.typeusr": "$s17FritzManagedModel04ReadC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 685}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 624}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 624}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 624}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 624}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 589}], "key.bodylength": 62, "key.bodyoffset": 744, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"28\" column=\"17\"><Name>ReadWriteModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 28, "key.doc.name": "ReadWriteModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 557, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 725}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadWriteModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadWriteModelProvider</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 115, "key.name": "ReadWriteModelProvider", "key.namelength": 22, "key.nameoffset": 701, "key.offset": 692, "key.parsed_declaration": "public protocol ReadWriteModelProvider: ReadModelProvider", "key.parsed_scope.end": 32, "key.parsed_scope.start": 28, "key.runtime_name": "FritzReadWriteModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 795, "key.doc.column": 7, "key.doc.comment": "A read-write model", "key.doc.declaration": "var model: MLModel { get set }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"31\" column=\"7\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model</USR><Declaration>var model: MLModel { get set }</Declaration><CommentParts><Abstract><Para>A read-write model</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 750, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "model", "key.namelength": 5, "key.nameoffset": 779, "key.offset": 775, "key.overrides": [{"key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}], "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model"}], "key.typename": "ReadWriteModelProvider.Protocol", "key.typeusr": "$s17FritzManagedModel09ReadWriteC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - Base", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 812}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1287}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1226}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1226}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1226}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1226}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1194}], "key.bodylength": 1550, "key.bodyoffset": 1350, "key.doc.column": 17, "key.doc.comment": "This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.\n\n- SeeAlso:\n`SwiftIdentifiedModel`\n`ObjcIdentifiedModel`\n\n- Note: You should not conform your generated class to this protocol directly, instead conform to either `SwiftIdentifiedModel` when using Swift, or `ObjcIdentifiedModel` when using Objective-C.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"47\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 47, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.doclength": 367, "key.docoffset": 826, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1324}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1331}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : AnyObject, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}, {"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 1607, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 1303, "key.offset": 1294, "key.parsed_declaration": "public protocol BaseIdentifiedModel: class, ReadModelProvider", "key.parsed_scope.end": 84, "key.parsed_scope.start": 47, "key.runtime_name": "FritzBaseIdentifiedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1495}], "key.bodylength": 5, "key.bodyoffset": 1561, "key.doc.column": 14, "key.doc.comment": "The Fritz model identifier that matches this class.\n\n- Note: You should copy this identifier from the Fritz dashboard", "key.doc.declaration": "@objc(fritzModelIdentifier) static var modelIdentifier: String { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"55\" column=\"14\"><Name>modelIdentifier</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier</USR><Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>The Fritz model identifier that matches this class.</Para></Abstract><Discussion><Note><Para>You should copy this identifier from the Fritz dashboard</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 136, "key.docoffset": 1356, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzModelIdentifier)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 1536, "key.offset": 1525, "key.parsed_declaration": "static var modelIdentifier: String", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 2164}], "key.bodylength": 5, "key.bodyoffset": 2237, "key.doc.column": 14, "key.doc.comment": "This is the version of the model that is packaged with your application at submission time.\n\n- Note: As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.", "key.doc.declaration": "@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"63\" column=\"14\"><Name>packagedModelVersion</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion</USR><Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>This is the version of the model that is packaged with your application at submission time.</Para></Abstract><Discussion><Note><Para>As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 588, "key.docoffset": 1573, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzPackagedModelVersion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 44, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 2210, "key.offset": 2199, "key.parsed_declaration": "static var packagedModelVersion: Int", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2346}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 2317}], "key.bodylength": 5, "key.bodyoffset": 2391, "key.doc.column": 23, "key.doc.comment": "Signifies whether or not the model is encrypted.", "key.doc.declaration": "@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"70\" column=\"23\"><Name>encryptionSeed</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed</USR><Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }</Declaration><CommentParts><Abstract><Para>Signifies whether or not the model is encrypted.</Para></Abstract></CommentParts></Other>", "key.doc.line": 70, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 65, "key.docoffset": 2249, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzEncryptionSeed)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 2366, "key.offset": 2355, "key.parsed_declaration": "optional static var encryptionSeed: [UInt8]", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzConfiguration) optional static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2561}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 2533}], "key.bodylength": 5, "key.bodyoffset": 2611, "key.doc.column": 23, "key.doc.comment": "A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.", "key.doc.declaration": "@objc(fritzConfiguration) optional static var configuration: Configuration { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"76\" column=\"23\"><Name>configuration</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration</USR><Declaration>@objc(fritzConfiguration) optional static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract></CommentParts></Other>", "key.doc.line": 76, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 127, "key.docoffset": 2403, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 2581, "key.offset": 2570, "key.parsed_declaration": "optional static var configuration: Configuration", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2839}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 2801}], "key.bodylength": 5, "key.bodyoffset": 2890, "key.doc.column": 23, "key.doc.comment": "Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.", "key.doc.declaration": "@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"82\" column=\"23\"><Name>wifiRequiredForDownload</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload</USR><Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }</Declaration><CommentParts><Abstract><Para>Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.</Para></Abstract></CommentParts></Other>", "key.doc.line": 82, "key.doc.name": "wifiRequiredForDownload", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 2623, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzWifiRequiredForDownload)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 48, "key.name": "wifiRequiredForDownload", "key.namelength": 23, "key.nameoffset": 2859, "key.offset": 2848, "key.parsed_declaration": "optional static var wifiRequiredForDownload: Bool", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE23wifiRequiredForDownloadSbvp\">wifiRequiredForDownload</RelatedName>"}], "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 13, "key.name": "MARK: - Swift", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4561}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4803}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4742}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4742}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4742}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4742}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 4709}], "key.bodylength": 0, "key.bodyoffset": 4886, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"139\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 139, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.doclength": 132, "key.docoffset": 4576, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 4841}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 4862}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}, {"key.name": "ReadWriteModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 77, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 4819, "key.offset": 4810, "key.parsed_declaration": "public protocol SwiftIdentifiedModel: BaseIdentifiedModel, ReadWriteModelProvider", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.runtime_name": "FritzSwiftIdentifiedModel", "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildModelURL(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7188}], "key.bodylength": 378, "key.bodyoffset": 7257, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildModelURL</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 441, "key.name": "buildModelURL(bundle:fileName:)", "key.namelength": 47, "key.nameoffset": 7200, "key.offset": 7195, "key.parsed_declaration": "public func buildModelURL(bundle: Bundle, fileName: String) -> URL?", "key.parsed_scope.end": 208, "key.parsed_scope.start": 200, "key.substructure": [{"key.annotated_decl": "<Declaration>var assetPath: <Type usr=\"s:10Foundation3URLV\">URL</Type>?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>assetPath</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 87, "key.name": "assetPath", "key.namelength": 9, "key.nameoffset": 7264, "key.offset": 7260, "key.parsed_declaration": "var assetPath = bundle.url(forResource: \"Models/\" + fileName, withExtension:\"mlmodelc\")", "key.parsed_scope.end": 201, "key.parsed_scope.start": 201, "key.typename": "URL?", "key.typeusr": "$s10Foundation3URLVSgD", "key.usr": "s:17FritzManagedModel05buildC3URL6bundle8fileName10Foundation0E0VSgSo8NSBundleC_SStF9assetPathL_AHvp"}], "key.typename": "(Bundle, String) -> URL?", "key.typeusr": "$s6bundle8fileName10Foundation3URLVSgSo8NSBundleC_SStcD", "key.usr": "s:17FritzManagedModel05buildC3URL6bundle8fileName10Foundation0E0VSgSo8NSBundleC_SStF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func modelForFileName(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7663}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 7639}], "key.bodylength": 87, "key.bodyoffset": 7738, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>modelForFileName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 156, "key.name": "modelForFileName(bundle:fileName:)", "key.namelength": 50, "key.nameoffset": 7675, "key.offset": 7670, "key.parsed_declaration": "public func modelForFileName(bundle: Bundle, fileName: String) -> MLModel", "key.parsed_scope.end": 214, "key.parsed_scope.start": 212, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel16modelForFileName6bundle04fileG04withSo7MLModelCSo8NSBundleC_SSSo0K13ConfigurationCtF\">modelForFileName(bundle:fileName:with:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Bundle, String) -> MLModel", "key.typeusr": "$s6bundle8fileNameSo7MLModelCSo8NSBundleC_SStcD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func modelForFileName(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>, with mlmodelConfiguration: <Type usr=\"c:objc(cs)MLModelConfiguration\">MLModelConfiguration</Type>) -&gt; <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7854}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 7830}], "key.bodylength": 124, "key.bodyoffset": 7978, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>modelForFileName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>mlmodelConfiguration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLModelConfiguration\">MLModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 242, "key.name": "modelForFileName(bundle:fileName:with:)", "key.namelength": 99, "key.nameoffset": 7866, "key.offset": 7861, "key.parsed_declaration": "public func modelForFileName(bundle: Bundle, fileName: String, with mlmodelConfiguration: MLModelConfiguration) -> MLModel", "key.parsed_scope.end": 221, "key.parsed_scope.start": 219, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF\">modelForFileName(bundle:fileName:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Bundle, String, MLModelConfiguration) -> MLModel", "key.typeusr": "$s6bundle8fileName4withSo7MLModelCSo8NSBundleC_SSSo0E13ConfigurationCtcD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG04withSo7MLModelCSo8NSBundleC_SSSo0K13ConfigurationCtF"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Objective-C", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 8108}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8300}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 8268}], "key.bodylength": 0, "key.bodyoffset": 8358, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"231\" column=\"17\"><Name>ObjcIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel</USR><Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 231, "key.doc.name": "ObjcIdentifiedModel", "key.doc.type": "Class", "key.doclength": 138, "key.docoffset": 8129, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 8337}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzObjcIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ObjcIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 52, "key.name": "ObjcIdentifiedModel", "key.namelength": 19, "key.nameoffset": 8316, "key.offset": 8307, "key.parsed_declaration": "public protocol ObjcIdentifiedModel: BaseIdentifiedModel", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.runtime_name": "FritzObjcIdentifiedModel", "key.typename": "ObjcIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel014ObjcIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4515, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzMLModel) public final class FritzMLModel : <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 339}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 251}], "key.bodylength": 4139, "key.bodyoffset": 374, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 365}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzMLModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzMLModel</decl.name> : <ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "MLModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4169, "key.name": "FritzMLModel", "key.namelength": 12, "key.nameoffset": 351, "key.offset": 345, "key.parsed_declaration": "public final class FritzMLModel: MLModel", "key.parsed_scope.end": 129, "key.parsed_scope.start": 16, "key.runtime_name": "FritzMLModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public private(set) var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 393}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 386}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 378}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 46, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 410, "key.offset": 406, "key.parsed_declaration": "public private(set) var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 456}], "key.bodylength": 48, "key.bodyoffset": 479, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "id", "key.namelength": 2, "key.nameoffset": 467, "key.offset": 463, "key.parsed_declaration": "public var id: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel0A7MLModelC2idSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 532}], "key.bodylength": 45, "key.bodyoffset": 557, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "version", "key.namelength": 7, "key.nameoffset": 543, "key.offset": 539, "key.parsed_declaration": "public var version: Int", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:17FritzManagedModel0A7MLModelC7versionSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>unowned public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 652}, {"key.attribute": "source.decl.attribute.weak", "key.length": 7, "key.offset": 644}], "key.doc.column": 22, "key.doc.comment": "Model manager for api requests", "key.doc.declaration": "unowned public let sessionManager: SessionManager", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"30\" column=\"22\"><Name>sessionManager</Name><USR>s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0Cvp</USR><Declaration>unowned public let sessionManager: SessionManager</Declaration><CommentParts><Abstract><Para>Model manager for api requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "sessionManager", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 607, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>unowned</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 663, "key.offset": 659, "key.parsed_declaration": "unowned public let sessionManager: SessionManager", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "SessionManager", "key.typeusr": "$s9FritzCore14SessionManagerCD", "key.usr": "s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 739}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 732}], "key.doc.column": 27, "key.doc.comment": "Model to use for predictions", "key.doc.declaration": "public private(set) var model: MLModel {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"33\" column=\"27\"><Name>model</Name><USR>s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp</USR><Declaration>public private(set) var model: MLModel {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Model to use for predictions</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 697, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "model", "key.namelength": 5, "key.nameoffset": 756, "key.offset": 752, "key.parsed_declaration": "public private(set) var model: MLModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type>, activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1034}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 978}], "key.bodylength": 299, "key.bodyoffset": 1139, "key.doc.column": 10, "key.doc.comment": "Initialize model with an model type", "key.doc.declaration": "@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"45\" column=\"10\"><Name>init(model:activeModelConfig:sessionManager:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:</USR><Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)</Declaration><CommentParts><Abstract><Para>Initialize model with an model type</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "init(model:activeModelConfig:sessionManager:)", "key.doc.type": "Function", "key.doclength": 40, "key.docoffset": 936, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:config:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 398, "key.name": "init(model:activeModelConfig:sessionManager:)", "key.namelength": 96, "key.nameoffset": 1041, "key.offset": 1041, "key.parsed_declaration": "public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "(FritzMLModel.Type) -> (MLModel, FritzModelConfiguration, SessionManager) -> FritzMLModel", "key.typeusr": "$s5model17activeModelConfig14sessionManager012FritzManagedC00G7MLModelCSo0I0C_AD0gC13ConfigurationC0G4Core07SessionF0CtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 1451, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 1443, "key.offset": 1443, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 57, "key.parsed_scope.start": 55, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)MLModel(im)dealloc\">deinit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzMLModel) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)dealloc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var modelDescription: <Type usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2580}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2573}], "key.bodylength": 37, "key.bodyoffset": 2631, "key.doc.column": 23, "key.doc.comment": "Proxy model description", "key.doc.declaration": "public override var modelDescription: MLModelDescription { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"83\" column=\"23\"><Name>modelDescription</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription</USR><Declaration>public override var modelDescription: MLModelDescription { get }</Declaration><CommentParts><Abstract><Para>Proxy model description</Para></Abstract></CommentParts></Other>", "key.doc.line": 83, "key.doc.name": "modelDescription", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 2543, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelDescription</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 80, "key.name": "modelDescription", "key.namelength": 16, "key.nameoffset": 2593, "key.offset": 2589, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(py)modelDescription"}], "key.parsed_declaration": "public override var modelDescription: MLModelDescription", "key.parsed_scope.end": 85, "key.parsed_scope.start": 83, "key.typename": "MLModelDescription", "key.typeusr": "$sSo18MLModelDescriptionCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2787}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2780}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 2741}], "key.bodylength": 280, "key.bodyoffset": 2872, "key.doc.column": 24, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"89\" column=\"24\"><Name>prediction(from:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:</USR><Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "prediction(from:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 2673, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 357, "key.name": "prediction(from:)", "key.namelength": 41, "key.nameoffset": 2801, "key.offset": 2796, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.parsed_scope.end": 94, "key.parsed_scope.start": 89, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:\">prediction(from:options:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 95, "key.name": "result", "key.namelength": 6, "key.nameoffset": 2881, "key.offset": 2877, "key.parsed_declaration": "let result = PredictionResult(input: input, options: nil) { try model.prediction(from: input) }", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "PredictionResult", "key.typeusr": "$s17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4fromSo17MLFeatureProvider_pSoAF_p_tKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider) throws -> MLFeatureProvider", "key.typeusr": "$s4fromSo17MLFeatureProvider_pSoAB_p_tKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>, options: <Type usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3279}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3272}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 3225}], "key.bodylength": 313, "key.bodyoffset": 3394, "key.doc.column": 24, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift\" line=\"98\" column=\"24\"><Name>prediction(from:options:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:</USR><Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 98, "key.doc.name": "prediction(from:options:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 3157, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:options:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 420, "key.name": "prediction(from:options:)", "key.namelength": 71, "key.nameoffset": 3293, "key.offset": 3288, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:options:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.parsed_scope.end": 106, "key.parsed_scope.start": 98, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:\">prediction(from:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 128, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3403, "key.offset": 3399, "key.parsed_declaration": "let result = PredictionResult(input: input, options: options)", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "PredictionResult", "key.typeusr": "$s17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4from7optionsSo17MLFeatureProvider_pSoAG_p_So19MLPredictionOptionsCtKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider, MLPredictionOptions) throws -> MLFeatureProvider", "key.typeusr": "$s4from7optionsSo17MLFeatureProvider_pSoAC_p_So19MLPredictionOptionsCtKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:"}, {"key.annotated_decl": "<Declaration>let installs: [<Type usr=\"s:SS\">String</Type> : Any]?</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 73, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 3848, "key.offset": 3844, "key.parsed_declaration": "let installs = UserDefaults.standard.dictionary(forKey: reportInstallKey)", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "[String : Any]?", "key.typeusr": "$sSDySSypGSgD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvg8installsL_SDySSypGSgvp"}, {"key.annotated_decl": "<Declaration>var installs: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 3979, "key.offset": 3975, "key.parsed_declaration": "var installs = UserDefaults.standard.dictionary(forKey: reportInstallKey) ?? [String: Int]()", "key.parsed_scope.end": 115, "key.parsed_scope.start": 115, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvs8installsL_SDySSypGvp"}], "key.typename": "FritzMLModel.Type", "key.typeusr": "$s17FritzManagedModel0A7MLModelCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 17549, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzManagedModelError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 193}], "key.bodylength": 32, "key.bodyoffset": 236, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 229}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzManagedModelError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 69, "key.name": "FritzManagedModelError", "key.namelength": 22, "key.nameoffset": 205, "key.offset": 200, "key.parsed_declaration": "public enum FritzManagedModelError: Error", "key.parsed_scope.end": 14, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 28, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 239, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case loadingSavedModelFailed</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingSavedModelFailed</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 23, "key.name": "loadingSavedModelFailed", "key.namelength": 23, "key.nameoffset": 244, "key.offset": 244, "key.parsed_declaration": "case loadingSavedModelFailed", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzManagedModelError.Type) -> FritzManagedModelError", "key.typeusr": "$sy17FritzManagedModel0abC5ErrorOACmcD", "key.usr": "s:17FritzManagedModel0abC5ErrorO012loadingSavedC6FailedyA2CmF"}]}], "key.typename": "FritzManagedModelError.Type", "key.typeusr": "$s17FritzManagedModel0abC5ErrorOmD", "key.usr": "s:17FritzManagedModel0abC5ErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 403}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 342}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 342}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 342}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 342}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 329}], "key.bodylength": 4919, "key.bodyoffset": 445, "key.doc.column": 14, "key.doc.comment": "Coordinates tasks for interacting with Fritz Models.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.doclength": 57, "key.docoffset": 272, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 435}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4955, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 416, "key.offset": 410, "key.parsed_declaration": "public class FritzManagedModel: NSObject", "key.parsed_scope.end": 128, "key.parsed_scope.start": 20, "key.runtime_name": "_TtC4main17FritzManagedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 494}], "key.bodylength": 101, "key.bodyoffset": 549, "key.doc.column": 14, "key.doc.comment": "Currenly active model configuration.", "key.doc.declaration": "public var activeModelConfig: FritzModelConfiguration { get set }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"23\" column=\"14\"><Name>activeModelConfig</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig</USR><Declaration>public var activeModelConfig: FritzModelConfiguration { get set }</Declaration><CommentParts><Abstract><Para>Currenly active model configuration.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "activeModelConfig", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 451, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 150, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 505, "key.offset": 501, "key.parsed_declaration": "public var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 27, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1101}], "key.bodylength": 48, "key.bodyoffset": 1124, "key.doc.column": 14, "key.doc.comment": "Model Identifier of active model.", "key.doc.declaration": "public var id: String { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"39\" column=\"14\"><Name>id</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id</USR><Declaration>public var id: String { get }</Declaration><CommentParts><Abstract><Para>Model Identifier of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "id", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1061, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "id", "key.namelength": 2, "key.nameoffset": 1112, "key.offset": 1108, "key.parsed_declaration": "public var id: String", "key.parsed_scope.end": 41, "key.parsed_scope.start": 39, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1223}], "key.bodylength": 45, "key.bodyoffset": 1248, "key.doc.column": 14, "key.doc.comment": "Model Version number of active model.", "key.doc.declaration": "public var version: Int { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"44\" column=\"14\"><Name>version</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version</USR><Declaration>public var version: Int { get }</Declaration><CommentParts><Abstract><Para>Model Version number of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 1179, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1234, "key.offset": 1230, "key.parsed_declaration": "public var version: Int", "key.parsed_scope.end": 46, "key.parsed_scope.start": 44, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isVersionDownloaded: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1362}], "key.bodylength": 259, "key.bodyoffset": 1400, "key.doc.column": 14, "key.doc.comment": "If true, the active model config version is downloaded.", "key.doc.declaration": "public var isVersionDownloaded: Bool { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"49\" column=\"14\"><Name>isVersionDownloaded</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded</USR><Declaration>public var isVersionDownloaded: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, the active model config version is downloaded.</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "isVersionDownloaded", "key.doc.type": "Other", "key.doclength": 60, "key.docoffset": 1300, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isVersionDownloaded</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 291, "key.name": "isVersionDownloaded", "key.namelength": 19, "key.nameoffset": 1373, "key.offset": 1369, "key.parsed_declaration": "public var isVersionDownloaded: Bool", "key.parsed_scope.end": 57, "key.parsed_scope.start": 49, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var hasDownloadedModel: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1727}], "key.bodylength": 191, "key.bodyoffset": 1764, "key.doc.column": 14, "key.doc.comment": "If true, there is at least one active model downloaded", "key.doc.declaration": "public var hasDownloadedModel: Bool { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"60\" column=\"14\"><Name>hasDownloadedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel</USR><Declaration>public var hasDownloadedModel: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, there is at least one active model downloaded</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "hasDownloadedModel", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1666, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hasDownloadedModel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 222, "key.name": "hasDownloadedModel", "key.namelength": 18, "key.nameoffset": 1738, "key.offset": 1734, "key.parsed_declaration": "public var hasDownloadedModel: Bool", "key.parsed_scope.end": 66, "key.parsed_scope.start": 60, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2195}], "key.doc.column": 14, "key.doc.comment": "The type of the identified model, if initialized from a conformed model.\nStoring this gives us access to the url of the identified model, so you can call\nself.loadModel() and load the model included in the package.", "key.doc.declaration": "public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"71\" column=\"14\"><Name>packagedIdentifiedModelType</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType</USR><Declaration>public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?</Declaration><CommentParts><Abstract><Para>The type of the identified model, if initialized from a conformed model. Storing this gives us access to the url of the identified model, so you can call self.loadModel() and load the model included in the package.</Para></Abstract></CommentParts></Other>", "key.doc.line": 71, "key.doc.name": "packagedIdentifiedModelType", "key.doc.type": "Other", "key.doclength": 231, "key.docoffset": 1962, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>packagedIdentifiedModelType</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "packagedIdentifiedModelType", "key.namelength": 27, "key.nameoffset": 2206, "key.offset": 2202, "key.parsed_declaration": "public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "BaseIdentifiedModel.Type?", "key.typeusr": "$s17FritzManagedModel014BaseIdentifiedC0_pXpSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 2274, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 2266, "key.offset": 2266, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 75, "key.parsed_scope.start": 73, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)dealloc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = nil, loadActiveFromDisk: <Type usr=\"s:Sb\">Bool</Type> = true, packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2857}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 71, "key.offset": 2783}], "key.bodylength": 855, "key.bodyoffset": 3042, "key.doc.column": 10, "key.doc.comment": "Creates FritzManagedModel from model configuration.\n\n- Parameters:\n  - modelConfig: Specifies which model class is operating on.\n  - sessionManager: Optional SessionManager. If not included uses default globally shared SessionManager.\n  - loadActiveFromDisk: If true (default) will load latest model downloaded over the air.\n  - packagedIdentifiedModelType: Optional identified model type packaged in app.", "key.doc.declaration": "@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"85\" column=\"10\"><Name>init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:</USR><Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from model configuration.</Para></Abstract><Parameters><Parameter><Name>modelConfig</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Specifies which model class is operating on.</Para></Discussion></Parameter><Parameter><Name>sessionManager</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional SessionManager. If not included uses default globally shared SessionManager.</Para></Discussion></Parameter><Parameter><Name>loadActiveFromDisk</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true (default) will load latest model downloaded over the air.</Para></Discussion></Parameter><Parameter><Name>packagedIdentifiedModelType</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional identified model type packaged in app.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 85, "key.doc.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Specifies which model class is operating on."}], "name": "modelConfig"}, {"discussion": [{"Para": "Optional SessionManager. If not included uses default globally shared SessionManager."}], "name": "sessionManager"}, {"discussion": [{"Para": "If true (default) will load latest model downloaded over the air."}], "name": "loadActiveFromDisk"}, {"discussion": [{"Para": "Optional identified model type packaged in app."}], "name": "packagedIdentifiedModelType"}], "key.doc.type": "Function", "key.doclength": 445, "key.docoffset": 2336, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModelConfig:sessionManager:loadActive:packagedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>modelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>loadActiveFromDisk</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>packagedIdentifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1034, "key.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.namelength": 176, "key.nameoffset": 2864, "key.offset": 2864, "key.parsed_declaration": "public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)", "key.parsed_scope.end": 98, "key.parsed_scope.start": 85, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel.Type) -> (FritzModelConfiguration, SessionManager?, Bool, BaseIdentifiedModel.Type?) -> FritzManagedModel", "key.typeusr": "$s11modelConfig14sessionManager18loadActiveFromDisk27packagedIdentifiedModelType012FritzManagedK0AECAE0mK13ConfigurationC_0M4Core07SessionD0CSgSbAE04BasejK0_pXpSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4158}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4151}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 4117}], "key.bodylength": 230, "key.bodyoffset": 4214, "key.doc.column": 22, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModel: Included MLModel class.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"105\" column=\"22\"><Name>init(identifiedModel:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Included MLModel class.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 105, "key.doc.name": "init(identifiedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Included MLModel class."}], "name": "identifiedModel"}], "key.doc.type": "Function", "key.doclength": 208, "key.docoffset": 3907, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 275, "key.name": "init(identifiedModel:)", "key.namelength": 42, "key.nameoffset": 4170, "key.offset": 4170, "key.parsed_declaration": "public convenience init(identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 108, "key.parsed_scope.start": 105, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 4223, "key.offset": 4219, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModel)", "key.parsed_scope.end": 106, "key.parsed_scope.start": 106, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC0AbA014BaseIdentifiedC0_p_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel) -> FritzManagedModel", "key.typeusr": "$s15identifiedModel012FritzManagedB0ABCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4711}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4704}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 4666}], "key.bodylength": 244, "key.bodyoffset": 4776, "key.doc.column": 22, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModelType: Type of conformed model.", "key.doc.declaration": "@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"114\" column=\"22\"><Name>init(identifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:</USR><Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModelType</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Type of conformed model.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 114, "key.doc.name": "init(identifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Type of conformed model."}], "name": "identifiedModelType"}], "key.doc.type": "Function", "key.doclength": 213, "key.docoffset": 4451, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 298, "key.name": "init(identifiedModelType:)", "key.namelength": 51, "key.nameoffset": 4723, "key.offset": 4723, "key.parsed_declaration": "public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 118, "key.parsed_scope.start": 114, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 4790, "key.offset": 4786, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModelType)", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC4TypeAbA014BaseIdentifiedC0_pXp_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel.Type) -> FritzManagedModel", "key.typeusr": "$s19identifiedModelType012FritzManagedB0ABCAB014BaseIdentifiedB0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func delete() throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5204}], "key.bodylength": 129, "key.bodyoffset": 5233, "key.doc.column": 15, "key.doc.comment": "Deletes all state relating to managed model version.\n\nThis removes all downloaded versions for this model identifier and any cached\nserver values for it.", "key.doc.declaration": "public func delete() throws", "key.doc.discussion": [{"Para": "This removes all downloaded versions for this model identifier and any cached server values for it."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"124\" column=\"15\"><Name>delete()</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)deleteAndReturnError:</USR><Declaration>public func delete() throws</Declaration><CommentParts><Abstract><Para>Deletes all state relating to managed model version.</Para></Abstract><Discussion><Para>This removes all downloaded versions for this model identifier and any cached server values for it.</Para></Discussion></CommentParts></Function>", "key.doc.line": 124, "key.doc.name": "delete()", "key.doc.type": "Function", "key.doclength": 175, "key.docoffset": 5027, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>delete</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 152, "key.name": "delete()", "key.namelength": 8, "key.nameoffset": 5216, "key.offset": 5211, "key.parsed_declaration": "public func delete() throws", "key.parsed_scope.end": 127, "key.parsed_scope.start": 124, "key.substructure": [], "key.typename": "(FritzManagedModel) -> () throws -> ()", "key.typeusr": "$syyKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)deleteAndReturnError:"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$s17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Handle Active Model Changes", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5370}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Load Model internal methods", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6273}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6370}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6309}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6309}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6309}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6309}], "key.bodylength": 2903, "key.bodyoffset": 6406, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2933, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 6387, "key.offset": 6377, "key.parsed_declaration": "public extension FritzManagedModel", "key.parsed_scope.end": 220, "key.parsed_scope.start": 155, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func loadModel(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>) -&gt; <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.bodylength": 182, "key.bodyoffset": 6692, "key.doc.column": 8, "key.doc.comment": "Load FritzMLModel from stored Fritz Model (as defined by active model metadata) or model included in app bundle.\n\n- Parameter identifiedModel: Conformed MLModel.\n- Returns: FritzMLModel.", "key.doc.declaration": "func loadModel(identifiedModel: BaseIdentifiedModel) -> FritzMLModel", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"161\" column=\"8\"><Name>loadModel(identifiedModel:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:</USR><Declaration>func loadModel(identifiedModel: BaseIdentifiedModel) -&gt; FritzMLModel</Declaration><CommentParts><Abstract><Para>Load FritzMLModel from stored Fritz Model (as defined by active model metadata) or model included in app bundle.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Conformed MLModel.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzMLModel.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 161, "key.doc.name": "loadModel(identifiedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Conformed MLModel."}], "name": "identifiedModel"}], "key.doc.result_discussion": [{"Para": "FritzMLModel."}], "key.doc.type": "Function", "key.doclength": 208, "key.docoffset": 6412, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 253, "key.name": "loadModel(identifiedModel:)", "key.namelength": 47, "key.nameoffset": 6627, "key.offset": 6622, "key.parsed_declaration": "func loadModel(identifiedModel: BaseIdentifiedModel) -> FritzMLModel", "key.parsed_scope.end": 164, "key.parsed_scope.start": 161, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel\">loadModel()</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 66, "key.name": "model", "key.namelength": 5, "key.nameoffset": 6701, "key.offset": 6697, "key.parsed_declaration": "let model: MLModel = loadMLModel(identifiedModel: identifiedModel)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "s:17FritzManagedModelAAC04loadC0010identifiedC0AA0A7MLModelCAA014BaseIdentifiedC0_p_tF5modelL_So0F0Cvp"}], "key.typename": "(FritzManagedModel) -> (BaseIdentifiedModel) -> FritzMLModel", "key.typeusr": "$s15identifiedModel012FritzManagedB00C7MLModelCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func loadModel() -&gt; <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>?</Declaration>", "key.bodylength": 678, "key.bodyoffset": 7054, "key.doc.column": 8, "key.doc.comment": "Loads a model previously downloaded OTA if it exists.\n\n- Returns: nil if no model downloaded or FritzMLModel if it does.", "key.doc.declaration": "func loadModel() -> FritzMLModel?", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"169\" column=\"8\"><Name>loadModel()</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel</USR><Declaration>func loadModel() -&gt; FritzMLModel?</Declaration><CommentParts><Abstract><Para>Loads a model previously downloaded OTA if it exists.</Para></Abstract><ResultDiscussion><Para>nil if no model downloaded or FritzMLModel if it does.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 169, "key.doc.name": "loadModel()", "key.doc.result_discussion": [{"Para": "nil if no model downloaded or FritzMLModel if it does."}], "key.doc.type": "Function", "key.doclength": 136, "key.docoffset": 6881, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadModel</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 714, "key.name": "loadModel()", "key.namelength": 11, "key.nameoffset": 7024, "key.offset": 7019, "key.parsed_declaration": "func loadModel() -> FritzMLModel?", "key.parsed_scope.end": 182, "key.parsed_scope.start": 169, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:\">loadModel(identifiedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> FritzMLModel?", "key.typeusr": "$s17FritzManagedModel0A7MLModelCSgycD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.bodylength": 578, "key.bodyoffset": 8318, "key.doc.column": 8, "key.doc.comment": "Loads model when no model is included in application bundle.  If a model has previously been downloaded, it will be used. If not, it will be downloaded from Fritz.\n\nIf `fetchModel` is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed.\n- Parameter completionHandler: Completion handler returning ManagedMLModel if successfully loaded model.", "key.doc.declaration": "func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -> Void)", "key.doc.discussion": [{"Para": "If `fetchModel` is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"188\" column=\"8\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)fetchModelWithCompletionHandler:</USR><Declaration>func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Loads model when no model is included in application bundle.  If a model has previously been downloaded, it will be used. If not, it will be downloaded from Fritz.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler returning ManagedMLModel if successfully loaded model.</Para></Discussion></Parameter></Parameters><Discussion><Para>If <codeVoice>fetchModel</codeVoice> is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed.</Para></Discussion></CommentParts></Function>", "key.doc.line": 188, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Completion handler returning ManagedMLModel if successfully loaded model."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 498, "key.docoffset": 7739, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 658, "key.name": "fetchModel(completionHandler:)", "key.namelength": 72, "key.nameoffset": 8244, "key.offset": 8239, "key.parsed_declaration": "func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -> Void)", "key.parsed_scope.end": 208, "key.parsed_scope.start": 188, "key.substructure": [], "key.typename": "(FritzManagedModel) -> (@escaping (FritzMLModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy17FritzManagedModel0C7MLModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)fetchModelWithCompletionHandler:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func startDownload()</Declaration>", "key.bodylength": 323, "key.bodyoffset": 8984, "key.doc.column": 8, "key.doc.comment": "Trigger model download without waiting for response.", "key.doc.declaration": "func startDownload()", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"211\" column=\"8\"><Name>startDownload()</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)startDownload</USR><Declaration>func startDownload()</Declaration><CommentParts><Abstract><Para>Trigger model download without waiting for response.</Para></Abstract></CommentParts></Function>", "key.doc.line": 211, "key.doc.name": "startDownload()", "key.doc.type": "Function", "key.doclength": 57, "key.docoffset": 8903, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>startDownload</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 346, "key.name": "startDownload()", "key.namelength": 15, "key.nameoffset": 8967, "key.offset": 8962, "key.parsed_declaration": "func startDownload()", "key.parsed_scope.end": 219, "key.parsed_scope.start": 211, "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)startDownload"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$s17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 21, "key.name": "MARK: - Decrypt Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 14126}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 14209}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14148}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14148}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14148}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14148}], "key.bodylength": 861, "key.bodyoffset": 14245, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 891, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 14226, "key.offset": 14216, "key.parsed_declaration": "public extension FritzManagedModel", "key.parsed_scope.end": 348, "key.parsed_scope.start": 328, "key.substructure": [], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$s17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 15170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15109}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15109}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15109}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15109}], "key.bodylength": 2341, "key.bodyoffset": 15206, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2371, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 15187, "key.offset": 15177, "key.parsed_declaration": "public extension FritzManagedModel", "key.parsed_scope.end": 407, "key.parsed_scope.start": 351, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func updateModelIfNeeded(skipCache: <Type usr=\"s:Sb\">Bool</Type> = false, completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.bodylength": 1212, "key.bodyoffset": 15619, "key.doc.column": 8, "key.doc.comment": "Check server for latest active model defined in webapp and update local model state if different from webapp.\n\nIf a model is updated, an .activeModelChanged notification is broadcast.\n\n- Parameter completionHandler: Completion handler called with result of update operation.", "key.doc.declaration": "func updateModelIfNeeded(skipCache: Bool = false, completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.discussion": [{"Para": "If a model is updated, an .activeModelChanged notification is broadcast."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"358\" column=\"8\"><Name>updateModelIfNeeded(skipCache:completionHandler:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)updateModelIfNeededWithSkipCache:completionHandler:</USR><Declaration>func updateModelIfNeeded(skipCache: Bool = false, completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Check server for latest active model defined in webapp and update local model state if different from webapp.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler called with result of update operation.</Para></Discussion></Parameter></Parameters><Discussion><Para>If a model is updated, an .activeModelChanged notification is broadcast.</Para></Discussion></CommentParts></Function>", "key.doc.line": 358, "key.doc.name": "updateModelIfNeeded(skipCache:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Completion handler called with result of update operation."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 301, "key.docoffset": 15212, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateModelIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>skipCache</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1317, "key.name": "updateModelIfNeeded(skipCache:completionHandler:)", "key.namelength": 97, "key.nameoffset": 15520, "key.offset": 15515, "key.parsed_declaration": "func updateModelIfNeeded(skipCache: Bool = false, completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 392, "key.parsed_scope.start": 358, "key.substructure": [], "key.typename": "(FritzManagedModel) -> (Bool, @escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$s9skipCache17completionHandlerySb_ySb_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)updateModelIfNeededWithSkipCache:completionHandler:"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$s17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9530, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct ActiveServerModels : <Type usr=\"s:s7Codablea\">Codable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}], "key.bodylength": 37, "key.bodyoffset": 300, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 280}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 289}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ActiveServerModels</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 85, "key.name": "ActiveServerModels", "key.namelength": 18, "key.nameoffset": 260, "key.offset": 253, "key.parsed_declaration": "public struct ActiveServerModels: Codable, Equatable", "key.parsed_scope.end": 16, "key.parsed_scope.start": 14, "key.substructure": [], "key.typename": "ActiveServerModels.Type", "key.typeusr": "$s17FritzManagedModel18ActiveServerModelsVmD", "key.usr": "s:17FritzManagedModel18ActiveServerModelsV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ModelMetadata = [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 340}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ModelMetadata</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "ModelMetadata", "key.namelength": 13, "key.nameoffset": 357, "key.offset": 347, "key.parsed_declaration": "public typealias ModelMetadata = [String: String]", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "[String : String].Type", "key.typeusr": "$sSDyS2SGmD", "key.usr": "s:17FritzManagedModel0C8Metadataa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelConfiguration) public class FritzModelConfiguration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1107}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 1076}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1015}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1015}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1015}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1015}], "key.bodylength": 6611, "key.bodyoffset": 1164, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1145}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 1155}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzModelConfiguration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 6662, "key.name": "FritzModelConfiguration", "key.namelength": 23, "key.nameoffset": 1120, "key.offset": 1114, "key.parsed_declaration": "public class FritzModelConfiguration: NSObject, Codable", "key.parsed_scope.end": 218, "key.parsed_scope.start": 48, "key.runtime_name": "FritzModelConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let identifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1438}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1432}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>identifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "identifier", "key.namelength": 10, "key.nameoffset": 1449, "key.offset": 1445, "key.parsed_declaration": "@objc public let identifier: String", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)identifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let version: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1479}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1473}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1490, "key.offset": 1486, "key.parsed_declaration": "@objc public let version: Int", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1651}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1645}], "key.bodylength": 537, "key.bodyoffset": 1679, "key.doc.column": 20, "key.doc.comment": "Tags data set in webapp.  Pulls from most recently updated active server response if one exists.", "key.doc.declaration": "@objc public var tags: [String]? { get set }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"69\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags</USR><Declaration>@objc public var tags: [String]? { get set }</Declaration><CommentParts><Abstract><Para>Tags data set in webapp.  Pulls from most recently updated active server response if one exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 1542, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 559, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 1662, "key.offset": 1658, "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 83, "key.parsed_scope.start": 69, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2406}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2400}], "key.bodylength": 549, "key.bodyoffset": 2443, "key.doc.column": 20, "key.doc.comment": "Model Metadata set in webapp. Uses cached server model info if it exists.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get set }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"90\" column=\"20\"><Name>metadata</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get set }</Declaration><CommentParts><Abstract><Para>Model Metadata set in webapp. Uses cached server model info if it exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 78, "key.docoffset": 2320, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 580, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2417, "key.offset": 2413, "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 104, "key.parsed_scope.start": 90, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3044}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3038}], "key.bodylength": 134, "key.bodyoffset": 3091, "key.doc.column": 20, "key.doc.comment": "Model downloads will only happen", "key.doc.declaration": "@objc public var wifiRequiredForModelDownload: Bool { get set }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"107\" column=\"20\"><Name>wifiRequiredForModelDownload</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload</USR><Declaration>@objc public var wifiRequiredForModelDownload: Bool { get set }</Declaration><CommentParts><Abstract><Para>Model downloads will only happen</Para></Abstract></CommentParts></Other>", "key.doc.line": 107, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 2999, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 175, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 3055, "key.offset": 3051, "key.parsed_declaration": "@objc public var wifiRequiredForModelDownload: Bool", "key.parsed_scope.end": 114, "key.parsed_scope.start": 107, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3358}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3352}], "key.bodylength": 56, "key.bodyoffset": 3390, "key.doc.column": 20, "key.doc.comment": "Whether or not this model should use CPU and GPU only (not using the ANE).", "key.doc.declaration": "@objc public var cpuAndGPUOnly: Bool { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"119\" column=\"20\"><Name>cpuAndGPUOnly</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly</USR><Declaration>@objc public var cpuAndGPUOnly: Bool { get }</Declaration><CommentParts><Abstract><Para>Whether or not this model should use CPU and GPU only (not using the ANE).</Para></Abstract></CommentParts></Other>", "key.doc.line": 119, "key.doc.name": "cpuAndGPUOnly", "key.doc.type": "Other", "key.doclength": 79, "key.docoffset": 3271, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cpuAndGPUOnly</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 82, "key.name": "cpuAndGPUOnly", "key.namelength": 13, "key.nameoffset": 3369, "key.offset": 3365, "key.parsed_declaration": "@objc public var cpuAndGPUOnly: Bool", "key.parsed_scope.end": 123, "key.parsed_scope.start": 119, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var isOTA: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3502}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3496}], "key.bodylength": 25, "key.bodyoffset": 3526, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isOTA</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "isOTA", "key.namelength": 5, "key.nameoffset": 3513, "key.offset": 3509, "key.parsed_declaration": "@objc public var isOTA: Bool", "key.parsed_scope.end": 129, "key.parsed_scope.start": 127, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)isOTA"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3567}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3558}], "key.bodylength": 145, "key.bodyoffset": 3599, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 171, "key.name": "description", "key.namelength": 11, "key.nameoffset": 3578, "key.offset": 3574, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "override public var description: String", "key.parsed_scope.end": 133, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:) public init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]?, src: <Type usr=\"s:10Foundation3URLV\">URL</Type>?, tags: [<Type usr=\"s:SS\">String</Type>]?, wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type>, metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>?, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4314}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 108, "key.offset": 4203}], "key.bodylength": 245, "key.bodyoffset": 4498, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>encryptionSeed</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>src</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>metadata</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 423, "key.name": "init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)", "key.namelength": 175, "key.nameoffset": 4321, "key.offset": 4321, "key.parsed_declaration": "public init(identifier: String, version: Int, encryptionSeed: [UInt8]?, src: URL?, tags: [String]?, wifiRequiredForModelDownload: Bool, metadata: ModelMetadata?, cpuAndGPUOnly: Bool)", "key.parsed_scope.end": 153, "key.parsed_scope.start": 145, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, [UInt8]?, URL?, [String]?, Bool, [String : String]?, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version14encryptionSeed3src4tags28wifiRequiredForModelDownload8metadata13cpuAndGPUOnly012FritzManagedJ00pJ13ConfigurationCSS_SiSays5UInt8VGSg10Foundation3URLVSgSaySSGSgSbSDyS2SGSgSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:cpuAndGPUOnly:) public convenience init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> = false)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4808}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4801}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 48, "key.offset": 4750}], "key.bodylength": 183, "key.bodyoffset": 4889, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 253, "key.name": "init(identifier:version:cpuAndGPUOnly:)", "key.namelength": 67, "key.nameoffset": 4820, "key.offset": 4820, "key.parsed_declaration": "public convenience init(identifier: String, version: Int, cpuAndGPUOnly: Bool = false)", "key.parsed_scope.end": 158, "key.parsed_scope.start": 156, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version13cpuAndGPUOnly17FritzManagedModel0fH13ConfigurationCSS_SiSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModel:) public convenience init(from identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5120}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5113}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 5079}], "key.bodylength": 389, "key.bodyoffset": 5181, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModel</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 439, "key.name": "init(from:)", "key.namelength": 47, "key.nameoffset": 5132, "key.offset": 5132, "key.parsed_declaration": "public convenience init(from identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 170, "key.parsed_scope.start": 161, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel) -> FritzModelConfiguration", "key.typeusr": "$s4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModelType:) public convenience init(from identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5622}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5615}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 5577}], "key.bodylength": 409, "key.bodyoffset": 5692, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModelType</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 468, "key.name": "init(from:)", "key.namelength": 56, "key.nameoffset": 5634, "key.offset": 5634, "key.parsed_declaration": "public convenience init(from identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 182, "key.parsed_scope.start": 173, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel.Type) -> FritzModelConfiguration", "key.typeusr": "$s4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(isEqual:) override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7099}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 7090}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 15, "key.offset": 7072}], "key.bodylength": 449, "key.bodyoffset": 7144, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(isEqual:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 488, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 7111, "key.offset": 7106, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 213, "key.parsed_scope.start": 200, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)isEqual:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var hash: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7609}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 7600}], "key.bodylength": 142, "key.bodyoffset": 7631, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hash</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 158, "key.name": "hash", "key.namelength": 4, "key.nameoffset": 7620, "key.offset": 7616, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)hash"}], "key.parsed_declaration": "override public var hash: Int", "key.parsed_scope.end": 217, "key.parsed_scope.start": 215, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)hash\">hash()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE4hash4intoys6HasherVz_tF\">hash(into:)</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)hash"}], "key.typename": "FritzModelConfiguration.Type", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/LocalModelManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8110, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Stored ActiveModel", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2174}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 22, "key.name": "MARK: - LocalModelInfo", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3444}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 31, "key.name": "MARK: - Stored ServerModelCache", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6796}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/MLFeatureProvider+JSON.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1796, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1451, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct ModelDebugOutput&lt;T&gt; where T : <Type usr=\"s:SY\">RawRepresentable</Type>, T.RawValue == <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 239}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 215}], "key.bodylength": 1130, "key.bodyoffset": 319, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ModelDebugOutput</decl.name>&lt;<decl.generic_type_param usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.RawValue == <ref.struct usr=\"s:SS\">String</ref.struct></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1204, "key.name": "ModelDebugOutput", "key.namelength": 16, "key.nameoffset": 253, "key.offset": 246, "key.parsed_declaration": "public struct ModelDebugOutput<T: RawRepresentable> where T.RawValue == String", "key.parsed_scope.end": 64, "key.parsed_scope.start": 14, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 273}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 19, "key.name": "T", "key.namelength": 1, "key.nameoffset": 270, "key.offset": 270, "key.parsed_declaration": "public struct ModelDebugOutput<T: RawRepresentable> where T.RawValue == String", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let prefix: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>prefix</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "prefix", "key.namelength": 6, "key.nameoffset": 365, "key.offset": 361, "key.parsed_declaration": "public let prefix: String", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6prefixSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(prefix: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 383}], "key.bodylength": 28, "key.bodyoffset": 412, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>prefix</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "init(prefix:)", "key.namelength": 20, "key.nameoffset": 390, "key.offset": 390, "key.parsed_declaration": "public init(prefix: String)", "key.parsed_scope.end": 20, "key.parsed_scope.start": 18, "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>.Type) -> (String) -> ModelDebugOutput<T>", "key.typeusr": "$s6prefix17FritzManagedModel0D11DebugOutputVyxGSS_tcD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6prefixACyxGSS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(key: <Type usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\">T</Type>) -&gt; Any? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.bodylength": 83, "key.bodyoffset": 479, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>Any?</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 111, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 452, "key.offset": 452, "key.parsed_declaration": "public subscript(key: T) -> Any?", "key.parsed_scope.end": 25, "key.parsed_scope.start": 22, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (T) -> Any?", "key.typeusr": "$syypSgxcD", "key.usr": "s:17FritzManagedModel0C11DebugOutputVyypSgxcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 567}], "key.bodylength": 107, "key.bodyoffset": 595, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 129, "key.name": "image", "key.namelength": 5, "key.nameoffset": 578, "key.offset": 574, "key.parsed_declaration": "public var image: UIImage?", "key.parsed_scope.end": 34, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "UIImage?", "key.typeusr": "$sSo7UIImageCSgD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func write()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 994}], "key.bodylength": 142, "key.bodyoffset": 1015, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 157, "key.name": "write()", "key.namelength": 7, "key.nameoffset": 1006, "key.offset": 1001, "key.parsed_declaration": "public func write()", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV5writeyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toData() -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1162}], "key.bodylength": 254, "key.bodyoffset": 1193, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toData</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 279, "key.name": "toData()", "key.namelength": 8, "key.nameoffset": 1174, "key.offset": 1169, "key.parsed_declaration": "public func toData() -> Data?", "key.parsed_scope.end": 63, "key.parsed_scope.start": 54, "key.substructure": [{"key.annotated_decl": "<Declaration>var encodedData: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encodedData</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 27, "key.name": "encodedData", "key.namelength": 11, "key.nameoffset": 1202, "key.offset": 1198, "key.parsed_declaration": "var encodedData = self.data", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6toData10Foundation0G0VSgyF07encodedG0L_SDySSypGvp"}], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>) -> () -> Data?", "key.typeusr": "$s10Foundation4DataVSgycD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6toData10Foundation0G0VSgyF"}], "key.typename": "ModelDebugOutput<T>.Type", "key.typeusr": "$s17FritzManagedModel0C11DebugOutputVyxGmD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/ModelDownloader.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3296, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3449, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelTagManager) public class ModelTagManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 546}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 523}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 462}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 462}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 462}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 462}], "key.bodylength": 2861, "key.bodyoffset": 586, "key.doc.column": 14, "key.doc.comment": "Manages interacting with models using tags created in the webapp.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift\" line=\"23\" column=\"14\"><Name>ModelTagManager</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject</Declaration><CommentParts><Abstract><Para>Manages interacting with models using tags created in the webapp.</Para></Abstract></CommentParts></Class>", "key.doc.line": 23, "key.doc.name": "ModelTagManager", "key.doc.type": "Class", "key.doclength": 70, "key.docoffset": 392, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 576}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelTagManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelTagManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2895, "key.name": "ModelTagManager", "key.namelength": 15, "key.nameoffset": 559, "key.offset": 553, "key.parsed_declaration": "public class ModelTagManager: NSObject", "key.parsed_scope.end": 80, "key.parsed_scope.start": 23, "key.runtime_name": "ModelTagManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let tags: [<Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 641}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 635}], "key.doc.column": 20, "key.doc.comment": "Tags applied to models to query for.", "key.doc.declaration": "@objc public let tags: [String]", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift\" line=\"26\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags</USR><Declaration>@objc public let tags: [String]</Declaration><CommentParts><Abstract><Para>Tags applied to models to query for.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 592, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 652, "key.offset": 648, "key.parsed_declaration": "@objc public let tags: [String]", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[String]", "key.typeusr": "$sSaySSGD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithTags:sessionManager:) public init(tags: [<Type usr=\"s:SS\">String</Type>], sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 759}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 721}], "key.bodylength": 124, "key.bodyoffset": 827, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithTags:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(tags:sessionManager:)", "key.namelength": 59, "key.nameoffset": 766, "key.offset": 766, "key.parsed_declaration": "public init(tags: [String], sessionManager: SessionManager? = nil)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(ModelTagManager.Type) -> ([String], SessionManager?) -> ModelTagManager", "key.typeusr": "$s4tags14sessionManager17FritzManagedModel0f3TagC0CSaySSG_0D4Core07SessionC0CSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)initWithTags:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false) -&gt; [<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1429}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 1386}], "key.bodylength": 941, "key.bodyoffset": 1533, "key.doc.column": 15, "key.doc.comment": "Gets managed models matching tags, pulling from data already queries from API.\n\nDoes not query the API, only checks model data stored locally. To update tags with latest known data,\nuse `fetchModelsForTags`.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n- Returns: List of FritzManagedModel matching tags.", "key.doc.declaration": "@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -> [FritzManagedModel]", "key.doc.discussion": [{"Para": "Does not query the API, only checks model data stored locally. To update tags with latest known data, use `fetchModelsForTags`."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift\" line=\"46\" column=\"15\"><Name>getManagedModelsForTags(wifiRequiredForModelDownload:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:</USR><Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -&gt; [FritzManagedModel]</Declaration><CommentParts><Abstract><Para>Gets managed models matching tags, pulling from data already queries from API.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>List of FritzManagedModel matching tags.</Para></ResultDiscussion><Discussion><Para>Does not query the API, only checks model data stored locally. To update tags with latest known data, use <codeVoice>fetchModelsForTags</codeVoice>.</Para></Discussion></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}], "key.doc.result_discussion": [{"Para": "List of FritzManagedModel matching tags."}], "key.doc.type": "Function", "key.doclength": 426, "key.docoffset": 958, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getModelsForTagsWithWifiRequired:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1039, "key.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.namelength": 67, "key.nameoffset": 1441, "key.offset": 1436, "key.parsed_declaration": "public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -> [FritzManagedModel]", "key.parsed_scope.end": 64, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool) -> [FritzManagedModel]", "key.typeusr": "$s28wifiRequiredForModelDownloadSay012FritzManagedD0ABCGSb_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false, completionHandler: @escaping ([<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2931}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 60, "key.offset": 2868}], "key.bodylength": 362, "key.bodyoffset": 3083, "key.doc.column": 15, "key.doc.comment": "Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it\nwill query local store and return existing models that match models.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n  - completionHandler: Called after models for tags are loaded.", "key.doc.declaration": "@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift\" line=\"73\" column=\"15\"><Name>fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:</USR><Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it will query local store and return existing models that match models.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Called after models for tags are loaded.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Called after models for tags are loaded."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 385, "key.docoffset": 2481, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelsForTagsWithWifiRequired:completionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 508, "key.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 138, "key.nameoffset": 2943, "key.offset": 2938, "key.parsed_declaration": "public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void)", "key.parsed_scope.end": 79, "key.parsed_scope.start": 73, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool, @escaping ([FritzManagedModel]?, Error?) -> ()) -> ()", "key.typeusr": "$s28wifiRequiredForModelDownload17completionHandlerySb_ySay012FritzManagedD0ACCGSg_s5Error_pSgtctcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:"}], "key.typename": "ModelTagManager.Type", "key.typeusr": "$s17FritzManagedModel0C10TagManagerCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/Obfuscator.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2337, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/PredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1558, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 28678, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol RNCryptorType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1757}], "key.bodylength": 587, "key.bodyoffset": 1788, "key.doc.column": 17, "key.doc.comment": "The `RNCryptorType` protocol defines generic API to a mutable,\nincremental, password-based encryptor or decryptor. Its generic\nusage is as follows:\n\n    let cryptor = Encryptor(password: \"mypassword\")\n    // or Decryptor()\n\n    var result = Data()\n    for data in datas {\n        result.appendData(try cryptor.update(data))\n    }\n    result.appendData(try cryptor.final())\n\n After calling `finalData()`, the cryptor is no longer valid.", "key.doc.declaration": "public protocol RNCryptorType", "key.doc.discussion": [{"CodeListing": ""}, {"Para": "After calling `finalData()`, the cryptor is no longer valid."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"45\" column=\"17\"><Name>RNCryptorType</Name><USR>s:17FritzManagedModel13RNCryptorTypeP</USR><Declaration>public protocol RNCryptorType</Declaration><CommentParts><Abstract><Para>The <codeVoice>RNCryptorType</codeVoice> protocol defines generic API to a mutable, incremental, password-based encryptor or decryptor. Its generic usage is as follows:</Para></Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cryptor = Encryptor(password: \"mypassword\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// or Decryptor()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var result = Data()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for data in datas {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    result.appendData(try cryptor.update(data))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[result.appendData(try cryptor.final())]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>After calling <codeVoice>finalData()</codeVoice>, the cryptor is no longer valid.</Para></Discussion></CommentParts></Class>", "key.doc.line": 45, "key.doc.name": "RNCryptorType", "key.doc.type": "Class", "key.doclength": 489, "key.docoffset": 1268, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>RNCryptorType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 612, "key.name": "RNCryptorType", "key.namelength": 13, "key.nameoffset": 1773, "key.offset": 1764, "key.parsed_declaration": "public protocol RNCryptorType", "key.parsed_scope.end": 64, "key.parsed_scope.start": 45, "key.runtime_name": "_TtP4main13RNCryptorType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.doc.column": 5, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "init(password: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"50\" column=\"5\"><Name>init(password:)</Name><USR>s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc</USR><Declaration>init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 50, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 136, "key.docoffset": 1794, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 22, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 1934, "key.offset": 1934, "key.parsed_declaration": "init(password: String)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.substructure": [], "key.typename": "<Self where Self : RNCryptorType> (Self.Type) -> (String) -> Self", "key.typeusr": "$s8passwordxSS_tcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.doc.column": 10, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- throws: `Error`\n- returns: Processed data. May be empty.", "key.doc.declaration": "func update(withData data: Data) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"57\" column=\"10\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF</USR><Declaration>func update(withData data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 57, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 198, "key.docoffset": 1962, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 47, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 2169, "key.offset": 2164, "key.parsed_declaration": "func update(withData data: Data) throws -> Data", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.substructure": [], "key.typename": "<Self where Self : RNCryptorType> (Self) -> (Data) throws -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tKcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func finalData() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.doc.column": 10, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- throws: `Error`\n- returns: Trailing data", "key.doc.declaration": "func finalData() throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"63\" column=\"10\"><Name>finalData()</Name><USR>s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF</USR><Declaration>func finalData() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 63, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 122, "key.docoffset": 2217, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 31, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 2348, "key.offset": 2343, "key.parsed_declaration": "func finalData() throws -> Data", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "<Self where Self : RNCryptorType> (Self) -> () throws -> Data", "key.typeusr": "$s10Foundation4DataVyKcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.typename": "RNCryptorType.Protocol", "key.typeusr": "$s17FritzManagedModel13RNCryptorType_pmD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol RNCryptorType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2378}], "key.bodylength": 543, "key.bodyoffset": 2410, "key.doc.column": 17, "key.doc.declaration": "public protocol RNCryptorType", "key.doc.discussion": [{"CodeListing": ""}, {"Para": "After calling `finalData()`, the cryptor is no longer valid."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"45\" column=\"17\"><Name>RNCryptorType</Name><USR>s:17FritzManagedModel13RNCryptorTypeP</USR><Declaration>public protocol RNCryptorType</Declaration><CommentParts><Abstract><Para>The <codeVoice>RNCryptorType</codeVoice> protocol defines generic API to a mutable, incremental, password-based encryptor or decryptor. Its generic usage is as follows:</Para></Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cryptor = Encryptor(password: \"mypassword\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// or Decryptor()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var result = Data()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for data in datas {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    result.appendData(try cryptor.update(data))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[result.appendData(try cryptor.final())]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>After calling <codeVoice>finalData()</codeVoice>, the cryptor is no longer valid.</Para></Discussion></CommentParts></Class>", "key.doc.line": 45, "key.doc.name": "RNCryptorType", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>RNCryptorType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 569, "key.name": "RNCryptorType", "key.namelength": 13, "key.nameoffset": 2395, "key.offset": 2385, "key.parsed_declaration": "public extension RNCryptorType", "key.parsed_scope.end": 79, "key.parsed_scope.start": 66, "key.substructure": [], "key.typename": "RNCryptorType.Protocol", "key.typeusr": "$s17FritzManagedModel13RNCryptorType_pmD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RNCryptor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3003}], "key.bodylength": 5603, "key.bodyoffset": 3026, "key.doc.column": 13, "key.doc.comment": "RNCryptor encryption/decryption interface.", "key.doc.declaration": "public enum RNCryptor", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"82\" column=\"13\"><Name>RNCryptor</Name><USR>s:17FritzManagedModel9RNCryptorO</USR><Declaration>public enum RNCryptor</Declaration><CommentParts><Abstract><Para>RNCryptor encryption/decryption interface.</Para></Abstract></CommentParts></Other>", "key.doc.line": 82, "key.doc.name": "RNCryptor", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2956, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RNCryptor</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 5620, "key.name": "RNCryptor", "key.namelength": 9, "key.nameoffset": 3015, "key.offset": 3010, "key.parsed_declaration": "public enum RNCryptor", "key.parsed_scope.end": 226, "key.parsed_scope.start": 82, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Error : <Type usr=\"s:Si\">Int</Type>, Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3074}], "key.bodylength": 635, "key.bodyoffset": 3111, "key.doc.column": 17, "key.doc.comment": "Errors thrown by `RNCryptorType`.", "key.doc.declaration": "public enum FritzManagedModel.RNCryptor.Error : Int, Swift.Error", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"85\" column=\"17\"><Name>Error</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO</USR><Declaration>public enum FritzManagedModel.RNCryptor.Error : Int, Swift.Error</Declaration><CommentParts><Abstract><Para>Errors thrown by <codeVoice>RNCryptorType</codeVoice>.</Para></Abstract></CommentParts></Other>", "key.doc.line": 85, "key.doc.name": "Error", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 3032, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 3093}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 3098}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Error</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 666, "key.name": "Error", "key.namelength": 5, "key.nameoffset": 3086, "key.offset": 3081, "key.parsed_declaration": "public enum Error: Int, Swift.Error", "key.parsed_scope.end": 101, "key.parsed_scope.start": 85, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3271, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case hmacMismatch = 1</Declaration>", "key.doc.column": 14, "key.doc.comment": "Ciphertext was corrupt or password was incorrect.\nIt is not possible to distinguish between these cases in the v3 data format.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"88\" column=\"14\"><Name>hmacMismatch</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO12hmacMismatchyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Ciphertext was corrupt or password was incorrect. It is not possible to distinguish between these cases in the v3 data format.</Para></Abstract></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "hmacMismatch", "key.doc.type": "Other", "key.doclength": 143, "key.docoffset": 3120, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 3291}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>hmacMismatch</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "hmacMismatch", "key.namelength": 12, "key.nameoffset": 3276, "key.offset": 3276, "key.parsed_declaration": "case hmacMismatch = 1", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO12hmacMismatchyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3380, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case unknownHeader = 2</Declaration>", "key.doc.column": 14, "key.doc.comment": "Unrecognized data format. Usually this means the data is corrupt.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"91\" column=\"14\"><Name>unknownHeader</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO13unknownHeaderyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Unrecognized data format. Usually this means the data is corrupt.</Para></Abstract></CommentParts></Other>", "key.doc.line": 91, "key.doc.name": "unknownHeader", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 3302, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 3401}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unknownHeader</decl.name> = <syntaxtype.number>2</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "unknownHeader", "key.namelength": 13, "key.nameoffset": 3385, "key.offset": 3385, "key.parsed_declaration": "case unknownHeader = 2", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO13unknownHeaderyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3502, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case messageTooShort</Declaration>", "key.doc.column": 14, "key.doc.comment": "`final()` was called before sufficient data was passed to `update(withData:)`", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"94\" column=\"14\"><Name>messageTooShort</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO15messageTooShortyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para><codeVoice>final()</codeVoice> was called before sufficient data was passed to <codeVoice>update(withData:)</codeVoice></Para></Abstract></CommentParts></Other>", "key.doc.line": 94, "key.doc.name": "messageTooShort", "key.doc.type": "Other", "key.doclength": 82, "key.docoffset": 3412, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>messageTooShort</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "messageTooShort", "key.namelength": 15, "key.nameoffset": 3507, "key.offset": 3507, "key.parsed_declaration": "case messageTooShort", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO15messageTooShortyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3597, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case memoryFailure</Declaration>", "key.doc.column": 14, "key.doc.comment": "Memory allocation failure. This should never happen.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"97\" column=\"14\"><Name>memoryFailure</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO13memoryFailureyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Memory allocation failure. This should never happen.</Para></Abstract></CommentParts></Other>", "key.doc.line": 97, "key.doc.name": "memoryFailure", "key.doc.type": "Other", "key.doclength": 57, "key.docoffset": 3532, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>memoryFailure</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "memoryFailure", "key.namelength": 13, "key.nameoffset": 3602, "key.offset": 3602, "key.parsed_declaration": "case memoryFailure", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO13memoryFailureyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 26, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3715, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidCredentialType</Declaration>", "key.doc.column": 14, "key.doc.comment": "A password-based decryptor was used on a key-based ciphertext, or vice-versa.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"100\" column=\"14\"><Name>invalidCredentialType</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO21invalidCredentialTypeyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>A password-based decryptor was used on a key-based ciphertext, or vice-versa.</Para></Abstract></CommentParts></Other>", "key.doc.line": 100, "key.doc.name": "invalidCredentialType", "key.doc.type": "Other", "key.doclength": 82, "key.docoffset": 3625, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidCredentialType</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 21, "key.name": "invalidCredentialType", "key.namelength": 21, "key.nameoffset": 3720, "key.offset": 3720, "key.parsed_declaration": "case invalidCredentialType", "key.parsed_scope.end": 100, "key.parsed_scope.start": 100, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO21invalidCredentialTypeyA2EmF"}]}], "key.typename": "RNCryptor.Error.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO5ErrorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func encrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>, withPassword password: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3816}], "key.bodylength": 70, "key.bodyoffset": 3895, "key.doc.column": 24, "key.doc.comment": "Encrypt data using password and return encrypted data.", "key.doc.declaration": "public static func encrypt(data: Data, withPassword password: String) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"104\" column=\"24\"><Name>encrypt(data:withPassword:)</Name><USR>s:17FritzManagedModel9RNCryptorO7encrypt4data12withPassword10Foundation4DataVAI_SStFZ</USR><Declaration>public static func encrypt(data: Data, withPassword password: String) -&gt; Data</Declaration><CommentParts><Abstract><Para>Encrypt data using password and return encrypted data.</Para></Abstract></CommentParts></Function>", "key.doc.line": 104, "key.doc.name": "encrypt(data:withPassword:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 3753, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withPassword</decl.var.parameter.argument_label> <decl.var.parameter.name>password</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 143, "key.name": "encrypt(data:withPassword:)", "key.namelength": 50, "key.nameoffset": 3835, "key.offset": 3823, "key.parsed_declaration": "public static func encrypt(data: Data, withPassword password: String) -> Data", "key.parsed_scope.end": 106, "key.parsed_scope.start": 104, "key.substructure": [], "key.typename": "(RNCryptor.Type) -> (Data, String) -> Data", "key.typeusr": "$s4data12withPassword10Foundation4DataVAE_SStcD", "key.usr": "s:17FritzManagedModel9RNCryptorO7encrypt4data12withPassword10Foundation4DataVAI_SStFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func decrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>, withPassword password: <Type usr=\"s:SS\">String</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4138}], "key.bodylength": 74, "key.bodyoffset": 4224, "key.doc.column": 24, "key.doc.comment": "Decrypt data using password and return decrypted data. Throws if\npassword is incorrect or ciphertext is in the wrong format.\n- throws `Error`", "key.doc.declaration": "public static func decrypt(data: Data, withPassword password: String) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"111\" column=\"24\"><Name>decrypt(data:withPassword:)</Name><USR>s:17FritzManagedModel9RNCryptorO7decrypt4data12withPassword10Foundation4DataVAI_SStKFZ</USR><Declaration>public static func decrypt(data: Data, withPassword password: String) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Decrypt data using password and return decrypted data. Throws if password is incorrect or ciphertext is in the wrong format.</Para></Abstract><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 111, "key.doc.name": "decrypt(data:withPassword:)", "key.doc.type": "Function", "key.doclength": 162, "key.docoffset": 3972, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withPassword</decl.var.parameter.argument_label> <decl.var.parameter.name>password</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 154, "key.name": "decrypt(data:withPassword:)", "key.namelength": 50, "key.nameoffset": 4157, "key.offset": 4145, "key.parsed_declaration": "public static func decrypt(data: Data, withPassword password: String) throws -> Data", "key.parsed_scope.end": 113, "key.parsed_scope.start": 111, "key.substructure": [], "key.typename": "(RNCryptor.Type) -> (Data, String) throws -> Data", "key.typeusr": "$s4data12withPassword10Foundation4DataVAE_SStKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO7decrypt4data12withPassword10Foundation4DataVAI_SStKFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func randomData(ofLength length: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4473}], "key.bodylength": 332, "key.bodyoffset": 4534, "key.doc.column": 24, "key.doc.comment": "Generates random Data of given length\nCrashes if `length` is larger than allocatable memory, or if the system random number generator is not available.", "key.doc.declaration": "public static func randomData(ofLength length: Int) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"117\" column=\"24\"><Name>randomData(ofLength:)</Name><USR>s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ</USR><Declaration>public static func randomData(ofLength length: Int) -&gt; Data</Declaration><CommentParts><Abstract><Para>Generates random Data of given length Crashes if <codeVoice>length</codeVoice> is larger than allocatable memory, or if the system random number generator is not available.</Para></Abstract></CommentParts></Function>", "key.doc.line": 117, "key.doc.name": "randomData(ofLength:)", "key.doc.type": "Function", "key.doclength": 164, "key.docoffset": 4305, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>randomData</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>ofLength</decl.var.parameter.argument_label> <decl.var.parameter.name>length</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 387, "key.name": "randomData(ofLength:)", "key.namelength": 32, "key.nameoffset": 4492, "key.offset": 4480, "key.parsed_declaration": "public static func randomData(ofLength length: Int) -> Data", "key.parsed_scope.end": 124, "key.parsed_scope.start": 117, "key.substructure": [{"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "data", "key.namelength": 4, "key.nameoffset": 4547, "key.offset": 4543, "key.parsed_declaration": "var data = Data(count: length)", "key.parsed_scope.end": 118, "key.parsed_scope.start": 118, "key.typename": "Data", "key.typeusr": "$s10Foundation4DataVD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ4dataL_AHvp"}, {"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 107, "key.name": "result", "key.namelength": 6, "key.nameoffset": 4586, "key.offset": 4582, "key.parsed_declaration": "let result = data.withUnsafeMutableBytes { SecRandomCopyBytes(kSecRandomDefault, length, $0.baseAddress!) }", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ6resultL_s5Int32Vvp"}], "key.typename": "(RNCryptor.Type) -> (Int) -> Data", "key.typeusr": "$s8ofLength10Foundation4DataVSi_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Encryptor : <Type usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 5102}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5095}], "key.bodylength": 1120, "key.bodyoffset": 5140, "key.doc.column": 24, "key.doc.comment": "A encryptor for the latest data format. If compatibility with other RNCryptor\nimplementations is required, you may wish to use the specific encryptor version rather\nthan accepting \"latest.\"", "key.doc.declaration": "public final class FritzManagedModel.RNCryptor.Encryptor : RNCryptorType", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"130\" column=\"24\"><Name>Encryptor</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC</USR><Declaration>public final class FritzManagedModel.RNCryptor.Encryptor : RNCryptorType</Declaration><CommentParts><Abstract><Para>A encryptor for the latest data format. If compatibility with other RNCryptor implementations is required, you may wish to use the specific encryptor version rather than accepting \u201clatest.\u201d</Para></Abstract></CommentParts></Class>", "key.doc.line": 130, "key.doc.name": "Encryptor", "key.doc.type": "Class", "key.doclength": 218, "key.docoffset": 4873, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 5125}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Encryptor</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "RNCryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1153, "key.name": "Encryptor", "key.namelength": 9, "key.nameoffset": 5114, "key.offset": 5108, "key.parsed_declaration": "public final class Encryptor: RNCryptorType", "key.parsed_scope.end": 161, "key.parsed_scope.start": 130, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5345}], "key.bodylength": 106, "key.bodyoffset": 5376, "key.doc.column": 16, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public init(password: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"136\" column=\"16\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC8passwordAESS_tcfc</USR><Declaration>public init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 136, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 144, "key.docoffset": 5193, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 131, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 5352, "key.offset": 5352, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public init(password: String)", "key.parsed_scope.end": 139, "key.parsed_scope.start": 136, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor.Type) -> (String) -> RNCryptor.Encryptor", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO9EncryptorCSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5685}], "key.bodylength": 61, "key.bodyoffset": 5734, "key.doc.column": 21, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"145\" column=\"21\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC6update8withData10Foundation0H0VAJ_tF</USR><Declaration>public func update(withData data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 145, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 184, "key.docoffset": 5493, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 104, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 5697, "key.offset": 5692, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) -> Data", "key.parsed_scope.end": 147, "key.parsed_scope.start": 145, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> (Data) -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC6update8withData10Foundation0H0VAJ_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5918}], "key.bodylength": 50, "key.bodyoffset": 5951, "key.doc.column": 21, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- returns: Trailing data", "key.doc.declaration": "public func finalData() -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"152\" column=\"21\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC9finalData10Foundation0G0VyF</USR><Declaration>public func finalData() -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 152, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 104, "key.docoffset": 5806, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 77, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 5930, "key.offset": 5925, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() -> Data", "key.parsed_scope.end": 154, "key.parsed_scope.start": 152, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> () -> Data", "key.typeusr": "$s10Foundation4DataVycD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC9finalData10Foundation0G0VyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func encrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6155}], "key.bodylength": 58, "key.bodyoffset": 6196, "key.doc.column": 21, "key.doc.comment": "Simplified, generic interface to `RNCryptorType`. Takes a data,\nreturns a processed data, and invalidates the cryptor.", "key.doc.declaration": "public func encrypt(data: Data) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"158\" column=\"21\"><Name>encrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC7encrypt4data10Foundation4DataVAJ_tF</USR><Declaration>public func encrypt(data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Simplified, generic interface to <codeVoice>RNCryptorType</codeVoice>. Takes a data, returns a processed data, and invalidates the cryptor.</Para></Abstract></CommentParts></Function>", "key.doc.line": 158, "key.doc.name": "encrypt(data:)", "key.doc.type": "Function", "key.doclength": 135, "key.docoffset": 6012, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 93, "key.name": "encrypt(data:)", "key.namelength": 19, "key.nameoffset": 6167, "key.offset": 6162, "key.parsed_declaration": "public func encrypt(data: Data) -> Data", "key.parsed_scope.end": 160, "key.parsed_scope.start": 158, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> (Data) -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC7encrypt4data10Foundation4DataVAJ_tF"}], "key.typename": "RNCryptor.Encryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO9EncryptorCmD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Decryptor : <Type usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 6345}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6338}], "key.bodylength": 2243, "key.bodyoffset": 6384, "key.doc.column": 24, "key.doc.comment": "Password-based decryptor that can handle any supported format.", "key.doc.declaration": "public final class FritzManagedModel.RNCryptor.Decryptor : RNCryptorType", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"164\" column=\"24\"><Name>Decryptor</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC</USR><Declaration>public final class FritzManagedModel.RNCryptor.Decryptor : RNCryptorType</Declaration><CommentParts><Abstract><Para>Password-based decryptor that can handle any supported format.</Para></Abstract></CommentParts></Class>", "key.doc.line": 164, "key.doc.name": "Decryptor", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 6267, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 6369}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Decryptor</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "RNCryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2277, "key.name": "Decryptor", "key.namelength": 9, "key.nameoffset": 6357, "key.offset": 6351, "key.parsed_declaration": "public final class Decryptor : RNCryptorType", "key.parsed_scope.end": 225, "key.parsed_scope.start": 164, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6749}], "key.bodylength": 81, "key.bodyoffset": 6780, "key.doc.column": 16, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public init(password: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"174\" column=\"16\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC8passwordAESS_tcfc</USR><Declaration>public init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 174, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 144, "key.docoffset": 6597, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 106, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 6756, "key.offset": 6756, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public init(password: String)", "key.parsed_scope.end": 177, "key.parsed_scope.start": 174, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor.Type) -> (String) -> RNCryptor.Decryptor", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO9DecryptorCSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7074}], "key.bodylength": 52, "key.bodyoffset": 7122, "key.doc.column": 21, "key.doc.comment": "Decrypt data using password and return decrypted data, invalidating decryptor. Throws if\npassword is incorrect or ciphertext is in the wrong format.\n- throws `Error`", "key.doc.declaration": "public func decrypt(data: Data) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"182\" column=\"21\"><Name>decrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC7decrypt4data10Foundation4DataVAJ_tKF</USR><Declaration>public func decrypt(data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Decrypt data using password and return decrypted data, invalidating decryptor. Throws if password is incorrect or ciphertext is in the wrong format.</Para></Abstract><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 182, "key.doc.name": "decrypt(data:)", "key.doc.type": "Function", "key.doclength": 194, "key.docoffset": 6872, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "decrypt(data:)", "key.namelength": 19, "key.nameoffset": 7086, "key.offset": 7081, "key.parsed_declaration": "public func decrypt(data: Data) throws -> Data", "key.parsed_scope.end": 184, "key.parsed_scope.start": 182, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor) -> (Data) throws -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC7decrypt4data10Foundation4DataVAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7407}], "key.bodylength": 820, "key.bodyoffset": 7463, "key.doc.column": 21, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- throws: `Error`\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"191\" column=\"21\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF</USR><Declaration>public func update(withData data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 191, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 214, "key.docoffset": 7185, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 870, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 7419, "key.offset": 7414, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) throws -> Data", "key.parsed_scope.end": 213, "key.parsed_scope.start": 191, "key.substructure": [{"key.annotated_decl": "<Declaration>let toCheck: [<Type usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</Type>.Type]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>toCheck</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</ref.protocol>.Type]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "toCheck", "key.namelength": 7, "key.nameoffset": 7615, "key.offset": 7611, "key.parsed_declaration": "let toCheck:[VersionedDecryptorType.Type]", "key.parsed_scope.end": 198, "key.parsed_scope.start": 198, "key.typename": "[VersionedDecryptorType.Type]", "key.typeusr": "$sSay17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LL_pXpGD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF7toCheckL_SayAA09VersionedE4Type33_30CD210D7F9E836762940C5CC44C7C81LL_pXpGvp"}], "key.typename": "(RNCryptor.Decryptor) -> (Data) throws -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8436}], "key.bodylength": 145, "key.bodyoffset": 8476, "key.doc.column": 21, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- throws: `Error`\n- returns: Trailing data", "key.doc.declaration": "public func finalData() throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"219\" column=\"21\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC9finalData10Foundation0G0VyKF</USR><Declaration>public func finalData() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 219, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 134, "key.docoffset": 8294, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 179, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 8448, "key.offset": 8443, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() throws -> Data", "key.parsed_scope.end": 224, "key.parsed_scope.start": 219, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor) -> () throws -> Data", "key.typeusr": "$s10Foundation4DataVyKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC9finalData10Foundation0G0VyKF"}], "key.typename": "RNCryptor.Decryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO9DecryptorCmD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC"}], "key.typename": "RNCryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RNCryptor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8652}], "key.bodylength": 11774, "key.bodyoffset": 8680, "key.doc.column": 13, "key.doc.declaration": "public enum RNCryptor", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"82\" column=\"13\"><Name>RNCryptor</Name><USR>s:17FritzManagedModel9RNCryptorO</USR><Declaration>public enum RNCryptor</Declaration><CommentParts><Abstract><Para>RNCryptor encryption/decryption interface.</Para></Abstract></CommentParts></Other>", "key.doc.line": 82, "key.doc.name": "RNCryptor", "key.doc.type": "Other", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RNCryptor</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 11796, "key.name": "RNCryptor", "key.namelength": 9, "key.nameoffset": 8669, "key.offset": 8659, "key.parsed_declaration": "public extension RNCryptor", "key.parsed_scope.end": 518, "key.parsed_scope.start": 229, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>final class FormatV3</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 8712}], "key.bodylength": 1806, "key.bodyoffset": 8734, "key.doc.column": 17, "key.doc.comment": "V3 format settings", "key.doc.declaration": "final class FormatV3", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"231\" column=\"17\"><Name>FormatV3</Name><USR>s:17FritzManagedModel9RNCryptorO8FormatV3C</USR><Declaration>final class FormatV3</Declaration><CommentParts><Abstract><Para>V3 format settings</Para></Abstract></CommentParts></Class>", "key.doc.line": 231, "key.doc.name": "FormatV3", "key.doc.type": "Class", "key.doclength": 23, "key.docoffset": 8685, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FormatV3</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1823, "key.name": "FormatV3", "key.namelength": 8, "key.nameoffset": 8724, "key.offset": 8718, "key.parsed_declaration": "final class FormatV3", "key.parsed_scope.end": 274, "key.parsed_scope.start": 231, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let keySize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8781}], "key.doc.column": 27, "key.doc.comment": "Size of AES and HMAC keys", "key.doc.declaration": "public static let keySize: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"233\" column=\"27\"><Name>keySize</Name><USR>s:17FritzManagedModel9RNCryptorO8FormatV3C7keySizeSivpZ</USR><Declaration>public static let keySize: Int</Declaration><CommentParts><Abstract><Para>Size of AES and HMAC keys</Para></Abstract></CommentParts></Other>", "key.doc.line": 233, "key.doc.name": "keySize", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 8743, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keySize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 37, "key.name": "keySize", "key.namelength": 7, "key.nameoffset": 8799, "key.offset": 8788, "key.parsed_declaration": "public static let keySize = kCCKeySizeAES256", "key.parsed_scope.end": 233, "key.parsed_scope.start": 233, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7keySizeSivpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let saltSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8867}], "key.doc.column": 27, "key.doc.comment": "Size of PBKDF2 salt", "key.doc.declaration": "public static let saltSize: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"236\" column=\"27\"><Name>saltSize</Name><USR>s:17FritzManagedModel9RNCryptorO8FormatV3C8saltSizeSivpZ</USR><Declaration>public static let saltSize: Int</Declaration><CommentParts><Abstract><Para>Size of PBKDF2 salt</Para></Abstract></CommentParts></Other>", "key.doc.line": 236, "key.doc.name": "saltSize", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 8835, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>saltSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 23, "key.name": "saltSize", "key.namelength": 8, "key.nameoffset": 8885, "key.offset": 8874, "key.parsed_declaration": "public static let saltSize = 8", "key.parsed_scope.end": 236, "key.parsed_scope.start": 236, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C8saltSizeSivpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func makeKey(forPassword password: <Type usr=\"s:SS\">String</Type>, withSalt salt: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9192}], "key.bodylength": 967, "key.bodyoffset": 9279, "key.doc.column": 28, "key.doc.comment": "Generate a key from a password and salt\n- parameters:\n    - password: Password to convert\n    - salt: Salt. Generally constructed with RNCryptor.randomDataOfLength(FormatV3.saltSize)\n- returns: Key of length FormatV3.keySize", "key.doc.declaration": "public static func makeKey(forPassword password: String, withSalt salt: Data) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"243\" column=\"28\"><Name>makeKey(forPassword:withSalt:)</Name><USR>s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ</USR><Declaration>public static func makeKey(forPassword password: String, withSalt salt: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Generate a key from a password and salt</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Password to convert</Para></Discussion></Parameter><Parameter><Name>salt</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Salt. Generally constructed with RNCryptor.randomDataOfLength(FormatV3.saltSize)</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Key of length FormatV3.keySize</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 243, "key.doc.name": "makeKey(forPassword:withSalt:)", "key.doc.parameters": [{"discussion": [{"Para": "Password to convert"}], "name": "password"}, {"discussion": [{"Para": "Salt. Generally constructed with RNCryptor.randomDataOfLength(FormatV3.saltSize)"}], "name": "salt"}], "key.doc.result_discussion": [{"Para": "Key of length FormatV3.keySize"}], "key.doc.type": "Function", "key.doclength": 277, "key.docoffset": 8907, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>makeKey</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forPassword</decl.var.parameter.argument_label> <decl.var.parameter.name>password</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withSalt</decl.var.parameter.argument_label> <decl.var.parameter.name>salt</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 1048, "key.name": "makeKey(forPassword:withSalt:)", "key.namelength": 58, "key.nameoffset": 9211, "key.offset": 9199, "key.parsed_declaration": "public static func makeKey(forPassword password: String, withSalt salt: Data) -> Data", "key.parsed_scope.end": 267, "key.parsed_scope.start": 243, "key.substructure": [{"key.annotated_decl": "<Declaration>let passwordArray: [<Type usr=\"s:s4Int8V\">Int8</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>passwordArray</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s4Int8V\">Int8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 48, "key.name": "passwordArray", "key.namelength": 13, "key.nameoffset": 9297, "key.offset": 9293, "key.parsed_declaration": "let passwordArray = password.utf8.map(Int8.init)", "key.parsed_scope.end": 245, "key.parsed_scope.start": 245, "key.typename": "[Int8]", "key.typeusr": "$sSays4Int8VGD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ13passwordArrayL_Says4Int8VGvp"}, {"key.annotated_decl": "<Declaration>let saltArray: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>saltArray</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 27, "key.name": "saltArray", "key.namelength": 9, "key.nameoffset": 9358, "key.offset": 9354, "key.parsed_declaration": "let saltArray = Array(salt)", "key.parsed_scope.end": 246, "key.parsed_scope.start": 246, "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ9saltArrayL_Says5UInt8VGvp"}, {"key.annotated_decl": "<Declaration>var derivedKey: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>derivedKey</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 59, "key.name": "derivedKey", "key.namelength": 10, "key.nameoffset": 9399, "key.offset": 9395, "key.parsed_declaration": "var derivedKey = Array<UInt8>(repeating: 0, count: keySize)", "key.parsed_scope.end": 248, "key.parsed_scope.start": 248, "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ07derivedH0L_Says5UInt8VGvp"}, {"key.annotated_decl": "<Declaration>let algorithm: <Type usr=\"c:@T@CCPBKDFAlgorithm\">CCPBKDFAlgorithm</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>algorithm</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CCPBKDFAlgorithm\">CCPBKDFAlgorithm</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 46, "key.name": "algorithm", "key.namelength": 9, "key.nameoffset": 9543, "key.offset": 9539, "key.parsed_declaration": "let algorithm    = CCPBKDFAlgorithm(kCCPBKDF2)", "key.parsed_scope.end": 251, "key.parsed_scope.start": 251, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ9algorithmL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let prf: <Type usr=\"c:@T@CCPseudoRandomAlgorithm\">CCPseudoRandomAlgorithm</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>prf</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CCPseudoRandomAlgorithm\">CCPseudoRandomAlgorithm</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "prf", "key.namelength": 3, "key.nameoffset": 9602, "key.offset": 9598, "key.parsed_declaration": "let prf          = CCPseudoRandomAlgorithm(kCCPRFHmacAlgSHA1)", "key.parsed_scope.end": 252, "key.parsed_scope.start": 252, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ3prfL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let pbkdf2Rounds: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pbkdf2Rounds</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "pbkdf2Rounds", "key.namelength": 12, "key.nameoffset": 9676, "key.offset": 9672, "key.parsed_declaration": "let pbkdf2Rounds = UInt32(10000)", "key.parsed_scope.end": 253, "key.parsed_scope.start": 253, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ12pbkdf2RoundsL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let result: <Type usr=\"c:@T@CCCryptorStatus\">CCCryptorStatus</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CCCryptorStatus\">CCCryptorStatus</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 313, "key.name": "result", "key.namelength": 6, "key.nameoffset": 9722, "key.offset": 9718, "key.parsed_declaration": "let result = CCCryptorStatus(", "key.parsed_scope.end": 255, "key.parsed_scope.start": 255, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ6resultL_s5Int32Vvp"}], "key.typename": "(RNCryptor.FormatV3.Type) -> (String, Data) -> Data", "key.typeusr": "$s11forPassword8withSalt10Foundation4DataVSS_AEtcD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C7makeKey11forPassword8withSalt10Foundation4DataVSS_AKtFZ"}], "key.typename": "RNCryptor.FormatV3.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO8FormatV3CmD", "key.usr": "s:17FritzManagedModel9RNCryptorO8FormatV3C"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>final class EncryptorV3 : <Type usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 10778}], "key.bodylength": 4380, "key.bodyoffset": 10819, "key.doc.column": 17, "key.doc.comment": "Format version 3 encryptor. Use this to ensure a specific format verison\nor when using keys (which are inherrently versions-specific). To use\n\"the latest encryptor\" with a password, use `Encryptor` instead.", "key.doc.declaration": "final class EncryptorV3 : RNCryptorType", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"279\" column=\"17\"><Name>EncryptorV3</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C</USR><Declaration>final class EncryptorV3 : RNCryptorType</Declaration><CommentParts><Abstract><Para>Format version 3 encryptor. Use this to ensure a specific format verison or when using keys (which are inherrently versions-specific). To use \u201cthe latest encryptor\u201d with a password, use <codeVoice>Encryptor</codeVoice> instead.</Para></Abstract></CommentParts></Class>", "key.doc.line": 279, "key.doc.name": "EncryptorV3", "key.doc.type": "Class", "key.doclength": 227, "key.docoffset": 10547, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 10804}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>EncryptorV3</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "RNCryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4416, "key.name": "EncryptorV3", "key.namelength": 11, "key.nameoffset": 10790, "key.offset": 10784, "key.parsed_declaration": "final class EncryptorV3 : RNCryptorType", "key.parsed_scope.end": 379, "key.parsed_scope.start": 279, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 11100}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11093}], "key.bodylength": 279, "key.bodyoffset": 11136, "key.doc.column": 28, "key.doc.comment": "Creates and returns an encryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public convenience init(password: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"287\" column=\"28\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C8passwordAESS_tcfc</USR><Declaration>public convenience init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns an encryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 287, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 147, "key.docoffset": 10938, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 304, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 11112, "key.offset": 11112, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public convenience init(password: String)", "key.parsed_scope.end": 293, "key.parsed_scope.start": 287, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc\">init(encryptionKey:hmacKey:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH02ivAE10Foundation4DataV_A2Ktcfc\">init(encryptionKey:hmacKey:iv:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C8password14encryptionSalt04hmacI02ivAESS_10Foundation4DataVA2Ltcfc\">init(password:encryptionSalt:hmacSalt:iv:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH02iv6headerAE10Foundation4DataV_A3Ltc33_30CD210D7F9E836762940C5CC44C7C81Llfc\">init(encryptionKey:hmacKey:iv:header:)</RelatedName>"}], "key.substructure": [], "key.typename": "(RNCryptor.EncryptorV3.Type) -> (String) -> RNCryptor.EncryptorV3", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO11EncryptorV3CSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(encryptionKey: <Type usr=\"s:10Foundation4DataV\">Data</Type>, hmacKey: <Type usr=\"s:10Foundation4DataV\">Data</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 12370}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 12363}], "key.bodylength": 126, "key.bodyoffset": 12424, "key.doc.column": 28, "key.doc.comment": "Creates and returns an encryptor using keys.\n\n- Attention: This method requires some expertise to use correctly.\n             Most users should use `init(password:)` which is simpler\n             to use securely.\n\nKeys should not be generated directly from strings (`.dataUsingEncoding()` or similar).\nIdeally, keys should be random (`Cryptor.randomDataOfLength()` or some other high-quality\nrandom generator. If keys must be generated from strings, then use `FormatV3.keyForPassword(salt:)`\nwith a random salt, or just use password-based encryption (that's what it's for).\n\n- parameters:\n    - encryptionKey: AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)\n    - hmacKey: HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)", "key.doc.declaration": "public convenience init(encryptionKey: Data, hmacKey: Data)", "key.doc.discussion": [{"Attention": ""}, {"Para": "Keys should not be generated directly from strings (`.dataUsingEncoding()` or similar). Ideally, keys should be random (`Cryptor.randomDataOfLength()` or some other high-quality random generator. If keys must be generated from strings, then use `FormatV3.keyForPassword(salt:)` with a random salt, or just use password-based encryption (that\u2019s what it\u2019s for)."}], "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"309\" column=\"28\"><Name>init(encryptionKey:hmacKey:)</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc</USR><Declaration>public convenience init(encryptionKey: Data, hmacKey: Data)</Declaration><CommentParts><Abstract><Para>Creates and returns an encryptor using keys.</Para></Abstract><Parameters><Parameter><Name>encryptionKey</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)</Para></Discussion></Parameter><Parameter><Name>hmacKey</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)</Para></Discussion></Parameter></Parameters><Discussion><Attention><Para>This method requires some expertise to use correctly. Most users should use <codeVoice>init(password:)</codeVoice> which is simpler to use securely.</Para></Attention><Para>Keys should not be generated directly from strings (<codeVoice>.dataUsingEncoding()</codeVoice> or similar). Ideally, keys should be random (<codeVoice>Cryptor.randomDataOfLength()</codeVoice> or some other high-quality random generator. If keys must be generated from strings, then use <codeVoice>FormatV3.keyForPassword(salt:)</codeVoice> with a random salt, or just use password-based encryption (that\u2019s what it\u2019s for).</Para></Discussion></CommentParts></Function>", "key.doc.line": 309, "key.doc.name": "init(encryptionKey:hmacKey:)", "key.doc.parameters": [{"discussion": [{"Para": "AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)"}], "name": "encryptionKey"}, {"discussion": [{"Para": "HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)"}], "name": "hmacKey"}], "key.doc.type": "Function", "key.doclength": 929, "key.docoffset": 11426, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>encryptionKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hmacKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 169, "key.name": "init(encryptionKey:hmacKey:)", "key.namelength": 40, "key.nameoffset": 12382, "key.offset": 12382, "key.parsed_declaration": "public convenience init(encryptionKey: Data, hmacKey: Data)", "key.parsed_scope.end": 311, "key.parsed_scope.start": 309, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C8passwordAESS_tcfc\">init(password:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH02ivAE10Foundation4DataV_A2Ktcfc\">init(encryptionKey:hmacKey:iv:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C8password14encryptionSalt04hmacI02ivAESS_10Foundation4DataVA2Ltcfc\">init(password:encryptionSalt:hmacSalt:iv:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH02iv6headerAE10Foundation4DataV_A3Ltc33_30CD210D7F9E836762940C5CC44C7C81Llfc\">init(encryptionKey:hmacKey:iv:header:)</RelatedName>"}], "key.substructure": [], "key.typename": "(RNCryptor.EncryptorV3.Type) -> (Data, Data) -> RNCryptor.EncryptorV3", "key.typeusr": "$s13encryptionKey04hmacB017FritzManagedModel9RNCryptorO11EncryptorV3C10Foundation4DataV_AJtcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func encrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 12642}], "key.bodylength": 53, "key.bodyoffset": 12683, "key.doc.column": 21, "key.doc.comment": "Takes a data, returns a processed data, and invalidates the cryptor.", "key.doc.declaration": "public func encrypt(data: Data) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"314\" column=\"21\"><Name>encrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C7encrypt4data10Foundation4DataVAJ_tF</USR><Declaration>public func encrypt(data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Takes a data, returns a processed data, and invalidates the cryptor.</Para></Abstract></CommentParts></Function>", "key.doc.line": 314, "key.doc.name": "encrypt(data:)", "key.doc.type": "Function", "key.doclength": 73, "key.docoffset": 12561, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "encrypt(data:)", "key.namelength": 19, "key.nameoffset": 12654, "key.offset": 12649, "key.parsed_declaration": "public func encrypt(data: Data) -> Data", "key.parsed_scope.end": 316, "key.parsed_scope.start": 314, "key.substructure": [], "key.typename": "(RNCryptor.EncryptorV3) -> (Data) -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C7encrypt4data10Foundation4DataVAJ_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 12939}], "key.bodylength": 148, "key.bodyoffset": 12988, "key.doc.column": 21, "key.doc.comment": "Updates cryptor with data and returns encrypted data.\n\n- parameter data: Data to process. May be empty.\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"322\" column=\"21\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C6update8withData10Foundation0I0VAJ_tF</USR><Declaration>public func update(withData data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns encrypted data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 322, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 184, "key.docoffset": 12747, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 191, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 12951, "key.offset": 12946, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) -> Data", "key.parsed_scope.end": 325, "key.parsed_scope.start": 322, "key.substructure": [], "key.typename": "(RNCryptor.EncryptorV3) -> (Data) -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C6update8withData10Foundation0I0VAJ_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 13259}], "key.bodylength": 137, "key.bodyoffset": 13292, "key.doc.column": 21, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- returns: Trailing data", "key.doc.declaration": "public func finalData() -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"330\" column=\"21\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO11EncryptorV3C9finalData10Foundation0H0VyF</USR><Declaration>public func finalData() -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 330, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 104, "key.docoffset": 13147, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 164, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 13271, "key.offset": 13266, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() -> Data", "key.parsed_scope.end": 334, "key.parsed_scope.start": 330, "key.substructure": [{"key.annotated_decl": "<Declaration>var result: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 45, "key.name": "result", "key.namelength": 6, "key.nameoffset": 13309, "key.offset": 13305, "key.parsed_declaration": "var result = handle(data: engine.finalData())", "key.parsed_scope.end": 331, "key.parsed_scope.start": 331, "key.typename": "Data", "key.typeusr": "$s10Foundation4DataVD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C9finalData10Foundation0H0VyF6resultL_AIvp"}], "key.typename": "(RNCryptor.EncryptorV3) -> () -> Data", "key.typeusr": "$s10Foundation4DataVycD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C9finalData10Foundation0H0VyF"}], "key.typename": "RNCryptor.EncryptorV3.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO11EncryptorV3CmD", "key.usr": "s:17FritzManagedModel9RNCryptorO11EncryptorV3C"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>final class DecryptorV3 : <Type usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 15457}], "key.bodylength": 4946, "key.bodyoffset": 15506, "key.doc.column": 17, "key.doc.comment": "Format version 3 decryptor. This is required in order to decrypt\nusing keys (since key configuration is version-specific). For password\ndecryption, `Decryptor` is generally preferred, and will call this\nif appropriate.", "key.doc.declaration": "final class DecryptorV3 : VersionedDecryptorType", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"385\" column=\"17\"><Name>DecryptorV3</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C</USR><Declaration>final class DecryptorV3 : VersionedDecryptorType</Declaration><CommentParts><Abstract><Para>Format version 3 decryptor. This is required in order to decrypt using keys (since key configuration is version-specific). For password decryption, <codeVoice>Decryptor</codeVoice> is generally preferred, and will call this if appropriate.</Para></Abstract></CommentParts></Class>", "key.doc.line": 385, "key.doc.name": "DecryptorV3", "key.doc.type": "Class", "key.doclength": 247, "key.docoffset": 15206, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 15482}], "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DecryptorV3</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "VersionedDecryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4990, "key.name": "DecryptorV3", "key.namelength": 11, "key.nameoffset": 15469, "key.offset": 15463, "key.parsed_declaration": "final class DecryptorV3: VersionedDecryptorType", "key.parsed_scope.end": 517, "key.parsed_scope.start": 385, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 16110}], "key.bodylength": 54, "key.bodyoffset": 16141, "key.doc.column": 16, "key.doc.comment": "Creates and returns a decryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public init(password: String)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"406\" column=\"16\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C8passwordAESS_tcfc</USR><Declaration>public init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a decryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 406, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 146, "key.docoffset": 15956, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 79, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 16117, "key.offset": 16117, "key.overrides": [{"key.usr": "s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP8passwordxSS_tcfc"}, {"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public init(password: String)", "key.parsed_scope.end": 408, "key.parsed_scope.start": 406, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11DecryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc\">init(encryptionKey:hmacKey:)</RelatedName>"}], "key.substructure": [], "key.typename": "(RNCryptor.DecryptorV3.Type) -> (String) -> RNCryptor.DecryptorV3", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO11DecryptorV3CSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(encryptionKey: <Type usr=\"s:10Foundation4DataV\">Data</Type>, hmacKey: <Type usr=\"s:10Foundation4DataV\">Data</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 16507}], "key.bodylength": 203, "key.bodyoffset": 16556, "key.doc.column": 16, "key.doc.comment": "Creates and returns a decryptor using keys.\n\n- parameters:\n    - encryptionKey: AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)\n    - hmacKey: HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)", "key.doc.declaration": "public init(encryptionKey: Data, hmacKey: Data)", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"415\" column=\"16\"><Name>init(encryptionKey:hmacKey:)</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc</USR><Declaration>public init(encryptionKey: Data, hmacKey: Data)</Declaration><CommentParts><Abstract><Para>Creates and returns a decryptor using keys.</Para></Abstract><Parameters><Parameter><Name>encryptionKey</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)</Para></Discussion></Parameter><Parameter><Name>hmacKey</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 415, "key.doc.name": "init(encryptionKey:hmacKey:)", "key.doc.parameters": [{"discussion": [{"Para": "AES-256 key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)"}], "name": "encryptionKey"}, {"discussion": [{"Para": "HMAC key. Must be exactly FormatV3.keySize (kCCKeySizeAES256, 32 bytes)"}], "name": "hmacKey"}], "key.doc.type": "Function", "key.doclength": 293, "key.docoffset": 16206, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>encryptionKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>hmacKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 246, "key.name": "init(encryptionKey:hmacKey:)", "key.namelength": 40, "key.nameoffset": 16514, "key.offset": 16514, "key.parsed_declaration": "public init(encryptionKey: Data, hmacKey: Data)", "key.parsed_scope.end": 419, "key.parsed_scope.start": 415, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel9RNCryptorO11DecryptorV3C8passwordAESS_tcfc\">init(password:)</RelatedName>"}], "key.substructure": [], "key.typename": "(RNCryptor.DecryptorV3.Type) -> (Data, Data) -> RNCryptor.DecryptorV3", "key.typeusr": "$s13encryptionKey04hmacB017FritzManagedModel9RNCryptorO11DecryptorV3C10Foundation4DataV_AJtcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C13encryptionKey04hmacH0AE10Foundation4DataV_AJtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 16948}], "key.bodylength": 52, "key.bodyoffset": 16996, "key.doc.column": 21, "key.doc.comment": "Decrypt data using password and return decrypted data. Throws if\npassword is incorrect or ciphertext is in the wrong format.\n- throws `Error`", "key.doc.declaration": "public func decrypt(data: Data) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"424\" column=\"21\"><Name>decrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C7decrypt4data10Foundation4DataVAJ_tKF</USR><Declaration>public func decrypt(data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Decrypt data using password and return decrypted data. Throws if password is incorrect or ciphertext is in the wrong format.</Para></Abstract><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 424, "key.doc.name": "decrypt(data:)", "key.doc.type": "Function", "key.doclength": 170, "key.docoffset": 16770, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "decrypt(data:)", "key.namelength": 19, "key.nameoffset": 16960, "key.offset": 16955, "key.parsed_declaration": "public func decrypt(data: Data) throws -> Data", "key.parsed_scope.end": 426, "key.parsed_scope.start": 424, "key.substructure": [], "key.typename": "(RNCryptor.DecryptorV3) -> (Data) throws -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C7decrypt4data10Foundation4DataVAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 17251}], "key.bodylength": 543, "key.bodyoffset": 17307, "key.doc.column": 21, "key.doc.comment": "Updates cryptor with data and returns encrypted data.\n\n- parameter data: Data to process. May be empty.\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"432\" column=\"21\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C6update8withData10Foundation0I0VAJ_tKF</USR><Declaration>public func update(withData data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns encrypted data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 432, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 184, "key.docoffset": 17059, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 593, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 17263, "key.offset": 17258, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) throws -> Data", "key.parsed_scope.end": 447, "key.parsed_scope.start": 432, "key.substructure": [{"key.annotated_decl": "<Declaration>let e: <Type usr=\"s:17FritzManagedModel17DecryptorEngineV333_30CD210D7F9E836762940C5CC44C7C81LLC\">DecryptorEngineV3</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>e</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel17DecryptorEngineV333_30CD210D7F9E836762940C5CC44C7C81LLC\">DecryptorEngineV3</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 98, "key.name": "e", "key.namelength": 1, "key.nameoffset": 17565, "key.offset": 17561, "key.parsed_declaration": "let e = try makeEngine(credential: credential, header: buffer.subdata(in: 0..<requiredHeaderSize))", "key.parsed_scope.end": 442, "key.parsed_scope.start": 442, "key.typename": "DecryptorEngineV3", "key.typeusr": "$s17FritzManagedModel17DecryptorEngineV333_30CD210D7F9E836762940C5CC44C7C81LLCD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C6update8withData10Foundation0I0VAJ_tKF1eL0_AA0e6EngineF033_30CD210D7F9E836762940C5CC44C7C81LLCvp"}, {"key.annotated_decl": "<Declaration>let body: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>body</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "body", "key.namelength": 4, "key.nameoffset": 17708, "key.offset": 17704, "key.parsed_declaration": "let body = buffer.subdata(in: requiredHeaderSize..<buffer.count)", "key.parsed_scope.end": 444, "key.parsed_scope.start": 444, "key.typename": "Data", "key.typeusr": "$s10Foundation4DataVD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C6update8withData10Foundation0I0VAJ_tKF4bodyL_AJvp"}], "key.typename": "(RNCryptor.DecryptorV3) -> (Data) throws -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C6update8withData10Foundation0I0VAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 17973}], "key.bodylength": 164, "key.bodyoffset": 18013, "key.doc.column": 21, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- returns: Trailing data", "key.doc.declaration": "public func finalData() throws -> Data", "key.doc.file": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"452\" column=\"21\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO11DecryptorV3C9finalData10Foundation0H0VyKF</USR><Declaration>public func finalData() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 452, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 104, "key.docoffset": 17861, "key.filepath": "/Users/vagrant/git/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 17985, "key.offset": 17980, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() throws -> Data", "key.parsed_scope.end": 457, "key.parsed_scope.start": 452, "key.substructure": [], "key.typename": "(RNCryptor.DecryptorV3) -> () throws -> Data", "key.typeusr": "$s10Foundation4DataVyKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C9finalData10Foundation0H0VyKF"}], "key.typename": "RNCryptor.DecryptorV3.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO11DecryptorV3CmD", "key.usr": "s:17FritzManagedModel9RNCryptorO11DecryptorV3C"}], "key.typename": "RNCryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO"}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/ServerModelCache.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2181, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzManagedModel/SessionManager+FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2117, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Measure", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 301}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Install", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1630}]}}, {"/Users/vagrant/git/Source/FritzManagedModel/SessionManager+FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10924, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 861}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1590}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3205}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 32, "key.name": "MARK: - Download / Compile Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4339}]}}, {"/Users/vagrant/git/Source/FritzVision/BasePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1212, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class BasePredictor : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A15MLModelReadTypeP\">FritzMLModelReadType</Type>, <Type usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 208}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 184}], "key.bodylength": 921, "key.bodyoffset": 289, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 234}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 20, "key.offset": 244}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 266}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BasePredictor</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A15MLModelReadTypeP\">FritzMLModelReadType</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzMLModelReadType"}, {"key.name": "FritzManagedModelType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 998, "key.name": "BasePredictor", "key.namelength": 13, "key.nameoffset": 219, "key.offset": 213, "key.parsed_declaration": "open class BasePredictor: NSObject, FritzMLModelReadType, FritzManagedModelType", "key.parsed_scope.end": 52, "key.parsed_scope.start": 15, "key.runtime_name": "_TtC4main13BasePredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 326}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 320}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 337, "key.offset": 333, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 481}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 457}], "key.bodylength": 190, "key.bodyoffset": 515, "key.doc.column": 10, "key.doc.comment": "Initialize model with FritzMLModel\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:) public init(model: FritzMLModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/BasePredictor.swift\" line=\"25\" column=\"10\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 25, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 83, "key.docoffset": 372, "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 218, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 488, "key.offset": 488, "key.parsed_declaration": "public init(model: FritzMLModel)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BasePredictor.Type) -> (FritzMLModel) -> BasePredictor", "key.typeusr": "$s5model11FritzVision13BasePredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 832}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 795}], "key.bodylength": 63, "key.bodyoffset": 899, "key.doc.column": 10, "key.doc.comment": "Initialize model with FritzMLModel\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:managedModel:) public init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/BasePredictor.swift\" line=\"37\" column=\"10\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:</USR><Declaration>@objc(initWithModel:managedModel:) public init(model: FritzMLModel, managedModel: FritzManagedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 37, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 83, "key.docoffset": 710, "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 839, "key.offset": 839, "key.parsed_declaration": "public init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 37, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:\">init(model:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BasePredictor.Type) -> (FritzMLModel, FritzManagedModel) -> BasePredictor", "key.typeusr": "$s5model12managedModel11FritzVision13BasePredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1010}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1004}], "key.bodylength": 47, "key.bodyoffset": 1047, "key.doc.column": 20, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/BasePredictor.swift\" line=\"44\" column=\"20\"><Name>metadata</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 968, "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 78, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 1021, "key.offset": 1017, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 46, "key.parsed_scope.start": 44, "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1137}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1131}], "key.bodylength": 43, "key.bodyoffset": 1165, "key.doc.column": 20, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/BasePredictor.swift\" line=\"49\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 1099, "key.filepath": "/Users/vagrant/git/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 1148, "key.offset": 1144, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 51, "key.parsed_scope.start": 49, "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)tags"}], "key.typename": "BasePredictor.Type", "key.typeusr": "$s11FritzVision13BasePredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor"}]}}, {"/Users/vagrant/git/Source/FritzVision/DepthEstimation/CVPixelBufferExtension.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3677, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthDataImageProcessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11494, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5472, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionDepthModelOptions) public final class FritzVisionDepthModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 278}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 271}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 235}], "key.bodylength": 1026, "key.bodyoffset": 349, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 320}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 330}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionDepthModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDepthModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1092, "key.name": "FritzVisionDepthModelOptions", "key.namelength": 28, "key.nameoffset": 290, "key.offset": 284, "key.parsed_declaration": "public final class FritzVisionDepthModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 34, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionDepthModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 353}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 371, "key.offset": 360, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionDepthModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17DepthModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 497}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 491}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"20\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 435, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 508, "key.offset": 504, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 753}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 747}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"24\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 572, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 764, "key.offset": 760, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1328}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1322}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"33\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 802, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1339, "key.offset": 1335, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceVisionPrediction"}], "key.typename": "FritzVisionDepthModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17DepthModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionDepthModel) public final class FritzVisionDepthModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1514}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1507}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1483}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1454}], "key.bodylength": 2672, "key.bodyoffset": 1603, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1549}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1559}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1584}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionDepthModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDepthModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2756, "key.name": "FritzVisionDepthModel", "key.namelength": 21, "key.nameoffset": 1526, "key.offset": 1520, "key.parsed_declaration": "public final class FritzVisionDepthModel: NSObject, CoreMLOrVisionPredictor, DownloadableModel", "key.parsed_scope.end": 124, "key.parsed_scope.start": 43, "key.runtime_name": "FritzVisionDepthModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1613}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1607}], "key.bodylength": 46, "key.bodyoffset": 1664, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1631, "key.offset": 1620, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 47, "key.parsed_scope.start": 45, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1715}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 145, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1733, "key.offset": 1722, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB10DepthModelC11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1877}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1871}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1895, "key.offset": 1884, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1965}], "key.bodylength": 64, "key.bodyoffset": 2067, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 160, "key.name": "fetchModel(completionHandler:)", "key.namelength": 81, "key.nameoffset": 1984, "key.offset": 1972, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionDepthModel?, Error?) -> Void)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 56, "key.substructure": [], "key.typename": "(FritzVisionDepthModel.Type) -> (@escaping (FritzVisionDepthModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD10DepthModelCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB10DepthModelC05fetchD017completionHandleryyACSg_s5Error_pSgtc_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2136}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2153, "key.offset": 2143, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB10DepthModelC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2190}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2207, "key.offset": 2197, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionDepthModelOptions", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "FritzVisionDepthModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17DepthModelOptionsCmD", "key.usr": "s:11FritzVision0aB10DepthModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</Type>.PredictionResult = <Type usr=\"c:objc(cs)AVDepthData\">AVDepthData</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2253}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"c:objc(cs)AVDepthData\">AVDepthData</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 40, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2270, "key.offset": 2260, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = AVDepthData", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "AVDepthData.Type", "key.typeusr": "$sSo11AVDepthDataCmD", "key.usr": "s:11FritzVision0aB10DepthModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2337}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2331}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2348, "key.offset": 2344, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2472}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2465}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2441}], "key.bodylength": 190, "key.bodyoffset": 2508, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 218, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2481, "key.offset": 2481, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 71, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionDepthModel.Type) -> (FritzMLModel) -> FritzVisionDepthModel", "key.typeusr": "$s5model11FritzVision0bC10DepthModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2747}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2740}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2703}], "key.bodylength": 63, "key.bodyoffset": 2816, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2756, "key.offset": 2756, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 83, "key.parsed_scope.start": 80, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionDepthModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionDepthModel", "key.typeusr": "$s5model12managedModel11FritzVision0de5DepthC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2925}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2918}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 2884}], "key.bodylength": 98, "key.bodyoffset": 2972, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 134, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 2937, "key.offset": 2937, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 86, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzMLModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzMLModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "fritzMLModel", "key.namelength": 12, "key.nameoffset": 2981, "key.offset": 2977, "key.parsed_declaration": "let fritzMLModel = model.fritz().model as! FritzMLModel", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "FritzMLModel", "key.typeusr": "$s17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB10DepthModelC5modelAC0a7ManagedD0015SwiftIdentifiedD0_p_tcfc12fritzMLModelL_AE0aJ0Cvp"}], "key.typename": "(FritzVisionDepthModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionDepthModel", "key.typeusr": "$s5model11FritzVision0bC10DepthModelC0b7ManagedE0015SwiftIdentifiedE0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</Type> = .init(), completion: (<Type usr=\"c:objc(cs)AVDepthData\">AVDepthData</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4054}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4017}], "key.bodylength": 65, "key.bodyoffset": 4208, "key.doc.column": 15, "key.doc.comment": "Run image segmentation on a FritzVisionDepthMap.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.\n      Contains a FritzVisionDepthMap or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionDepthModelOptions = .init(), completion: (AVDepthData?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"118\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionDepthModelOptions = .init(), completion: (AVDepthData?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionDepthMap.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request. Contains a FritzVisionDepthMap or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request. Contains a FritzVisionDepthMap or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 310, "key.docoffset": 3705, "key.filepath": "/Users/vagrant/git/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVDepthData\">AVDepthData</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 213, "key.name": "predict(_:options:completion:)", "key.namelength": 140, "key.nameoffset": 4066, "key.offset": 4061, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionDepthModelOptions = .init(),\n  completion: (AVDepthData?, Error?) -> Void)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 118, "key.substructure": [], "key.typename": "(FritzVisionDepthModel) -> (FritzVisionImage, FritzVisionDepthModelOptions, (AVDepthData?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17DepthModelOptionsCySo11AVDepthDataCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)predict:options:completion:"}], "key.typename": "FritzVisionDepthModel.Type", "key.typeusr": "$s11FritzVision0aB10DepthModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionError.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 296, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 191}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 185}], "key.bodylength": 61, "key.bodyoffset": 233, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 221}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 226}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 97, "key.name": "FritzVisionError", "key.namelength": 16, "key.nameoffset": 203, "key.offset": 198, "key.parsed_declaration": "@objc public enum FritzVisionError: Int, Error", "key.parsed_scope.end": 15, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 236, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidSampleImageBuffer</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidSampleImageBuffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 24, "key.name": "invalidSampleImageBuffer", "key.namelength": 24, "key.nameoffset": 241, "key.offset": 241, "key.parsed_declaration": "case invalidSampleImageBuffer", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorInvalidSampleImageBuffer"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 268, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case errorProcessingImage</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>errorProcessingImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "errorProcessingImage", "key.namelength": 20, "key.nameoffset": 273, "key.offset": 273, "key.parsed_declaration": "case errorProcessingImage", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorErrorProcessingImage"}]}], "key.typename": "FritzVisionError.Type", "key.typeusr": "$s11FritzVision0aB5ErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionError"}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5752, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class CIImagePipeline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 308}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 225}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 201}], "key.bodylength": 1838, "key.bodyoffset": 348, "key.doc.comment": "Pipeline for appling image transformation functions to a CIImage.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 338}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>CIImagePipeline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1872, "key.name": "CIImagePipeline", "key.namelength": 15, "key.nameoffset": 321, "key.offset": 315, "key.parsed_declaration": "public class CIImagePipeline: NSObject", "key.parsed_scope.end": 77, "key.parsed_scope.start": 15, "key.runtime_name": "_TtC4main15CIImagePipeline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ResizeSamplingMethod) public enum <Type usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</Type>.ResizeSamplingMethod : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 427}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 397}], "key.bodylength": 225, "key.bodyoffset": 466, "key.doc.column": 15, "key.doc.comment": "Sampling method used to resize image.", "key.doc.declaration": "@objc(ResizeSamplingMethod) public enum FritzVision.CIImagePipeline.ResizeSamplingMethod : Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"20\" column=\"15\"><Name>ResizeSamplingMethod</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO</USR><Declaration>@objc(ResizeSamplingMethod) public enum FritzVision.CIImagePipeline.ResizeSamplingMethod : Int</Declaration><CommentParts><Abstract><Para>Sampling method used to resize image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "ResizeSamplingMethod", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 353, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 461}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ResizeSamplingMethod)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</ref.class>.<decl.name>ResizeSamplingMethod</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 258, "key.name": "ResizeSamplingMethod", "key.namelength": 20, "key.nameoffset": 439, "key.offset": 434, "key.parsed_declaration": "public enum ResizeSamplingMethod: Int", "key.parsed_scope.end": 29, "key.parsed_scope.start": 20, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 503, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case lanczos</Declaration>", "key.doc.column": 10, "key.doc.comment": "Lanczos Sampling method", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"22\" column=\"10\"><Name>lanczos</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7lanczosyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Lanczos Sampling method</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "lanczos", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 471, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>lanczos</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "lanczos", "key.namelength": 7, "key.nameoffset": 508, "key.offset": 508, "key.parsed_declaration": "case lanczos", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7lanczosyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 554, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case bicubic</Declaration>", "key.doc.column": 10, "key.doc.comment": "Bicubic Sampling method.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"25\" column=\"10\"><Name>bicubic</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7bicubicyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Bicubic Sampling method.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "bicubic", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 521, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bicubic</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "bicubic", "key.namelength": 7, "key.nameoffset": 559, "key.offset": 559, "key.parsed_declaration": "case bicubic", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7bicubicyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 677, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case affine</Declaration>", "key.doc.column": 10, "key.doc.comment": "Affine transformation resampling. This is the fastest method but results in more edge artifacts.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"28\" column=\"10\"><Name>affine</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO6affineyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Affine transformation resampling. This is the fastest method but results in more edge artifacts.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "affine", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 572, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>affine</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "affine", "key.namelength": 6, "key.nameoffset": 682, "key.offset": 682, "key.parsed_declaration": "case affine", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO6affineyA2EmF"}]}], "key.typename": "CIImagePipeline.ResizeSamplingMethod.Type", "key.typeusr": "$s11FritzVision15CIImagePipelineC20ResizeSamplingMethodOmD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var image: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 797}], "key.doc.column": 14, "key.doc.comment": "Current CIImage.", "key.doc.declaration": "public var image: CIImage", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"35\" column=\"14\"><Name>image</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(py)image</USR><Declaration>public var image: CIImage</Declaration><CommentParts><Abstract><Para>Current CIImage.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "image", "key.doc.type": "Other", "key.doclength": 21, "key.docoffset": 774, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "image", "key.namelength": 5, "key.nameoffset": 808, "key.offset": 804, "key.parsed_declaration": "public var image: CIImage", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(py)image"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var resizeSamplingMethod: <Type usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</Type>.<Type usr=\"s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO\">ResizeSamplingMethod</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 952}], "key.doc.column": 14, "key.doc.comment": "Sampling method use when resizing images.  Defaults to `.affine`, which is the fastest but produces the most artifacts.", "key.doc.declaration": "public var resizeSamplingMethod: FritzVision.CIImagePipeline.ResizeSamplingMethod", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"38\" column=\"14\"><Name>resizeSamplingMethod</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(py)resizeSamplingMethod</USR><Declaration>public var resizeSamplingMethod: FritzVision.CIImagePipeline.ResizeSamplingMethod</Declaration><CommentParts><Abstract><Para>Sampling method use when resizing images.  Defaults to <codeVoice>.affine</codeVoice>, which is the fastest but produces the most artifacts.</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "resizeSamplingMethod", "key.doc.type": "Other", "key.doclength": 124, "key.docoffset": 826, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resizeSamplingMethod</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</ref.class>.<ref.enum usr=\"s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO\">ResizeSamplingMethod</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "resizeSamplingMethod", "key.namelength": 20, "key.nameoffset": 963, "key.offset": 959, "key.parsed_declaration": "public var resizeSamplingMethod: ResizeSamplingMethod = .affine", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$s11FritzVision15CIImagePipelineC20ResizeSamplingMethodOD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(py)resizeSamplingMethod"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ image: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1248}], "key.bodylength": 87, "key.bodyoffset": 1306, "key.doc.column": 10, "key.doc.comment": "Create `CIImagePipeline`\n- Parameter image: Input CIImage\n- Parameter context: CIImage context. If not provided, uses FritzVisionImage shared context.", "key.doc.declaration": "public init(_ image: CIImage, context: CIContext? = nil)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"45\" column=\"10\"><Name>init(_:context:)</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(im)init:context:</USR><Declaration>public init(_ image: CIImage, context: CIContext? = nil)</Declaration><CommentParts><Abstract><Para>Create <codeVoice>CIImagePipeline</codeVoice></Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Input CIImage</Para></Discussion></Parameter><Parameter><Name>context</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CIImage context. If not provided, uses FritzVisionImage shared context.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "init(_:context:)", "key.doc.parameters": [{"discussion": [{"Para": "Input CIImage"}], "name": "image"}, {"discussion": [{"Para": "CIImage context. If not provided, uses FritzVisionImage shared context."}], "name": "context"}], "key.doc.type": "Function", "key.doclength": 167, "key.docoffset": 1079, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 139, "key.name": "init(_:context:)", "key.namelength": 49, "key.nameoffset": 1255, "key.offset": 1255, "key.parsed_declaration": "public init(_ image: CIImage, context: CIContext? = nil)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "(CIImagePipeline.Type) -> (CIImage, CIContext?) -> CIImagePipeline", "key.typeusr": "$s_7context11FritzVision15CIImagePipelineCSo0D0C_So9CIContextCSgtcD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(im)init:context:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func render() -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1442}], "key.bodylength": 121, "key.bodyoffset": 1482, "key.doc.column": 15, "key.doc.comment": "Render current CIImage to pixelBuffer", "key.doc.declaration": "public func render() -> CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"51\" column=\"15\"><Name>render()</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(im)render</USR><Declaration>public func render() -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Render current CIImage to pixelBuffer</Para></Abstract></CommentParts></Function>", "key.doc.line": 51, "key.doc.name": "render()", "key.doc.type": "Function", "key.doclength": 42, "key.docoffset": 1398, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>render</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "render()", "key.namelength": 8, "key.nameoffset": 1454, "key.offset": 1449, "key.parsed_declaration": "public func render() -> CVPixelBuffer?", "key.parsed_scope.end": 55, "key.parsed_scope.start": 51, "key.substructure": [], "key.typename": "(CIImagePipeline) -> () -> CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgycD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(im)render"}], "key.typename": "CIImagePipeline.Type", "key.typeusr": "$s11FritzVision15CIImagePipelineCmD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 24, "key.name": "MARK: - Image Processing", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2193}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2665, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 487}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 481}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 457}], "key.bodylength": 133, "key.bodyoffset": 529, "key.doc.column": 13, "key.doc.comment": "Describes the orientation of the image. The orientations match the [CGImagePropertyOrientation](https://developer.apple.com/documentation/imageio/cgimagepropertyorientation) Enumeration from Apple. Refer to that documentation for clear descriptions of each case.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift\" line=\"15\" column=\"13\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.doclength": 267, "key.docoffset": 190, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 522}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int32"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 169, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 499, "key.offset": 494, "key.parsed_declaration": "public enum FritzImageOrientation: Int32", "key.parsed_scope.end": 26, "key.parsed_scope.start": 15, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 533, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case up = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 543}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>up</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "up", "key.namelength": 2, "key.nameoffset": 538, "key.offset": 538, "key.parsed_declaration": "case up = 1", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUp"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 547, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case upMirrored</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>upMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "upMirrored", "key.namelength": 10, "key.nameoffset": 552, "key.offset": 552, "key.parsed_declaration": "case upMirrored", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUpMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 565, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case down</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>down</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "down", "key.namelength": 4, "key.nameoffset": 570, "key.offset": 570, "key.parsed_declaration": "case down", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDown"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 577, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case downMirrored</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>downMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "downMirrored", "key.namelength": 12, "key.nameoffset": 582, "key.offset": 582, "key.parsed_declaration": "case downMirrored", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDownMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 597, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftMirrored</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftMirrored", "key.namelength": 12, "key.nameoffset": 602, "key.offset": 602, "key.parsed_declaration": "case leftMirrored", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeftMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 617, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case right</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>right</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "right", "key.namelength": 5, "key.nameoffset": 622, "key.offset": 622, "key.parsed_declaration": "case right", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRight"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 630, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightMirrored</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightMirrored", "key.namelength": 13, "key.nameoffset": 635, "key.offset": 635, "key.parsed_declaration": "case rightMirrored", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRightMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 651, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case left</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>left</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "left", "key.namelength": 4, "key.nameoffset": 656, "key.offset": 656, "key.parsed_declaration": "case left", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeft"}]}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$s11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 689}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 665}], "key.bodylength": 1934, "key.bodyoffset": 729, "key.doc.column": 13, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift\" line=\"15\" column=\"13\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1968, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 706, "key.offset": 696, "key.parsed_declaration": "public extension FritzImageOrientation", "key.parsed_scope.end": 96, "key.parsed_scope.start": 29, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ uiOrientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type>)</Declaration>", "key.bodylength": 367, "key.bodyoffset": 777, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>uiOrientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 412, "key.name": "init(_:)", "key.namelength": 42, "key.nameoffset": 733, "key.offset": 733, "key.parsed_declaration": "init(_ uiOrientation: UIImage.Orientation)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc\">init(from:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (UIImage.Orientation) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOSo07UIImageD0VcD", "key.usr": "s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>)</Declaration>", "key.bodylength": 78, "key.bodyoffset": 1424, "key.doc.column": 3, "key.doc.comment": "Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.\n\n- Parameter connection: AVCaptureConnection", "key.doc.declaration": "init(from connection: AVCaptureConnection)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift\" line=\"49\" column=\"3\"><Name>init(from:)</Name><USR>s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc</USR><Declaration>init(from connection: AVCaptureConnection)</Declaration><CommentParts><Abstract><Para>Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.</Para></Abstract><Parameters><Parameter><Name>connection</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AVCaptureConnection</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 49, "key.doc.name": "init(from:)", "key.doc.parameters": [{"discussion": [{"Para": "AVCaptureConnection"}], "name": "connection"}], "key.doc.type": "Function", "key.doclength": 229, "key.docoffset": 1149, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 123, "key.name": "init(from:)", "key.namelength": 42, "key.nameoffset": 1380, "key.offset": 1380, "key.parsed_declaration": "init(from connection: AVCaptureConnection)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 49, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$s4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func fromAVCaptureConnection(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>) -&gt; <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.bodylength": 1054, "key.bodyoffset": 1607, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromAVCaptureConnection</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 1155, "key.name": "fromAVCaptureConnection(from:)", "key.namelength": 61, "key.nameoffset": 1519, "key.offset": 1507, "key.parsed_declaration": "static func fromAVCaptureConnection(from connection: AVCaptureConnection) -> FritzImageOrientation", "key.parsed_scope.end": 95, "key.parsed_scope.start": 53, "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$s4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO23fromAVCaptureConnection0E0ACSo0fG0C_tFZ"}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$s11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9366, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionCropAndScale) public enum FritzVisionCropAndScale : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 54}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 23}], "key.bodylength": 1224, "key.bodyoffset": 96, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 91}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionCropAndScale)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionCropAndScale</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1260, "key.name": "FritzVisionCropAndScale", "key.namelength": 23, "key.nameoffset": 66, "key.offset": 61, "key.parsed_declaration": "public enum FritzVisionCropAndScale: Int", "key.parsed_scope.end": 41, "key.parsed_scope.start": 6, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 99, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case centerCrop = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 117}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>centerCrop</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 14, "key.name": "centerCrop", "key.namelength": 10, "key.nameoffset": 104, "key.offset": 104, "key.parsed_declaration": "case centerCrop = 1", "key.parsed_scope.end": 7, "key.parsed_scope.start": 7, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleCenterCrop"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 121, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case scaleFill = 2</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 138}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFill</decl.name> = <syntaxtype.number>2</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "scaleFill", "key.namelength": 9, "key.nameoffset": 126, "key.offset": 126, "key.parsed_declaration": "case scaleFill = 2", "key.parsed_scope.end": 8, "key.parsed_scope.start": 8, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFill"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 142, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case scaleFit = 3</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 158}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFit</decl.name> = <syntaxtype.number>3</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "scaleFit", "key.namelength": 8, "key.nameoffset": 147, "key.offset": 147, "key.parsed_declaration": "case scaleFit = 3", "key.parsed_scope.end": 9, "key.parsed_scope.start": 9, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFit"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var visionOption: <Type usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 163}], "key.bodylength": 219, "key.bodyoffset": 215, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>visionOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 265, "key.name": "visionOption", "key.namelength": 12, "key.nameoffset": 174, "key.offset": 170, "key.parsed_declaration": "public var visionOption: VNImageCropAndScaleOption", "key.parsed_scope.end": 17, "key.parsed_scope.start": 11, "key.typename": "VNImageCropAndScaleOption", "key.typeusr": "$sSo25VNImageCropAndScaleOptionVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO12visionOptionSo07VNImagecdeG0Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getCenterCropRect(forImageToScaleSize size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 439}], "key.bodylength": 796, "key.bodyoffset": 521, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getCenterCropRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forImageToScaleSize</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 872, "key.name": "getCenterCropRect(forImageToScaleSize:)", "key.namelength": 51, "key.nameoffset": 458, "key.offset": 446, "key.parsed_declaration": "public static func getCenterCropRect(forImageToScaleSize size: CGSize) -> CGRect", "key.parsed_scope.end": 39, "key.parsed_scope.start": 19, "key.substructure": [{"key.annotated_decl": "<Declaration>let widthDifference: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>widthDifference</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 46, "key.name": "widthDifference", "key.namelength": 15, "key.nameoffset": 1060, "key.offset": 1056, "key.parsed_declaration": "let widthDifference = size.width - size.height", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ15widthDifferenceL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let targetSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>targetSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "targetSize", "key.namelength": 10, "key.nameoffset": 1113, "key.offset": 1109, "key.parsed_declaration": "let targetSize = CGSize(width: size.height, height: size.height)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ06targetL0L0_AIvp"}, {"key.annotated_decl": "<Declaration>let xStart: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xStart</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "xStart", "key.namelength": 6, "key.nameoffset": 1184, "key.offset": 1180, "key.parsed_declaration": "let xStart = widthDifference / 2", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ6xStartL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let origin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>origin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "origin", "key.namelength": 6, "key.nameoffset": 1223, "key.offset": 1219, "key.parsed_declaration": "let origin = CGPoint(x: xStart, y: 0.0)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ6originL0_So7CGPointVvp"}], "key.typename": "(FritzVisionCropAndScale.Type) -> (CGSize) -> CGRect", "key.typeusr": "$s19forImageToScaleSizeSo6CGRectVSo6CGSizeV_tcD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ"}], "key.typename": "FritzVisionCropAndScale.Type", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1464}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1403}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1403}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1403}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1403}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 1379}], "key.bodylength": 3666, "key.bodyoffset": 1505, "key.doc.column": 14, "key.doc.comment": "An image or image buffer used in vision detection.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"47\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 47, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.doclength": 55, "key.docoffset": 1324, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1495}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3701, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 1477, "key.offset": 1471, "key.parsed_declaration": "public class FritzVisionImage: NSObject", "key.parsed_scope.end": 157, "key.parsed_scope.start": 47, "key.runtime_name": "FritzVisionImage", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sharedContext: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1540}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1532}], "key.doc.column": 21, "key.doc.comment": "Shared CIContext", "key.doc.declaration": "@objc public static let sharedContext: CIContext", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"51\" column=\"21\"><Name>sharedContext</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage(cpy)sharedContext</USR><Declaration>@objc public static let sharedContext: CIContext</Declaration><CommentParts><Abstract><Para>Shared CIContext</Para></Abstract></CommentParts></Other>", "key.doc.line": 51, "key.doc.name": "sharedContext", "key.doc.type": "Other", "key.doclength": 21, "key.docoffset": 1509, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sharedContext</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "sharedContext", "key.namelength": 13, "key.nameoffset": 1558, "key.offset": 1547, "key.parsed_declaration": "public static let sharedContext = CIContext(options: [.useSoftwareRenderer : false])", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "CIContext", "key.typeusr": "$sSo9CIContextCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(cpy)sharedContext"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1658}], "key.doc.column": 14, "key.doc.comment": "CVPixelBuffer of image.", "key.doc.declaration": "public let imageBuffer: CVPixelBuffer?", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"54\" column=\"14\"><Name>imageBuffer</Name><USR>s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp</USR><Declaration>public let imageBuffer: CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>CVPixelBuffer of image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 54, "key.doc.name": "imageBuffer", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 1628, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "imageBuffer", "key.namelength": 11, "key.nameoffset": 1669, "key.offset": 1665, "key.parsed_declaration": "public let imageBuffer: CVPixelBuffer?", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1699}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampleBuffer</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "sampleBuffer", "key.namelength": 12, "key.nameoffset": 1710, "key.offset": 1706, "key.parsed_declaration": "public let sampleBuffer: CMSampleBuffer?", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "CMSampleBuffer?", "key.typeusr": "$sSo17CMSampleBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBufferSo08CMSampleE3RefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1742}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "image", "key.namelength": 5, "key.nameoffset": 1753, "key.offset": 1749, "key.parsed_declaration": "public let image: UIImage?", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "UIImage?", "key.typeusr": "$sSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB5ImageC5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1772}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 1783, "key.offset": 1779, "key.parsed_declaration": "public var metadata: FritzVisionImageMetadata?", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionImageMetadata?", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCSgD", "key.usr": "s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithBuffer:) public init(buffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1847}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 1822}], "key.bodylength": 82, "key.bodyoffset": 1884, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(buffer:)", "key.namelength": 28, "key.nameoffset": 1854, "key.offset": 1854, "key.parsed_declaration": "public init(buffer: CMSampleBuffer)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer) -> FritzVisionImage", "key.typeusr": "$s6buffer11FritzVision0bC5ImageCSo17CMSampleBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2001}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1971}], "key.bodylength": 87, "key.bodyoffset": 2042, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init(imageBuffer:)", "key.namelength": 32, "key.nameoffset": 2008, "key.offset": 2008, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer) -> FritzVisionImage", "key.typeusr": "$s11imageBuffer11FritzVision0cD5ImageCSo11CVBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2158}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2134}], "key.bodylength": 81, "key.bodyoffset": 2187, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 104, "key.name": "init(image:)", "key.namelength": 20, "key.nameoffset": 2165, "key.offset": 2165, "key.parsed_declaration": "public init(image: UIImage)", "key.parsed_scope.end": 79, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (UIImage) -> FritzVisionImage", "key.typeusr": "$s5image11FritzVision0bC5ImageCSo7UIImageC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:orientation:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>, orientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2309}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 2273}], "key.bodylength": 239, "key.bodyoffset": 2379, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:orientation:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 303, "key.name": "init(image:orientation:)", "key.namelength": 61, "key.nameoffset": 2316, "key.offset": 2316, "key.parsed_declaration": "public init(image: UIImage, orientation: CGImagePropertyOrientation)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 82, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2466, "key.offset": 2462, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 86, "key.parsed_scope.start": 86, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC5image11orientationACSo7UIImageC_So26CGImagePropertyOrientationVtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (UIImage, CGImagePropertyOrientation) -> FritzVisionImage", "key.typeusr": "$s5image11orientation11FritzVision0cD5ImageCSo7UIImageC_So26CGImagePropertyOrientationVtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:orientation:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, orientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2665}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 2623}], "key.bodylength": 245, "key.bodyoffset": 2747, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:orientation:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 321, "key.name": "init(imageBuffer:orientation:)", "key.namelength": 73, "key.nameoffset": 2672, "key.offset": 2672, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer, orientation: CGImagePropertyOrientation)", "key.parsed_scope.end": 99, "key.parsed_scope.start": 92, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2840, "key.offset": 2836, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC11imageBuffer11orientationACSo11CVBufferRefa_So26CGImagePropertyOrientationVtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer, CGImagePropertyOrientation) -> FritzVisionImage", "key.typeusr": "$s11imageBuffer11orientation11FritzVision0dE5ImageCSo11CVBufferRefa_So26CGImagePropertyOrientationVtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSampleBuffer:connection:) public init(sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>, connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3039}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 2997}], "key.bodylength": 230, "key.bodyoffset": 3115, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSampleBuffer:connection:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sampleBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>connection</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 300, "key.name": "init(sampleBuffer:connection:)", "key.namelength": 67, "key.nameoffset": 3046, "key.offset": 3046, "key.parsed_declaration": "public init(sampleBuffer: CMSampleBuffer, connection: AVCaptureConnection)", "key.parsed_scope.end": 109, "key.parsed_scope.start": 102, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 3209, "key.offset": 3205, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 106, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBuffer10connectionACSo08CMSampleE3Refa_So19AVCaptureConnectionCtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer, AVCaptureConnection) -> FritzVisionImage", "key.typeusr": "$s12sampleBuffer10connection11FritzVision0dE5ImageCSo08CMSampleB3Refa_So19AVCaptureConnectionCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildImageRequestHandler() -&gt; <Type usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3496}], "key.bodylength": 1607, "key.bodyoffset": 3562, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildImageRequestHandler</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1667, "key.name": "buildImageRequestHandler()", "key.namelength": 26, "key.nameoffset": 3508, "key.offset": 3503, "key.parsed_declaration": "public func buildImageRequestHandler() -> VNImageRequestHandler?", "key.parsed_scope.end": 156, "key.parsed_scope.start": 116, "key.substructure": [], "key.typename": "(FritzVisionImage) -> () -> VNImageRequestHandler?", "key.typeusr": "$sSo21VNImageRequestHandlerCSgycD", "key.usr": "s:11FritzVision0aB5ImageC05buildC14RequestHandlerSo07VNImageeF0CSgyF"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 38, "key.name": "MARK: - Image Size Computed Properties", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5177}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 29, "key.name": "MARK: - Image Type Conversion", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6347}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1408, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImageMetadata) public class FritzVisionImageMetadata : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 267}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 235}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 211}], "key.bodylength": 1090, "key.bodyoffset": 316, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 306}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImageMetadata)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImageMetadata</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1133, "key.name": "FritzVisionImageMetadata", "key.namelength": 24, "key.nameoffset": 280, "key.offset": 274, "key.parsed_declaration": "public class FritzVisionImageMetadata: NSObject", "key.parsed_scope.end": 46, "key.parsed_scope.start": 17, "key.runtime_name": "FritzVisionImageMetadata", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 328}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 321}], "key.bodylength": 14, "key.bodyoffset": 345, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 23, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 337, "key.offset": 337, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.substructure": [], "key.typename": "(FritzVisionImageMetadata.Type) -> () -> FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCycD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var orientation: <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 515}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 509}], "key.doc.column": 22, "key.doc.comment": "Orientation defaults to `FritzImageOrientation.right` which should work for rear facing cameras with a device orientation of Portrait.", "key.doc.declaration": "@objc public var orientation: FritzVision.FritzImageOrientation", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift\" line=\"21\" column=\"22\"><Name>orientation</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation</USR><Declaration>@objc public var orientation: FritzVision.FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Orientation defaults to <codeVoice>FritzImageOrientation.right</codeVoice> which should work for rear facing cameras with a device orientation of Portrait.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 366, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 526, "key.offset": 522, "key.parsed_declaration": "@objc public var orientation: FritzImageOrientation = .right", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOrientation", "key.typeusr": "$s11FritzVision0A16ImageOrientationOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cgOrientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 581}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 575}], "key.bodylength": 768, "key.bodyoffset": 635, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgOrientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 816, "key.name": "cgOrientation", "key.namelength": 13, "key.nameoffset": 592, "key.offset": 588, "key.parsed_declaration": "@objc public var cgOrientation: CGImagePropertyOrientation", "key.parsed_scope.end": 44, "key.parsed_scope.start": 23, "key.typename": "CGImagePropertyOrientation", "key.typeusr": "$sSo26CGImagePropertyOrientationVD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)cgOrientation"}], "key.typename": "FritzVisionImageMetadata.Type", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata"}]}}, {"/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 841, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabel) public class FritzVisionLabel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 307}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 246}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 222}], "key.bodylength": 468, "key.bodyoffset": 371, "key.doc.column": 14, "key.doc.comment": "Represents a label for an image.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift\" line=\"15\" column=\"14\"><Name>FritzVisionLabel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult</Declaration><CommentParts><Abstract><Para>Represents a label for an image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "FritzVisionLabel", "key.doc.type": "Class", "key.doclength": 37, "key.docoffset": 185, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 338}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 348}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 526, "key.name": "FritzVisionLabel", "key.namelength": 16, "key.nameoffset": 320, "key.offset": 314, "key.parsed_declaration": "public class FritzVisionLabel: NSObject, FritzPredictionResult", "key.parsed_scope.end": 35, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionLabel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 428}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 422}], "key.doc.column": 20, "key.doc.comment": "Human readable string of detected label.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift\" line=\"18\" column=\"20\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Human readable string of detected label.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 375, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 439, "key.offset": 435, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let confidence: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 519}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 513}], "key.doc.column": 20, "key.doc.comment": "Prediction confidence for label in range of [0, 1]", "key.doc.declaration": "@objc public let confidence: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift\" line=\"21\" column=\"20\"><Name>confidence</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence</USR><Declaration>@objc public let confidence: Double</Declaration><CommentParts><Abstract><Para>Prediction confidence for label in range of [0, 1]</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "confidence", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 456, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 530, "key.offset": 526, "key.parsed_declaration": "@objc public let confidence: Double", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 559}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 552}], "key.bodylength": 80, "key.bodyoffset": 593, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 106, "key.name": "description", "key.namelength": 11, "key.nameoffset": 572, "key.offset": 568, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 27, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:confidence:) public init(label: <Type usr=\"s:SS\">String</Type>, confidence: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 713}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 678}], "key.bodylength": 76, "key.bodyoffset": 761, "key.filepath": "/Users/vagrant/git/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:confidence:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>confidence</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init(label:confidence:)", "key.namelength": 39, "key.nameoffset": 720, "key.offset": 720, "key.parsed_declaration": "public init(label: String, confidence: Double)", "key.parsed_scope.end": 34, "key.parsed_scope.start": 30, "key.substructure": [], "key.typename": "(FritzVisionLabel.Type) -> (String, Double) -> FritzVisionLabel", "key.typeusr": "$s5label10confidence11FritzVision0cD5LabelCSS_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(im)initWithLabel:confidence:"}], "key.typename": "FritzVisionLabel.Type", "key.typeusr": "$s11FritzVision0aB5LabelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageInputFeatureProvider.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 741, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4689, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModelOptions) public final class FritzVisionLabelModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 272}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 229}], "key.bodylength": 1203, "key.bodyoffset": 343, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 314}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 324}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1269, "key.name": "FritzVisionLabelModelOptions", "key.namelength": 28, "key.nameoffset": 284, "key.offset": 278, "key.parsed_declaration": "public final class FritzVisionLabelModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 39, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionLabelModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 349}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 367, "key.offset": 356, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionLabelModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17LabelModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 529}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 523}], "key.doc.column": 20, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift\" line=\"20\" column=\"20\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 433, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 540, "key.offset": 536, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 750}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 744}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public let forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift\" line=\"24\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public let forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 569, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 761, "key.offset": 757, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public let forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1325}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1319}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift\" line=\"33\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 799, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1336, "key.offset": 1332, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1431}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1425}], "key.doc.column": 20, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift\" line=\"36\" column=\"20\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 1377, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 1442, "key.offset": 1438, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1474}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1468}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 1485, "key.offset": 1481, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)imageCropAndScaleOption"}], "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionLabelError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1556}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1550}], "key.bodylength": 22, "key.bodyoffset": 1603, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 1591}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1596}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionLabelError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 63, "key.name": "FritzVisionLabelError", "key.namelength": 21, "key.nameoffset": 1568, "key.offset": 1563, "key.parsed_declaration": "@objc public enum FritzVisionLabelError: Int, Error", "key.parsed_scope.end": 44, "key.parsed_scope.start": 42, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1606, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case noVisionModel</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noVisionModel</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "noVisionModel", "key.namelength": 13, "key.nameoffset": 1611, "key.offset": 1611, "key.parsed_declaration": "case noVisionModel", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "(FritzVisionLabelError.Type) -> FritzVisionLabelError", "key.typeusr": "$sy11FritzVision0aB10LabelErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError@FritzVisionLabelErrorNoVisionModel"}]}], "key.typename": "FritzVisionLabelError.Type", "key.typeusr": "$s11FritzVision0aB10LabelErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) public final class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1725}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1718}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1657}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1657}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1657}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1657}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1628}], "key.bodylength": 2111, "key.bodyoffset": 1815, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1760}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 1770}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1796}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "VisionFrameworkPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2196, "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 1737, "key.offset": 1731, "key.parsed_declaration": "public final class FritzVisionLabelModel: NSObject, VisionFrameworkPredictor, DownloadableModel", "key.parsed_scope.end": 97, "key.parsed_scope.start": 48, "key.runtime_name": "FritzVisionLabelModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</Type>.PredictionResult = [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1818}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</ref.class>.<decl.name>PredictionResult</decl.name> = [<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1835, "key.offset": 1825, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = [FritzVisionLabel]", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "[FritzVisionLabel].Type", "key.typeusr": "$sSay11FritzVision0aB5LabelCGmD", "key.usr": "s:11FritzVision0aB10LabelModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1875}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1892, "key.offset": 1882, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionLabelModelOptions", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "s:11FritzVision0aB10LabelModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1947}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1941}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 133, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1965, "key.offset": 1954, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(identifier: \"88e28aa99ea94c9a96c5aff175a84b16\", version: 1)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2099}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2093}], "key.bodylength": 46, "key.bodyoffset": 2150, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2117, "key.offset": 2106, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 56, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB10LabelModelC07managedD00a7ManagedD0AECvp\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2209}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2203}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 2227, "key.offset": 2216, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2388}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2399, "key.offset": 2395, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "public let managedModel: FritzManagedModel", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB10LabelModelC07managedD00a7ManagedD0AECvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2469}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2460}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2436}], "key.bodylength": 171, "key.bodyoffset": 2503, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 199, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2476, "key.offset": 2476, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel)", "key.parsed_scope.end": 70, "key.parsed_scope.start": 67, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLabelModel.Type) -> (FritzMLModel) -> FritzVisionLabelModel", "key.typeusr": "$s5model11FritzVision0bC10LabelModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2727}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2718}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2681}], "key.bodylength": 63, "key.bodyoffset": 2794, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2734, "key.offset": 2734, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 76, "key.parsed_scope.start": 73, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:\">init(model:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLabelModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionLabelModel", "key.typeusr": "$s5model12managedModel11FritzVision0de5LabelC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type> = .init(), completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3711}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3674}], "key.bodylength": 65, "key.bodyoffset": 3859, "key.doc.column": 15, "key.doc.comment": "Run label prediction requst on a UIImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift\" line=\"94\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run label prediction requst on a UIImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 94, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 307, "key.docoffset": 3365, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageLabeling/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 207, "key.name": "predict(_:options:completion:)", "key.namelength": 134, "key.nameoffset": 3723, "key.offset": 3718, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 94, "key.substructure": [], "key.typename": "(FritzVisionLabelModel) -> (FritzVisionImage, FritzVisionLabelModelOptions, ([FritzVisionLabel]?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17LabelModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)predict:options:completion:"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$s11FritzVision0aB10LabelModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationMasks+Deprecated.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2905, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6591, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Segmentation Masks", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2447}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5249, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModelOptions) public final class FritzVisionSegmentationModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 295}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 288}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 245}], "key.bodylength": 1039, "key.bodyoffset": 373, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 344}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 354}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1112, "key.name": "FritzVisionSegmentationModelOptions", "key.namelength": 35, "key.nameoffset": 307, "key.offset": 301, "key.parsed_declaration": "public final class FritzVisionSegmentationModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 35, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionSegmentationModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 379}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 397, "key.offset": 386, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionSegmentationModelOptions()", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB24SegmentationModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 532}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 526}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"21\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 470, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 543, "key.offset": 539, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 790}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 784}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"25\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 609, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 801, "key.offset": 797, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1365}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1359}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"34\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 839, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1376, "key.offset": 1372, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceVisionPrediction"}], "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$s11FritzVision0aB24SegmentationModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelSegmentationClass) public class ModelSegmentationClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1445}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1415}], "key.bodylength": 327, "key.bodyoffset": 1492, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1482}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelSegmentationClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelSegmentationClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 368, "key.name": "ModelSegmentationClass", "key.namelength": 22, "key.nameoffset": 1458, "key.offset": 1452, "key.parsed_declaration": "public class ModelSegmentationClass: NSObject", "key.parsed_scope.end": 53, "key.parsed_scope.start": 38, "key.runtime_name": "ModelSegmentationClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1544}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1538}], "key.doc.column": 20, "key.doc.comment": "Index in output array from model.", "key.doc.declaration": "@objc public let index: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"41\" column=\"20\"><Name>index</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index</USR><Declaration>@objc public let index: Int</Declaration><CommentParts><Abstract><Para>Index in output array from model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "index", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1498, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 1555, "key.offset": 1551, "key.parsed_declaration": "@objc public let index: Int", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1624}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1618}], "key.doc.column": 20, "key.doc.comment": "Label name for Model Segmentation Class.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"44\" column=\"20\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Label name for Model Segmentation Class.</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1571, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 1635, "key.offset": 1631, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1654}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 1665, "key.offset": 1661, "key.parsed_declaration": "public let color: rgbaValue", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.typeusr": "$ss5UInt8V1r_AB1gAB1bAB1atD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5colors5UInt8V1r_AF1gAF1bAF1atvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"s:SS\">String</Type>, index: <Type usr=\"s:Si\">Int</Type>, color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1687}], "key.bodylength": 72, "key.bodyoffset": 1745, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(label:index:color:)", "key.namelength": 49, "key.nameoffset": 1694, "key.offset": 1694, "key.parsed_declaration": "public init(label: String, index: Int, color: rgbaValue)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [], "key.typename": "(ModelSegmentationClass.Type) -> (String, Int, (r: UInt8, g: UInt8, b: UInt8, a: UInt8)) -> ModelSegmentationClass", "key.typeusr": "$s5label5index5color11FritzVision22ModelSegmentationClassCSS_Sis5UInt8V1r_AH1gAH1bAH1attcD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5label5index5colorACSS_Sis5UInt8V1r_AH1gAH1bAH1attcfc"}], "key.typename": "ModelSegmentationClass.Type", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModel) open class FritzVisionSegmentationModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 1920}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1859}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1859}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1859}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1859}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1823}], "key.bodylength": 2862, "key.bodyoffset": 1996, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1961}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1971}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2934, "key.name": "FritzVisionSegmentationModel", "key.namelength": 28, "key.nameoffset": 1931, "key.offset": 1925, "key.parsed_declaration": "open class FritzVisionSegmentationModel: NSObject, CoreMLOrVisionPredictor", "key.parsed_scope.end": 129, "key.parsed_scope.start": 58, "key.runtime_name": "FritzVisionSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1999}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2016, "key.offset": 2006, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB17SegmentationModelC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2053}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 60, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2070, "key.offset": 2060, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionSegmentationModelOptions", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$s11FritzVision0aB24SegmentationModelOptionsCmD", "key.usr": "s:11FritzVision0aB17SegmentationModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>.PredictionResult = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2126}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 58, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2143, "key.offset": 2133, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = FritzVisionSegmentationResult", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$s11FritzVision0aB18SegmentationResultCmD", "key.usr": "s:11FritzVision0aB17SegmentationModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2232}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2226}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2243, "key.offset": 2239, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2286}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2280}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 2297, "key.offset": 2293, "key.parsed_declaration": "@objc public let name: String", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)name"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2321}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2315}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 2332, "key.offset": 2328, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:name:classes:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2468}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2431}], "key.bodylength": 238, "key.bodyoffset": 2551, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 315, "key.name": "init(model:name:classes:)", "key.namelength": 74, "key.nameoffset": 2475, "key.offset": 2475, "key.parsed_declaration": "public init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 83, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (FritzMLModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG00D7MLModelC_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:name:classes:managedModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>], managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2846}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 2796}], "key.bodylength": 111, "key.bodyoffset": 2962, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:name:classes:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 221, "key.name": "init(model:name:classes:managedModel:)", "key.namelength": 107, "key.nameoffset": 2853, "key.offset": 2853, "key.parsed_declaration": "public init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass], managedModel: FritzManagedModel)", "key.parsed_scope.end": 91, "key.parsed_scope.start": 86, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (FritzMLModel, String, [ModelSegmentationClass], FritzManagedModel) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes12managedModel11FritzVision0fg12SegmentationE0C0f7ManagedE00F7MLModelC_SSSayAE0eH5ClassCGA2HCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:name:classes:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3137}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3130}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 3083}], "key.bodylength": 128, "key.bodyoffset": 3233, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 213, "key.name": "init(model:name:classes:)", "key.namelength": 82, "key.nameoffset": 3149, "key.offset": 3149, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 98, "key.parsed_scope.start": 95, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzMLModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzMLModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "fritzMLModel", "key.namelength": 12, "key.nameoffset": 3242, "key.offset": 3238, "key.parsed_declaration": "let fritzMLModel = model.fritz().model as! FritzMLModel", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "FritzMLModel", "key.typeusr": "$s17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB17SegmentationModelC5model4name7classesAC0a7ManagedD0015SwiftIdentifiedD0_p_SSSayAA0dC5ClassCGtcfc12fritzMLModelL_AG0aM0Cvp"}], "key.typename": "(FritzVisionSegmentationModel.Type) -> (SwiftIdentifiedModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG0015SwiftIdentifiedG0_p_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type> = .init(), completion: (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4625}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4588}], "key.bodylength": 65, "key.bodyoffset": 4791, "key.doc.column": 15, "key.doc.comment": "Run image segmentation on a FritzVisionImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"126\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 126, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 306, "key.docoffset": 4280, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 225, "key.name": "predict(_:options:completion:)", "key.namelength": 152, "key.nameoffset": 4637, "key.offset": 4632, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.parsed_scope.end": 128, "key.parsed_scope.start": 126, "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel) -> (FritzVisionImage, FritzVisionSegmentationModelOptions, (FritzVisionSegmentationResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD24SegmentationModelOptionsCyAC0cdF6ResultCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:"}], "key.typename": "FritzVisionSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias rgbaValue = (r: <Type usr=\"s:s5UInt8V\">UInt8</Type>, g: <Type usr=\"s:s5UInt8V\">UInt8</Type>, b: <Type usr=\"s:s5UInt8V\">UInt8</Type>, a: <Type usr=\"s:s5UInt8V\">UInt8</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5179}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>rgbaValue</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>r</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>g</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>b</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>a</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 62, "key.name": "rgbaValue", "key.namelength": 9, "key.nameoffset": 5196, "key.offset": 5186, "key.parsed_declaration": "public typealias rgbaValue = (r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.parsed_scope.end": 146, "key.parsed_scope.start": 146, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8).Type", "key.typeusr": "$ss5UInt8V1r_AB1gAB1bAB1atmD", "key.usr": "s:11FritzVision9rgbaValuea"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Blending.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3696, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4044, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSegmentationRegion) public enum SegmentationRegion : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2637}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 2606}], "key.bodylength": 215, "key.bodyoffset": 2674, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 2669}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSegmentationRegion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SegmentationRegion</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 246, "key.name": "SegmentationRegion", "key.namelength": 18, "key.nameoffset": 2649, "key.offset": 2644, "key.parsed_declaration": "public enum SegmentationRegion: Int", "key.parsed_scope.end": 100, "key.parsed_scope.start": 94, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2772, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case foreground</Declaration>", "key.doc.column": 8, "key.doc.comment": "Foreground is the region of the image where the alpha value of a mask is greater than 0.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift\" line=\"96\" column=\"8\"><Name>foreground</Name><USR>c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionForeground</USR><Declaration></Declaration><CommentParts><Abstract><Para>Foreground is the region of the image where the alpha value of a mask is greater than 0.</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "foreground", "key.doc.type": "Other", "key.doclength": 93, "key.docoffset": 2677, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>foreground</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "foreground", "key.namelength": 10, "key.nameoffset": 2777, "key.offset": 2777, "key.parsed_declaration": "case foreground", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "(SegmentationRegion.Type) -> SegmentationRegion", "key.typeusr": "$sy11FritzVision18SegmentationRegionOACmcD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionForeground"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2873, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case background</Declaration>", "key.doc.column": 8, "key.doc.comment": "Background is the region of the image where the alpha value of a mask is 0.", "key.doc.declaration": "", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift\" line=\"99\" column=\"8\"><Name>background</Name><USR>c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionBackground</USR><Declaration></Declaration><CommentParts><Abstract><Para>Background is the region of the image where the alpha value of a mask is 0.</Para></Abstract></CommentParts></Other>", "key.doc.line": 99, "key.doc.name": "background", "key.doc.type": "Other", "key.doclength": 80, "key.docoffset": 2791, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>background</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "background", "key.namelength": 10, "key.nameoffset": 2878, "key.offset": 2878, "key.parsed_declaration": "case background", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "(SegmentationRegion.Type) -> SegmentationRegion", "key.typeusr": "$sy11FritzVision18SegmentationRegionOACmcD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionBackground"}]}], "key.typename": "SegmentationRegion.Type", "key.typeusr": "$s11FritzVision18SegmentationRegionOmD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5457, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Segmentation Result", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 256}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationResult) public class FritzVisionSegmentationResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 382}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 345}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}], "key.bodylength": 4996, "key.bodyoffset": 459, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 426}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 436}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 5067, "key.name": "FritzVisionSegmentationResult", "key.namelength": 29, "key.nameoffset": 395, "key.offset": 389, "key.parsed_declaration": "public class FritzVisionSegmentationResult: NSObject, FritzPredictionResult", "key.parsed_scope.end": 157, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionSegmentationResult", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 505}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 499}], "key.doc.column": 20, "key.doc.comment": "Height of model output array.", "key.doc.declaration": "@objc public let height: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"19\" column=\"20\"><Name>height</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height</USR><Declaration>@objc public let height: Int</Declaration><CommentParts><Abstract><Para>Height of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "height", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 463, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 15, "key.name": "height", "key.namelength": 6, "key.nameoffset": 516, "key.offset": 512, "key.parsed_declaration": "@objc public let height: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 572}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 566}], "key.doc.column": 20, "key.doc.comment": "Width of model output array.", "key.doc.declaration": "@objc public let width: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"22\" column=\"20\"><Name>width</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width</USR><Declaration>@objc public let width: Int</Declaration><CommentParts><Abstract><Para>Width of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "width", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 531, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "width", "key.namelength": 5, "key.nameoffset": 583, "key.offset": 579, "key.parsed_declaration": "@objc public let width: Int", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 624}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 618}], "key.doc.column": 20, "key.doc.comment": "Model classes.", "key.doc.declaration": "@objc public let classes: [ModelSegmentationClass]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"25\" column=\"20\"><Name>classes</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes</USR><Declaration>@objc public let classes: [ModelSegmentationClass]</Declaration><CommentParts><Abstract><Para>Model classes.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "classes", "key.doc.type": "Other", "key.doclength": 19, "key.docoffset": 597, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 635, "key.offset": 631, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let predictionResult: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 719}], "key.doc.column": 20, "key.doc.comment": "Raw MLMultiArray result from prediction.", "key.doc.declaration": "@objc public let predictionResult: MLMultiArray", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"28\" column=\"20\"><Name>predictionResult</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult</USR><Declaration>@objc public let predictionResult: MLMultiArray</Declaration><CommentParts><Abstract><Para>Raw MLMultiArray result from prediction.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "predictionResult", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 672, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictionResult</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "predictionResult", "key.namelength": 16, "key.nameoffset": 736, "key.offset": 732, "key.parsed_declaration": "@objc public let predictionResult: MLMultiArray", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getMaxIndices:) public func getMaxIndices(minThreshold: <Type usr=\"s:Sd\">Double</Type> = 0.0) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3111}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 3087}, {"key.attribute": "source.decl.attribute.available", "key.length": 65, "key.offset": 3019}], "key.bodylength": 84, "key.bodyoffset": 3177, "key.doc.column": 15, "key.doc.comment": "Create 2D-Array same size as the model output with each point representing most likely class.\n\n- Parameters:\n  - minThreshold: Only include classes that have a probability greater than the minThreshold.", "key.doc.declaration": "@available(*, deprecated, renamed: \"getArrayOfMostLikelyClasses\")\n@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = 0.0) -> [Int32]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"102\" column=\"15\"><Name>getMaxIndices(minThreshold:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:</USR><Declaration>@available(*, deprecated, renamed: &quot;getArrayOfMostLikelyClasses&quot;)\n@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = 0.0) -&gt; [Int32]</Declaration><CommentParts><Abstract><Para>Create 2D-Array same size as the model output with each point representing most likely class.</Para></Abstract><Parameters><Parameter><Name>minThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Only include classes that have a probability greater than the minThreshold.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 102, "key.doc.name": "getMaxIndices(minThreshold:)", "key.doc.parameters": [{"discussion": [{"Para": "Only include classes that have a probability greater than the minThreshold."}], "name": "minThreshold"}], "key.doc.type": "Function", "key.doclength": 224, "key.docoffset": 2793, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getMaxIndices:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getMaxIndices</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 144, "key.name": "getMaxIndices(minThreshold:)", "key.namelength": 41, "key.nameoffset": 3123, "key.offset": 3118, "key.parsed_declaration": "public func getMaxIndices(minThreshold: Double = 0.0) -> [Int32]", "key.parsed_scope.end": 104, "key.parsed_scope.start": 102, "key.substructure": [], "key.typename": "(FritzVisionSegmentationResult) -> (Double) -> [Int32]", "key.typeusr": "$s12minThresholdSays5Int32VGSd_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: <Type usr=\"s:Sd\">Double</Type> = 0.0) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3610}], "key.bodylength": 373, "key.bodyoffset": 3730, "key.doc.column": 15, "key.doc.comment": "Gets a height * width length array with each entry the most likely class for that pixel.\n\nOptionally choose the minimum acceptable confidence score for a class to be chosen.\n\n- Parameter minimumConfidence: Minimum confidence score needed for class to be chosen.\n- Returns: 1D-Array of length [height x width].", "key.doc.declaration": "public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: Double = 0.0) -> [Int32]", "key.doc.discussion": [{"Para": "Optionally choose the minimum acceptable confidence score for a class to be chosen."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"112\" column=\"15\"><Name>getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)</Name><USR>s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF</USR><Declaration>public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: Double = 0.0) -&gt; [Int32]</Declaration><CommentParts><Abstract><Para>Gets a height * width length array with each entry the most likely class for that pixel.</Para></Abstract><Parameters><Parameter><Name>minimumConfidence</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Minimum confidence score needed for class to be chosen.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>1D-Array of length [height x width].</Para></ResultDiscussion><Discussion><Para>Optionally choose the minimum acceptable confidence score for a class to be chosen.</Para></Discussion></CommentParts></Function>", "key.doc.line": 112, "key.doc.name": "getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)", "key.doc.parameters": [{"discussion": [{"Para": "Minimum confidence score needed for class to be chosen."}], "name": "minimumConfidence"}], "key.doc.result_discussion": [{"Para": "1D-Array of length [height x width]."}], "key.doc.type": "Function", "key.doclength": 342, "key.docoffset": 3266, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getArrayOfMostLikelyClasses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withMinimumConfidenceScore</decl.var.parameter.argument_label> <decl.var.parameter.name>minimumConfidence</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 487, "key.name": "getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)", "key.namelength": 95, "key.nameoffset": 3622, "key.offset": 3617, "key.parsed_declaration": "public func getArrayOfMostLikelyClasses(\n  withMinimumConfidenceScore minimumConfidence: Double = 0.0\n) -> [Int32]", "key.parsed_scope.end": 121, "key.parsed_scope.start": 112, "key.substructure": [{"key.annotated_decl": "<Declaration>let pixelCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelCount", "key.namelength": 10, "key.nameoffset": 3739, "key.offset": 3735, "key.parsed_declaration": "let pixelCount = height * width", "key.parsed_scope.end": 115, "key.parsed_scope.start": 115, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF10pixelCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 3775, "key.offset": 3771, "key.parsed_declaration": "var bytes = [Float](repeating: 0, count: pixelCount * classes.count)", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "[Float]", "key.typeusr": "$sSaySfGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF5bytesL_SaySfGvp"}, {"key.annotated_decl": "<Declaration>var reducedMask: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>reducedMask</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "reducedMask", "key.namelength": 11, "key.nameoffset": 3848, "key.offset": 3844, "key.parsed_declaration": "var reducedMask = [Int32](repeating: 0, count: pixelCount)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "[Int32]", "key.typeusr": "$sSays5Int32VGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF11reducedMaskL_AHvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double) -> [Int32]", "key.typeusr": "$s26withMinimumConfidenceScoreSays5Int32VGSd_tcD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF"}], "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$s11FritzVision0aB18SegmentationResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/UIColor+rgbaValue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 852, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2096, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationClass) public class FritzVisionHairSegmentationClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 277}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 237}], "key.bodylength": 366, "key.bodyoffset": 334, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionHairSegmentationModel.swift", "key.doc.declaration": "@objc(FritzVisionHairSegmentationClass) public class FritzVisionHairSegmentationClass : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift\" line=\"13\" column=\"14\"><Name>FritzVisionHairSegmentationClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationClass</USR><Declaration>@objc(FritzVisionHairSegmentationClass) public class FritzVisionHairSegmentationClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionHairSegmentationModel.swift</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionHairSegmentationClass", "key.doc.type": "Class", "key.doclength": 60, "key.docoffset": 177, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 324}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 417, "key.name": "FritzVisionHairSegmentationClass", "key.namelength": 32, "key.nameoffset": 290, "key.offset": 284, "key.parsed_declaration": "public class FritzVisionHairSegmentationClass: NSObject", "key.parsed_scope.end": 21, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHairSegmentationClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 343}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 337}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 361, "key.offset": 350, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let hair: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 439}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>hair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 88, "key.name": "hair", "key.namelength": 4, "key.nameoffset": 463, "key.offset": 452, "key.parsed_declaration": "@objc public static let hair = ModelSegmentationClass(label: \"Hair\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationClass(cpy)hair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 552}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 546}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 140, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 570, "key.offset": 559, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationClass(cpy)allClasses"}], "key.typename": "FritzVisionHairSegmentationClass.Type", "key.typeusr": "$s11FritzVision0aB21HairSegmentationClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationModel) public final class FritzVisionHairSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 820}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 813}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 773}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 749}], "key.bodylength": 1179, "key.bodyoffset": 915, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect hair.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionHairSegmentationModel) public final class FritzVisionHairSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift\" line=\"27\" column=\"20\"><Name>FritzVisionHairSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionHairSegmentationModel) public final class FritzVisionHairSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect hair.</Para></Abstract></CommentParts></Class>", "key.doc.line": 27, "key.doc.name": "FritzVisionHairSegmentationModel", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 704, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 866}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 896}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1269, "key.name": "FritzVisionHairSegmentationModel", "key.namelength": 32, "key.nameoffset": 832, "key.offset": 826, "key.parsed_declaration": "public final class FritzVisionHairSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 54, "key.parsed_scope.start": 27, "key.runtime_name": "FritzVisionHairSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 927}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 921}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 945, "key.offset": 934, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"aa7e346857a04cff993e8f2d225a96c8\", version: 5, cpuAndGPUOnly: true)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1075}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1069}], "key.bodylength": 46, "key.bodyoffset": 1126, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1093, "key.offset": 1082, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1185}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1179}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1203, "key.offset": 1192, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1306}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1299}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1275}], "key.bodylength": 99, "key.bodyoffset": 1345, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1318, "key.offset": 1318, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionHairSegmentationModel", "key.typeusr": "$s5model11FritzVision0bC21HairSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1495}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1488}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1451}], "key.bodylength": 127, "key.bodyoffset": 1567, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 188, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1507, "key.offset": 1507, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionHairSegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de16HairSegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel\">FritzVisionHairSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1922}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1880}], "key.bodylength": 57, "key.bodyoffset": 2035, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift\" line=\"51\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 51, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 1701, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/HairSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel\">FritzVisionHairSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 164, "key.name": "fetchModel(completionHandler:)", "key.namelength": 92, "key.nameoffset": 1941, "key.offset": 1929, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 51, "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModel.Type) -> (@escaping (FritzVisionHairSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD21HairSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionHairSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB21HairSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3535, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomClass) public class FritzVisionLivingRoomClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 268}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 234}], "key.bodylength": 1781, "key.bodyoffset": 319, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 309}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1826, "key.name": "FritzVisionLivingRoomClass", "key.namelength": 26, "key.nameoffset": 281, "key.offset": 275, "key.parsed_declaration": "public class FritzVisionLivingRoomClass: NSObject", "key.parsed_scope.end": 38, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionLivingRoomClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 328}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 322}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 346, "key.offset": 335, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let chair: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 430}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 424}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>chair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 94, "key.name": "chair", "key.namelength": 5, "key.nameoffset": 448, "key.offset": 437, "key.parsed_declaration": "@objc public static let chair = ModelSegmentationClass(label: \"Chair\", index: 1, color: (0, 128, 128, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)chair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let wall: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 540}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 534}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wall</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "wall", "key.namelength": 4, "key.nameoffset": 558, "key.offset": 547, "key.parsed_declaration": "@objc public static let wall = ModelSegmentationClass(label: \"Wall\", index: 2, color: (0, 0, 128, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)wall"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let coffeeTable: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 646}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 640}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>coffeeTable</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "coffeeTable", "key.namelength": 11, "key.nameoffset": 664, "key.offset": 653, "key.parsed_declaration": "@objc public static let coffeeTable = ModelSegmentationClass(label: \"Coffee Table\", index: 3, color: (230, 25, 75, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)coffeeTable"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ceiling: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 769}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 763}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ceiling</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "ceiling", "key.namelength": 7, "key.nameoffset": 787, "key.offset": 776, "key.parsed_declaration": "@objc public static let ceiling = ModelSegmentationClass(label: \"Ceiling\", index: 4, color: (255, 215, 180, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)ceiling"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let floor: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 885}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 879}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>floor</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "floor", "key.namelength": 5, "key.nameoffset": 903, "key.offset": 892, "key.parsed_declaration": "@objc public static let floor = ModelSegmentationClass(label: \"Floor\", index: 5, color: (245, 130, 48, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)floor"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bed: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 996}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 990}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bed</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "bed", "key.namelength": 3, "key.nameoffset": 1014, "key.offset": 1003, "key.parsed_declaration": "@objc public static let bed = ModelSegmentationClass(label: \"Bed\", index: 6, color: (255, 255, 25, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)bed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let lamp: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1103}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1097}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lamp</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "lamp", "key.namelength": 4, "key.nameoffset": 1121, "key.offset": 1110, "key.parsed_declaration": "@objc public static let lamp = ModelSegmentationClass(label: \"Lamp\", index: 7, color: (210, 245, 60, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)lamp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sofa: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1212}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1206}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sofa</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "sofa", "key.namelength": 4, "key.nameoffset": 1230, "key.offset": 1219, "key.parsed_declaration": "@objc public static let sofa = ModelSegmentationClass(label: \"Sofa, couch, lounge\", index: 8, color: (70, 240, 240, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)sofa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let windowpane: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1336}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1330}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>windowpane</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 104, "key.name": "windowpane", "key.namelength": 10, "key.nameoffset": 1354, "key.offset": 1343, "key.parsed_declaration": "@objc public static let windowpane = ModelSegmentationClass(label: \"Windowpane\", index: 9, color: (0, 130, 200, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)windowpane"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pillow: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1456}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1450}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pillow</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "pillow", "key.namelength": 6, "key.nameoffset": 1474, "key.offset": 1463, "key.parsed_declaration": "@objc public static let pillow = ModelSegmentationClass(label: \"Pillow\", index: 10, color: (145, 30, 180, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)pillow"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1573}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1567}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 519, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 1591, "key.offset": 1580, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)allClasses"}], "key.typename": "FritzVisionLivingRoomClass.Type", "key.typeusr": "$s11FritzVision0aB15LivingRoomClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2248}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2241}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 2195}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2171}], "key.bodylength": 1184, "key.bodyoffset": 2349, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common living room objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift\" line=\"44\" column=\"20\"><Name>FritzVisionLivingRoomSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "FritzVisionLivingRoomSegmentationModel", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 2104, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 2300}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 2330}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1280, "key.name": "FritzVisionLivingRoomSegmentationModel", "key.namelength": 38, "key.nameoffset": 2260, "key.offset": 2254, "key.parsed_declaration": "public final class FritzVisionLivingRoomSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 72, "key.parsed_scope.start": 44, "key.runtime_name": "FritzVisionLivingRoomSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2361}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2355}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 2379, "key.offset": 2368, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"409c9c87ae6b47eb9f861ee0c6f85753\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2509}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2503}], "key.bodylength": 46, "key.bodyoffset": 2560, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2527, "key.offset": 2516, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 50, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2644}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2637}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2613}], "key.bodylength": 99, "key.bodyoffset": 2683, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2656, "key.offset": 2656, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 55, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionLivingRoomSegmentationModel", "key.typeusr": "$s5model11FritzVision0bC27LivingRoomSegmentationModelC0b7ManagedG00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2833}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2826}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2789}], "key.bodylength": 123, "key.bodyoffset": 2905, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 184, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2845, "key.offset": 2845, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 60, "key.parsed_scope.start": 58, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionLivingRoomSegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de22LivingRoomSegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3041}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3035}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 3059, "key.offset": 3048, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel\">FritzVisionLivingRoomSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3352}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3310}], "key.bodylength": 57, "key.bodyoffset": 3471, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift\" line=\"68\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 68, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 3131, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel\">FritzVisionLivingRoomSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 170, "key.name": "fetchModel(completionHandler:)", "key.namelength": 98, "key.nameoffset": 3371, "key.offset": 3359, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 70, "key.parsed_scope.start": 68, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> (@escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD27LivingRoomSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLivingRoomSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB27LivingRoomSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4953, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorClass) public class FritzVisionOutdoorClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 229}], "key.bodylength": 3228, "key.bodyoffset": 308, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 298}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3270, "key.name": "FritzVisionOutdoorClass", "key.namelength": 23, "key.nameoffset": 273, "key.offset": 267, "key.parsed_declaration": "public class FritzVisionOutdoorClass: NSObject", "key.parsed_scope.end": 59, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionOutdoorClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 317}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 311}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 335, "key.offset": 324, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let building: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 419}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 413}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>building</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "building", "key.namelength": 8, "key.nameoffset": 437, "key.offset": 426, "key.parsed_declaration": "@objc public static let building = ModelSegmentationClass(label: \"Building\", index: 1, color: (60, 180, 75, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)building"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 535}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 529}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 553, "key.offset": 542, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(label: \"Sky\", index: 2, color: (255, 225, 25, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let tree: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 642}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 636}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tree</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "tree", "key.namelength": 4, "key.nameoffset": 660, "key.offset": 649, "key.parsed_declaration": "@objc public static let tree = ModelSegmentationClass(label: \"Tree\", index: 3, color: (0, 130, 200, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)tree"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sidewalk: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 750}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 744}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sidewalk</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 101, "key.name": "sidewalk", "key.namelength": 8, "key.nameoffset": 768, "key.offset": 757, "key.parsed_declaration": "@objc public static let sidewalk = ModelSegmentationClass(label: \"Sidewalk\", index: 4, color: (245, 130, 48, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sidewalk"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ground: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 867}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 861}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ground</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "ground", "key.namelength": 6, "key.nameoffset": 885, "key.offset": 874, "key.parsed_declaration": "@objc public static let ground = ModelSegmentationClass(label: \"Ground\", index: 5, color: (145, 30, 180, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)ground"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let car: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 980}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 974}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>car</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "car", "key.namelength": 3, "key.nameoffset": 998, "key.offset": 987, "key.parsed_declaration": "@objc public static let car = ModelSegmentationClass(label: \"Car\", index: 6, color: (70, 240, 240, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)car"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let water: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1087}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1081}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>water</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "water", "key.namelength": 5, "key.nameoffset": 1105, "key.offset": 1094, "key.parsed_declaration": "@objc public static let water = ModelSegmentationClass(label: \"Water\", index: 7, color: (240, 50, 230, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)water"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let house: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1198}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1192}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>house</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "house", "key.namelength": 5, "key.nameoffset": 1216, "key.offset": 1205, "key.parsed_declaration": "@objc public static let house = ModelSegmentationClass(label: \"House\", index: 8, color: (210, 245, 60, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)house"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let fence: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1309}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1303}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fence</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 96, "key.name": "fence", "key.namelength": 5, "key.nameoffset": 1327, "key.offset": 1316, "key.parsed_declaration": "@objc public static let fence = ModelSegmentationClass(label: \"Fence\", index: 9, color: (250, 190, 190, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)fence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sign: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1421}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1415}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sign</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "sign", "key.namelength": 4, "key.nameoffset": 1439, "key.offset": 1428, "key.parsed_declaration": "@objc public static let sign = ModelSegmentationClass(label: \"Sign\", index: 10, color: (0, 128, 128, 255))", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sign"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let skyscraper: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1530}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1524}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>skyscraper</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "skyscraper", "key.namelength": 10, "key.nameoffset": 1548, "key.offset": 1537, "key.parsed_declaration": "@objc public static let skyscraper = ModelSegmentationClass(label: \"Skyscraper\", index: 11, color: (230, 190, 255, 255))", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)skyscraper"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bridge: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1653}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1647}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bridge</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "bridge", "key.namelength": 6, "key.nameoffset": 1671, "key.offset": 1660, "key.parsed_declaration": "@objc public static let bridge = ModelSegmentationClass(label: \"Bridge\", index: 12, color: (170, 110, 40, 255))", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bridge"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let river: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1767}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1761}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>river</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "river", "key.namelength": 5, "key.nameoffset": 1785, "key.offset": 1774, "key.parsed_declaration": "@objc public static let river = ModelSegmentationClass(label: \"River\", index: 13, color: (255, 250, 200, 255))", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)river"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bus: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1880}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1874}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 89, "key.name": "bus", "key.namelength": 3, "key.nameoffset": 1898, "key.offset": 1887, "key.parsed_declaration": "@objc public static let bus = ModelSegmentationClass(label: \"Bus\", index: 14, color: (128, 0, 0, 255))", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let truck: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1985}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1979}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>truck</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "truck", "key.namelength": 5, "key.nameoffset": 2003, "key.offset": 1992, "key.parsed_declaration": "@objc public static let truck = ModelSegmentationClass(label: \"Truck\", index: 15, color: (170, 255, 195, 255))", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)truck"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let van: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2098}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2092}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>van</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "van", "key.namelength": 3, "key.nameoffset": 2116, "key.offset": 2105, "key.parsed_declaration": "@objc public static let van = ModelSegmentationClass(label: \"Van\", index: 16, color: (128, 128, 0, 255))", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)van"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let motorbike: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2205}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2199}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>motorbike</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 105, "key.name": "motorbike", "key.namelength": 9, "key.nameoffset": 2223, "key.offset": 2212, "key.parsed_declaration": "@objc public static let motorbike = ModelSegmentationClass(label: \"Motorbike\", index: 17, color: (255, 215, 180, 255))", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)motorbike"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bicycle: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2326}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2320}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicycle</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "bicycle", "key.namelength": 7, "key.nameoffset": 2344, "key.offset": 2333, "key.parsed_declaration": "@objc public static let bicycle = ModelSegmentationClass(label: \"Bicycle\", index: 18, color: (0, 0, 128, 255))", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bicycle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let trafficLight: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2439}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2433}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trafficLight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 112, "key.name": "trafficLight", "key.namelength": 12, "key.nameoffset": 2457, "key.offset": 2446, "key.parsed_declaration": "@objc public static let trafficLight = ModelSegmentationClass(label: \"Traffic light\", index: 19, color: (128, 128, 128, 255))", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)trafficLight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2567}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2561}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 99, "key.name": "person", "key.namelength": 6, "key.nameoffset": 2585, "key.offset": 2574, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 20, color: (255, 255, 255, 255))", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2685}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2679}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 843, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 2703, "key.offset": 2692, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)allClasses"}], "key.typename": "FritzVisionOutdoorClass.Type", "key.typeusr": "$s11FritzVision0aB12OutdoorClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 3677}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3670}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 3627}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3603}], "key.bodylength": 1176, "key.bodyoffset": 3775, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift\" line=\"65\" column=\"20\"><Name>FritzVisionOutdoorSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 65, "key.doc.name": "FritzVisionOutdoorSegmentationModel", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 3540, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 3726}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 3756}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1269, "key.name": "FritzVisionOutdoorSegmentationModel", "key.namelength": 35, "key.nameoffset": 3689, "key.offset": 3683, "key.parsed_declaration": "public final class FritzVisionOutdoorSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 94, "key.parsed_scope.start": 65, "key.runtime_name": "FritzVisionOutdoorSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3787}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3781}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 3805, "key.offset": 3794, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"f7eb11b912224da9b7d4840a1749a4c2\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3935}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3929}], "key.bodylength": 46, "key.bodyoffset": 3986, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 3953, "key.offset": 3942, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 71, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4070}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4063}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 4039}], "key.bodylength": 93, "key.bodyoffset": 4109, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4082, "key.offset": 4082, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 76, "key.parsed_scope.start": 74, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionOutdoorSegmentationModel", "key.typeusr": "$s5model11FritzVision0bC24OutdoorSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4256}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4249}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4212}], "key.bodylength": 121, "key.bodyoffset": 4328, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 182, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 4268, "key.offset": 4268, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 80, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionOutdoorSegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de19OutdoorSegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4462}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4456}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 4480, "key.offset": 4469, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel\">FritzVisionOutdoorSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4773}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 4731}], "key.bodylength": 57, "key.bodyoffset": 4889, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift\" line=\"90\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 90, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 4552, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel\">FritzVisionOutdoorSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 167, "key.name": "fetchModel(completionHandler:)", "key.namelength": 95, "key.nameoffset": 4792, "key.offset": 4780, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 90, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (@escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD24OutdoorSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionOutdoorSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB24OutdoorSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2188, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationMediumClass) public class FritzVisionPeopleSegmentationMediumClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 294}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 246}], "key.bodylength": 388, "key.bodyoffset": 359, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 349}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationMediumClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationMediumClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 447, "key.name": "FritzVisionPeopleSegmentationMediumClass", "key.namelength": 40, "key.nameoffset": 307, "key.offset": 301, "key.parsed_declaration": "public class FritzVisionPeopleSegmentationMediumClass: NSObject", "key.parsed_scope.end": 20, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionPeopleSegmentationMediumClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 368}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 362}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 386, "key.offset": 375, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 470}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 464}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "person", "key.namelength": 6, "key.nameoffset": 488, "key.offset": 477, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 581}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 575}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 158, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 599, "key.offset": 588, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleSegmentationMediumClass.Type", "key.typeusr": "$s11FritzVision0aB29PeopleSegmentationMediumClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 876}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 869}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 821}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 797}], "key.bodylength": 1207, "key.bodyoffset": 979, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift\" line=\"25\" column=\"20\"><Name>FritzVisionPeopleSegmentationMediumModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 25, "key.doc.name": "FritzVisionPeopleSegmentationMediumModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 750, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 930}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 960}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationMediumModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationMediumModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1305, "key.name": "FritzVisionPeopleSegmentationMediumModel", "key.namelength": 40, "key.nameoffset": 888, "key.offset": 882, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationMediumModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 52, "key.parsed_scope.start": 25, "key.runtime_name": "FritzVisionPeopleSegmentationMediumModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 991}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 985}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1009, "key.offset": 998, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"d470196ca5a04457ae0644a50fc654b7\", version: 2, cpuAndGPUOnly: true)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1139}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1133}], "key.bodylength": 46, "key.bodyoffset": 1190, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1157, "key.offset": 1146, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1249}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1243}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1267, "key.offset": 1256, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1370}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1363}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1339}], "key.bodylength": 109, "key.bodyoffset": 1409, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 137, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1382, "key.offset": 1382, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> (FritzMLModel) -> FritzVisionPeopleSegmentationMediumModel", "key.typeusr": "$s5model11FritzVision0bC29PeopleSegmentationMediumModelC0b7ManagedG00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1569}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1562}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1525}], "key.bodylength": 137, "key.bodyoffset": 1641, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1581, "key.offset": 1581, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 41, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPeopleSegmentationMediumModel", "key.typeusr": "$s5model12managedModel11FritzVision0de24PeopleSegmentationMediumC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel\">FritzVisionPeopleSegmentationMediumModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2006}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1964}], "key.bodylength": 57, "key.bodyoffset": 2127, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift\" line=\"49\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 49, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 1785, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel\">FritzVisionPeopleSegmentationMediumModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 172, "key.name": "fetchModel(completionHandler:)", "key.namelength": 100, "key.nameoffset": 2025, "key.offset": 2013, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> Void)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 49, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> (@escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD29PeopleSegmentationMediumModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationMediumModel.Type", "key.typeusr": "$s11FritzVision0aB29PeopleSegmentationMediumModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2107, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 320}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 290}], "key.bodylength": 352, "key.bodyoffset": 367, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionPeopleSegmentationModel", "key.doc.declaration": "@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift\" line=\"13\" column=\"14\"><Name>FritzVisionPeopleClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleClass</USR><Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionPeopleSegmentationModel</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionPeopleClass", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 234, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 357}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 393, "key.name": "FritzVisionPeopleClass", "key.namelength": 22, "key.nameoffset": 333, "key.offset": 327, "key.parsed_declaration": "public class FritzVisionPeopleClass: NSObject", "key.parsed_scope.end": 21, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPeopleClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 376}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 370}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 394, "key.offset": 383, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 478}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 472}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "person", "key.namelength": 6, "key.nameoffset": 496, "key.offset": 485, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 589}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 583}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 122, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 607, "key.offset": 596, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleClass.Type", "key.typeusr": "$s11FritzVision0aB11PeopleClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 843}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 836}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 794}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 770}], "key.bodylength": 1165, "key.bodyoffset": 940, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift\" line=\"27\" column=\"20\"><Name>FritzVisionPeopleSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 27, "key.doc.name": "FritzVisionPeopleSegmentationModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 723, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 891}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 921}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1257, "key.name": "FritzVisionPeopleSegmentationModel", "key.namelength": 34, "key.nameoffset": 855, "key.offset": 849, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 54, "key.parsed_scope.start": 27, "key.runtime_name": "FritzVisionPeopleSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 952}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 946}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 970, "key.offset": 959, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"438a0e2c1c1c4a449b1a708dbb309e06\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1100}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1094}], "key.bodylength": 46, "key.bodyoffset": 1151, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1118, "key.offset": 1107, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1210}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1204}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1228, "key.offset": 1217, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1331}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1324}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1300}], "key.bodylength": 91, "key.bodyoffset": 1370, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1343, "key.offset": 1343, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionPeopleSegmentationModel", "key.typeusr": "$s5model11FritzVision0bC23PeopleSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1512}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1505}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1468}], "key.bodylength": 119, "key.bodyoffset": 1584, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 180, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1524, "key.offset": 1524, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPeopleSegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de18PeopleSegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel\">FritzVisionPeopleSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1931}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1889}], "key.bodylength": 57, "key.bodyoffset": 2046, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift\" line=\"51\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 51, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 1710, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel\">FritzVisionPeopleSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 166, "key.name": "fetchModel(completionHandler:)", "key.namelength": 94, "key.nameoffset": 1950, "key.offset": 1938, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 51, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> (@escaping (FritzVisionPeopleSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD23PeopleSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB23PeopleSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2139, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetClass) public class FritzVisionPetClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 247}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 220}], "key.bodylength": 378, "key.bodyoffset": 291, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 416, "key.name": "FritzVisionPetClass", "key.namelength": 19, "key.nameoffset": 260, "key.offset": 254, "key.parsed_declaration": "public class FritzVisionPetClass: NSObject", "key.parsed_scope.end": 20, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionPetClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 300}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 294}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 318, "key.offset": 307, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pet: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 402}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 396}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pet</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "pet", "key.namelength": 3, "key.nameoffset": 420, "key.offset": 409, "key.parsed_declaration": "@objc public static let pet = ModelSegmentationClass(label: \"Pet\", index: 1, color: (0, 128, 128, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)pet"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 509}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 503}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 152, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 527, "key.offset": 516, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)allClasses"}], "key.typename": "FritzVisionPetClass.Type", "key.typeusr": "$s11FritzVision0aB8PetClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetSegmentationModel) public final class FritzVisionPetSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 788}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 781}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 38, "key.offset": 742}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 718}], "key.bodylength": 1255, "key.bodyoffset": 882, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModel) public final class FritzVisionPetSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift\" line=\"26\" column=\"20\"><Name>FritzVisionPetSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModel) public final class FritzVisionPetSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 26, "key.doc.name": "FritzVisionPetSegmentationModel", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 673, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 833}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 863}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1344, "key.name": "FritzVisionPetSegmentationModel", "key.namelength": 31, "key.nameoffset": 800, "key.offset": 794, "key.parsed_declaration": "public final class FritzVisionPetSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 61, "key.parsed_scope.start": 26, "key.runtime_name": "FritzVisionPetSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 892}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 886}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 145, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 910, "key.offset": 899, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1054}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1048}], "key.bodylength": 46, "key.bodyoffset": 1105, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1072, "key.offset": 1061, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 34, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1287}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1280}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1256}], "key.bodylength": 85, "key.bodyoffset": 1326, "key.doc.column": 22, "key.doc.comment": "Build Pet Segmentation Model with provided model.\n\n- Parameter model: Model to use", "key.doc.declaration": "@objc(initWithModel:) public convenience init(model: FritzMLModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift\" line=\"42\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public convenience init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Build Pet Segmentation Model with provided model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Model to use</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 42, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Model to use"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1156, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1299, "key.offset": 1299, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionPetSegmentationModel", "key.typeusr": "$s5model11FritzVision0bC20PetSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1460}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1453}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1416}], "key.bodylength": 113, "key.bodyoffset": 1532, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 174, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1472, "key.offset": 1472, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPetSegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de15PetSegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1656}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1650}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1674, "key.offset": 1663, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel\">FritzVisionPetSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1965}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1923}], "key.bodylength": 57, "key.bodyoffset": 2077, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift\" line=\"57\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 57, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 1744, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/PetSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel\">FritzVisionPetSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 163, "key.name": "fetchModel(completionHandler:)", "key.namelength": 91, "key.nameoffset": 1984, "key.offset": 1972, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 57, "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModel.Type) -> (@escaping (FritzVisionPetSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD20PetSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPetSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB20PetSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2139, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkyClass) public class FritzVisionSkyClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 247}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 220}], "key.bodylength": 378, "key.bodyoffset": 291, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkyClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkyClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 416, "key.name": "FritzVisionSkyClass", "key.namelength": 19, "key.nameoffset": 260, "key.offset": 254, "key.parsed_declaration": "public class FritzVisionSkyClass: NSObject", "key.parsed_scope.end": 20, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionSkyClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 300}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 294}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 318, "key.offset": 307, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 402}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 396}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 420, "key.offset": 409, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(label: \"Sky\", index: 1, color: (0, 128, 128, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 509}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 503}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 152, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 527, "key.offset": 516, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)allClasses"}], "key.typename": "FritzVisionSkyClass.Type", "key.typeusr": "$s11FritzVision0aB8SkyClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkySegmentationModel) public final class FritzVisionSkySegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 788}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 781}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 38, "key.offset": 742}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 718}], "key.bodylength": 1255, "key.bodyoffset": 882, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect skys.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModel) public final class FritzVisionSkySegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift\" line=\"26\" column=\"20\"><Name>FritzVisionSkySegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModel) public final class FritzVisionSkySegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect skys.</Para></Abstract></CommentParts></Class>", "key.doc.line": 26, "key.doc.name": "FritzVisionSkySegmentationModel", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 673, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 833}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 863}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkySegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkySegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1344, "key.name": "FritzVisionSkySegmentationModel", "key.namelength": 31, "key.nameoffset": 800, "key.offset": 794, "key.parsed_declaration": "public final class FritzVisionSkySegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 61, "key.parsed_scope.start": 26, "key.runtime_name": "FritzVisionSkySegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 892}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 886}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 145, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 910, "key.offset": 899, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1054}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1048}], "key.bodylength": 46, "key.bodyoffset": 1105, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1072, "key.offset": 1061, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 34, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1287}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1280}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1256}], "key.bodylength": 85, "key.bodyoffset": 1326, "key.doc.column": 22, "key.doc.comment": "Build sky Segmentation Model with provided model.\n\n- Parameter model: Model to use", "key.doc.declaration": "@objc(initWithModel:) public convenience init(model: FritzMLModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift\" line=\"42\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public convenience init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Build sky Segmentation Model with provided model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Model to use</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 42, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Model to use"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1156, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1299, "key.offset": 1299, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModel.Type) -> (FritzMLModel) -> FritzVisionSkySegmentationModel", "key.typeusr": "$s5model11FritzVision0bC20SkySegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1460}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1453}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1416}], "key.bodylength": 113, "key.bodyoffset": 1532, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 174, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1472, "key.offset": 1472, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionSkySegmentationModel", "key.typeusr": "$s5model12managedModel11FritzVision0de15SkySegmentationC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1656}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1650}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1674, "key.offset": 1663, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel\">FritzVisionSkySegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1965}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1923}], "key.bodylength": 57, "key.bodyoffset": 2077, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift\" line=\"57\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 57, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 1744, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ImageSegmentation/Variants/SkySegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel\">FritzVisionSkySegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 163, "key.name": "fetchModel(completionHandler:)", "key.namelength": 91, "key.nameoffset": 1984, "key.offset": 1972, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 57, "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModel.Type) -> (@escaping (FritzVisionSkySegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD20SkySegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionSkySegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB20SkySegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9003, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModelOptions) public final class FritzVisionObjectModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 273}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 266}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 229}], "key.bodylength": 1348, "key.bodyoffset": 345, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 316}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 326}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1415, "key.name": "FritzVisionObjectModelOptions", "key.namelength": 29, "key.nameoffset": 285, "key.offset": 279, "key.parsed_declaration": "public final class FritzVisionObjectModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 42, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionObjectModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 349}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 72, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 367, "key.offset": 356, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionObjectModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB18ObjectModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 528}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 522}], "key.doc.column": 20, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"20\" column=\"20\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 432, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 539, "key.offset": 535, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var iouThreshold: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 679}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 673}], "key.doc.column": 20, "key.doc.comment": "Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.", "key.doc.declaration": "@objc public var iouThreshold: Float", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"23\" column=\"20\"><Name>iouThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold</USR><Declaration>@objc public var iouThreshold: Float</Declaration><CommentParts><Abstract><Para>Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "iouThreshold", "key.doc.type": "Other", "key.doclength": 105, "key.docoffset": 566, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>iouThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "iouThreshold", "key.namelength": 12, "key.nameoffset": 690, "key.offset": 686, "key.parsed_declaration": "@objc public var iouThreshold: Float = 0.25", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 774}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 768}], "key.doc.column": 20, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"26\" column=\"20\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 720, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 785, "key.offset": 781, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 815}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 809}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 826, "key.offset": 822, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1071}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1065}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public let forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"32\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public let forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 890, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1082, "key.offset": 1078, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public let forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1646}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1640}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"41\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 1120, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1657, "key.offset": 1653, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceVisionPrediction"}], "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$s11FritzVision0aB18ObjectModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1759}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1752}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1728}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1698}], "key.bodylength": 2489, "key.bodyoffset": 1850, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1795}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 1805}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1831}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "VisionFrameworkPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2575, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 1771, "key.offset": 1765, "key.parsed_declaration": "public final class FritzVisionObjectModel: NSObject, VisionFrameworkPredictor, DownloadableModel", "key.parsed_scope.end": 120, "key.parsed_scope.start": 48, "key.runtime_name": "FritzVisionObjectModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1854}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 1871, "key.offset": 1861, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB11ObjectModelC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1908}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 54, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1925, "key.offset": 1915, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionObjectModelOptions", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$s11FritzVision0aB18ObjectModelOptionsCmD", "key.usr": "s:11FritzVision0aB11ObjectModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>.PredictionResult = [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1972}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>.<decl.name>PredictionResult</decl.name> = [<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 48, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1989, "key.offset": 1979, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = [FritzVisionObject]", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "[FritzVisionObject].Type", "key.typeusr": "$sSay11FritzVision0aB6ObjectCGmD", "key.usr": "s:11FritzVision0aB11ObjectModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2037}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2031}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 2055, "key.offset": 2044, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"6421558a820640b68dc004104ea6b6a1\", version: 1)", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2162}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2156}], "key.bodylength": 46, "key.bodyoffset": 2213, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2180, "key.offset": 2169, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 58, "key.parsed_scope.start": 56, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2270}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2264}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 2288, "key.offset": 2277, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2449}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2443}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2460, "key.offset": 2456, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2576}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2569}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2545}], "key.bodylength": 285, "key.bodyoffset": 2612, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 313, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2585, "key.offset": 2585, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel)", "key.parsed_scope.end": 78, "key.parsed_scope.start": 71, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:classNames:\">init(model:managedModel:classNames:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithIdentifiedModel:classNames:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (FritzMLModel) -> FritzVisionObjectModel", "key.typeusr": "$s5model11FritzVision0bC11ObjectModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2949}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2942}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2905}], "key.bodylength": 158, "key.bodyoffset": 3018, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 219, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2958, "key.offset": 2958, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 86, "key.parsed_scope.start": 82, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:classNames:\">init(model:managedModel:classNames:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithIdentifiedModel:classNames:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionObjectModel", "key.typeusr": "$s5model12managedModel11FritzVision0de6ObjectC0C0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:classNames:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>, classNames: [<Type usr=\"s:Si\">Int</Type> : <Type usr=\"s:SS\">String</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3440}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 3392}], "key.bodylength": 186, "key.bodyoffset": 3534, "key.doc.column": 10, "key.doc.comment": "Initialize Object model with custom model that takes a 300x300 image.\n\n- Parameters:\n  - model: FritzMLModel\n  - managedModel: Managed Model\n  - classNames: Custom class names", "key.doc.declaration": "@objc(initWithModel:managedModel:classNames:) public init(model: FritzMLModel, managedModel: FritzManagedModel, classNames: [Int : String])", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"95\" column=\"10\"><Name>init(model:managedModel:classNames:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:classNames:</USR><Declaration>@objc(initWithModel:managedModel:classNames:) public init(model: FritzMLModel, managedModel: FritzManagedModel, classNames: [Int : String])</Declaration><CommentParts><Abstract><Para>Initialize Object model with custom model that takes a 300x300 image.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter><Parameter><Name>managedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Managed Model</Para></Discussion></Parameter><Parameter><Name>classNames</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Custom class names</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 95, "key.doc.name": "init(model:managedModel:classNames:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}, {"discussion": [{"Para": "Managed Model"}], "name": "managedModel"}, {"discussion": [{"Para": "Custom class names"}], "name": "classNames"}], "key.doc.type": "Function", "key.doclength": 209, "key.docoffset": 3181, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:classNames:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classNames</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 274, "key.name": "init(model:managedModel:classNames:)", "key.namelength": 85, "key.nameoffset": 3447, "key.offset": 3447, "key.parsed_declaration": "public init(model: FritzMLModel, managedModel: FritzManagedModel, classNames: [Int: String])", "key.parsed_scope.end": 103, "key.parsed_scope.start": 95, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithIdentifiedModel:classNames:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (FritzMLModel, FritzManagedModel, [Int : String]) -> FritzVisionObjectModel", "key.typeusr": "$s5model12managedModel10classNames11FritzVision0fg6ObjectC0C0f7ManagedC00F7MLModelC_A2GCSDySiSSGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:classNames:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:classNames:) public init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, classNames: [<Type usr=\"s:Si\">Int</Type> : <Type usr=\"s:SS\">String</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3992}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 3947}], "key.bodylength": 266, "key.bodyoffset": 4071, "key.doc.column": 10, "key.doc.comment": "Initialize Object model with custom model that takes a 300x300 image from BaseIdentifiedModel\n\n- Parameters:\n  - identifiedModel: IdentifiedModel to use\n  - classNames: Class names for objects", "key.doc.declaration": "@objc(initWithIdentifiedModel:classNames:) public init(identifiedModel: SwiftIdentifiedModel, classNames: [Int : String])", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"111\" column=\"10\"><Name>init(identifiedModel:classNames:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithIdentifiedModel:classNames:</USR><Declaration>@objc(initWithIdentifiedModel:classNames:) public init(identifiedModel: SwiftIdentifiedModel, classNames: [Int : String])</Declaration><CommentParts><Abstract><Para>Initialize Object model with custom model that takes a 300x300 image from BaseIdentifiedModel</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>IdentifiedModel to use</Para></Discussion></Parameter><Parameter><Name>classNames</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Class names for objects</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 111, "key.doc.name": "init(identifiedModel:classNames:)", "key.doc.parameters": [{"discussion": [{"Para": "IdentifiedModel to use"}], "name": "identifiedModel"}, {"discussion": [{"Para": "Class names for objects"}], "name": "classNames"}], "key.doc.type": "Function", "key.doclength": 220, "key.docoffset": 3725, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:classNames:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classNames</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 339, "key.name": "init(identifiedModel:classNames:)", "key.namelength": 70, "key.nameoffset": 3999, "key.offset": 3999, "key.parsed_declaration": "public init(identifiedModel: SwiftIdentifiedModel, classNames: [Int: String])", "key.parsed_scope.end": 119, "key.parsed_scope.start": 111, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:managedModel:classNames:\">init(model:managedModel:classNames:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (SwiftIdentifiedModel, [Int : String]) -> FritzVisionObjectModel", "key.typeusr": "$s15identifiedModel10classNames11FritzVision0ef6ObjectB0C0e7ManagedB0015SwiftIdentifiedB0_p_SDySiSSGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithIdentifiedModel:classNames:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$s11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4673}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4649}], "key.bodylength": 1802, "key.bodyoffset": 4714, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1837, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 4690, "key.offset": 4680, "key.parsed_declaration": "public extension FritzVisionObjectModel", "key.parsed_scope.end": 179, "key.parsed_scope.start": 137, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func processRequest(for request: <Type usr=\"c:objc(cs)VNRequest\">VNRequest</Type>, input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type>) -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?</Declaration>", "key.bodylength": 1146, "key.bodyoffset": 4852, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>processRequest</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>request</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)VNRequest\">VNRequest</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>input</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1281, "key.name": "processRequest(for:input:options:)", "key.namelength": 103, "key.nameoffset": 4723, "key.offset": 4718, "key.overrides": [{"key.usr": "s:11FritzVision0B18FrameworkPredictorP14processRequest3for5input7options16PredictionResultQzSgSo9VNRequestC_0J5InputQz12ModelOptionsQztF"}], "key.parsed_declaration": "func processRequest(for request: VNRequest, input: FritzVisionImage, options: FritzVisionObjectModelOptions) -> [FritzVisionObject]?", "key.parsed_scope.end": 167, "key.parsed_scope.start": 139, "key.substructure": [{"key.annotated_decl": "<Declaration>let results: [<Type usr=\"c:objc(cs)VNCoreMLFeatureValueObservation\">VNCoreMLFeatureValueObservation</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>results</decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)VNCoreMLFeatureValueObservation\">VNCoreMLFeatureValueObservation</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "results", "key.namelength": 7, "key.nameoffset": 4862, "key.offset": 4858, "key.parsed_declaration": "let results = request.results as! [VNCoreMLFeatureValueObservation]", "key.parsed_scope.end": 141, "key.parsed_scope.start": 141, "key.typename": "[VNCoreMLFeatureValueObservation]", "key.typeusr": "$sSaySo31VNCoreMLFeatureValueObservationCGD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF7resultsL_SaySo31VNCoreMLFeatureValueObservationCGvp"}, {"key.annotated_decl": "<Declaration>let firstIsAnchors: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>firstIsAnchors</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 90, "key.name": "firstIsAnchors", "key.namelength": 14, "key.nameoffset": 5397, "key.offset": 5393, "key.parsed_declaration": "let firstIsAnchors = firstValue.shape == [4, ssdPostProcessor.numAnchors, 1] as [NSNumber]", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF14firstIsAnchorsL_Sbvp"}, {"key.annotated_decl": "<Declaration>let boxPredictions: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>boxPredictions</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "boxPredictions", "key.namelength": 14, "key.nameoffset": 5492, "key.offset": 5488, "key.parsed_declaration": "let boxPredictions = firstIsAnchors ? firstValue : secondValue", "key.parsed_scope.end": 155, "key.parsed_scope.start": 155, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF14boxPredictionsL_So12MLMultiArrayCvp"}, {"key.annotated_decl": "<Declaration>let classPredictions: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classPredictions</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "classPredictions", "key.namelength": 16, "key.nameoffset": 5559, "key.offset": 5555, "key.parsed_declaration": "let classPredictions = firstIsAnchors ? secondValue : firstValue", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF16classPredictionsL_So12MLMultiArrayCvp"}, {"key.annotated_decl": "<Declaration>let predictions: [<Type usr=\"s:11FritzVision10PredictionV\">Prediction</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:11FritzVision10PredictionV\">Prediction</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 151, "key.name": "predictions", "key.namelength": 11, "key.nameoffset": 5629, "key.offset": 5625, "key.parsed_declaration": "let predictions = ssdPostProcessor.postprocess(", "key.parsed_scope.end": 158, "key.parsed_scope.start": 158, "key.typename": "[Prediction]", "key.typeusr": "$sSay11FritzVision10PredictionVGD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF11predictionsL_SayAA10PredictionVGvp"}], "key.typename": "(FritzVisionObjectModel) -> (VNRequest, FritzVisionImage, FritzVisionObjectModelOptions) -> [FritzVisionObject]?", "key.typeusr": "$s3for5input7optionsSay11FritzVision0dE6ObjectCGSgSo9VNRequestC_AD0dE5ImageCAD0deF12ModelOptionsCtcD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for5input7optionsSayAA0abC0CGSgSo9VNRequestC_AA0aB5ImageCAA0abcD7OptionsCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = .init(), completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 6269}], "key.bodylength": 65, "key.bodyoffset": 6449, "key.doc.column": 8, "key.doc.comment": "Run prediction for vision object model.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:completion:) func predict(_ input: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"176\" column=\"8\"><Name>predict(_:options:completion:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) func predict(_ input: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction for vision object model.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 176, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 264, "key.docoffset": 6003, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 209, "key.name": "predict(_:options:completion:)", "key.namelength": 136, "key.nameoffset": 6311, "key.offset": 6306, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "func predict(_ input: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -> Void)", "key.parsed_scope.end": 178, "key.parsed_scope.start": 176, "key.substructure": [], "key.typename": "(FritzVisionObjectModel) -> (FritzVisionImage, FritzVisionObjectModelOptions, ([FritzVisionObject]?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD18ObjectModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(im)predict:options:completion:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$s11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6543}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 6519}], "key.bodylength": 381, "key.bodyoffset": 6584, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B18FrameworkPredictorP\">VisionFrameworkPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 416, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 6560, "key.offset": 6550, "key.parsed_declaration": "public extension FritzVisionObjectModel", "key.parsed_scope.end": 192, "key.parsed_scope.start": 182, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 6767}], "key.bodylength": 57, "key.bodyoffset": 6905, "key.doc.column": 15, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"188\" column=\"15\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 188, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 6588, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 154, "key.name": "fetchModel(completionHandler:)", "key.namelength": 82, "key.nameoffset": 6821, "key.offset": 6809, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -> Void)", "key.parsed_scope.end": 190, "key.parsed_scope.start": 188, "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (@escaping (FritzVisionObjectModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD11ObjectModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$s11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBox) public class BoundingBox : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7321}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 7302}], "key.bodylength": 1644, "key.bodyoffset": 7357, "key.doc.column": 14, "key.doc.comment": "BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.", "key.doc.declaration": "@objc(BoundingBox) public class BoundingBox : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"197\" column=\"14\"><Name>BoundingBox</Name><USR>c:@M@FritzVision@objc(cs)BoundingBox</USR><Declaration>@objc(BoundingBox) public class BoundingBox : NSObject</Declaration><CommentParts><Abstract><Para>BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 197, "key.doc.name": "BoundingBox", "key.doc.type": "Class", "key.doclength": 333, "key.docoffset": 6969, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 7347}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBox)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBox</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1674, "key.name": "BoundingBox", "key.namelength": 11, "key.nameoffset": 7334, "key.offset": 7328, "key.parsed_declaration": "public class BoundingBox: NSObject", "key.parsed_scope.end": 249, "key.parsed_scope.start": 197, "key.runtime_name": "BoundingBox", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yMin: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7360}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 7371, "key.offset": 7367, "key.parsed_declaration": "public let yMin: Double", "key.parsed_scope.end": 198, "key.parsed_scope.start": 198, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xMin: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7386}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 7397, "key.offset": 7393, "key.parsed_declaration": "public let xMin: Double", "key.parsed_scope.end": 199, "key.parsed_scope.start": 199, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yMax: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7412}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 7423, "key.offset": 7419, "key.parsed_declaration": "public let yMax: Double", "key.parsed_scope.end": 200, "key.parsed_scope.start": 200, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4yMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xMax: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7438}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 7449, "key.offset": 7445, "key.parsed_declaration": "public let xMax: Double", "key.parsed_scope.end": 201, "key.parsed_scope.start": 201, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithYMin:xMin:yMax:xMax:) public init(yMin: <Type usr=\"s:Sd\">Double</Type>, xMin: <Type usr=\"s:Sd\">Double</Type>, yMax: <Type usr=\"s:Sd\">Double</Type>, xMax: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7503}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 7465}], "key.bodylength": 87, "key.bodyoffset": 7572, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithYMin:xMin:yMax:xMax:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 150, "key.name": "init(yMin:xMin:yMax:xMax:)", "key.namelength": 60, "key.nameoffset": 7510, "key.offset": 7510, "key.parsed_declaration": "public init(yMin: Double, xMin: Double, yMax: Double, xMax: Double)", "key.parsed_scope.end": 209, "key.parsed_scope.start": 204, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc\">init(fromAnchor:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Double, Double, Double, Double) -> BoundingBox", "key.typeusr": "$s4yMin01xA04yMax01xB011FritzVision11BoundingBoxCSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fromAnchor anchor: <Type usr=\"s:11FritzVision6AnchorV\">Anchor</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7664}], "key.bodylength": 115, "key.bodyoffset": 7704, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fromAnchor</decl.var.parameter.argument_label> <decl.var.parameter.name>anchor</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision6AnchorV\">Anchor</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 149, "key.name": "init(fromAnchor:)", "key.namelength": 31, "key.nameoffset": 7671, "key.offset": 7671, "key.parsed_declaration": "public init(fromAnchor anchor: Anchor)", "key.parsed_scope.end": 216, "key.parsed_scope.start": 211, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:\">init(yMin:xMin:yMax:xMax:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Anchor) -> BoundingBox", "key.typeusr": "$s10fromAnchor11FritzVision11BoundingBoxCAB0B0V_tcD", "key.usr": "s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7895}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 7866}], "key.bodylength": 177, "key.bodyoffset": 7964, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 240, "key.name": "toCGRect(imgHeight:imgWidth:)", "key.namelength": 45, "key.nameoffset": 7907, "key.offset": 7902, "key.parsed_declaration": "public func toCGRect(imgHeight: Double, imgWidth: Double) -> CGRect", "key.parsed_scope.end": 225, "key.parsed_scope.start": 220, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:\">toCGRect(imgHeight:imgWidth:xOffset:yOffset:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 7973, "key.offset": 7969, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 221, "key.parsed_scope.start": 221, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 8016, "key.offset": 8012, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 222, "key.parsed_scope.start": 222, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double) -> CGRect", "key.typeusr": "$s9imgHeight0A5WidthSo6CGRectVSd_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:xOffset:yOffset:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>, xOffset: <Type usr=\"s:Sd\">Double</Type>, yOffset: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8255}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 8210}], "key.bodylength": 197, "key.bodyoffset": 8354, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:xOffset:yOffset:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 290, "key.name": "toCGRect(imgHeight:imgWidth:xOffset:yOffset:)", "key.namelength": 75, "key.nameoffset": 8267, "key.offset": 8262, "key.parsed_declaration": "public func toCGRect(imgHeight:Double, imgWidth:Double, xOffset:Double, yOffset:Double) -> CGRect", "key.parsed_scope.end": 234, "key.parsed_scope.start": 229, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:\">toCGRect(imgHeight:imgWidth:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 8363, "key.offset": 8359, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 230, "key.parsed_scope.start": 230, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 8406, "key.offset": 8402, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double, Double, Double) -> CGRect", "key.typeusr": "$s9imgHeight0A5Width7xOffset01yD0So6CGRectVSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func scaledBy(_ size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8695}], "key.bodylength": 256, "key.bodyoffset": 8743, "key.doc.column": 15, "key.doc.comment": "Scale object result by size.\n\n- Parameter size: Size to scale result from\n- Returns: CGRect of scaled bounding box.", "key.doc.declaration": "public func scaledBy(_ size: CGSize) -> CGRect", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift\" line=\"240\" column=\"15\"><Name>scaledBy(_:)</Name><USR>s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF</USR><Declaration>public func scaledBy(_ size: CGSize) -&gt; CGRect</Declaration><CommentParts><Abstract><Para>Scale object result by size.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Size to scale result from</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>CGRect of scaled bounding box.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 240, "key.doc.name": "scaledBy(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Size to scale result from"}], "name": "size"}], "key.doc.result_discussion": [{"Para": "CGRect of scaled bounding box."}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 8556, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>scaledBy</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 298, "key.name": "scaledBy(_:)", "key.namelength": 24, "key.nameoffset": 8707, "key.offset": 8702, "key.parsed_declaration": "public func scaledBy(_ size: CGSize) -> CGRect", "key.parsed_scope.end": 248, "key.parsed_scope.start": 240, "key.substructure": [{"key.annotated_decl": "<Declaration>let imgWidth: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imgWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "imgWidth", "key.namelength": 8, "key.nameoffset": 8752, "key.offset": 8748, "key.parsed_declaration": "let imgWidth = Double(size.width)", "key.parsed_scope.end": 241, "key.parsed_scope.start": 241, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF8imgWidthL_Sdvp"}, {"key.annotated_decl": "<Declaration>let imgHeight: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imgHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 35, "key.name": "imgHeight", "key.namelength": 9, "key.nameoffset": 8790, "key.offset": 8786, "key.parsed_declaration": "let imgHeight = Double(size.height)", "key.parsed_scope.end": 242, "key.parsed_scope.start": 242, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF9imgHeightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 8831, "key.offset": 8827, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 244, "key.parsed_scope.start": 244, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 8874, "key.offset": 8870, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 245, "key.parsed_scope.start": 245, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (CGSize) -> CGRect", "key.typeusr": "$sySo6CGRectVSo6CGSizeVcD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF"}], "key.typename": "BoundingBox.Type", "key.typeusr": "$s11FritzVision11BoundingBoxCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox"}]}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3477, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Anchor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 216}], "key.bodylength": 577, "key.bodyoffset": 238, "key.doc.column": 15, "key.doc.comment": "Anchor box used in object detection models.", "key.doc.declaration": "public struct Anchor", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift\" line=\"11\" column=\"15\"><Name>Anchor</Name><USR>s:11FritzVision6AnchorV</USR><Declaration>public struct Anchor</Declaration><CommentParts><Abstract><Para>Anchor box used in object detection models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 11, "key.doc.name": "Anchor", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 168, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Anchor</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 593, "key.name": "Anchor", "key.namelength": 6, "key.nameoffset": 230, "key.offset": 223, "key.parsed_declaration": "public struct Anchor", "key.parsed_scope.end": 40, "key.parsed_scope.start": 11, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 242}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "yCenter", "key.namelength": 7, "key.nameoffset": 253, "key.offset": 249, "key.parsed_declaration": "public let yCenter: Double", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV7yCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 271}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "xCenter", "key.namelength": 7, "key.nameoffset": 282, "key.offset": 278, "key.parsed_declaration": "public let xCenter: Double", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV7xCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 300}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "height", "key.namelength": 6, "key.nameoffset": 311, "key.offset": 307, "key.parsed_declaration": "public let height: Double", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV6heightSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 328}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "width", "key.namelength": 5, "key.nameoffset": 339, "key.offset": 335, "key.parsed_declaration": "public let width: Double", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV5widthSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(yCenter: <Type usr=\"s:Sd\">Double</Type>, xCenter: <Type usr=\"s:Sd\">Double</Type>, height: <Type usr=\"s:Sd\">Double</Type>, width: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 356}], "key.bodylength": 105, "key.bodyoffset": 434, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 177, "key.name": "init(yCenter:xCenter:height:width:)", "key.namelength": 69, "key.nameoffset": 363, "key.offset": 363, "key.parsed_declaration": "public init(yCenter: Double, xCenter: Double, height: Double, width: Double)", "key.parsed_scope.end": 23, "key.parsed_scope.start": 18, "key.substructure": [], "key.typename": "(Anchor.Type) -> (Double, Double, Double, Double) -> Anchor", "key.typeusr": "$s7yCenter01xA06height5width11FritzVision6AnchorVSd_S3dtcD", "key.usr": "s:11FritzVision6AnchorV7yCenter01xD06height5widthACSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 544}], "key.bodylength": 38, "key.bodyoffset": 569, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 57, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 555, "key.offset": 551, "key.parsed_declaration": "public var xMin: Double", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 612}], "key.bodylength": 38, "key.bodyoffset": 637, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 57, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 623, "key.offset": 619, "key.parsed_declaration": "public var xMax: Double", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 680}], "key.bodylength": 39, "key.bodyoffset": 705, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 691, "key.offset": 687, "key.parsed_declaration": "public var yMin: Double", "key.parsed_scope.end": 35, "key.parsed_scope.start": 33, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 749}], "key.bodylength": 39, "key.bodyoffset": 774, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 760, "key.offset": 756, "key.parsed_declaration": "public var yMax: Double", "key.parsed_scope.end": 39, "key.parsed_scope.start": 37, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4yMaxSdvp"}], "key.typename": "Anchor.Type", "key.typeusr": "$s11FritzVision6AnchorVmD", "key.usr": "s:11FritzVision6AnchorV"}]}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2466, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBoxOutline) public class BoundingBoxOutline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 192}], "key.bodylength": 2203, "key.bodyoffset": 261, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 251}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBoxOutline)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBoxOutline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2240, "key.name": "BoundingBoxOutline", "key.namelength": 18, "key.nameoffset": 231, "key.offset": 225, "key.parsed_declaration": "public class BoundingBoxOutline: NSObject", "key.parsed_scope.end": 77, "key.parsed_scope.start": 12, "key.runtime_name": "BoundingBoxOutline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fontSize: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = 14.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 331}], "key.bodylength": 436, "key.bodyoffset": 370, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fontSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = 14.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 469, "key.name": "init(fontSize:)", "key.namelength": 30, "key.nameoffset": 338, "key.offset": 338, "key.parsed_declaration": "public init(fontSize: CGFloat = 14.0)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(BoundingBoxOutline.Type) -> (CGFloat) -> BoundingBoxOutline", "key.typeusr": "$s8fontSize11FritzVision18BoundingBoxOutlineC12CoreGraphics7CGFloatV_tcD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC8fontSizeAC12CoreGraphics7CGFloatV_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(parent:) public func addToLayer(_ parent: <Type usr=\"c:objc(cs)CALayer\">CALayer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 926}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 14, "key.offset": 907}], "key.bodylength": 82, "key.bodyoffset": 969, "key.doc.column": 17, "key.doc.comment": "Add shape and text to parent layer\n\n- Parameter parent: parent CALayer", "key.doc.declaration": "@objc(parent:) public func addToLayer(_ parent: CALayer)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"34\" column=\"17\"><Name>addToLayer(_:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:</USR><Declaration>@objc(parent:) public func addToLayer(_ parent: CALayer)</Declaration><CommentParts><Abstract><Para>Add shape and text to parent layer</Para></Abstract><Parameters><Parameter><Name>parent</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>parent CALayer</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "addToLayer(_:)", "key.doc.parameters": [{"discussion": [{"Para": "parent CALayer"}], "name": "parent"}], "key.doc.type": "Function", "key.doclength": 90, "key.docoffset": 813, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(parent:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToLayer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>parent</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CALayer\">CALayer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "addToLayer(_:)", "key.namelength": 29, "key.nameoffset": 938, "key.offset": 933, "key.parsed_declaration": "public func addToLayer(_ parent: CALayer)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(BoundingBoxOutline) -> (CALayer) -> ()", "key.typeusr": "$syySo7CALayerCcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(frame:label:color:textColor:) public func show(frame: <Type usr=\"c:@S@CGRect\">CGRect</Type>, label: <Type usr=\"s:SS\">String</Type>, color: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type>, textColor: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type> = .black)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1338}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1298}], "key.bodylength": 870, "key.bodyoffset": 1431, "key.doc.column": 17, "key.doc.comment": "Show Bounding box.\n\n- Parameters:\n  - frame: CGRect of coordinates to draw box\n  - label: Classified label\n  - color: Color of bounding box outline\n  - textColor: Classified label text", "key.doc.declaration": "@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"47\" column=\"17\"><Name>show(frame:label:color:textColor:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:</USR><Declaration>@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)</Declaration><CommentParts><Abstract><Para>Show Bounding box.</Para></Abstract><Parameters><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CGRect of coordinates to draw box</Para></Discussion></Parameter><Parameter><Name>label</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label</Para></Discussion></Parameter><Parameter><Name>color</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Color of bounding box outline</Para></Discussion></Parameter><Parameter><Name>textColor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label text</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "show(frame:label:color:textColor:)", "key.doc.parameters": [{"discussion": [{"Para": "CGRect of coordinates to draw box"}], "name": "frame"}, {"discussion": [{"Para": "Classified label"}], "name": "label"}, {"discussion": [{"Para": "Color of bounding box outline"}], "name": "color"}, {"discussion": [{"Para": "Classified label text"}], "name": "textColor"}], "key.doc.type": "Function", "key.doclength": 236, "key.docoffset": 1058, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(frame:label:color:textColor:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>show</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>textColor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type> = .black</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 957, "key.name": "show(frame:label:color:textColor:)", "key.namelength": 79, "key.nameoffset": 1350, "key.offset": 1345, "key.parsed_declaration": "public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "path", "key.namelength": 4, "key.nameoffset": 1491, "key.offset": 1487, "key.parsed_declaration": "let path = UIBezierPath(rect: frame)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "UIBezierPath", "key.typeusr": "$sSo12UIBezierPathCD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF4pathL_So12UIBezierPathCvp"}, {"key.annotated_decl": "<Declaration>let textRect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 224, "key.name": "textRect", "key.namelength": 8, "key.nameoffset": 1831, "key.offset": 1827, "key.parsed_declaration": "let textRect = label.boundingRect(", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4RectL_AJvp"}, {"key.annotated_decl": "<Declaration>let textSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 74, "key.name": "textSize", "key.namelength": 8, "key.nameoffset": 2064, "key.offset": 2060, "key.parsed_declaration": "let textSize = CGSize(width: textRect.width + 12, height: textRect.height)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4SizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let textOrigin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textOrigin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "textOrigin", "key.namelength": 10, "key.nameoffset": 2147, "key.offset": 2143, "key.parsed_declaration": "let textOrigin = CGPoint(x: frame.origin.x - 2, y: frame.origin.y - textSize.height)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J6OriginL_So7CGPointVvp"}], "key.typename": "(BoundingBoxOutline) -> (CGRect, String, UIColor, UIColor) -> ()", "key.typeusr": "$s5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCAHtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public func hide()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2368}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.bodylength": 74, "key.bodyoffset": 2388, "key.doc.column": 17, "key.doc.comment": "Hide bounding box from appearing in view.", "key.doc.declaration": "@objc public func hide()", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"73\" column=\"17\"><Name>hide()</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide</USR><Declaration>@objc public func hide()</Declaration><CommentParts><Abstract><Para>Hide bounding box from appearing in view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "hide()", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2308, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hide</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "hide()", "key.namelength": 6, "key.nameoffset": 2380, "key.offset": 2375, "key.parsed_declaration": "public func hide()", "key.parsed_scope.end": 76, "key.parsed_scope.start": 73, "key.typename": "(BoundingBoxOutline) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide"}], "key.typename": "BoundingBoxOutline.Type", "key.typeusr": "$s11FritzVision18BoundingBoxOutlineCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline"}]}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1151, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObject) public class FritzVisionObject : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 211}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 186}], "key.bodylength": 730, "key.bodyoffset": 419, "key.doc.comment": "Object identified in object detection model. Contains the label and corresponding BoundingBox of identified model.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 386}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 396}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObject)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObject</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 789, "key.name": "FritzVisionObject", "key.namelength": 17, "key.nameoffset": 367, "key.offset": 361, "key.parsed_declaration": "public class FritzVisionObject: NSObject, FritzPredictionResult", "key.parsed_scope.end": 45, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionObject", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let detectedLabel: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 429}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 423}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>detectedLabel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "detectedLabel", "key.namelength": 13, "key.nameoffset": 440, "key.offset": 436, "key.parsed_declaration": "@objc public let detectedLabel: FritzVisionLabel", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionLabel", "key.typeusr": "$s11FritzVision0aB5LabelCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)detectedLabel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 519}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 513}], "key.doc.column": 20, "key.doc.comment": "BoundingBox of detected object.", "key.doc.declaration": "@objc public let boundingBox: BoundingBox", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift\" line=\"20\" column=\"20\"><Name>boundingBox</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox</USR><Declaration>@objc public let boundingBox: BoundingBox</Declaration><CommentParts><Abstract><Para>BoundingBox of detected object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "boundingBox", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 475, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>boundingBox</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "boundingBox", "key.namelength": 11, "key.nameoffset": 530, "key.offset": 526, "key.parsed_declaration": "@objc public let boundingBox: BoundingBox", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "BoundingBox", "key.typeusr": "$s11FritzVision11BoundingBoxCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var label: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 564}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 558}], "key.bodylength": 57, "key.bodyoffset": 590, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "label", "key.namelength": 5, "key.nameoffset": 575, "key.offset": 571, "key.parsed_declaration": "@objc public var label: String", "key.parsed_scope.end": 26, "key.parsed_scope.start": 22, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var confidence: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 658}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 652}], "key.bodylength": 62, "key.bodyoffset": 689, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 87, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 669, "key.offset": 665, "key.parsed_declaration": "@objc public var confidence: Double", "key.parsed_scope.end": 32, "key.parsed_scope.start": 28, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 763}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 756}], "key.bodylength": 176, "key.bodyoffset": 797, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 202, "key.name": "description", "key.namelength": 11, "key.nameoffset": 776, "key.offset": 772, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:boundingBox:) public init(label: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>, boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1014}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 978}], "key.bodylength": 69, "key.bodyoffset": 1078, "key.filepath": "/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:boundingBox:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>boundingBox</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(label:boundingBox:)", "key.namelength": 55, "key.nameoffset": 1021, "key.offset": 1021, "key.parsed_declaration": "public init(label: FritzVisionLabel, boundingBox: BoundingBox)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 41, "key.substructure": [], "key.typename": "(FritzVisionObject.Type) -> (FritzVisionLabel, BoundingBox) -> FritzVisionObject", "key.typeusr": "$s5label11boundingBox11FritzVision0dE6ObjectCAC0dE5LabelC_AC08BoundingC0CtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(im)initWithLabel:boundingBox:"}], "key.typename": "FritzVisionObject.Type", "key.typeusr": "$s11FritzVision0aB6ObjectCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject"}]}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 876, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/ObjectDetection/Helpers/SSDPostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7419, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11192, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class DecodePoseWithDisplacements&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1556}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1532}], "key.bodylength": 9567, "key.bodyoffset": 1622, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DecodePoseWithDisplacements</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 9627, "key.name": "DecodePoseWithDisplacements", "key.namelength": 27, "key.nameoffset": 1569, "key.offset": 1563, "key.parsed_declaration": "public class DecodePoseWithDisplacements<Skeleton: SkeletonType>", "key.parsed_scope.end": 333, "key.parsed_scope.start": 64, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1607}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1597, "key.offset": 1597, "key.parsed_declaration": "public class DecodePoseWithDisplacements<Skeleton: SkeletonType>", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 67, "key.name": "TODO: Not thrilled about this, but the dimensions of the pose model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1841}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decodeMultiplePoses(maxPoseDetections: <Type usr=\"s:Si\">Int</Type>, partThreshold: <Type usr=\"s:Sd\">Double</Type> = 0.5, nmsRadius: <Type usr=\"s:Si\">Int</Type> = 20) -&gt; [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3820}], "key.bodylength": 962, "key.bodyoffset": 3963, "key.doc.column": 15, "key.doc.comment": "Decodes poses from model output. Returns poses with keypoint positions normalized from 0 to 1.\n- Parameter maxPoseDetections: Number of poses to detect.\n- Parameter partThreshold: Threshold for a part to be included in a pose.\n- Parameter nmsRadius: NMS radius.", "key.doc.declaration": "public func decodeMultiplePoses(maxPoseDetections: Int, partThreshold: Double = 0.5, nmsRadius: Int = 20) -> [Pose<Skeleton>]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift\" line=\"116\" column=\"15\"><Name>decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)</Name><USR>s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF</USR><Declaration>public func decodeMultiplePoses(maxPoseDetections: Int, partThreshold: Double = 0.5, nmsRadius: Int = 20) -&gt; [Pose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Decodes poses from model output. Returns poses with keypoint positions normalized from 0 to 1.</Para></Abstract><Parameters><Parameter><Name>maxPoseDetections</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Number of poses to detect.</Para></Discussion></Parameter><Parameter><Name>partThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Threshold for a part to be included in a pose.</Para></Discussion></Parameter><Parameter><Name>nmsRadius</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>NMS radius.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)", "key.doc.parameters": [{"discussion": [{"Para": "Number of poses to detect."}], "name": "maxPoseDetections"}, {"discussion": [{"Para": "Threshold for a part to be included in a pose."}], "name": "partThreshold"}, {"discussion": [{"Para": "NMS radius."}], "name": "nmsRadius"}], "key.doc.type": "Function", "key.doclength": 284, "key.docoffset": 3534, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decodeMultiplePoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>maxPoseDetections</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.5</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>nmsRadius</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 20</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1099, "key.name": "decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)", "key.namelength": 109, "key.nameoffset": 3832, "key.offset": 3827, "key.parsed_declaration": "public func decodeMultiplePoses(\n  maxPoseDetections: Int,\n  partThreshold: Double = 0.5,\n  nmsRadius: Int = 20\n) -> [Pose<Skeleton>]", "key.parsed_scope.end": 151, "key.parsed_scope.start": 116, "key.substructure": [{"key.annotated_decl": "<Declaration>var poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 3972, "key.offset": 3968, "key.parsed_declaration": "var poses: [Pose<Skeleton>] = []", "key.parsed_scope.end": 121, "key.parsed_scope.start": 121, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF5posesL_AKvp"}, {"key.annotated_decl": "<Declaration>var queue: <Type usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</Type>&lt;<Type usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</Type>&gt;</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>queue</decl.name>: <decl.var.type><ref.struct usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</ref.struct>&lt;<ref.typealias usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</ref.typealias>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "queue", "key.namelength": 5, "key.nameoffset": 4010, "key.offset": 4006, "key.parsed_declaration": "var queue = buildPartWithScoreQueue(partThreshold: partThreshold, localMaxRadius: 1)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "PriorityQueue<(score: Double, part: Part)>", "key.typeusr": "$s11FritzVision13PriorityQueueVySd5score_AA4PartV4parttGD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF5queueL_AA13PriorityQueueVySd5score_AA4PartV0L0tGvp"}, {"key.annotated_decl": "<Declaration>let squaredNMSRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>squaredNMSRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 44, "key.name": "squaredNMSRadius", "key.namelength": 16, "key.nameoffset": 4099, "key.offset": 4095, "key.parsed_declaration": "let squaredNMSRadius = nmsRadius * nmsRadius", "key.parsed_scope.end": 124, "key.parsed_scope.start": 124, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF16squaredNMSRadiusL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (DecodePoseWithDisplacements<Skeleton>) -> (Int, Double, Int) -> [Pose<Skeleton>]", "key.typeusr": "$s17maxPoseDetections13partThreshold9nmsRadiusSay11FritzVision0B0CyxGGSi_SdSitcD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF"}], "key.typename": "DecodePoseWithDisplacements<Skeleton>.Type", "key.typeusr": "$s11FritzVision27DecodePoseWithDisplacementsCyxGmD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1168, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModel) @_objcRuntimeName(FritzVisionPoseModel) public final class FritzVisionHumanPoseModel : <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 243}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 236}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 208}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 184}], "key.bodylength": 822, "key.bodyoffset": 342, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 39, "key.offset": 282}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 323}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_objcRuntimeName</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHumanPoseModel</decl.name> : <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPosePredictor<HumanSkeleton>"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 916, "key.name": "FritzVisionHumanPoseModel", "key.namelength": 25, "key.nameoffset": 255, "key.offset": 249, "key.parsed_declaration": "public final class FritzVisionHumanPoseModel: FritzVisionPosePredictor<HumanSkeleton>, DownloadableModel", "key.parsed_scope.end": 34, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPoseModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 402}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 396}], "key.doc.column": 27, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift\" line=\"16\" column=\"27\"><Name>modelConfig</Name><USR>s:11FritzVision0aB14HumanPoseModelC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ</USR><Declaration>@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "modelConfig", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 345, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 145, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 420, "key.offset": 409, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB14HumanPoseModelC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 564}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 558}], "key.bodylength": 46, "key.bodyoffset": 615, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 582, "key.offset": 571, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB14HumanPoseModelC07managedE00a7ManagedE0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 732}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 726}], "key.doc.column": 27, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift\" line=\"26\" column=\"27\"><Name>wifiRequiredForModelDownload</Name><USR>s:11FritzVision0aB14HumanPoseModelC015wifiRequiredForE8DownloadSbvpZ</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 666, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 750, "key.offset": 739, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB14HumanPoseModelC015wifiRequiredForE8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision0aB14HumanPoseModelC\">FritzVisionHumanPoseModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 999}], "key.bodylength": 57, "key.bodyoffset": 1105, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift\" line=\"31\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>s:11FritzVision0aB14HumanPoseModelC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ</USR><Declaration>public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 820, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB14HumanPoseModelC\">FritzVisionHumanPoseModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 157, "key.name": "fetchModel(completionHandler:)", "key.namelength": 85, "key.nameoffset": 1018, "key.offset": 1006, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModel?, Error?) -> Void)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(FritzVisionHumanPoseModel.Type) -> (@escaping (FritzVisionHumanPoseModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD14HumanPoseModelCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB14HumanPoseModelC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ"}], "key.typename": "FritzVisionHumanPoseModel.Type", "key.typeusr": "$s11FritzVision0aB14HumanPoseModelCmD", "key.usr": "s:11FritzVision0aB14HumanPoseModelC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1475, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzHumanSkeleton) public enum HumanSkeleton : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 210}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 184}], "key.bodylength": 1217, "key.bodyoffset": 256, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 237}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 242}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzHumanSkeleton)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HumanSkeleton</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1257, "key.name": "HumanSkeleton", "key.namelength": 13, "key.nameoffset": 222, "key.offset": 217, "key.parsed_declaration": "public enum HumanSkeleton: Int, SkeletonType", "key.parsed_scope.end": 52, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 260, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case nose</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>nose</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "nose", "key.namelength": 4, "key.nameoffset": 265, "key.offset": 265, "key.parsed_declaration": "case nose", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonNose"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 272, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftEye</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEye", "key.namelength": 7, "key.nameoffset": 277, "key.offset": 277, "key.parsed_declaration": "case leftEye", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 287, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightEye</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEye", "key.namelength": 8, "key.nameoffset": 292, "key.offset": 292, "key.parsed_declaration": "case rightEye", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 303, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftEar</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEar", "key.namelength": 7, "key.nameoffset": 308, "key.offset": 308, "key.parsed_declaration": "case leftEar", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 318, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightEar</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEar", "key.namelength": 8, "key.nameoffset": 323, "key.offset": 323, "key.parsed_declaration": "case rightEar", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 334, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftShoulder</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftShoulder", "key.namelength": 12, "key.nameoffset": 339, "key.offset": 339, "key.parsed_declaration": "case leftShoulder", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 354, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightShoulder</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightShoulder", "key.namelength": 13, "key.nameoffset": 359, "key.offset": 359, "key.parsed_declaration": "case rightShoulder", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 375, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftElbow</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftElbow", "key.namelength": 9, "key.nameoffset": 380, "key.offset": 380, "key.parsed_declaration": "case leftElbow", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 392, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightElbow</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightElbow", "key.namelength": 10, "key.nameoffset": 397, "key.offset": 397, "key.parsed_declaration": "case rightElbow", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 410, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftWrist</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftWrist", "key.namelength": 9, "key.nameoffset": 415, "key.offset": 415, "key.parsed_declaration": "case leftWrist", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 427, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightWrist</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightWrist", "key.namelength": 10, "key.nameoffset": 432, "key.offset": 432, "key.parsed_declaration": "case rightWrist", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 445, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftHip</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftHip", "key.namelength": 7, "key.nameoffset": 450, "key.offset": 450, "key.parsed_declaration": "case leftHip", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 460, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightHip</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightHip", "key.namelength": 8, "key.nameoffset": 465, "key.offset": 465, "key.parsed_declaration": "case rightHip", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 476, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftKnee</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "leftKnee", "key.namelength": 8, "key.nameoffset": 481, "key.offset": 481, "key.parsed_declaration": "case leftKnee", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 492, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightKnee</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "rightKnee", "key.namelength": 9, "key.nameoffset": 497, "key.offset": 497, "key.parsed_declaration": "case rightKnee", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 509, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftAnkle</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftAnkle", "key.namelength": 9, "key.nameoffset": 514, "key.offset": 514, "key.parsed_declaration": "case leftAnkle", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftAnkle"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 526, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightAnkle</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightAnkle", "key.namelength": 10, "key.nameoffset": 531, "key.offset": 531, "key.parsed_declaration": "case rightAnkle", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightAnkle"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let connectedParts: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 545}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>connectedParts</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 414, "key.name": "connectedParts", "key.namelength": 14, "key.nameoffset": 563, "key.offset": 552, "key.overrides": [{"key.usr": "s:11FritzVision12SkeletonTypeP14connectedPartsSayx_xtGvpZ"}], "key.parsed_declaration": "public static let connectedParts: [ConnectedPart<HumanSkeleton>] = [", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "[(HumanSkeleton, HumanSkeleton)]", "key.typeusr": "$sSay11FritzVision13HumanSkeletonO_ACtGD", "key.usr": "s:11FritzVision13HumanSkeletonO14connectedPartsSayAC_ACtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let poseChain: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 970}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseChain</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 495, "key.name": "poseChain", "key.namelength": 9, "key.nameoffset": 988, "key.offset": 977, "key.overrides": [{"key.usr": "s:11FritzVision12SkeletonTypeP9poseChainSayx_xtGvpZ"}], "key.parsed_declaration": "public static let poseChain: [ConnectedPart<HumanSkeleton>] = [", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "[(HumanSkeleton, HumanSkeleton)]", "key.typeusr": "$sSay11FritzVision13HumanSkeletonO_ACtGD", "key.usr": "s:11FritzVision13HumanSkeletonO9poseChainSayAC_ACtGvpZ"}], "key.typename": "HumanSkeleton.Type", "key.typeusr": "$s11FritzVision13HumanSkeletonOmD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+GeneratedCoreML.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1632, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5835, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public final class PoseLiftingPredictorOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 316}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 309}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 296}], "key.bodylength": 189, "key.bodyoffset": 393, "key.doc.column": 20, "key.doc.comment": "Options for Pose Model.", "key.doc.declaration": "@objcMembers public final class PoseLiftingPredictorOptions : NSObject, FritzPredictorOptionType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"17\" column=\"20\"><Name>PoseLiftingPredictorOptions</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions</USR><Declaration>@objcMembers public final class PoseLiftingPredictorOptions : NSObject, FritzPredictorOptionType</Declaration><CommentParts><Abstract><Para>Options for Pose Model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "PoseLiftingPredictorOptions", "key.doc.type": "Class", "key.doclength": 28, "key.docoffset": 268, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 357}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 367}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseLiftingPredictorOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictorOptionType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 261, "key.name": "PoseLiftingPredictorOptions", "key.namelength": 27, "key.nameoffset": 328, "key.offset": 322, "key.parsed_declaration": "public final class PoseLiftingPredictorOptions: NSObject, FritzPredictorOptionType", "key.parsed_scope.end": 24, "key.parsed_scope.start": 17, "key.runtime_name": "_TtC4main27PoseLiftingPredictorOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let defaults: <Type usr=\"c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions\">PoseLiftingPredictorOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 437}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 431}], "key.doc.column": 27, "key.doc.comment": "Default Pose model options.", "key.doc.declaration": "@objc public static let defaults: FritzVision.PoseLiftingPredictorOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"20\" column=\"27\"><Name>defaults</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(cpy)defaults</USR><Declaration>@objc public static let defaults: FritzVision.PoseLiftingPredictorOptions</Declaration><CommentParts><Abstract><Para>Default Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "defaults", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 397, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions\">PoseLiftingPredictorOptions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 51, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 455, "key.offset": 444, "key.parsed_declaration": "@objc public static let defaults = PoseLiftingPredictorOptions()", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "PoseLiftingPredictorOptions", "key.typeusr": "$s11FritzVision27PoseLiftingPredictorOptionsCD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(cpy)defaults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var useCPUOnly: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 553}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 547}], "key.doc.column": 20, "key.doc.comment": "If true only uses CPU to run predictions.", "key.doc.declaration": "@objc public var useCPUOnly: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"23\" column=\"20\"><Name>useCPUOnly</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(py)useCPUOnly</USR><Declaration>@objc public var useCPUOnly: Bool</Declaration><CommentParts><Abstract><Para>If true only uses CPU to run predictions.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "useCPUOnly", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 499, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>useCPUOnly</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "useCPUOnly", "key.namelength": 10, "key.nameoffset": 564, "key.offset": 560, "key.parsed_declaration": "@objc public var useCPUOnly = true", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(py)useCPUOnly"}], "key.typename": "PoseLiftingPredictorOptions.Type", "key.typeusr": "$s11FritzVision27PoseLiftingPredictorOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class FritzVisionPoseLiftingModel : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 734}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 727}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 703}], "key.bodylength": 3713, "key.bodyoffset": 807, "key.doc.column": 20, "key.doc.comment": "Model used to create a 3D pose from 2D pose", "key.doc.declaration": "@available(iOS 11.0, *)\npublic final class FritzVisionPoseLiftingModel : BasePredictor, CoreMLPredictor", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"33\" column=\"20\"><Name>FritzVisionPoseLiftingModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel</USR><Declaration>@available(iOS 11.0, *)\npublic final class FritzVisionPoseLiftingModel : BasePredictor, CoreMLPredictor</Declaration><CommentParts><Abstract><Para>Model used to create a 3D pose from 2D pose</Para></Abstract></CommentParts></Class>", "key.doc.line": 33, "key.doc.name": "FritzVisionPoseLiftingModel", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 655, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 775}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 790}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseLiftingModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3781, "key.name": "FritzVisionPoseLiftingModel", "key.namelength": 27, "key.nameoffset": 746, "key.offset": 740, "key.parsed_declaration": "public final class FritzVisionPoseLiftingModel: BasePredictor, CoreMLPredictor", "key.parsed_scope.end": 141, "key.parsed_scope.start": 33, "key.runtime_name": "_TtC4main27FritzVisionPoseLiftingModel", "key.substructure": [], "key.typename": "FritzVisionPoseLiftingModel.Type", "key.typeusr": "$s11FritzVision0aB16PoseLiftingModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 513, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1849, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Preprocessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3289, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/FritzVisionImage+Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3364, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5949, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 260}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 253}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 218}], "key.bodylength": 1586, "key.bodyoffset": 330, "key.doc.column": 20, "key.doc.comment": "Options for Pose Model.", "key.doc.declaration": "@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPoseModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions</USR><Declaration>@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for Pose Model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPoseModelOptions", "key.doc.type": "Class", "key.doclength": 28, "key.docoffset": 190, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 301}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 311}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1651, "key.name": "FritzVisionPoseModelOptions", "key.namelength": 27, "key.nameoffset": 272, "key.offset": 266, "key.parsed_declaration": "public final class FritzVisionPoseModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 46, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPoseModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 368}], "key.doc.column": 21, "key.doc.comment": "Default Pose model options.", "key.doc.declaration": "public static let defaults: FritzImageOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"17\" column=\"21\"><Name>defaults</Name><USR>s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ</USR><Declaration>public static let defaults: FritzImageOptions</Declaration><CommentParts><Abstract><Para>Default Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "defaults", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 334, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 70, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 386, "key.offset": 375, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static let defaults: FritzImageOptions = FritzVisionPoseModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 511}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 505}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"20\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 449, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 522, "key.offset": 518, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 767}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 761}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"24\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 586, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 778, "key.offset": 774, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1342}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1336}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"33\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 816, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1353, "key.offset": 1349, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPartThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1606}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1600}], "key.doc.column": 20, "key.doc.comment": "Minimum score a part must have to potentially build a new pose. The pose will include parts below this\nthreshold, but a part below this threshold will not trigger a new pose instance to be built.", "key.doc.declaration": "@objc public var minPartThreshold: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"37\" column=\"20\"><Name>minPartThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold</USR><Declaration>@objc public var minPartThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a part must have to potentially build a new pose. The pose will include parts below this threshold, but a part below this threshold will not trigger a new pose instance to be built.</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "minPartThreshold", "key.doc.type": "Other", "key.doclength": 206, "key.docoffset": 1392, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPartThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPartThreshold", "key.namelength": 16, "key.nameoffset": 1617, "key.offset": 1613, "key.parsed_declaration": "@objc public var minPartThreshold: Double = 0.50", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPoseThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1722}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1716}], "key.doc.column": 20, "key.doc.comment": "Minimum score a pose must have to be included in results.", "key.doc.declaration": "@objc public var minPoseThreshold: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"40\" column=\"20\"><Name>minPoseThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold</USR><Declaration>@objc public var minPoseThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a pose must have to be included in results.</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "minPoseThreshold", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 1652, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPoseThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPoseThreshold", "key.namelength": 16, "key.nameoffset": 1733, "key.offset": 1729, "key.parsed_declaration": "@objc public var minPoseThreshold: Double = 0.50", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var nmsRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1800}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1794}], "key.doc.column": 20, "key.doc.comment": "NMS radius for pose", "key.doc.declaration": "@objc public var nmsRadius: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"43\" column=\"20\"><Name>nmsRadius</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius</USR><Declaration>@objc public var nmsRadius: Int</Declaration><CommentParts><Abstract><Para>NMS radius for pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "nmsRadius", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1768, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>nmsRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "nmsRadius", "key.namelength": 9, "key.nameoffset": 1811, "key.offset": 1807, "key.parsed_declaration": "@objc public var nmsRadius: Int = 20", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var smoothingOptions: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;.<Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1834}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothingOptions</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;.<ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 74, "key.name": "smoothingOptions", "key.namelength": 16, "key.nameoffset": 1845, "key.offset": 1841, "key.parsed_declaration": "public var smoothingOptions: OneEuroPointFilter.Options? = OneEuroPointFilter.low", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "OneEuroFilterPointable<CGPoint>.Options?", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCySo7CGPointV_GSgD", "key.usr": "s:11FritzVision0aB16PoseModelOptionsC09smoothingE0AA22OneEuroFilterPointableC0E0CySo7CGPointV_GSgvp"}], "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class FritzVisionPosePredictor&lt;Skeleton&gt; : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 2003}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1979}], "key.bodylength": 3843, "key.bodyoffset": 2104, "key.doc.column": 12, "key.doc.comment": "A model used to predict the poses of people in images.", "key.doc.declaration": "@available(iOS 11.0, *)\nopen class FritzVisionPosePredictor<Skeleton> : BasePredictor, CoreMLOrVisionPredictor where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"51\" column=\"12\"><Name>FritzVisionPosePredictor</Name><USR>s:11FritzVision0aB13PosePredictorC</USR><Declaration>@available(iOS 11.0, *)\nopen class FritzVisionPosePredictor&lt;Skeleton&gt; : BasePredictor, CoreMLOrVisionPredictor where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.line": 51, "key.doc.name": "FritzVisionPosePredictor", "key.doc.type": "Class", "key.doclength": 59, "key.docoffset": 1920, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2064}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2079}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPosePredictor</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLOrVisionPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3940, "key.name": "FritzVisionPosePredictor", "key.namelength": 24, "key.nameoffset": 2014, "key.offset": 2008, "key.parsed_declaration": "open class FritzVisionPosePredictor<Skeleton: SkeletonType>: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 173, "key.parsed_scope.start": 51, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 2049}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 2039, "key.offset": 2039, "key.parsed_declaration": "open class FritzVisionPosePredictor<Skeleton: SkeletonType>: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision0aB13PosePredictorC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2109}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2126, "key.offset": 2116, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB13PosePredictorC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2163}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 52, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2180, "key.offset": 2170, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionPoseModelOptions", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "s:11FritzVision0aB13PosePredictorC12ModelOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.PredictionResult = <Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2225}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 60, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2242, "key.offset": 2232, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = FritzVisionPoseResult<Skeleton>", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "FritzVisionPoseResult<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB10PoseResultCyxGmD", "key.usr": "s:11FritzVision0aB13PosePredictorC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var outputStride: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2404}], "key.doc.column": 14, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "public var outputStride: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"60\" column=\"14\"><Name>outputStride</Name><USR>s:11FritzVision0aB13PosePredictorC12outputStrideSivp</USR><Declaration>public var outputStride: Int</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "outputStride", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 2353, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputStride</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "outputStride", "key.namelength": 12, "key.nameoffset": 2415, "key.offset": 2411, "key.parsed_declaration": "public var outputStride: Int = 8", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision0aB13PosePredictorC12outputStrideSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var useDisplacements: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2440}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>useDisplacements</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "useDisplacements", "key.namelength": 16, "key.nameoffset": 2451, "key.offset": 2447, "key.parsed_declaration": "public var useDisplacements: Bool = true", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB13PosePredictorC16useDisplacementsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type> = .init(), completion: (<Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</Type>&gt;?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5704}], "key.bodylength": 65, "key.bodyoffset": 5880, "key.doc.column": 15, "key.doc.comment": "Predict poses from a FritzImage.\n\n- Parameters:\n  - input: The image to use to dectect poses.\n  - options: The options used to configure the pose results.\n  - completion: Handler to call back on the main thread with poses or error.", "key.doc.declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionPoseModelOptions = .init(), completion: (FritzVisionPoseResult<Skeleton>?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"166\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>s:11FritzVision0aB13PosePredictorC7predict_7options10completionyAA0aB5ImageC_AA0abC12ModelOptionsCyAA0abC6ResultCyxGSg_s5Error_pSgtXEtF</USR><Declaration>public func predict(_ input: FritzVisionImage, options: FritzVisionPoseModelOptions = .init(), completion: (FritzVisionPoseResult&lt;Skeleton&gt;?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Predict poses from a FritzImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The image to use to dectect poses.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The options used to configure the pose results.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Handler to call back on the main thread with poses or error.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 166, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "The image to use to dectect poses."}], "name": "input"}, {"discussion": [{"Para": "The options used to configure the pose results."}], "name": "options"}, {"discussion": [{"Para": "Handler to call back on the main thread with poses or error."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 265, "key.docoffset": 5437, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 235, "key.name": "predict(_:options:completion:)", "key.namelength": 162, "key.nameoffset": 5716, "key.offset": 5711, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionPoseModelOptions = .init(),\n  completion: (FritzVisionPoseResult<Skeleton>?, Error?) -> Void\n)", "key.parsed_scope.end": 172, "key.parsed_scope.start": 166, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionPosePredictor<Skeleton>) -> (FritzVisionImage, FritzVisionPoseModelOptions, (FritzVisionPoseResult<Skeleton>?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD16PoseModelOptionsCyAC0cdF6ResultCyxGSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0aB13PosePredictorC7predict_7options10completionyAA0aB5ImageC_AA0abC12ModelOptionsCyAA0abC6ResultCyxGSg_s5Error_pSgtXEtF"}], "key.typename": "FritzVisionPosePredictor<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB13PosePredictorCyxGmD", "key.usr": "s:11FritzVision0aB13PosePredictorC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4876, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionPoseResult&lt;Skeleton&gt; : <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 44}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 20}], "key.bodylength": 2651, "key.bodyoffset": 127, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 104}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseResult</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision0aB10PoseResultC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2728, "key.name": "FritzVisionPoseResult", "key.namelength": 21, "key.nameoffset": 57, "key.offset": 51, "key.parsed_declaration": "public class FritzVisionPoseResult<Skeleton: SkeletonType>: FritzPredictionResult", "key.parsed_scope.end": 87, "key.parsed_scope.start": 5, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 89}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 79, "key.offset": 79, "key.parsed_declaration": "public class FritzVisionPoseResult<Skeleton: SkeletonType>: FritzPredictionResult", "key.parsed_scope.end": 5, "key.parsed_scope.start": 5, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision0aB10PoseResultC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 187}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 181}], "key.doc.column": 20, "key.doc.comment": "Original input image before it was rescaled", "key.doc.declaration": "@objc public let image: FritzVisionImage", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift\" line=\"8\" column=\"20\"><Name>image</Name><USR>s:11FritzVision0aB10PoseResultC5imageAA0aB5ImageCvp</USR><Declaration>@objc public let image: FritzVisionImage</Declaration><CommentParts><Abstract><Para>Original input image before it was rescaled</Para></Abstract></CommentParts></Other>", "key.doc.line": 8, "key.doc.name": "image", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 131, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "image", "key.namelength": 5, "key.nameoffset": 198, "key.offset": 194, "key.parsed_declaration": "@objc public let image: FritzVisionImage", "key.parsed_scope.end": 8, "key.parsed_scope.start": 8, "key.typename": "FritzVisionImage", "key.typeusr": "$s11FritzVision0aB5ImageCD", "key.usr": "s:11FritzVision0aB10PoseResultC5imageAA0aB5ImageCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 257}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 251}], "key.doc.column": 20, "key.doc.comment": "Pose model options.", "key.doc.declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift\" line=\"11\" column=\"20\"><Name>options</Name><USR>s:11FritzVision0aB10PoseResultC7optionsAA0abC12ModelOptionsCvp</USR><Declaration>@objc public let options: FritzVisionPoseModelOptions</Declaration><CommentParts><Abstract><Para>Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 11, "key.doc.name": "options", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 225, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "options", "key.namelength": 7, "key.nameoffset": 268, "key.offset": 264, "key.parsed_declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCD", "key.usr": "s:11FritzVision0aB10PoseResultC7optionsAA0abC12ModelOptionsCvp"}], "key.typename": "FritzVisionPoseResult<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB10PoseResultCyxGmD", "key.usr": "s:11FritzVision0aB10PoseResultC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+PointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1344, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1066, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class PoseSmoothingOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 663}], "key.bodylength": 364, "key.bodyoffset": 698, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseSmoothingOptions</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 393, "key.name": "PoseSmoothingOptions", "key.namelength": 20, "key.nameoffset": 676, "key.offset": 670, "key.parsed_declaration": "public class PoseSmoothingOptions", "key.parsed_scope.end": 50, "key.parsed_scope.start": 33, "key.runtime_name": "_TtC4main20PoseSmoothingOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(frequency: <Type usr=\"s:Sd\">Double</Type> = 1.0, minCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0, beta: <Type usr=\"s:Sd\">Double</Type> = 0.0, derivateCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 798}], "key.bodylength": 127, "key.bodyoffset": 933, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frequency</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beta</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>derivateCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 256, "key.name": "init(frequency:minCutoff:beta:derivateCutoff:)", "key.namelength": 126, "key.nameoffset": 805, "key.offset": 805, "key.parsed_declaration": "public init(\n  frequency: Double = 1.0,\n  minCutoff: Double = 1.0,\n  beta: Double = 0.0,\n  derivateCutoff: Double = 1.0\n  )", "key.parsed_scope.end": 49, "key.parsed_scope.start": 39, "key.substructure": [], "key.typename": "(PoseSmoothingOptions.Type) -> (Double, Double, Double, Double) -> PoseSmoothingOptions", "key.typeusr": "$s9frequency9minCutoff4beta08derivateC011FritzVision20PoseSmoothingOptionsCSd_S3dtcD", "key.usr": "s:11FritzVision20PoseSmoothingOptionsC9frequency9minCutoff4beta08derivateH0ACSd_S3dtcfc"}], "key.typename": "PoseSmoothingOptions.Type", "key.typeusr": "$s11FritzVision20PoseSmoothingOptionsCmD", "key.usr": "s:11FritzVision20PoseSmoothingOptionsC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2152, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Keypoint&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 250}], "key.bodylength": 1542, "key.bodyoffset": 321, "key.doc.column": 14, "key.doc.comment": "Predicted keypoint containing part, score, and position identified.", "key.doc.declaration": "public class Keypoint<Skeleton> : NSObject, KeypointType where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift\" line=\"13\" column=\"14\"><Name>Keypoint</Name><USR>s:11FritzVision8KeypointC</USR><Declaration>public class Keypoint&lt;Skeleton&gt; : NSObject, KeypointType where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>Predicted keypoint containing part, score, and position identified.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "Keypoint", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 178, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 297}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 307}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Keypoint</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "KeypointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1607, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 263, "key.offset": 257, "key.parsed_declaration": "public class Keypoint<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 70, "key.parsed_scope.start": 13, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 282}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 272, "key.offset": 272, "key.parsed_declaration": "public class Keypoint<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision8KeypointC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 371}, {"key.attribute": "source.decl.attribute.available", "key.length": 43, "key.offset": 325}], "key.bodylength": 20, "key.bodyoffset": 391, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "id", "key.namelength": 2, "key.nameoffset": 382, "key.offset": 378, "key.parsed_declaration": "public var id: Int", "key.parsed_scope.end": 18, "key.parsed_scope.start": 16, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision8KeypointC2idSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 416}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 427, "key.offset": 423, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}], "key.parsed_declaration": "public let index: Int", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision8KeypointC5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 440}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "position", "key.namelength": 8, "key.nameoffset": 451, "key.offset": 447, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}], "key.parsed_declaration": "public let position: CGPoint", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision8KeypointC8positionSo7CGPointVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 471}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 482, "key.offset": 478, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}], "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8KeypointC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let part: <Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 498}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>part</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "part", "key.namelength": 4, "key.nameoffset": 509, "key.offset": 505, "key.parsed_declaration": "public let part: Skeleton", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Skeleton", "key.typeusr": "$sxD", "key.usr": "s:11FritzVision8KeypointC4partxvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(id: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 534}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 527}], "key.bodylength": 96, "key.bodyoffset": 608, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>id</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 162, "key.name": "init(id:position:score:part:)", "key.namelength": 63, "key.nameoffset": 543, "key.offset": 543, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP2id8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}], "key.parsed_declaration": "public required init(id: Int, position: CGPoint, score: Double, part: Skeleton)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 25, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>.Type) -> (Int, CGPoint, Double, Skeleton) -> Keypoint<Skeleton>", "key.typeusr": "$s2id8position5score4part11FritzVision8KeypointCyxGSi_So7CGPointVSdxtcD", "key.usr": "s:11FritzVision8KeypointC2id8position5score4partACyxGSi_So7CGPointVSdxtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 716}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 709}], "key.bodylength": 158, "key.bodyoffset": 750, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 184, "key.name": "description", "key.namelength": 11, "key.nameoffset": 729, "key.offset": 725, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 35, "key.parsed_scope.start": 32, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision8KeypointC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 759, "key.offset": 755, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision8KeypointC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fromPosition(_ position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type>) -&gt; <Type usr=\"s:11FritzVision8KeypointC\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 982}], "key.bodylength": 77, "key.bodyoffset": 1037, "key.doc.column": 15, "key.doc.comment": "Creates keypoint from Point.\n- Parameter position: Point", "key.doc.declaration": "public func fromPosition(_ position: CGPoint) -> Self", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift\" line=\"39\" column=\"15\"><Name>fromPosition(_:)</Name><USR>s:11FritzVision8KeypointC12fromPositionyACyxGXDSo7CGPointVF</USR><Declaration>public func fromPosition(_ position: CGPoint) -&gt; Self</Declaration><CommentParts><Abstract><Para>Creates keypoint from Point.</Para></Abstract><Parameters><Parameter><Name>position</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Point</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 39, "key.doc.name": "fromPosition(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Point"}], "name": "position"}], "key.doc.type": "Function", "key.doclength": 67, "key.docoffset": 913, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision8KeypointC\">Self</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 126, "key.name": "fromPosition(_:)", "key.namelength": 33, "key.nameoffset": 994, "key.offset": 989, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.parsed_declaration": "public func fromPosition(_ position: CGPoint) -> Self", "key.parsed_scope.end": 41, "key.parsed_scope.start": 39, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (CGPoint) -> Self", "key.typeusr": "$sy11FritzVision8KeypointCyxGXDSo7CGPointVcD", "key.usr": "s:11FritzVision8KeypointC12fromPositionyACyxGXDSo7CGPointVF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func to3D() -&gt; <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1119}], "key.bodylength": 153, "key.bodyoffset": 1163, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>to3D</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 191, "key.name": "to3D()", "key.namelength": 6, "key.nameoffset": 1131, "key.offset": 1126, "key.parsed_declaration": "public func to3D() -> Keypoint3D<Skeleton>", "key.parsed_scope.end": 51, "key.parsed_scope.start": 43, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> () -> Keypoint3D<Skeleton>", "key.typeusr": "$s11FritzVision10Keypoint3DCyxGycD", "key.usr": "s:11FritzVision8KeypointC4to3DAA10Keypoint3DCyxGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1330}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1321}], "key.bodylength": 248, "key.bodyoffset": 1375, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 287, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 1342, "key.offset": 1337, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 64, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision8KeypointC7isEqualySbypSgF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func normalized(by size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1628}], "key.bodylength": 180, "key.bodyoffset": 1681, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>normalized</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 227, "key.name": "normalized(by:)", "key.namelength": 27, "key.nameoffset": 1640, "key.offset": 1635, "key.parsed_declaration": "public func normalized(by size: CGSize) -> Keypoint", "key.parsed_scope.end": 69, "key.parsed_scope.start": 66, "key.substructure": [{"key.annotated_decl": "<Declaration>let newPosition: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newPosition</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 82, "key.name": "newPosition", "key.namelength": 11, "key.nameoffset": 1690, "key.offset": 1686, "key.parsed_declaration": "let newPosition = CGPoint(x: position.x / size.width, y: position.y / size.height)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision8KeypointC10normalized2byACyxGSo6CGSizeV_tF11newPositionL_So7CGPointVvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (CGSize) -> Keypoint<Skeleton>", "key.typeusr": "$s2by11FritzVision8KeypointCyxGSo6CGSizeV_tcD", "key.usr": "s:11FritzVision8KeypointC10normalized2byACyxGSo6CGSizeV_tF"}], "key.typename": "Keypoint<Skeleton>.Type", "key.typeusr": "$s11FritzVision8KeypointCyxGmD", "key.usr": "s:11FritzVision8KeypointC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1866}], "key.bodylength": 186, "key.bodyoffset": 1964, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 278, "key.name": "==(_:_:)", "key.namelength": 76, "key.nameoffset": 1878, "key.offset": 1873, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Keypoint<Skeleton>, rhs: Keypoint<Skeleton>) -> Bool", "key.parsed_scope.end": 80, "key.parsed_scope.start": 72, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1891}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1881, "key.offset": 1881, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Keypoint<Skeleton>, rhs: Keypoint<Skeleton>) -> Bool", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 163, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1971, "key.offset": 1967, "key.parsed_declaration": "let areEqual = lhs.index == rhs.index &&", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 24, "key.name": "TODO: Figure this out...", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2081}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>, Keypoint<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision8KeypointCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1860, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class Keypoint3D&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 260}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 253}], "key.bodylength": 1266, "key.bodyoffset": 332, "key.doc.column": 20, "key.doc.comment": "Predicted keypoint containing part, score, and position identified.", "key.doc.declaration": "public final class Keypoint3D<Skeleton> : NSObject, KeypointType where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift\" line=\"14\" column=\"20\"><Name>Keypoint3D</Name><USR>s:11FritzVision10Keypoint3DC</USR><Declaration>public final class Keypoint3D&lt;Skeleton&gt; : NSObject, KeypointType where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>Predicted keypoint containing part, score, and position identified.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "Keypoint3D", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 181, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 308}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 318}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Keypoint3D</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "KeypointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1333, "key.name": "Keypoint3D", "key.namelength": 10, "key.nameoffset": 272, "key.offset": 266, "key.parsed_declaration": "public final class Keypoint3D<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 65, "key.parsed_scope.start": 14, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 293}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 283, "key.offset": 283, "key.parsed_declaration": "public final class Keypoint3D<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision10Keypoint3DC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 381}, {"key.attribute": "source.decl.attribute.available", "key.length": 43, "key.offset": 335}], "key.bodylength": 20, "key.bodyoffset": 401, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "id", "key.namelength": 2, "key.nameoffset": 392, "key.offset": 388, "key.parsed_declaration": "public var id: Int", "key.parsed_scope.end": 18, "key.parsed_scope.start": 16, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision10Keypoint3DC2idSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 426}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 437, "key.offset": 433, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}], "key.parsed_declaration": "public let index: Int", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision10Keypoint3DC5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 450}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "position", "key.namelength": 8, "key.nameoffset": 461, "key.offset": 457, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}], "key.parsed_declaration": "public let position: Point3D", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "Point3D", "key.typeusr": "$s11FritzVision7Point3DCD", "key.usr": "s:11FritzVision10Keypoint3DC8positionAA7Point3DCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 481}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 492, "key.offset": 488, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}], "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision10Keypoint3DC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let part: <Type usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 508}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>part</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "part", "key.namelength": 4, "key.nameoffset": 519, "key.offset": 515, "key.parsed_declaration": "public let part: Skeleton", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Skeleton", "key.typeusr": "$sxD", "key.usr": "s:11FritzVision10Keypoint3DC4partxvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(id: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 565}, {"key.attribute": "source.decl.attribute.available", "key.length": 25, "key.offset": 537}], "key.bodylength": 96, "key.bodyoffset": 637, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>id</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 162, "key.name": "init(id:position:score:part:)", "key.namelength": 63, "key.nameoffset": 572, "key.offset": 572, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP2id8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}], "key.parsed_declaration": "public init(id: Int, position: Point3D, score: Double, part: Skeleton)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision10Keypoint3DC5index8position5score4partACyxGSi_AA7Point3DCSdxtcfc\">init(index:position:score:part:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>.Type) -> (Int, Point3D, Double, Skeleton) -> Keypoint3D<Skeleton>", "key.typeusr": "$s2id8position5score4part11FritzVision10Keypoint3DCyxGSi_AE7Point3DCSdxtcD", "key.usr": "s:11FritzVision10Keypoint3DC2id8position5score4partACyxGSi_AA7Point3DCSdxtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(index: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 738}], "key.bodylength": 99, "key.bodyoffset": 813, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "init(index:position:score:part:)", "key.namelength": 66, "key.nameoffset": 745, "key.offset": 745, "key.parsed_declaration": "public init(index: Int, position: Point3D, score: Double, part: Skeleton)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 33, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision10Keypoint3DC2id8position5score4partACyxGSi_AA7Point3DCSdxtcfc\">init(id:position:score:part:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>.Type) -> (Int, Point3D, Double, Skeleton) -> Keypoint3D<Skeleton>", "key.typeusr": "$s5index8position5score4part11FritzVision10Keypoint3DCyxGSi_AE7Point3DCSdxtcD", "key.usr": "s:11FritzVision10Keypoint3DC5index8position5score4partACyxGSi_AA7Point3DCSdxtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 924}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 917}], "key.bodylength": 158, "key.bodyoffset": 958, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 184, "key.name": "description", "key.namelength": 11, "key.nameoffset": 937, "key.offset": 933, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 43, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision10Keypoint3DC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 967, "key.offset": 963, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision10Keypoint3DC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fromPosition(_ position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>) -&gt; <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1121}], "key.bodylength": 131, "key.bodyoffset": 1182, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "fromPosition(_:)", "key.namelength": 33, "key.nameoffset": 1133, "key.offset": 1128, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.parsed_declaration": "public func fromPosition(_ position: Point3D) -> Keypoint3D", "key.parsed_scope.end": 52, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>) -> (Point3D) -> Keypoint3D<Skeleton>", "key.typeusr": "$sy11FritzVision10Keypoint3DCyxGAA7Point3DCcD", "key.usr": "s:11FritzVision10Keypoint3DC12fromPositionyACyxGAA7Point3DCF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1327}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1318}], "key.bodylength": 224, "key.bodyoffset": 1372, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 263, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 1339, "key.offset": 1334, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 64, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision10Keypoint3DC7isEqualySbypSgF"}], "key.typename": "Keypoint3D<Skeleton>.Type", "key.typeusr": "$s11FritzVision10Keypoint3DCyxGmD", "key.usr": "s:11FritzVision10Keypoint3DC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1602}], "key.bodylength": 154, "key.bodyoffset": 1704, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 250, "key.name": "==(_:_:)", "key.namelength": 80, "key.nameoffset": 1614, "key.offset": 1609, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Keypoint3D<Skeleton>, rhs: Keypoint3D<Skeleton>) -> Bool", "key.parsed_scope.end": 75, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1627}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1617, "key.offset": 1617, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Keypoint3D<Skeleton>, rhs: Keypoint3D<Skeleton>) -> Bool", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 131, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1711, "key.offset": 1707, "key.parsed_declaration": "let areEqual = lhs.index == rhs.index &&", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>, Keypoint3D<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision10Keypoint3DCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 504, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol KeypointType : AnyObject, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 181}], "key.bodylength": 273, "key.bodyoffset": 229, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 211}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 218}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>KeypointType</decl.name> : AnyObject, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 315, "key.name": "KeypointType", "key.namelength": 12, "key.nameoffset": 197, "key.offset": 188, "key.parsed_declaration": "public protocol KeypointType: class, Equatable", "key.parsed_scope.end": 22, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main12KeypointType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 31, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 247, "key.offset": 232, "key.parsed_declaration": "associatedtype Point: PointType", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Self.Point.Type", "key.typeusr": "$s5Point11FritzVision12KeypointTypePQzmD", "key.usr": "s:11FritzVision12KeypointTypeP5PointQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Skeleton</decl.name> : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 281, "key.offset": 266, "key.parsed_declaration": "associatedtype Skeleton: SkeletonType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Self.Skeleton.Type", "key.typeusr": "$s8Skeleton11FritzVision12KeypointTypePQzmD", "key.usr": "s:11FritzVision12KeypointTypeP8SkeletonQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var index: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 323, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "index", "key.namelength": 5, "key.nameoffset": 311, "key.offset": 307, "key.parsed_declaration": "var index: Int", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 353, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "position", "key.namelength": 8, "key.nameoffset": 336, "key.offset": 332, "key.parsed_declaration": "var position: Point", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Self.Point", "key.typeusr": "$s5Point11FritzVision12KeypointTypePQzD", "key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var score: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 381, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "score", "key.namelength": 5, "key.nameoffset": 366, "key.offset": 362, "key.parsed_declaration": "var score: Double", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(id: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision12KeypointTypeP8SkeletonQa\">Skeleton</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>id</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP8SkeletonQa\">Skeleton</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 61, "key.name": "init(id:position:score:part:)", "key.namelength": 61, "key.nameoffset": 391, "key.offset": 391, "key.parsed_declaration": "init(id: Int, position: Point, score: Double, part: Skeleton)", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "<Self where Self : KeypointType> (Self.Type) -> (Int, Self.Point, Double, Self.Skeleton) -> Self", "key.typeusr": "$s2id8position5score4partxSi_5PointQzSd8SkeletonQztcD", "key.usr": "s:11FritzVision12KeypointTypeP2id8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func fromPosition(_ position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type>) -&gt; <Type usr=\"s:11FritzVision12KeypointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision12KeypointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 44, "key.name": "fromPosition(_:)", "key.namelength": 31, "key.nameoffset": 462, "key.offset": 457, "key.parsed_declaration": "func fromPosition(_ position: Point) -> Self", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.substructure": [], "key.typename": "<Self where Self : KeypointType> (Self) -> (Self.Point) -> Self", "key.typeusr": "$syx5PointQzcD", "key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.typename": "KeypointType.Protocol", "key.typeusr": "$s11FritzVision12KeypointType_pmD", "key.usr": "s:11FritzVision12KeypointTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1699, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public final class Point3D : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 197}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 190}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 177}], "key.bodylength": 482, "key.bodyoffset": 239, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 218}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 228}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point3D</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 519, "key.name": "Point3D", "key.namelength": 7, "key.nameoffset": 209, "key.offset": 203, "key.parsed_declaration": "public final class Point3D: NSObject, PointType", "key.parsed_scope.end": 34, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main7Point3D", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let x: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 242}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "x", "key.namelength": 1, "key.nameoffset": 253, "key.offset": 249, "key.parsed_declaration": "public let x: CGFloat", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)x"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let y: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 266}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "y", "key.namelength": 1, "key.nameoffset": 277, "key.offset": 273, "key.parsed_declaration": "public let y: CGFloat", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)y"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let z: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 290}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>z</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "z", "key.namelength": 1, "key.nameoffset": 301, "key.offset": 297, "key.parsed_declaration": "public let z: CGFloat", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)z"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(x: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, y: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, z: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 315}], "key.bodylength": 48, "key.bodyoffset": 364, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>z</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init(x:y:z:)", "key.namelength": 40, "key.nameoffset": 322, "key.offset": 322, "key.parsed_declaration": "public init(x: CGFloat, y: CGFloat, z: CGFloat)", "key.parsed_scope.end": 22, "key.parsed_scope.start": 18, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVision@objc(cs)Point3D(im)initWith:\">init(with:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DCyAcA14SmoothingPointCcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Point3D.Type) -> (CGFloat, CGFloat, CGFloat) -> Point3D", "key.typeusr": "$s1x1y1z11FritzVision7Point3DC12CoreGraphics7CGFloatV_A2ItcD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(im)initWithX:y:z:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 424}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 417}], "key.bodylength": 176, "key.bodyoffset": 458, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 202, "key.name": "description", "key.namelength": 11, "key.nameoffset": 437, "key.offset": 433, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 29, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)description"}, {"key.annotated_decl": "<Declaration>let x: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "x", "key.namelength": 1, "key.nameoffset": 467, "key.offset": 463, "key.parsed_declaration": "let x = String(format: \"%.10f\", self.x)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)x\">x</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1xL_SSvp"}, {"key.annotated_decl": "<Declaration>let y: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "y", "key.namelength": 1, "key.nameoffset": 511, "key.offset": 507, "key.parsed_declaration": "let y = String(format: \"%.10f\", self.y)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)y\">y</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1yL_SSvp"}, {"key.annotated_decl": "<Declaration>let z: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>z</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "z", "key.namelength": 1, "key.nameoffset": 555, "key.offset": 551, "key.parsed_declaration": "let z = String(format: \"%.10f\", self.z)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)z\">z</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1zL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toArray() -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 641}], "key.bodylength": 43, "key.bodyoffset": 676, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toArray</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 72, "key.name": "toArray()", "key.namelength": 9, "key.nameoffset": 653, "key.offset": 648, "key.overrides": [{"key.usr": "s:11FritzVision9PointTypeP7toArraySaySdGyF"}], "key.parsed_declaration": "public func toArray() -> [Double]", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(Point3D) -> () -> [Double]", "key.typeusr": "$sSaySdGycD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(im)toArray"}], "key.typename": "Point3D.Type", "key.typeusr": "$s11FritzVision7Point3DCmD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == (lhs: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>, rhs: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1549}], "key.bodylength": 96, "key.bodyoffset": 1601, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 142, "key.name": "==(_:_:)", "key.namelength": 30, "key.nameoffset": 1561, "key.offset": 1556, "key.parsed_declaration": "public func ==(lhs: Point3D, rhs: Point3D) -> Bool", "key.parsed_scope.end": 69, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 73, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1608, "key.offset": 1604, "key.parsed_declaration": "let areEqual = lhs.x == rhs.x &&", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA7Point3DC_ADtF8areEqualL_Sbvp"}], "key.typename": "(Point3D, Point3D) -> Bool", "key.typeusr": "$sySb11FritzVision7Point3DC_ACtcD", "key.usr": "s:11FritzVision2eeoiySbAA7Point3DC_ADtF"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 427, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PointType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 180}], "key.bodylength": 218, "key.bodyoffset": 207, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PointType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 239, "key.name": "PointType", "key.namelength": 9, "key.nameoffset": 196, "key.offset": 187, "key.parsed_declaration": "public protocol PointType", "key.parsed_scope.end": 21, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main9PointType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func toArray() -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toArray</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 26, "key.name": "toArray()", "key.namelength": 9, "key.nameoffset": 216, "key.offset": 211, "key.parsed_declaration": "func toArray() -> [Double]", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "<Self where Self : PointType> (Self) -> () -> [Double]", "key.typeusr": "$sSaySdGycD", "key.usr": "s:11FritzVision9PointTypeP7toArraySaySdGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func - (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "-(_:_:)", "key.namelength": 23, "key.nameoffset": 253, "key.offset": 241, "key.parsed_declaration": "static func -(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1soiyA2C_ACtFZ\">- (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1soiyA2B_ABtFZ\">- (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1soiyxx_0C5ValueQztFZ\">- (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1soiy0C5ValueQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.RawValue</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1soiyA2B_ABtFZ\">- (_: CMTime, _: CMTime) -&gt; CMTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDP4simds17FixedWidthInteger6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1sopyA2BFZ\">- (_: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x2, _: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1sopyA2BFZ\">- (_: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x2, _: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1sopyA2BFZ\">- (_: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x2, _: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1sopyA2BFZ\">- (_: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x3, _: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1sopyA2BFZ\">- (_: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x3, _: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1sopyA2BFZ\">- (_: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x3, _: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1sopyA2BFZ\">- (_: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x4, _: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1sopyA2BFZ\">- (_: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x4, _: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1sopyA2BFZ\">- (_: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x4, _: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1sopyA2BFZ\">- (_: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x2, _: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1sopyA2BFZ\">- (_: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x2, _: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1sopyA2BFZ\">- (_: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x2, _: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1sopyA2BFZ\">- (_: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x3, _: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1sopyA2BFZ\">- (_: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x3, _: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1sopyA2BFZ\">- (_: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x3, _: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1sopyA2BFZ\">- (_: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x4, _: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1sopyA2BFZ\">- (_: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x4, _: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1sopyA2BFZ\">- (_: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x4, _: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1soiyA2B_ABtFZ\">- (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1sopyA2BFZ\">- (_: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1soiyA2B_ABtFZ\">- (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1sopyA2BFZ\">- (_: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1soiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func / (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>/ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "/(_:_:)", "key.namelength": 23, "key.nameoffset": 299, "key.offset": 287, "key.parsed_declaration": "static func /(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision9PointTypeP1doiyxx_SdtFZ\">/ (_: Self, _: Double) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGSize, _: CGSize) -&gt; CGSize</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_12CoreGraphics7CGFloatVtFZ\">/ (_: Point3D, _: CGFloat) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_SdtFZ\">/ (_: Point3D, _: Double) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_ACtFZ\">/ (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_SdtFZ\">/ (_: CGPoint, _: Double) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_So6CGSizeVtFZ\">/ (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">/ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">/ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_SftFZ\">/ (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_SdtFZ\">/ (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">/ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">/ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">/ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">/ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">/ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">/ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">/ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">/ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">/ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">/ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">/ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">/ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxAE_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_AEtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxAD_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_ADtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1doiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func / (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>/ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 45, "key.name": "/(_:_:)", "key.namelength": 25, "key.nameoffset": 345, "key.offset": 333, "key.parsed_declaration": "static func /(lhs: Self, rhs: Double) -> Self", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision9PointTypeP1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGSize, _: CGSize) -&gt; CGSize</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_12CoreGraphics7CGFloatVtFZ\">/ (_: Point3D, _: CGFloat) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_SdtFZ\">/ (_: Point3D, _: Double) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_ACtFZ\">/ (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_SdtFZ\">/ (_: CGPoint, _: Double) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_So6CGSizeVtFZ\">/ (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">/ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">/ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_SftFZ\">/ (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_SdtFZ\">/ (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">/ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">/ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">/ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">/ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">/ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">/ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">/ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">/ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">/ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">/ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">/ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">/ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxAE_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_AEtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxAD_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_ADtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Double) -> Self", "key.typeusr": "$syxx_SdtcD", "key.usr": "s:11FritzVision9PointTypeP1doiyxx_SdtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "*(_:_:)", "key.namelength": 23, "key.nameoffset": 393, "key.offset": 381, "key.parsed_declaration": "static func *(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1moiyA2C_ACtFZ\">* (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1moiyA2B_ABtFZ\">* (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1moiyA2B_So6CGSizeVtFZ\">* (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x2, _: Float) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiys5SIMD2VySfGAB_AGtFZ\">* (_: simd_float2x2, _: float2) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiys5SIMD2VySfGAG_ABtFZ\">* (_: float2, _: simd_float2x2) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyA2B_ABtFZ\">* (_: simd_float2x2, _: float2x2) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiySo0A9_float3x2aAB_AFtFZ\">* (_: simd_float2x2, _: float3x2) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiySo0A9_float4x2aAB_AFtFZ\">* (_: simd_float2x2, _: float4x2) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x2, _: Float) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiys5SIMD2VySfGAB_s5SIMD3VySfGtFZ\">* (_: simd_float3x2, _: float3) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiys5SIMD3VySfGs5SIMD2VySfG_ABtFZ\">* (_: float2, _: simd_float3x2) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiySo0A9_float2x2aAB_So0A9_float2x3atFZ\">* (_: simd_float3x2, _: float2x3) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyA2B_So0A9_float3x3atFZ\">* (_: simd_float3x2, _: float3x3) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiySo0A9_float4x2aAB_So0A9_float4x3atFZ\">* (_: simd_float3x2, _: float4x3) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x2, _: Float) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiys5SIMD2VySfGAB_s5SIMD4VySfGtFZ\">* (_: simd_float4x2, _: float4) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiys5SIMD4VySfGs5SIMD2VySfG_ABtFZ\">* (_: float2, _: simd_float4x2) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiySo0A9_float2x2aAB_So0A9_float2x4atFZ\">* (_: simd_float4x2, _: float2x4) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiySo0A9_float3x2aAB_So0A9_float3x4atFZ\">* (_: simd_float4x2, _: float3x4) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyA2B_So0A9_float4x4atFZ\">* (_: simd_float4x2, _: float4x4) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x3, _: Float) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiys5SIMD3VySfGAB_s5SIMD2VySfGtFZ\">* (_: simd_float2x3, _: float2) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiys5SIMD2VySfGs5SIMD3VySfG_ABtFZ\">* (_: float3, _: simd_float2x3) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyA2B_So0A9_float2x2atFZ\">* (_: simd_float2x3, _: float2x2) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiySo0A9_float3x3aAB_So0A9_float3x2atFZ\">* (_: simd_float2x3, _: float3x2) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiySo0A9_float4x3aAB_So0A9_float4x2atFZ\">* (_: simd_float2x3, _: float4x2) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x3, _: Float) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiys5SIMD3VySfGAB_AGtFZ\">* (_: simd_float3x3, _: float3) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiys5SIMD3VySfGAG_ABtFZ\">* (_: float3, _: simd_float3x3) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiySo0A9_float2x3aAB_AFtFZ\">* (_: simd_float3x3, _: float2x3) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyA2B_ABtFZ\">* (_: simd_float3x3, _: float3x3) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiySo0A9_float4x3aAB_AFtFZ\">* (_: simd_float3x3, _: float4x3) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x3, _: Float) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiys5SIMD3VySfGAB_s5SIMD4VySfGtFZ\">* (_: simd_float4x3, _: float4) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiys5SIMD4VySfGs5SIMD3VySfG_ABtFZ\">* (_: float3, _: simd_float4x3) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiySo0A9_float2x3aAB_So0A9_float2x4atFZ\">* (_: simd_float4x3, _: float2x4) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiySo0A9_float3x3aAB_So0A9_float3x4atFZ\">* (_: simd_float4x3, _: float3x4) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyA2B_So0A9_float4x4atFZ\">* (_: simd_float4x3, _: float4x4) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x4, _: Float) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiys5SIMD4VySfGAB_s5SIMD2VySfGtFZ\">* (_: simd_float2x4, _: float2) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiys5SIMD2VySfGs5SIMD4VySfG_ABtFZ\">* (_: float4, _: simd_float2x4) -&gt; float2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyA2B_So0A9_float2x2atFZ\">* (_: simd_float2x4, _: float2x2) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiySo0A9_float3x4aAB_So0A9_float3x2atFZ\">* (_: simd_float2x4, _: float3x2) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiySo0A9_float4x4aAB_So0A9_float4x2atFZ\">* (_: simd_float2x4, _: float4x2) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x4, _: Float) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiys5SIMD4VySfGAB_s5SIMD3VySfGtFZ\">* (_: simd_float3x4, _: float3) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiys5SIMD3VySfGs5SIMD4VySfG_ABtFZ\">* (_: float4, _: simd_float3x4) -&gt; float3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiySo0A9_float2x4aAB_So0A9_float2x3atFZ\">* (_: simd_float3x4, _: float2x3) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyA2B_So0A9_float3x3atFZ\">* (_: simd_float3x4, _: float3x3) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiySo0A9_float4x4aAB_So0A9_float4x3atFZ\">* (_: simd_float3x4, _: float4x3) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x4, _: Float) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiys5SIMD4VySfGAB_AGtFZ\">* (_: simd_float4x4, _: float4) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiys5SIMD4VySfGAG_ABtFZ\">* (_: float4, _: simd_float4x4) -&gt; float4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiySo0A9_float2x4aAB_AFtFZ\">* (_: simd_float4x4, _: float2x4) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiySo0A9_float3x4aAB_AFtFZ\">* (_: simd_float4x4, _: float3x4) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyA2B_ABtFZ\">* (_: simd_float4x4, _: float4x4) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x2, _: Double) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiys5SIMD2VySdGAB_AGtFZ\">* (_: simd_double2x2, _: double2) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiys5SIMD2VySdGAG_ABtFZ\">* (_: double2, _: simd_double2x2) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyA2B_ABtFZ\">* (_: simd_double2x2, _: double2x2) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiySo0A10_double3x2aAB_AFtFZ\">* (_: simd_double2x2, _: double3x2) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiySo0A10_double4x2aAB_AFtFZ\">* (_: simd_double2x2, _: double4x2) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x2, _: Double) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiys5SIMD2VySdGAB_s5SIMD3VySdGtFZ\">* (_: simd_double3x2, _: double3) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiys5SIMD3VySdGs5SIMD2VySdG_ABtFZ\">* (_: double2, _: simd_double3x2) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiySo0A10_double2x2aAB_So0A10_double2x3atFZ\">* (_: simd_double3x2, _: double2x3) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyA2B_So0A10_double3x3atFZ\">* (_: simd_double3x2, _: double3x3) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiySo0A10_double4x2aAB_So0A10_double4x3atFZ\">* (_: simd_double3x2, _: double4x3) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x2, _: Double) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiys5SIMD2VySdGAB_s5SIMD4VySdGtFZ\">* (_: simd_double4x2, _: double4) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiys5SIMD4VySdGs5SIMD2VySdG_ABtFZ\">* (_: double2, _: simd_double4x2) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiySo0A10_double2x2aAB_So0A10_double2x4atFZ\">* (_: simd_double4x2, _: double2x4) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiySo0A10_double3x2aAB_So0A10_double3x4atFZ\">* (_: simd_double4x2, _: double3x4) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyA2B_So0A10_double4x4atFZ\">* (_: simd_double4x2, _: double4x4) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x3, _: Double) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiys5SIMD3VySdGAB_s5SIMD2VySdGtFZ\">* (_: simd_double2x3, _: double2) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiys5SIMD2VySdGs5SIMD3VySdG_ABtFZ\">* (_: double3, _: simd_double2x3) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyA2B_So0A10_double2x2atFZ\">* (_: simd_double2x3, _: double2x2) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiySo0A10_double3x3aAB_So0A10_double3x2atFZ\">* (_: simd_double2x3, _: double3x2) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiySo0A10_double4x3aAB_So0A10_double4x2atFZ\">* (_: simd_double2x3, _: double4x2) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x3, _: Double) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiys5SIMD3VySdGAB_AGtFZ\">* (_: simd_double3x3, _: double3) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiys5SIMD3VySdGAG_ABtFZ\">* (_: double3, _: simd_double3x3) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiySo0A10_double2x3aAB_AFtFZ\">* (_: simd_double3x3, _: double2x3) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyA2B_ABtFZ\">* (_: simd_double3x3, _: double3x3) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiySo0A10_double4x3aAB_AFtFZ\">* (_: simd_double3x3, _: double4x3) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x3, _: Double) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiys5SIMD3VySdGAB_s5SIMD4VySdGtFZ\">* (_: simd_double4x3, _: double4) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiys5SIMD4VySdGs5SIMD3VySdG_ABtFZ\">* (_: double3, _: simd_double4x3) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiySo0A10_double2x3aAB_So0A10_double2x4atFZ\">* (_: simd_double4x3, _: double2x4) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiySo0A10_double3x3aAB_So0A10_double3x4atFZ\">* (_: simd_double4x3, _: double3x4) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyA2B_So0A10_double4x4atFZ\">* (_: simd_double4x3, _: double4x4) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x4, _: Double) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiys5SIMD4VySdGAB_s5SIMD2VySdGtFZ\">* (_: simd_double2x4, _: double2) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiys5SIMD2VySdGs5SIMD4VySdG_ABtFZ\">* (_: double4, _: simd_double2x4) -&gt; double2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyA2B_So0A10_double2x2atFZ\">* (_: simd_double2x4, _: double2x2) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiySo0A10_double3x4aAB_So0A10_double3x2atFZ\">* (_: simd_double2x4, _: double3x2) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiySo0A10_double4x4aAB_So0A10_double4x2atFZ\">* (_: simd_double2x4, _: double4x2) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x4, _: Double) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiys5SIMD4VySdGAB_s5SIMD3VySdGtFZ\">* (_: simd_double3x4, _: double3) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiys5SIMD3VySdGs5SIMD4VySdG_ABtFZ\">* (_: double4, _: simd_double3x4) -&gt; double3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiySo0A10_double2x4aAB_So0A10_double2x3atFZ\">* (_: simd_double3x4, _: double2x3) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyA2B_So0A10_double3x3atFZ\">* (_: simd_double3x4, _: double3x3) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiySo0A10_double4x4aAB_So0A10_double4x3atFZ\">* (_: simd_double3x4, _: double4x3) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x4, _: Double) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiys5SIMD4VySdGAB_AGtFZ\">* (_: simd_double4x4, _: double4) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiys5SIMD4VySdGAG_ABtFZ\">* (_: double4, _: simd_double4x4) -&gt; double4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiySo0A10_double2x4aAB_AFtFZ\">* (_: simd_double4x4, _: double2x4) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiySo0A10_double3x4aAB_AFtFZ\">* (_: simd_double4x4, _: double3x4) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyA2B_ABtFZ\">* (_: simd_double4x4, _: double4x4) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyA2B_ABtFZ\">* (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyA2B_SftFZ\">* (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyA2B_ABtFZ\">* (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyA2B_SdtFZ\">* (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1moiyxx_xtFZ"}], "key.typename": "PointType.Protocol", "key.typeusr": "$s11FritzVision9PointType_pmD", "key.usr": "s:11FritzVision9PointTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose+Rotations.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1382, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3219, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 479}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 455}], "key.bodylength": 2685, "key.bodyoffset": 532, "key.doc.column": 14, "key.doc.comment": "Detected pose with Keypoints and corresponding score.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Pose<Skeleton> : NSObject where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"25\" column=\"14\"><Name>Pose</Name><USR>s:11FritzVision4PoseC</USR><Declaration>@available(iOS 11.0, *)\npublic class Pose&lt;Skeleton&gt; : NSObject where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>Detected pose with Keypoints and corresponding score.</Para></Abstract></CommentParts></Class>", "key.doc.line": 25, "key.doc.name": "Pose", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 397, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 522}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2732, "key.name": "Pose", "key.namelength": 4, "key.nameoffset": 492, "key.offset": 486, "key.parsed_declaration": "public class Pose<Skeleton: SkeletonType>: NSObject", "key.parsed_scope.end": 115, "key.parsed_scope.start": 25, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 507}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 497, "key.offset": 497, "key.parsed_declaration": "public class Pose<Skeleton: SkeletonType>: NSObject", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision4PoseC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func == (lhs: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 536}], "key.bodylength": 31, "key.bodyoffset": 610, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 99, "key.name": "==(_:_:)", "key.namelength": 45, "key.nameoffset": 555, "key.offset": 543, "key.parsed_declaration": "public static func == (lhs: Pose<Skeleton>, rhs: Pose<Skeleton>) -> Bool", "key.parsed_scope.end": 29, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>.Type) -> (Pose<Skeleton>, Pose<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision4PoseCyxG_ADtcD", "key.usr": "s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 678}], "key.doc.column": 14, "key.doc.comment": "List of keypoints on pose", "key.doc.declaration": "public let keypoints: [Keypoint<Skeleton>]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"32\" column=\"14\"><Name>keypoints</Name><USR>s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp</USR><Declaration>public let keypoints: [Keypoint&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>List of keypoints on pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "keypoints", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 646, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 689, "key.offset": 685, "key.parsed_declaration": "public let keypoints: [Keypoint<Skeleton>]", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 753}], "key.doc.column": 14, "key.doc.comment": "Pose confidence score.", "key.doc.declaration": "public let score: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"35\" column=\"14\"><Name>score</Name><USR>s:11FritzVision4PoseC5scoreSdvp</USR><Declaration>public let score: Double</Declaration><CommentParts><Abstract><Para>Pose confidence score.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "score", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 724, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 764, "key.offset": 760, "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision4PoseC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 814}], "key.doc.column": 14, "key.doc.comment": "Bounds of keypoint values.", "key.doc.declaration": "public let bounds: CGSize", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"38\" column=\"14\"><Name>bounds</Name><USR>s:11FritzVision4PoseC6boundsSo6CGSizeVvp</USR><Declaration>public let bounds: CGSize</Declaration><CommentParts><Abstract><Para>Bounds of keypoint values.</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "bounds", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 781, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 825, "key.offset": 821, "key.parsed_declaration": "public let bounds: CGSize", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision4PoseC6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 850}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 843}], "key.bodylength": 82, "key.bodyoffset": 929, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 153, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 68, "key.nameoffset": 859, "key.offset": 859, "key.parsed_declaration": "public required init(keypoints: [Keypoint<Skeleton>], score: Double, bounds: CGSize)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 40, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>.Type) -> ([Keypoint<Skeleton>], Double, CGSize) -> Pose<Skeleton>", "key.typeusr": "$s9keypoints5score6bounds11FritzVision4PoseCyxGSayAD8KeypointCyxGG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision4PoseC9keypoints5score6boundsACyxGSayAA8KeypointCyxGG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1023}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1016}], "key.bodylength": 277, "key.bodyoffset": 1057, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 303, "key.name": "description", "key.namelength": 11, "key.nameoffset": 1036, "key.offset": 1032, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 51, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 1066, "key.offset": 1062, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.annotated_decl": "<Declaration>let rect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "rect", "key.namelength": 4, "key.nameoffset": 1121, "key.offset": 1117, "key.parsed_declaration": "let rect = boundingRect", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg4rectL_So6CGRectVvp"}, {"key.annotated_decl": "<Declaration>let formattedRect: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedRect</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 110, "key.name": "formattedRect", "key.namelength": 13, "key.nameoffset": 1149, "key.offset": 1145, "key.parsed_declaration": "let formattedRect = String(format: \"((%.2f,%.2f),[%.2f,%.2f])\", rect.minX, rect.minY, rect.width, rect.height)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg13formattedRectL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var boundingRect: <Type usr=\"c:@S@CGRect\">CGRect</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1386}], "key.bodylength": 535, "key.bodyoffset": 1419, "key.doc.column": 14, "key.doc.comment": "The bounding rectangle of the keypoints.", "key.doc.declaration": "public var boundingRect: CGRect { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"54\" column=\"14\"><Name>boundingRect</Name><USR>s:11FritzVision4PoseC12boundingRectSo6CGRectVvp</USR><Declaration>public var boundingRect: CGRect { get }</Declaration><CommentParts><Abstract><Para>The bounding rectangle of the keypoints.</Para></Abstract></CommentParts></Other>", "key.doc.line": 54, "key.doc.name": "boundingRect", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1339, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>boundingRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 562, "key.name": "boundingRect", "key.namelength": 12, "key.nameoffset": 1397, "key.offset": 1393, "key.parsed_declaration": "public var boundingRect: CGRect", "key.parsed_scope.end": 69, "key.parsed_scope.start": 54, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvp"}, {"key.annotated_decl": "<Declaration>var minX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "minX", "key.namelength": 4, "key.nameoffset": 1428, "key.offset": 1424, "key.parsed_declaration": "var minX = CGFloat.greatestFiniteMagnitude", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4minXL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var minY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "minY", "key.namelength": 4, "key.nameoffset": 1475, "key.offset": 1471, "key.parsed_declaration": "var minY = CGFloat.greatestFiniteMagnitude", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4minYL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var maxX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "maxX", "key.namelength": 4, "key.nameoffset": 1522, "key.offset": 1518, "key.parsed_declaration": "var maxX = CGFloat.leastNonzeroMagnitude", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4maxXL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var maxY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "maxY", "key.namelength": 4, "key.nameoffset": 1567, "key.offset": 1563, "key.parsed_declaration": "var maxY = CGFloat.leastNonzeroMagnitude", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4maxYL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let origin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>origin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "origin", "key.namelength": 6, "key.nameoffset": 1827, "key.offset": 1823, "key.parsed_declaration": "let origin = CGPoint(x: minX, y: minY)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg6originL_So7CGPointVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func scaled(to targetDimensions: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2232}], "key.bodylength": 494, "key.bodyoffset": 2299, "key.doc.column": 15, "key.doc.comment": "Scale pose coordinates to match target dimensions.  Use when transforming coordinate\nspaces.\n\n- Parameters:\n  - targetDimensions: Dimensions of coordinate space to scale keypoint positions to.\n\n- Returns: Pose with scaled keypoints.", "key.doc.declaration": "public func scaled(to targetDimensions: CGSize) -> Pose<Skeleton>", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"78\" column=\"15\"><Name>scaled(to:)</Name><USR>s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF</USR><Declaration>public func scaled(to targetDimensions: CGSize) -&gt; Pose&lt;Skeleton&gt;</Declaration><CommentParts><Abstract><Para>Scale pose coordinates to match target dimensions.  Use when transforming coordinate spaces.</Para></Abstract><Parameters><Parameter><Name>targetDimensions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Dimensions of coordinate space to scale keypoint positions to.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Pose with scaled keypoints.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 78, "key.doc.name": "scaled(to:)", "key.doc.parameters": [{"discussion": [{"Para": "Dimensions of coordinate space to scale keypoint positions to."}], "name": "targetDimensions"}], "key.doc.result_discussion": [{"Para": "Pose with scaled keypoints."}], "key.doc.type": "Function", "key.doclength": 271, "key.docoffset": 1959, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>scaled</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>targetDimensions</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 555, "key.name": "scaled(to:)", "key.namelength": 35, "key.nameoffset": 2244, "key.offset": 2239, "key.parsed_declaration": "public func scaled(to targetDimensions: CGSize) -> Pose<Skeleton>", "key.parsed_scope.end": 99, "key.parsed_scope.start": 78, "key.substructure": [{"key.annotated_decl": "<Declaration>let scale: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scale</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "scale", "key.namelength": 5, "key.nameoffset": 2308, "key.offset": 2304, "key.parsed_declaration": "let scale = targetDimensions / bounds", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF5scaleL_AHvp"}, {"key.annotated_decl": "<Declaration>var keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 2351, "key.offset": 2347, "key.parsed_declaration": "var keypoints: [Keypoint<Skeleton>] = []", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp\">keypoints</RelatedName>"}], "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF9keypointsL_SayAA8KeypointCyxGGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> (CGSize) -> Pose<Skeleton>", "key.typeusr": "$s2to11FritzVision4PoseCyxGSo6CGSizeV_tcD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func to3D() -&gt; <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2798}], "key.bodylength": 137, "key.bodyoffset": 2838, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>to3D</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 171, "key.name": "to3D()", "key.namelength": 6, "key.nameoffset": 2810, "key.offset": 2805, "key.parsed_declaration": "public func to3D() -> Pose3D<Skeleton>", "key.parsed_scope.end": 104, "key.parsed_scope.start": 101, "key.substructure": [{"key.annotated_decl": "<Declaration>let newKeypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 46, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 2847, "key.offset": 2843, "key.parsed_declaration": "let newKeypoints = keypoints.map { $0.to3D() }", "key.parsed_scope.end": 102, "key.parsed_scope.start": 102, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyxGGD", "key.usr": "s:11FritzVision4PoseC4to3DAA6Pose3DCyxGyF12newKeypointsL_SayAA10Keypoint3DCyxGGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> () -> Pose3D<Skeleton>", "key.typeusr": "$s11FritzVision6Pose3DCyxGycD", "key.usr": "s:11FritzVision4PoseC4to3DAA6Pose3DCyxGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2987}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2980}], "key.bodylength": 181, "key.bodyoffset": 3034, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 220, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 3001, "key.offset": 2996, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "public override func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 114, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision4PoseC7isEqualySbypSgF"}], "key.typename": "Pose<Skeleton>.Type", "key.typeusr": "$s11FritzVision4PoseCyxGmD", "key.usr": "s:11FritzVision4PoseC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1045, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose3D&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 258}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 234}], "key.bodylength": 519, "key.bodyoffset": 303, "key.doc.column": 14, "key.doc.comment": "Detected pose with Keypoints and corresponding score.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Pose3D<Skeleton> where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"14\" column=\"14\"><Name>Pose3D</Name><USR>s:11FritzVision6Pose3DC</USR><Declaration>@available(iOS 11.0, *)\npublic class Pose3D&lt;Skeleton&gt; where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>Detected pose with Keypoints and corresponding score.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "Pose3D", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 176, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose3D</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 558, "key.name": "Pose3D", "key.namelength": 6, "key.nameoffset": 271, "key.offset": 265, "key.parsed_declaration": "public class Pose3D<Skeleton: SkeletonType>", "key.parsed_scope.end": 37, "key.parsed_scope.start": 14, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 288}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 278, "key.offset": 278, "key.parsed_declaration": "public class Pose3D<Skeleton: SkeletonType>", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision6Pose3DC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let keypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 339}], "key.doc.column": 14, "key.doc.comment": "List of keypoints on pose", "key.doc.declaration": "public let keypoints: [Keypoint3D<Skeleton>]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"17\" column=\"14\"><Name>keypoints</Name><USR>s:11FritzVision6Pose3DC9keypointsSayAA10Keypoint3DCyxGGvp</USR><Declaration>public let keypoints: [Keypoint3D&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>List of keypoints on pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "keypoints", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 307, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 350, "key.offset": 346, "key.parsed_declaration": "public let keypoints: [Keypoint3D<Skeleton>]", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyxGGD", "key.usr": "s:11FritzVision6Pose3DC9keypointsSayAA10Keypoint3DCyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 416}], "key.doc.column": 14, "key.doc.comment": "Pose confidence score.", "key.doc.declaration": "public let score: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"20\" column=\"14\"><Name>score</Name><USR>s:11FritzVision6Pose3DC5scoreSdvp</USR><Declaration>public let score: Double</Declaration><CommentParts><Abstract><Para>Pose confidence score.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "score", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 387, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 427, "key.offset": 423, "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6Pose3DC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 477}], "key.doc.column": 14, "key.doc.comment": "Bounds of keypoint values.", "key.doc.declaration": "public let bounds: CGSize", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"23\" column=\"14\"><Name>bounds</Name><USR>s:11FritzVision6Pose3DC6boundsSo6CGSizeVvp</USR><Declaration>public let bounds: CGSize</Declaration><CommentParts><Abstract><Para>Bounds of keypoint values.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "bounds", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 444, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 488, "key.offset": 484, "key.parsed_declaration": "public let bounds: CGSize", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision6Pose3DC6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init(keypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</Type>&gt;], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 515}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 506}], "key.bodylength": 82, "key.bodyoffset": 594, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 70, "key.nameoffset": 522, "key.offset": 522, "key.parsed_declaration": "required public init(keypoints: [Keypoint3D<Skeleton>], score: Double, bounds: CGSize)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 25, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>.Type) -> ([Keypoint3D<Skeleton>], Double, CGSize) -> Pose3D<Skeleton>", "key.typeusr": "$s9keypoints5score6bounds11FritzVision6Pose3DCyxGSayAD10Keypoint3DCyxGG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision6Pose3DC9keypoints5score6boundsACyxGSayAA10Keypoint3DCyxGG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 681}], "key.bodylength": 94, "key.bodyoffset": 726, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 133, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 693, "key.offset": 688, "key.parsed_declaration": "public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 36, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision6Pose3DC7isEqualySbypSgF"}], "key.typename": "Pose3D<Skeleton>.Type", "key.typeusr": "$s11FritzVision6Pose3DCyxGmD", "key.usr": "s:11FritzVision6Pose3DC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 851}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 827}], "key.bodylength": 98, "key.bodyoffset": 945, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 186, "key.name": "==(_:_:)", "key.namelength": 72, "key.nameoffset": 863, "key.offset": 858, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Pose3D<Skeleton>, rhs: Pose3D<Skeleton>) -> Bool", "key.parsed_scope.end": 47, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 876}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 866, "key.offset": 866, "key.parsed_declaration": "public func ==<Skeleton: SkeletonType>(lhs: Pose3D<Skeleton>, rhs: Pose3D<Skeleton>) -> Bool", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 75, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 952, "key.offset": 948, "key.parsed_declaration": "let areEqual = lhs.keypoints == rhs.keypoints &&", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>, Pose3D<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision6Pose3DCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4468, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct HeatmapPoint</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 179}], "key.bodylength": 27, "key.bodyoffset": 207, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HeatmapPoint</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 49, "key.name": "HeatmapPoint", "key.namelength": 12, "key.nameoffset": 193, "key.offset": 186, "key.parsed_declaration": "public struct HeatmapPoint", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.substructure": [], "key.typename": "HeatmapPoint.Type", "key.typeusr": "$s11FritzVision12HeatmapPointVmD", "key.usr": "s:11FritzVision12HeatmapPointV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Displacements</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 865}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 841}], "key.bodylength": 770, "key.bodyoffset": 893, "key.doc.column": 14, "key.doc.comment": "`[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\nnumber of edges (parent-child pairs) in the tree. It contains the forward\ndisplacements between consecutive part from the root towards the leaves.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Displacements", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift\" line=\"44\" column=\"14\"><Name>Displacements</Name><USR>s:11FritzVision13DisplacementsC</USR><Declaration>@available(iOS 11.0, *)\npublic class Displacements</Declaration><CommentParts><Abstract><Para><codeVoice>[height, width, 2 * num_edges]</codeVoice>, where <codeVoice>num_edges = num_parts - 1</codeVoice> is the number of edges (parent-child pairs) in the tree. It contains the forward displacements between consecutive part from the root towards the leaves.</Para></Abstract></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "Displacements", "key.doc.type": "Class", "key.doclength": 237, "key.docoffset": 604, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Displacements</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 792, "key.name": "Displacements", "key.namelength": 13, "key.nameoffset": 878, "key.offset": 872, "key.parsed_declaration": "public class Displacements", "key.parsed_scope.end": 78, "key.parsed_scope.start": 44, "key.runtime_name": "_TtC4main13Displacements", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1123}], "key.bodylength": 57, "key.bodyoffset": 1164, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 1130, "key.offset": 1130, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 60, "key.parsed_scope.start": 58, "key.substructure": [], "key.typename": "(Displacements.Type) -> (MLMultiArray?) -> Displacements", "key.typeusr": "$s3for11FritzVision13DisplacementsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13DisplacementsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, edgeID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1226}], "key.bodylength": 184, "key.bodyoffset": 1308, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>edgeID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>offset</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 260, "key.name": "subscript(_:_:_:)", "key.namelength": 63, "key.nameoffset": 1233, "key.offset": 1233, "key.parsed_declaration": "public subscript(point: HeatmapPoint, edgeID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 69, "key.parsed_scope.start": 62, "key.substructure": [], "key.typename": "(HeatmapPoint, Int, OffsetType) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointV_SiAA10OffsetTypeOtcD", "key.usr": "s:11FritzVision13DisplacementsCySdAA12HeatmapPointV_SiAA10OffsetTypeOtcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1497}], "key.bodylength": 135, "key.bodyoffset": 1526, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 158, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 1509, "key.offset": 1504, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 77, "key.parsed_scope.start": 71, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 1535, "key.offset": 1531, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Displacements) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF"}], "key.typename": "Displacements.Type", "key.typeusr": "$s11FritzVision13DisplacementsCmD", "key.usr": "s:11FritzVision13DisplacementsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class HeatmapScores</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1884}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1860}], "key.bodylength": 679, "key.bodyoffset": 1912, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>HeatmapScores</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 701, "key.name": "HeatmapScores", "key.namelength": 13, "key.nameoffset": 1897, "key.offset": 1891, "key.parsed_declaration": "public class HeatmapScores", "key.parsed_scope.end": 119, "key.parsed_scope.start": 86, "key.runtime_name": "_TtC4main13HeatmapScores", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2109}], "key.bodylength": 50, "key.bodyoffset": 2150, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 85, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 2116, "key.offset": 2116, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 102, "key.parsed_scope.start": 100, "key.substructure": [], "key.typename": "(HeatmapScores.Type) -> (MLMultiArray?) -> HeatmapScores", "key.typeusr": "$s3for11FritzVision13HeatmapScoresCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13HeatmapScoresC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, partID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2205}], "key.bodylength": 54, "key.bodyoffset": 2267, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>partID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 110, "key.name": "subscript(_:_:)", "key.namelength": 43, "key.nameoffset": 2212, "key.offset": 2212, "key.parsed_declaration": "public subscript(point: HeatmapPoint, partID: Int) -> Double", "key.parsed_scope.end": 106, "key.parsed_scope.start": 104, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint, Int) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointV_SitcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, keypointID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2326}], "key.bodylength": 47, "key.bodyoffset": 2387, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>keypointID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 102, "key.name": "subscript(_:_:_:)", "key.namelength": 42, "key.nameoffset": 2333, "key.offset": 2333, "key.parsed_declaration": "public subscript(y: Int, x: Int, keypointID: Int) -> Double", "key.parsed_scope.end": 110, "key.parsed_scope.start": 108, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int, Int) -> Double", "key.typeusr": "$sySdSi_S2itcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2439}], "key.bodylength": 121, "key.bodyoffset": 2468, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 144, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 2451, "key.offset": 2446, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 118, "key.parsed_scope.start": 112, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 2477, "key.offset": 2473, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF5totalL_Sdvp"}], "key.typename": "(HeatmapScores) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF"}], "key.typename": "HeatmapScores.Type", "key.typeusr": "$s11FritzVision13HeatmapScoresCmD", "key.usr": "s:11FritzVision13HeatmapScoresC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum OffsetType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2594}], "key.bodylength": 19, "key.bodyoffset": 2618, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>OffsetType</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 37, "key.name": "OffsetType", "key.namelength": 10, "key.nameoffset": 2606, "key.offset": 2601, "key.parsed_declaration": "public enum OffsetType", "key.parsed_scope.end": 124, "key.parsed_scope.start": 121, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2621, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case x</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>x</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "x", "key.namelength": 1, "key.nameoffset": 2626, "key.offset": 2626, "key.parsed_declaration": "case x", "key.parsed_scope.end": 122, "key.parsed_scope.start": 122, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1xyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2630, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case y</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>y</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "y", "key.namelength": 1, "key.nameoffset": 2635, "key.offset": 2635, "key.parsed_declaration": "case y", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1yyA2CmF"}]}], "key.typename": "OffsetType.Type", "key.typeusr": "$s11FritzVision10OffsetTypeOmD", "key.usr": "s:11FritzVision10OffsetTypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Offsets</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2905}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2881}], "key.bodylength": 661, "key.bodyoffset": 2927, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Offsets</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 677, "key.name": "Offsets", "key.namelength": 7, "key.nameoffset": 2918, "key.offset": 2912, "key.parsed_declaration": "public class Offsets", "key.parsed_scope.end": 166, "key.parsed_scope.start": 133, "key.runtime_name": "_TtC4main7Offsets", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3130}], "key.bodylength": 51, "key.bodyoffset": 3171, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 86, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 3137, "key.offset": 3137, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 150, "key.parsed_scope.start": 148, "key.substructure": [], "key.typename": "(Offsets.Type) -> (MLMultiArray?) -> Offsets", "key.typeusr": "$s3for11FritzVision7OffsetsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision7OffsetsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func get(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, partID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3227}], "key.bodylength": 126, "key.bodyoffset": 3303, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>get</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partID</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 196, "key.name": "get(y:x:partID:offset:)", "key.namelength": 52, "key.nameoffset": 3239, "key.offset": 3234, "key.parsed_declaration": "public func get(y: Int, x: Int, partID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 157, "key.parsed_scope.start": 152, "key.substructure": [], "key.typename": "(Offsets) -> (Int, Int, Int, OffsetType) -> Double", "key.typeusr": "$s1y1x6partID6offsetSdSi_S2i11FritzVision10OffsetTypeOtcD", "key.usr": "s:11FritzVision7OffsetsC3get1y1x6partID6offsetSdSi_S2iAA10OffsetTypeOtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3434}], "key.bodylength": 123, "key.bodyoffset": 3463, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 146, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 3446, "key.offset": 3441, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 165, "key.parsed_scope.start": 159, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 3472, "key.offset": 3468, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Offsets) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF"}], "key.typename": "Offsets.Type", "key.typeusr": "$s11FritzVision7OffsetsCmD", "key.usr": "s:11FritzVision7OffsetsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Segments</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3857}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3833}], "key.bodylength": 586, "key.bodyoffset": 3880, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Segments</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 603, "key.name": "Segments", "key.namelength": 8, "key.nameoffset": 3870, "key.offset": 3864, "key.parsed_declaration": "public class Segments", "key.parsed_scope.end": 206, "key.parsed_scope.start": 176, "key.runtime_name": "_TtC4main8Segments", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4023}], "key.bodylength": 51, "key.bodyoffset": 4064, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 86, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 4030, "key.offset": 4030, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 189, "key.parsed_scope.start": 187, "key.substructure": [], "key.typename": "(Segments.Type) -> (MLMultiArray?) -> Segments", "key.typeusr": "$s3for11FritzVision8SegmentsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision8SegmentsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4120}], "key.bodylength": 50, "key.bodyoffset": 4169, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 93, "key.name": "subscript(_:)", "key.namelength": 30, "key.nameoffset": 4127, "key.offset": 4127, "key.parsed_declaration": "public subscript(point: HeatmapPoint) -> Double", "key.parsed_scope.end": 193, "key.parsed_scope.start": 191, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdSi_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointVcD", "key.usr": "s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4224}], "key.bodylength": 39, "key.bodyoffset": 4268, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 77, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 4231, "key.offset": 4231, "key.parsed_declaration": "public subscript(y: Int, x: Int) -> Double", "key.parsed_scope.end": 197, "key.parsed_scope.start": 195, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip\">subscript(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int) -> Double", "key.typeusr": "$sySdSi_SitcD", "key.usr": "s:11FritzVision8SegmentsCySdSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4312}], "key.bodylength": 123, "key.bodyoffset": 4341, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 146, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 4324, "key.offset": 4319, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 205, "key.parsed_scope.start": 199, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 4350, "key.offset": 4346, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 200, "key.parsed_scope.start": 200, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Segments) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF"}], "key.typename": "Segments.Type", "key.typeusr": "$s11FritzVision8SegmentsCmD", "key.usr": "s:11FritzVision8SegmentsC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 818, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PoseType : AnyObject</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 185}], "key.bodylength": 305, "key.bodyoffset": 218, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 211}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PoseType</decl.name> : AnyObject</decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 332, "key.name": "PoseType", "key.namelength": 8, "key.nameoffset": 201, "key.offset": 192, "key.parsed_declaration": "public protocol PoseType: class", "key.parsed_scope.end": 24, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main8PoseType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Skeleton</decl.name> : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 237, "key.offset": 222, "key.parsed_declaration": "associatedtype Skeleton: SkeletonType", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Self.Skeleton.Type", "key.typeusr": "$s8Skeleton11FritzVision8PoseTypePQzmD", "key.usr": "s:11FritzVision8PoseTypeP8SkeletonQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Keypoint : <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Keypoint</decl.name> : <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 277, "key.offset": 262, "key.parsed_declaration": "associatedtype Keypoint: KeypointType", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Self.Keypoint.Type", "key.typeusr": "$s8Keypoint11FritzVision8PoseTypePQzmD", "key.usr": "s:11FritzVision8PoseTypeP8KeypointQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(keypoints: [<Type usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</Type>], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 58, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 58, "key.nameoffset": 303, "key.offset": 303, "key.parsed_declaration": "init(keypoints: [Keypoint], score: Double, bounds: CGSize)", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.substructure": [], "key.typename": "<Self where Self : PoseType> (Self.Type) -> ([Self.Keypoint], Double, CGSize) -> Self", "key.typeusr": "$s9keypoints5score6boundsxSay8KeypointQzG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision8PoseTypeP9keypoints5score6boundsxSay8KeypointQzG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var keypoints: [<Type usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</Type>] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 392, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</ref.associatedtype>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 369, "key.offset": 365, "key.parsed_declaration": "var keypoints: [Keypoint]", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "[Self.Keypoint]", "key.typeusr": "$sSay8Keypoint11FritzVision8PoseTypePQzGD", "key.usr": "s:11FritzVision8PoseTypeP9keypointsSay8KeypointQzGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var score: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 420, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "score", "key.namelength": 5, "key.nameoffset": 405, "key.offset": 401, "key.parsed_declaration": "var score: Double", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8PoseTypeP5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 449, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 433, "key.offset": 429, "key.parsed_declaration": "var bounds: CGSize", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision8PoseTypeP6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func getPosition&lt;Point&gt;(of part: <Type usr=\"s:11FritzVision8PoseTypeP8SkeletonQa\">Skeleton</Type>) -&gt; <Type usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\">Point</Type>? where Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getPosition</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\"><decl.generic_type_param.name>Point</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>part</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8SkeletonQa\">Skeleton</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\">Point</ref.generic_type_param>?</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Point : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "getPosition(of:)", "key.namelength": 48, "key.nameoffset": 464, "key.offset": 459, "key.parsed_declaration": "func getPosition<Point: PointType>(of part: Skeleton) -> Point?", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8PoseTypePAAE11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF\">getPosition&lt;Point&gt;(of: Skeleton) -&gt; Point? where Point : PointType</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 483}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Point</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 16, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 476, "key.offset": 476, "key.parsed_declaration": "func getPosition<Point: PointType>(of part: Skeleton) -> Point?", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Point.Type", "key.typeusr": "$sqd__mD", "key.usr": "s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp"}], "key.typename": "<Self, Point where Self : PoseType, Point : PointType> (Self) -> (Self.Skeleton) -> Point?", "key.typeusr": "$s2ofqd__Sg8SkeletonQz_tc11FritzVision9PointTypeRd__luD", "key.usr": "s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF"}], "key.typename": "PoseType.Protocol", "key.typeusr": "$s11FritzVision8PoseType_pmD", "key.usr": "s:11FritzVision8PoseTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8634, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Heap&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 689}], "key.bodylength": 6022, "key.bodyoffset": 712, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Heap</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 6039, "key.name": "Heap", "key.namelength": 4, "key.nameoffset": 703, "key.offset": 696, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 218, "key.parsed_scope.start": 20, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 708, "key.offset": 708, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision4HeapV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1240}], "key.bodylength": 33, "key.bodyoffset": 1285, "key.doc.column": 10, "key.doc.comment": "Creates an empty heap.\nThe sort function determines whether this is a min-heap or max-heap.\nFor comparable data types, > makes a max-heap, < makes a min-heap.", "key.doc.declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"38\" column=\"10\"><Name>init(sort:)</Name><USR>s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc</USR><Declaration>public init(sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates an empty heap. The sort function determines whether this is a min-heap or max-heap. For comparable data types, &gt; makes a max-heap, &lt; makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 38, "key.doc.name": "init(sort:)", "key.doc.type": "Function", "key.doclength": 183, "key.docoffset": 1054, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 72, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 1247, "key.offset": 1247, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc\">init(array:sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> (@escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$s4sort11FritzVision4HeapVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(array: [<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>], sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1584}], "key.bodylength": 64, "key.bodyoffset": 1641, "key.doc.column": 10, "key.doc.comment": "Creates a heap from an array. The order of the array does not matter;\nthe elements are inserted into the heap in the order determined by the\nsort function. For comparable data types, '>' makes a max-heap,\n'<' makes a min-heap.", "key.doc.declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"48\" column=\"10\"><Name>init(array:sort:)</Name><USR>s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc</USR><Declaration>public init(array: [T], sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates a heap from an array. The order of the array does not matter; the elements are inserted into the heap in the order determined by the sort function. For comparable data types, \u2018&gt;\u2019 makes a max-heap, \u2018&lt;\u2019 makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 48, "key.doc.name": "init(array:sort:)", "key.doc.type": "Function", "key.doclength": 256, "key.docoffset": 1325, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>array</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 115, "key.name": "init(array:sort:)", "key.namelength": 48, "key.nameoffset": 1591, "key.offset": 1591, "key.parsed_declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc\">init(sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> ([T], @escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$s5array4sort11FritzVision4HeapVyxGSayxG_Sbx_xtctcD", "key.usr": "s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2026}], "key.bodylength": 28, "key.bodyoffset": 2052, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 48, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 2037, "key.offset": 2033, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 66, "key.parsed_scope.start": 64, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision4HeapV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2087}], "key.bodylength": 26, "key.bodyoffset": 2110, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "count", "key.namelength": 5, "key.nameoffset": 2098, "key.offset": 2094, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 70, "key.parsed_scope.start": 68, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision4HeapV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3078}], "key.bodylength": 26, "key.bodyoffset": 3104, "key.doc.column": 15, "key.doc.comment": "Returns the maximum value in the heap (for a max-heap) or the minimum\nvalue (for a min-heap).", "key.doc.declaration": "public func peek() -> T?", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"102\" column=\"15\"><Name>peek()</Name><USR>s:11FritzVision4HeapV4peekxSgyF</USR><Declaration>public func peek() -&gt; T?</Declaration><CommentParts><Abstract><Para>Returns the maximum value in the heap (for a max-heap) or the minimum value (for a min-heap).</Para></Abstract></CommentParts></Function>", "key.doc.line": 102, "key.doc.name": "peek()", "key.doc.type": "Function", "key.doclength": 113, "key.docoffset": 2962, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 46, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 3090, "key.offset": 3085, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 104, "key.parsed_scope.start": 102, "key.typename": "<T> (Heap<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision4HeapV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert(_ value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3297}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3290}], "key.bodylength": 56, "key.bodyoffset": 3331, "key.doc.column": 24, "key.doc.comment": "Adds a new value to the heap. This reorders the heap so that the max-heap\nor min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert(_ value: T)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"110\" column=\"24\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyxF</USR><Declaration>public mutating func insert(_ value: T)</Declaration><CommentParts><Abstract><Para>Adds a new value to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 110, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 150, "key.docoffset": 3137, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 82, "key.name": "insert(_:)", "key.namelength": 18, "key.nameoffset": 3311, "key.offset": 3306, "key.parsed_declaration": "public mutating func insert(_ value: T)", "key.parsed_scope.end": 113, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF\">insert&lt;S&gt;(_: S) where T == S.Element, S : Sequence</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (T) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:11FritzVision4HeapV6insertyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert&lt;S&gt;(_ sequence: <Type usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</Type>) where T == S.Element, S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3563}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3556}], "key.bodylength": 57, "key.bodyoffset": 3643, "key.doc.column": 24, "key.doc.comment": "Adds a sequence of values to the heap. This reorders the heap so that\nthe max-heap or min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert<S>(_ sequence: S) where T == S.Element, S : Sequence", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"119\" column=\"24\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF</USR><Declaration>public mutating func insert&lt;S&gt;(_ sequence: S) where T == S.Element, S : Sequence</Declaration><CommentParts><Abstract><Para>Adds a sequence of values to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 119, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 159, "key.docoffset": 3394, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T == S.Element</decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "insert(_:)", "key.namelength": 34, "key.nameoffset": 3577, "key.offset": 3572, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 123, "key.parsed_scope.start": 119, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyxF\">insert(_: T)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3587}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Sequence"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 11, "key.name": "S", "key.namelength": 1, "key.nameoffset": 3584, "key.offset": 3584, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "S.Type", "key.typeusr": "$sqd__mD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp"}], "key.typename": "<T, S where T == S.Element, S : Sequence> (inout Heap<T>) -> (S) -> ()", "key.typeusr": "$syyqd__c7ElementQyd__RszSTRd__luD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func replace(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3847}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3840}], "key.bodylength": 86, "key.bodyoffset": 3894, "key.doc.column": 24, "key.doc.comment": "Allows you to change an element. This reorders the heap so that\nthe max-heap or min-heap property still holds.", "key.doc.declaration": "public mutating func replace(index i: Int, value: T)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"129\" column=\"24\"><Name>replace(index:value:)</Name><USR>s:11FritzVision4HeapV7replace5index5valueySi_xtF</USR><Declaration>public mutating func replace(index i: Int, value: T)</Declaration><CommentParts><Abstract><Para>Allows you to change an element. This reorders the heap so that the max-heap or min-heap property still holds.</Para></Abstract></CommentParts></Function>", "key.doc.line": 129, "key.doc.name": "replace(index:value:)", "key.doc.type": "Function", "key.doclength": 130, "key.docoffset": 3707, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>replace</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 125, "key.name": "replace(index:value:)", "key.namelength": 31, "key.nameoffset": 3861, "key.offset": 3856, "key.parsed_declaration": "public mutating func replace(index i: Int, value: T)", "key.parsed_scope.end": 134, "key.parsed_scope.start": 129, "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (Int, T) -> ()", "key.typeusr": "$s5index5valueySi_xtcD", "key.usr": "s:11FritzVision4HeapV7replace5index5valueySi_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4178}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4171}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4152}], "key.bodylength": 369, "key.bodyoffset": 4208, "key.doc.column": 43, "key.doc.comment": "Removes the root node from the heap. For a max-heap, this is the maximum\nvalue; for a min-heap it is the minimum value. Performance: O(log n).", "key.doc.declaration": "public mutating func remove() -> T?", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"140\" column=\"43\"><Name>remove()</Name><USR>s:11FritzVision4HeapV6removexSgyF</USR><Declaration>public mutating func remove() -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes the root node from the heap. For a max-heap, this is the maximum value; for a min-heap it is the minimum value. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 140, "key.doc.name": "remove()", "key.doc.type": "Function", "key.doclength": 162, "key.docoffset": 3987, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 391, "key.name": "remove()", "key.namelength": 8, "key.nameoffset": 4192, "key.offset": 4187, "key.parsed_declaration": "@discardableResult public mutating func remove() -> T?", "key.parsed_scope.end": 153, "key.parsed_scope.start": 140, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6remove2atxSgSi_tF\">remove(at:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision4HeapV6removexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove(at index: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4741}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4734}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4715}], "key.bodylength": 243, "key.bodyoffset": 4784, "key.doc.column": 43, "key.doc.comment": "Removes an arbitrary node from the heap. Performance: O(log n).\nNote that you need to know the node's index.", "key.doc.declaration": "public mutating func remove(at index: Int) -> T?", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"159\" column=\"43\"><Name>remove(at:)</Name><USR>s:11FritzVision4HeapV6remove2atxSgSi_tF</USR><Declaration>public mutating func remove(at index: Int) -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes an arbitrary node from the heap. Performance: O(log n). Note that you need to know the node\u2019s index.</Para></Abstract></CommentParts></Function>", "key.doc.line": 159, "key.doc.name": "remove(at:)", "key.doc.type": "Function", "key.doclength": 128, "key.docoffset": 4584, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at</decl.var.parameter.argument_label> <decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 278, "key.name": "remove(at:)", "key.namelength": 21, "key.nameoffset": 4755, "key.offset": 4750, "key.parsed_declaration": "@discardableResult public mutating func remove(at index: Int) -> T?", "key.parsed_scope.end": 169, "key.parsed_scope.start": 159, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6removexSgyF\">remove()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 26, "key.name": "size", "key.namelength": 4, "key.nameoffset": 4848, "key.offset": 4844, "key.parsed_declaration": "let size = nodes.count - 1", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF4sizeL_Sivp"}], "key.typename": "<T> (inout Heap<T>) -> (Int) -> T?", "key.typeusr": "$s2atxSgSi_tcD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF"}], "key.typename": "Heap<T>.Type", "key.typeusr": "$s11FritzVision4HeapVyxGmD", "key.usr": "s:11FritzVision4HeapV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Searching", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6740}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct PriorityQueue&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7607}], "key.bodylength": 861, "key.bodyoffset": 7639, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>PriorityQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 887, "key.name": "PriorityQueue", "key.namelength": 13, "key.nameoffset": 7621, "key.offset": 7614, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 286, "key.parsed_scope.start": 247, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 7635, "key.offset": 7635, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 247, "key.parsed_scope.start": 247, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision13PriorityQueueV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7785}], "key.bodylength": 31, "key.bodyoffset": 7830, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 70, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 7792, "key.offset": 7792, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 256, "key.parsed_scope.start": 254, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>.Type) -> (@escaping (T, T) -> Bool) -> PriorityQueue<T>", "key.typeusr": "$s4sort11FritzVision13PriorityQueueVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision13PriorityQueueV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7868}], "key.bodylength": 27, "key.bodyoffset": 7894, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 7879, "key.offset": 7875, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 260, "key.parsed_scope.start": 258, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision13PriorityQueueV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7928}], "key.bodylength": 25, "key.bodyoffset": 7951, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "count", "key.namelength": 5, "key.nameoffset": 7939, "key.offset": 7935, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 264, "key.parsed_scope.start": 262, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision13PriorityQueueV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7983}], "key.bodylength": 26, "key.bodyoffset": 8009, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 46, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 7995, "key.offset": 7990, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 268, "key.parsed_scope.start": 266, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func enqueue(_ element: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8049}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8042}], "key.bodylength": 28, "key.bodyoffset": 8086, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>enqueue</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>element</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 57, "key.name": "enqueue(_:)", "key.namelength": 21, "key.nameoffset": 8063, "key.offset": 8058, "key.parsed_declaration": "public mutating func enqueue(_ element: T)", "key.parsed_scope.end": 272, "key.parsed_scope.start": 270, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (T) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:11FritzVision13PriorityQueueV7enqueueyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func dequeue() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8128}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8121}], "key.bodylength": 28, "key.bodyoffset": 8159, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>dequeue</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "dequeue()", "key.namelength": 9, "key.nameoffset": 8142, "key.offset": 8137, "key.parsed_declaration": "public mutating func dequeue() -> T?", "key.parsed_scope.end": 276, "key.parsed_scope.start": 274, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV7dequeuexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func changePriority(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8393}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8386}], "key.bodylength": 51, "key.bodyoffset": 8447, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>changePriority</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 97, "key.name": "changePriority(index:value:)", "key.namelength": 38, "key.nameoffset": 8407, "key.offset": 8402, "key.parsed_declaration": "public mutating func changePriority(index i: Int, value: T)", "key.parsed_scope.end": 285, "key.parsed_scope.start": 283, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (Int, T) -> ()", "key.typeusr": "$s5index5valueySi_xtcD", "key.usr": "s:11FritzVision13PriorityQueueV06changeC05index5valueySi_xtF"}], "key.typename": "PriorityQueue<T>.Type", "key.typeusr": "$s11FritzVision13PriorityQueueVyxGmD", "key.usr": "s:11FritzVision13PriorityQueueV"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1933, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ConnectedPart&lt;Skeleton&gt; = (<Type usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</Type>, <Type usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</Type>) where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 182}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ConnectedPart</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; = <tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 70, "key.name": "ConnectedPart", "key.namelength": 13, "key.nameoffset": 199, "key.offset": 189, "key.parsed_declaration": "public typealias ConnectedPart<Skeleton: SkeletonType> = (Skeleton, Skeleton)", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 223}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 213, "key.offset": 213, "key.parsed_declaration": "public typealias ConnectedPart<Skeleton: SkeletonType> = (Skeleton, Skeleton)", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision13ConnectedParta8Skeletonxmfp"}], "key.typename": "(Skeleton, Skeleton).Type", "key.typeusr": "$sx_xtmD", "key.usr": "s:11FritzVision13ConnectedParta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol SkeletonType : <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type>, <Type usr=\"s:SQ\">Equatable</Type>, <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 262}], "key.bodylength": 168, "key.bodyoffset": 335, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 292}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 306}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 324}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SkeletonType</decl.name> : <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "CaseIterable"}, {"key.name": "RawRepresentable"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 235, "key.name": "SkeletonType", "key.namelength": 12, "key.nameoffset": 278, "key.offset": 269, "key.parsed_declaration": "public protocol SkeletonType: CaseIterable, RawRepresentable, Equatable", "key.parsed_scope.end": 23, "key.parsed_scope.start": 15, "key.runtime_name": "_TtP4main12SkeletonType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init?(rawValue: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 20, "key.name": "init(rawValue:)", "key.namelength": 20, "key.nameoffset": 339, "key.offset": 339, "key.parsed_declaration": "init?(rawValue: Int)", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:SY8rawValuexSg03RawB0Qz_tcfc\">init?(rawValue: Self.RawValue)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSb8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSd8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSf8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSi8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs4Int8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int16V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int64V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSu8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt16V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt64V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : SkeletonType> (Self.Type) -> (Int) -> Self?", "key.typeusr": "$s8rawValuexSgSi_tcD", "key.usr": "s:11FritzVision12SkeletonTypeP8rawValuexSgSi_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var rawValue: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 382, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 367, "key.offset": 363, "key.parsed_declaration": "var rawValue: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:SY8rawValue03RawB0Qzvp\">rawValue</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision12SkeletonTypeP8rawValueSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var connectedParts: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</Type>&gt;] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 441, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>connectedParts</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 56, "key.name": "connectedParts", "key.namelength": 14, "key.nameoffset": 402, "key.offset": 391, "key.parsed_declaration": "static var connectedParts: [ConnectedPart<Self>]", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12SkeletonTypePAAE14connectedPartsSayx_xtGvpZ\">connectedParts</RelatedName>"}], "key.typename": "[(Self, Self)]", "key.typeusr": "$sSayx_xtGD", "key.usr": "s:11FritzVision12SkeletonTypeP14connectedPartsSayx_xtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var poseChain: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</Type>&gt;] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 495, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poseChain</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 51, "key.name": "poseChain", "key.namelength": 9, "key.nameoffset": 461, "key.offset": 450, "key.parsed_declaration": "static var poseChain: [ConnectedPart<Self>]", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12SkeletonTypePAAE9poseChainSayx_xtGvpZ\">poseChain</RelatedName>"}], "key.typename": "[(Self, Self)]", "key.typeusr": "$sSayx_xtGD", "key.usr": "s:11FritzVision12SkeletonTypeP9poseChainSayx_xtGvpZ"}], "key.typename": "SkeletonType.Protocol", "key.typeusr": "$s11FritzVision12SkeletonType_pmD", "key.usr": "s:11FritzVision12SkeletonTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/FortranMatrixOps.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3887, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5026, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class MultiPoseSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 211}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 187}], "key.bodylength": 945, "key.bodyoffset": 318, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MultiPoseSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1046, "key.name": "MultiPoseSmoother", "key.namelength": 17, "key.nameoffset": 224, "key.offset": 218, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 47, "key.parsed_scope.start": 13, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 250}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 242, "key.offset": 242, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision17MultiPoseSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 277}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 267, "key.offset": 267, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(numKeypoints: <Type usr=\"s:Si\">Int</Type>, options: <Type usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 567}], "key.bodylength": 78, "key.bodyoffset": 637, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>numKeypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(numKeypoints:options:)", "key.namelength": 61, "key.nameoffset": 574, "key.offset": 574, "key.parsed_declaration": "public init(numKeypoints: Int, options: Filter.SmoothingOptionsType)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.substructure": [], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (MultiPoseSmoother<Filter, Skeleton>.Type) -> (Int, Filter.SmoothingOptionsType) -> MultiPoseSmoother<Filter, Skeleton>", "key.typeusr": "$s12numKeypoints7options11FritzVision17MultiPoseSmootherCyxq_GSi_20SmoothingOptionsTypeQztcD", "key.usr": "s:11FritzVision17MultiPoseSmootherC12numKeypoints7optionsACyxq_GSi_20SmoothingOptionsTypeQztcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;]) -&gt; [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 830}], "key.bodylength": 363, "key.bodyoffset": 898, "key.doc.column": 15, "key.doc.comment": "Smoothe poses.\n\n- Parameter poses: List of poses to smooth.\n- Returns: Smoothed poses.", "key.doc.declaration": "public func smoothe(_ poses: [Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"31\" column=\"15\"><Name>smoothe(_:)</Name><USR>s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF</USR><Declaration>public func smoothe(_ poses: [Pose&lt;Skeleton&gt;]) -&gt; [Pose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Smoothe poses.</Para></Abstract><Parameters><Parameter><Name>poses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of poses to smooth.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Smoothed poses.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "smoothe(_:)", "key.doc.parameters": [{"discussion": [{"Para": "List of poses to smooth."}], "name": "poses"}], "key.doc.result_discussion": [{"Para": "Smoothed poses."}], "key.doc.type": "Function", "key.doclength": 108, "key.docoffset": 720, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>poses</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 425, "key.name": "smoothe(_:)", "key.namelength": 34, "key.nameoffset": 842, "key.offset": 837, "key.parsed_declaration": "public func smoothe(_ poses: [Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.parsed_scope.end": 46, "key.parsed_scope.start": 31, "key.substructure": [{"key.annotated_decl": "<Declaration>let identifiedPoses: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>identifiedPoses</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 53, "key.name": "identifiedPoses", "key.namelength": 15, "key.nameoffset": 907, "key.offset": 903, "key.parsed_declaration": "let identifiedPoses = poseMatcher.update(with: poses)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSay11FritzVision4PoseCyq_G4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF15identifiedPosesL_SayAG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp"}, {"key.annotated_decl": "<Declaration>var smoothedPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothedPoses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "smoothedPoses", "key.namelength": 13, "key.nameoffset": 965, "key.offset": 961, "key.parsed_declaration": "var smoothedPoses = [Pose<Skeleton>]()", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyq_GGD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF13smoothedPosesL_AHvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (MultiPoseSmoother<Filter, Skeleton>) -> ([Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.typeusr": "$sySay11FritzVision4PoseCyq_GGAEcD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF"}], "key.typename": "MultiPoseSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision17MultiPoseSmootherCyxq_GmD", "key.usr": "s:11FritzVision17MultiPoseSmootherC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias IdentifiedPose&lt;Skeleton&gt; = (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\">Skeleton</Type>&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>) where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1291}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1267}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>IdentifiedPose</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; = <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 106, "key.name": "IdentifiedPose", "key.namelength": 14, "key.nameoffset": 1308, "key.offset": 1298, "key.parsed_declaration": "public typealias IdentifiedPose<Skeleton: SkeletonType> = (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1333}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1323, "key.offset": 1323, "key.parsed_declaration": "public typealias IdentifiedPose<Skeleton: SkeletonType> = (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision14IdentifiedPosea8Skeletonxmfp"}], "key.typename": "(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date).Type", "key.typeusr": "$s11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttmD", "key.usr": "s:11FritzVision14IdentifiedPosea"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class MultiPoseMatcher&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1431}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1407}], "key.bodylength": 3538, "key.bodyoffset": 1486, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MultiPoseMatcher</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 3587, "key.name": "MultiPoseMatcher", "key.namelength": 16, "key.nameoffset": 1444, "key.offset": 1438, "key.parsed_declaration": "public class MultiPoseMatcher<Skeleton: SkeletonType>", "key.parsed_scope.end": 155, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1471}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1461, "key.offset": 1461, "key.parsed_declaration": "public class MultiPoseMatcher<Skeleton: SkeletonType>", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var identifiedPoses: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1602}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1589}], "key.doc.column": 27, "key.doc.comment": "List of currently identified poses.", "key.doc.declaration": "private(set) public var identifiedPoses: [Int : (pose: FritzVision.Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)] {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"60\" column=\"27\"><Name>identifiedPoses</Name><USR>s:11FritzVision16MultiPoseMatcherC15identifiedPosesSDySiAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp</USR><Declaration>private(set) public var identifiedPoses: [Int : (pose: FritzVision.Pose&lt;Skeleton&gt;, id: Int, lastIdentifiedAt: Date)] {\n    get\n    }</Declaration><CommentParts><Abstract><Para>List of currently identified poses.</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "identifiedPoses", "key.doc.type": "Other", "key.doclength": 40, "key.docoffset": 1547, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>identifiedPoses</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 55, "key.name": "identifiedPoses", "key.namelength": 15, "key.nameoffset": 1613, "key.offset": 1609, "key.parsed_declaration": "private(set) public var identifiedPoses = [Int: IdentifiedPose<Skeleton>]()", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC15identifiedPosesSDySiAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1715}], "key.bodylength": 47, "key.bodyoffset": 1751, "key.doc.column": 14, "key.doc.comment": "List of poses to match new pose list to.", "key.doc.declaration": "public var poses: [Pose<Skeleton>] { get }", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"63\" column=\"14\"><Name>poses</Name><USR>s:11FritzVision16MultiPoseMatcherC5posesSayAA0D0CyxGGvp</USR><Declaration>public var poses: [Pose&lt;Skeleton&gt;] { get }</Declaration><CommentParts><Abstract><Para>List of poses to match new pose list to.</Para></Abstract></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "poses", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1668, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 1726, "key.offset": 1722, "key.parsed_declaration": "public var poses: [Pose<Skeleton>]", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5posesSayAA0D0CyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let iouThreshold: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1868}], "key.doc.column": 14, "key.doc.comment": "IOU Threshold required for a pose to be considered a match", "key.doc.declaration": "public let iouThreshold: Float", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"68\" column=\"14\"><Name>iouThreshold</Name><USR>s:11FritzVision16MultiPoseMatcherC12iouThresholdSfvp</USR><Declaration>public let iouThreshold: Float</Declaration><CommentParts><Abstract><Para>IOU Threshold required for a pose to be considered a match</Para></Abstract></CommentParts></Other>", "key.doc.line": 68, "key.doc.name": "iouThreshold", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 1803, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>iouThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "iouThreshold", "key.namelength": 12, "key.nameoffset": 1879, "key.offset": 1875, "key.parsed_declaration": "public let iouThreshold: Float", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:11FritzVision16MultiPoseMatcherC12iouThresholdSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let lookback: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2032}], "key.doc.column": 14, "key.doc.comment": "Time interval to lookback when matching poses.  Any poses not matched that are older than\nthis value will be removed.", "key.doc.declaration": "public let lookback: TimeInterval", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"72\" column=\"14\"><Name>lookback</Name><USR>s:11FritzVision16MultiPoseMatcherC8lookbackSdvp</USR><Declaration>public let lookback: TimeInterval</Declaration><CommentParts><Abstract><Para>Time interval to lookback when matching poses.  Any poses not matched that are older than this value will be removed.</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "lookback", "key.doc.type": "Other", "key.doclength": 128, "key.docoffset": 1902, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lookback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "lookback", "key.namelength": 8, "key.nameoffset": 2043, "key.offset": 2039, "key.parsed_declaration": "public let lookback: TimeInterval", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision16MultiPoseMatcherC8lookbackSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(iouThreshold: <Type usr=\"s:Sf\">Float</Type>, lookback: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 2.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2069}], "key.bodylength": 69, "key.bodyoffset": 2133, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>lookback</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 2.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(iouThreshold:lookback:)", "key.namelength": 55, "key.nameoffset": 2076, "key.offset": 2076, "key.parsed_declaration": "public init(iouThreshold: Float, lookback: TimeInterval = 2.0)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 74, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>.Type) -> (Float, Double) -> MultiPoseMatcher<Skeleton>", "key.typeusr": "$s12iouThreshold8lookback11FritzVision16MultiPoseMatcherCyxGSf_SdtcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC12iouThreshold8lookbackACyxGSf_Sdtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var poseCount: <Type usr=\"s:Si\">Int</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2220}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2207}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poseCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "poseCount", "key.namelength": 9, "key.nameoffset": 2231, "key.offset": 2227, "key.parsed_declaration": "private(set) public var poseCount = 0", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision16MultiPoseMatcherC9poseCountSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func match(poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;]) -&gt; [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;?]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2937}], "key.bodylength": 381, "key.bodyoffset": 3012, "key.doc.column": 15, "key.doc.comment": "Match list of poses", "key.doc.declaration": "public func match(poses: [Pose<Skeleton>]) -> [IdentifiedPose<Skeleton>?]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"100\" column=\"15\"><Name>match(poses:)</Name><USR>s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF</USR><Declaration>public func match(poses: [Pose&lt;Skeleton&gt;]) -&gt; [IdentifiedPose&lt;Skeleton&gt;?]</Declaration><CommentParts><Abstract><Para>Match list of poses</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "match(poses:)", "key.doc.type": "Function", "key.doclength": 24, "key.docoffset": 2911, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>match</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>poses</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 450, "key.name": "match(poses:)", "key.namelength": 30, "key.nameoffset": 2949, "key.offset": 2944, "key.parsed_declaration": "public func match(poses: [Pose<Skeleton>]) -> [IdentifiedPose<Skeleton>?]", "key.parsed_scope.end": 113, "key.parsed_scope.start": 100, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision16MultiPoseMatcherC5match4pose2toAA0D0CyxGAE_Si2id10Foundation4DateV16lastIdentifiedAttSgAI_SayAiE_SiAjmNtGtF\">match(pose:to:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var remaining: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>remaining</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "remaining", "key.namelength": 9, "key.nameoffset": 3021, "key.offset": 3017, "key.parsed_declaration": "var remaining = self.identifiedPoses", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF9remainingL_SDySiAhI_SiAjmNtGvp"}, {"key.annotated_decl": "<Declaration>var matched: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)?]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>matched</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>?]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "matched", "key.namelength": 7, "key.nameoffset": 3062, "key.offset": 3058, "key.parsed_declaration": "var matched = [IdentifiedPose<Skeleton>?]()", "key.parsed_scope.end": 102, "key.parsed_scope.start": 102, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$sSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF7matchedL_APvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>) -> ([Pose<Skeleton>]) -> [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$s5posesSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAEG_tcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(with newPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;], having matches: [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;?]? = nil) -&gt; [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3433}], "key.bodylength": 1443, "key.bodyoffset": 3579, "key.doc.column": 15, "key.doc.comment": "Update poses with new poses,", "key.doc.declaration": "public func update(with newPoses: [Pose<Skeleton>], having matches: [IdentifiedPose<Skeleton>?]? = nil) -> [IdentifiedPose<Skeleton>]", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"116\" column=\"15\"><Name>update(with:having:)</Name><USR>s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF</USR><Declaration>public func update(with newPoses: [Pose&lt;Skeleton&gt;], having matches: [IdentifiedPose&lt;Skeleton&gt;?]? = nil) -&gt; [IdentifiedPose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Update poses with new poses,</Para></Abstract></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "update(with:having:)", "key.doc.type": "Function", "key.doclength": 33, "key.docoffset": 3398, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>newPoses</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>having</decl.var.parameter.argument_label> <decl.var.parameter.name>matches</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1583, "key.name": "update(with:having:)", "key.namelength": 103, "key.nameoffset": 3445, "key.offset": 3440, "key.parsed_declaration": "public func update(\n  with newPoses: [Pose<Skeleton>],\n  having matches: [IdentifiedPose<Skeleton>?]? = nil\n) -> [IdentifiedPose<Skeleton>]", "key.parsed_scope.end": 154, "key.parsed_scope.start": 116, "key.substructure": [{"key.annotated_decl": "<Declaration>let sortedPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedPoses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "sortedPoses", "key.namelength": 11, "key.nameoffset": 3588, "key.offset": 3584, "key.parsed_declaration": "let sortedPoses = newPoses.sorted(by: { $0.score > $1.score })", "key.parsed_scope.end": 120, "key.parsed_scope.start": 120, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF11sortedPosesL_AQvp"}, {"key.annotated_decl": "<Declaration>let matchedPoses: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)?]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>matchedPoses</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>?]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "matchedPoses", "key.namelength": 12, "key.nameoffset": 3655, "key.offset": 3651, "key.parsed_declaration": "let matchedPoses = matches ?? match(poses: sortedPoses)", "key.parsed_scope.end": 121, "key.parsed_scope.start": 121, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$sSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF12matchedPosesL_ASvp"}, {"key.annotated_decl": "<Declaration>var updatedIdentifiedPoses: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>updatedIdentifiedPoses</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "updatedIdentifiedPoses", "key.namelength": 22, "key.nameoffset": 3716, "key.offset": 3712, "key.parsed_declaration": "var updatedIdentifiedPoses = [Int: IdentifiedPose<Skeleton>]()", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF07updatedN5PosesL_SDySiAiJ_SiAknOtGvp"}, {"key.annotated_decl": "<Declaration>let nonMatchedIds: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nonMatchedIds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 91, "key.name": "nonMatchedIds", "key.namelength": 13, "key.nameoffset": 4354, "key.offset": 4350, "key.parsed_declaration": "let nonMatchedIds = Set(identifiedPoses.keys).subtracting(Set(updatedIdentifiedPoses.keys))", "key.parsed_scope.end": 138, "key.parsed_scope.start": 138, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF13nonMatchedIdsL_ShySiGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>) -> ([Pose<Skeleton>], [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]?) -> [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$s4with6havingSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAFG_SayAfG_SiAhkLtSgGSgtcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF"}], "key.typename": "MultiPoseMatcher<Skeleton>.Type", "key.typeusr": "$s11FritzVision16MultiPoseMatcherCyxGmD", "key.usr": "s:11FritzVision16MultiPoseMatcherC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4421, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class OneEuroFilterPointable&lt;Point&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type> where Point : <Type usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2442}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 2429}], "key.bodylength": 1693, "key.bodyoffset": 2533, "key.doc.column": 14, "key.doc.comment": "One Euro filter for a 2D or 3D point.", "key.doc.declaration": "@objcMembers public class OneEuroFilterPointable<Point> : NSObject, PointFilterable where Point : ArrayInitializable", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift\" line=\"101\" column=\"14\"><Name>OneEuroFilterPointable</Name><USR>s:11FritzVision22OneEuroFilterPointableC</USR><Declaration>@objcMembers public class OneEuroFilterPointable&lt;Point&gt; : NSObject, PointFilterable where Point : ArrayInitializable</Declaration><CommentParts><Abstract><Para>One Euro filter for a 2D or 3D point.</Para></Abstract></CommentParts></Class>", "key.doc.line": 101, "key.doc.name": "OneEuroFilterPointable", "key.doc.type": "Class", "key.doclength": 42, "key.docoffset": 2387, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2506}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 2516}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneEuroFilterPointable</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\"><decl.generic_type_param.name>Point</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Point : <ref.protocol usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1778, "key.name": "OneEuroFilterPointable", "key.namelength": 22, "key.nameoffset": 2455, "key.offset": 2449, "key.parsed_declaration": "public class OneEuroFilterPointable<Point: ArrayInitializable>: NSObject, PointFilterable", "key.parsed_scope.end": 159, "key.parsed_scope.start": 101, "key.substructure": [{"key.annotated_decl": "<Declaration>Point : <Type usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 18, "key.offset": 2485}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Point</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "ArrayInitializable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 25, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 2478, "key.offset": 2478, "key.parsed_declaration": "public class OneEuroFilterPointable<Point: ArrayInitializable>: NSObject, PointFilterable", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "Point.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC5Pointxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;Point&gt;.Options : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2583}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2576}], "key.bodylength": 536, "key.bodyoffset": 2619, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2604}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;Point&gt;.<decl.name>Options</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FilterOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 567, "key.name": "Options", "key.namelength": 7, "key.nameoffset": 2595, "key.offset": 2589, "key.parsed_declaration": "public final class Options: FilterOptions", "key.parsed_scope.end": 124, "key.parsed_scope.start": 105, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let frequency: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2625}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>frequency</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "frequency", "key.namelength": 9, "key.nameoffset": 2636, "key.offset": 2632, "key.parsed_declaration": "public let frequency: Double", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequencySdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let minCutoff: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2658}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>minCutoff</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "minCutoff", "key.namelength": 9, "key.nameoffset": 2669, "key.offset": 2665, "key.parsed_declaration": "public let minCutoff: Double", "key.parsed_scope.end": 108, "key.parsed_scope.start": 108, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9minCutoffSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let beta: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2691}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>beta</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "beta", "key.namelength": 4, "key.nameoffset": 2702, "key.offset": 2698, "key.parsed_declaration": "public let beta: Double", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC4betaSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let derivateCutoff: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2719}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>derivateCutoff</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "derivateCutoff", "key.namelength": 14, "key.nameoffset": 2730, "key.offset": 2726, "key.parsed_declaration": "public let derivateCutoff: Double", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC14derivateCutoffSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(frequency: <Type usr=\"s:Sd\">Double</Type> = 1.0, minCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0, beta: <Type usr=\"s:Sd\">Double</Type> = 0.0, derivateCutoff: <Type usr=\"s:Sd\">Double</Type> = 0.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2758}], "key.bodylength": 137, "key.bodyoffset": 2871, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frequency</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beta</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>derivateCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 244, "key.name": "init(frequency:minCutoff:beta:derivateCutoff:)", "key.namelength": 104, "key.nameoffset": 2765, "key.offset": 2765, "key.parsed_declaration": "public init(frequency: Double = 1.0, minCutoff: Double = 1.0, beta: Double = 0.0, derivateCutoff: Double = 0.0)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 112, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsCAEyx_Gycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Options.Type) -> (Double, Double, Double, Double) -> OneEuroFilterPointable<Point>.Options", "key.typeusr": "$s9frequency9minCutoff4beta08derivateC011FritzVision22OneEuroFilterPointableC7OptionsCyx_GSd_S3dtcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequency9minCutoff4beta08derivateJ0AEyx_GSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 3021}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3014}], "key.bodylength": 113, "key.bodyoffset": 3038, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 3030, "key.offset": 3030, "key.overrides": [{"key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.parsed_declaration": "public required init()", "key.parsed_scope.end": 123, "key.parsed_scope.start": 118, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequency9minCutoff4beta08derivateJ0AEyx_GSd_S3dtcfc\">init(frequency:minCutoff:beta:derivateCutoff:)</RelatedName>"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Options.Type) -> () -> OneEuroFilterPointable<Point>.Options", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCyx_GycD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsCAEyx_Gycfc"}], "key.typename": "OneEuroFilterPointable<Point>.Options.Type", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCyx_GmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(options: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 3167}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3160}], "key.bodylength": 535, "key.bodyoffset": 3210, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 570, "key.name": "init(options:)", "key.namelength": 32, "key.nameoffset": 3176, "key.offset": 3176, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}], "key.parsed_declaration": "public required init(options: Options = .init())", "key.parsed_scope.end": 142, "key.parsed_scope.start": 126, "key.substructure": [{"key.annotated_decl": "<Declaration>var currentFilters: [<Type usr=\"s:11FritzVision13OneEuroFilterC\">OneEuroFilter</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>currentFilters</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision13OneEuroFilterC\">OneEuroFilter</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "currentFilters", "key.namelength": 14, "key.nameoffset": 3219, "key.offset": 3215, "key.parsed_declaration": "var currentFilters = [OneEuroFilter]()", "key.parsed_scope.end": 127, "key.parsed_scope.start": 127, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC14currentFiltersSayAA0cdE0CGvp\">currentFilters</RelatedName>"}], "key.typename": "[OneEuroFilter]", "key.typeusr": "$sSay11FritzVision13OneEuroFilterCGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc14currentFiltersL_SayAA0cdE0CGvp"}, {"key.annotated_decl": "<Declaration>let emptyPointArray: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>emptyPointArray</decl.name>: <decl.var.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 48, "key.name": "emptyPointArray", "key.namelength": 15, "key.nameoffset": 3383, "key.offset": 3379, "key.parsed_declaration": "let emptyPointArray: [CGFloat] = [0.0, 0.0, 0.0]", "key.parsed_scope.end": 131, "key.parsed_scope.start": 131, "key.typename": "[CGFloat]", "key.typeusr": "$sSay12CoreGraphics7CGFloatVGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc15emptyPointArrayL_Say12CoreGraphics7CGFloatVGvp"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Type) -> (OneEuroFilterPointable<Point>.Options) -> OneEuroFilterPointable<Point>", "key.typeusr": "$s7options11FritzVision22OneEuroFilterPointableCyxGAD7OptionsCyx_G_tcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func filter(_ point: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</Type>) -&gt; <Type usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3871}], "key.bodylength": 308, "key.bodyoffset": 3916, "key.doc.column": 15, "key.doc.comment": "Filter point.\n\n- Parameter point: Input Point.\n- Returns: Point after original filter processing.", "key.doc.declaration": "public func filter(_ point: Point) -> Point", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift\" line=\"148\" column=\"15\"><Name>filter(_:)</Name><USR>s:11FritzVision22OneEuroFilterPointableC6filteryxxF</USR><Declaration>public func filter(_ point: Point) -&gt; Point</Declaration><CommentParts><Abstract><Para>Filter point.</Para></Abstract><Parameters><Parameter><Name>point</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Input Point.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Point after original filter processing.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 148, "key.doc.name": "filter(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Input Point."}], "name": "point"}], "key.doc.result_discussion": [{"Para": "Point after original filter processing."}], "key.doc.type": "Function", "key.doclength": 119, "key.docoffset": 3750, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 347, "key.name": "filter(_:)", "key.namelength": 22, "key.nameoffset": 3883, "key.offset": 3878, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.parsed_declaration": "public func filter(_ point: Point) -> Point", "key.parsed_scope.end": 158, "key.parsed_scope.start": 148, "key.substructure": [{"key.annotated_decl": "<Declaration>let currentValue: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>currentValue</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "currentValue", "key.namelength": 12, "key.nameoffset": 3925, "key.offset": 3921, "key.parsed_declaration": "let currentValue = point.toArray()", "key.parsed_scope.end": 149, "key.parsed_scope.start": 149, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF12currentValueL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>var newValues: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newValues</decl.name>: <decl.var.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 27, "key.name": "newValues", "key.namelength": 9, "key.nameoffset": 3964, "key.offset": 3960, "key.parsed_declaration": "var newValues = [CGFloat]()", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.typename": "[CGFloat]", "key.typeusr": "$sSay12CoreGraphics7CGFloatVGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF9newValuesL_Say12CoreGraphics7CGFloatVGvp"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>) -> (Point) -> Point", "key.typeusr": "$syxxcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF"}], "key.typename": "OneEuroFilterPointable<Point>.Type", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableCyxGmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class OneEuroPointFilter : <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4230}], "key.bodylength": 123, "key.bodyoffset": 4296, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 31, "key.offset": 4263}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneEuroPointFilter</decl.name> : <ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;</decl.class>", "key.inheritedtypes": [{"key.name": "OneEuroFilterPointable<CGPoint>"}], "key.kind": "source.lang.swift.decl.class", "key.length": 183, "key.name": "OneEuroPointFilter", "key.namelength": 18, "key.nameoffset": 4243, "key.offset": 4237, "key.parsed_declaration": "public class OneEuroPointFilter: OneEuroFilterPointable<CGPoint>", "key.parsed_scope.end": 171, "key.parsed_scope.start": 162, "key.runtime_name": "_TtC4main18OneEuroPointFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let low: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;.<Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4300}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>low</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;.<ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "low", "key.namelength": 3, "key.nameoffset": 4318, "key.offset": 4307, "key.parsed_declaration": "public static let low = Options(", "key.parsed_scope.end": 164, "key.parsed_scope.start": 164, "key.typename": "OneEuroFilterPointable<CGPoint>.Options", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCySo7CGPointV_GD", "key.usr": "s:11FritzVision18OneEuroPointFilterC3lowAA0cdF9PointableC7OptionsCySo7CGPointV_GvpZ"}], "key.typename": "OneEuroPointFilter.Type", "key.typeusr": "$s11FritzVision18OneEuroPointFilterCmD", "key.usr": "s:11FritzVision18OneEuroPointFilterC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 424, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol ArrayInitializable : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 192}], "key.bodylength": 31, "key.bodyoffset": 239, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 228}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ArrayInitializable</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 72, "key.name": "ArrayInitializable", "key.namelength": 18, "key.nameoffset": 208, "key.offset": 199, "key.parsed_declaration": "public protocol ArrayInitializable: PointType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main18ArrayInitializable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(with array: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>])</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 27, "key.name": "init(with:)", "key.namelength": 27, "key.nameoffset": 242, "key.offset": 242, "key.parsed_declaration": "init(with array: [CGFloat])", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.substructure": [], "key.typename": "<Self where Self : ArrayInitializable> (Self.Type) -> ([CGFloat]) -> Self", "key.typeusr": "$s4withxSay12CoreGraphics7CGFloatVG_tcD", "key.usr": "s:11FritzVision18ArrayInitializableP4withxSay12CoreGraphics7CGFloatVG_tcfc"}], "key.typename": "ArrayInitializable.Protocol", "key.typeusr": "$s11FritzVision18ArrayInitializable_pmD", "key.usr": "s:11FritzVision18ArrayInitializableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 491, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FilterOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 183}], "key.bodylength": 12, "key.bodyoffset": 214, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FilterOptions</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 37, "key.name": "FilterOptions", "key.namelength": 13, "key.nameoffset": 199, "key.offset": 190, "key.parsed_declaration": "public protocol FilterOptions", "key.parsed_scope.end": 15, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main13FilterOptions_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init()</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 6, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 218, "key.offset": 218, "key.parsed_declaration": "init()", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "<Self where Self : FilterOptions> (Self.Type) -> () -> Self", "key.typeusr": "$sxycD", "key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.typename": "FilterOptions.Protocol", "key.typeusr": "$s11FritzVision13FilterOptions_pmD", "key.usr": "s:11FritzVision13FilterOptionsP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PointFilterable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 301}], "key.bodylength": 155, "key.bodyoffset": 334, "key.doc.column": 17, "key.doc.comment": "The methods adopted by the object used to smoothe a 2D or 3D point.", "key.doc.declaration": "public protocol PointFilterable", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift\" line=\"18\" column=\"17\"><Name>PointFilterable</Name><USR>s:11FritzVision15PointFilterableP</USR><Declaration>public protocol PointFilterable</Declaration><CommentParts><Abstract><Para>The methods adopted by the object used to smoothe a 2D or 3D point.</Para></Abstract></CommentParts></Class>", "key.doc.line": 18, "key.doc.name": "PointFilterable", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 229, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PointFilterable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 182, "key.name": "PointFilterable", "key.namelength": 15, "key.nameoffset": 317, "key.offset": 308, "key.parsed_declaration": "public protocol PointFilterable", "key.parsed_scope.end": 25, "key.parsed_scope.start": 18, "key.runtime_name": "_TtP4main15PointFilterable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype T : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>T</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 27, "key.name": "T", "key.namelength": 1, "key.nameoffset": 352, "key.offset": 337, "key.parsed_declaration": "associatedtype T: PointType", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Self.T.Type", "key.typeusr": "$s1T11FritzVision15PointFilterablePQzmD", "key.usr": "s:11FritzVision15PointFilterableP1TQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype SmoothingOptionsType : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>SmoothingOptionsType</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 50, "key.name": "SmoothingOptionsType", "key.namelength": 20, "key.nameoffset": 382, "key.offset": 367, "key.parsed_declaration": "associatedtype SmoothingOptionsType: FilterOptions", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Self.SmoothingOptionsType.Type", "key.typeusr": "$s20SmoothingOptionsType11FritzVision15PointFilterablePQzmD", "key.usr": "s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(options: <Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 35, "key.name": "init(options:)", "key.namelength": 35, "key.nameoffset": 421, "key.offset": 421, "key.parsed_declaration": "init(options: SmoothingOptionsType)", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.substructure": [], "key.typename": "<Self where Self : PointFilterable> (Self.Type) -> (Self.SmoothingOptionsType) -> Self", "key.typeusr": "$s7optionsx20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func filter(_ point: <Type usr=\"s:11FritzVision15PointFilterableP1TQa\">T</Type>) -&gt; <Type usr=\"s:11FritzVision15PointFilterableP1TQa\">T</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP1TQa\">T</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP1TQa\">T</ref.associatedtype></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 28, "key.name": "filter(_:)", "key.namelength": 18, "key.nameoffset": 465, "key.offset": 460, "key.parsed_declaration": "func filter(_ point: T) -> T", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "<Self where Self : PointFilterable> (Self) -> (Self.T) -> Self.T", "key.typeusr": "$sy1TQzABcD", "key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.typename": "PointFilterable.Protocol", "key.typeusr": "$s11FritzVision15PointFilterable_pmD", "key.usr": "s:11FritzVision15PointFilterableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1834, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class PoseSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 206}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 182}], "key.bodylength": 708, "key.bodyoffset": 308, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 804, "key.name": "PoseSmoother", "key.namelength": 12, "key.nameoffset": 219, "key.offset": 213, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 39, "key.parsed_scope.start": 13, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 240}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 232, "key.offset": 232, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision12PoseSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 267}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 257, "key.offset": 257, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == CGPoint", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision12PoseSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(options: <Type usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type> = Filter.SmoothingOptionsType())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 337}], "key.bodylength": 183, "key.bodyoffset": 420, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type> = Filter.SmoothingOptionsType()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 260, "key.name": "init(options:)", "key.namelength": 74, "key.nameoffset": 344, "key.offset": 344, "key.parsed_declaration": "public init(options: Filter.SmoothingOptionsType = Filter.SmoothingOptionsType())", "key.parsed_scope.end": 26, "key.parsed_scope.start": 17, "key.substructure": [{"key.annotated_decl": "<Declaration>var filters: [Filter]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>filters</decl.name>: <decl.var.type>[Filter]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "filters", "key.namelength": 7, "key.nameoffset": 430, "key.offset": 426, "key.parsed_declaration": "var filters = [Filter]()", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12PoseSmootherC7filtersSayxGvp\">filters</RelatedName>"}], "key.typename": "[Filter]", "key.typeusr": "$sSayxGD", "key.usr": "s:11FritzVision12PoseSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc7filtersL_SayxGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (PoseSmoother<Filter, Skeleton>.Type) -> (Filter.SmoothingOptionsType) -> PoseSmoother<Filter, Skeleton>", "key.typeusr": "$s7options11FritzVision12PoseSmootherCyxq_G20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision12PoseSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 608}], "key.bodylength": 343, "key.bodyoffset": 671, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 400, "key.name": "smoothe(_:)", "key.namelength": 31, "key.nameoffset": 620, "key.offset": 615, "key.parsed_declaration": "public func smoothe(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.parsed_scope.end": 38, "key.parsed_scope.start": 28, "key.substructure": [{"key.annotated_decl": "<Declaration>var newKeypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 680, "key.offset": 676, "key.parsed_declaration": "var newKeypoints: [Keypoint<Skeleton>] = []", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyq_GGD", "key.usr": "s:11FritzVision12PoseSmootherC7smootheyAA0C0Cyq_GAGF12newKeypointsL_SayAA8KeypointCyq_GGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (PoseSmoother<Filter, Skeleton>) -> (Pose<Skeleton>) -> Pose<Skeleton>", "key.typeusr": "$sy11FritzVision4PoseCyq_GADcD", "key.usr": "s:11FritzVision12PoseSmootherC7smootheyAA0C0Cyq_GAGF"}], "key.typename": "PoseSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision12PoseSmootherCyxq_GmD", "key.usr": "s:11FritzVision12PoseSmootherC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose3DSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1045}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1021}], "key.bodylength": 683, "key.bodyoffset": 1149, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose3DSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 781, "key.name": "Pose3DSmoother", "key.namelength": 14, "key.nameoffset": 1058, "key.offset": 1052, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == Point3D", "key.parsed_scope.end": 69, "key.parsed_scope.start": 44, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 1081}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 1073, "key.offset": 1073, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == Point3D", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision14Pose3DSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1108}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1098, "key.offset": 1098, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType> where Filter.T == Point3D", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(options: <Type usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1178}], "key.bodylength": 182, "key.bodyoffset": 1229, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 227, "key.name": "init(options:)", "key.namelength": 42, "key.nameoffset": 1185, "key.offset": 1185, "key.parsed_declaration": "public init(options: Filter.SmoothingOptionsType)", "key.parsed_scope.end": 56, "key.parsed_scope.start": 48, "key.substructure": [{"key.annotated_decl": "<Declaration>var filters: [Filter]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>filters</decl.name>: <decl.var.type>[Filter]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "filters", "key.namelength": 7, "key.nameoffset": 1239, "key.offset": 1235, "key.parsed_declaration": "var filters = [Filter]()", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14Pose3DSmootherC7filtersSayxGvp\">filters</RelatedName>"}], "key.typename": "[Filter]", "key.typeusr": "$sSayxGD", "key.usr": "s:11FritzVision14Pose3DSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc7filtersL_SayxGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == Point3D> (Pose3DSmoother<Filter, Skeleton>.Type) -> (Filter.SmoothingOptionsType) -> Pose3DSmoother<Filter, Skeleton>", "key.typeusr": "$s7options11FritzVision14Pose3DSmootherCyxq_G20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision14Pose3DSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ pose: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1416}], "key.bodylength": 347, "key.bodyoffset": 1483, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 408, "key.name": "smoothe(_:)", "key.namelength": 33, "key.nameoffset": 1428, "key.offset": 1423, "key.parsed_declaration": "public func smoothe(_ pose: Pose3D<Skeleton>) -> Pose3D<Skeleton>", "key.parsed_scope.end": 68, "key.parsed_scope.start": 58, "key.substructure": [{"key.annotated_decl": "<Declaration>var newKeypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 45, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 1492, "key.offset": 1488, "key.parsed_declaration": "var newKeypoints: [Keypoint3D<Skeleton>] = []", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyq_GGD", "key.usr": "s:11FritzVision14Pose3DSmootherC7smootheyAA0C1DCyq_GAGF12newKeypointsL_SayAA10Keypoint3DCyq_GGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == Point3D> (Pose3DSmoother<Filter, Skeleton>) -> (Pose3D<Skeleton>) -> Pose3D<Skeleton>", "key.typeusr": "$sy11FritzVision6Pose3DCyq_GADcD", "key.usr": "s:11FritzVision14Pose3DSmootherC7smootheyAA0C1DCyq_GAGF"}], "key.typename": "Pose3DSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision14Pose3DSmootherCyxq_GmD", "key.usr": "s:11FritzVision14Pose3DSmootherC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6737, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class SavitzkyGolayFilter&lt;PointT&gt; : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type> where PointT : <Type usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2127}], "key.bodylength": 4529, "key.bodyoffset": 2206, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 2189}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SavitzkyGolayFilter</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\"><decl.generic_type_param.name>PointT</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>PointT : <ref.protocol usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4602, "key.name": "SavitzkyGolayFilter", "key.namelength": 19, "key.nameoffset": 2140, "key.offset": 2134, "key.parsed_declaration": "public class SavitzkyGolayFilter<PointT: SmoothingPointable>: PointFilterable", "key.parsed_scope.end": 214, "key.parsed_scope.start": 56, "key.substructure": [{"key.annotated_decl": "<Declaration>PointT : <Type usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 18, "key.offset": 2168}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>PointT</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SmoothingPointable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 26, "key.name": "PointT", "key.namelength": 6, "key.nameoffset": 2160, "key.offset": 2160, "key.parsed_declaration": "public class SavitzkyGolayFilter<PointT: SmoothingPointable>: PointFilterable", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "PointT.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC\">SavitzkyGolayFilter</Type>&lt;PointT&gt;.Options : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2395}], "key.bodylength": 392, "key.bodyoffset": 2432, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2417}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision19SavitzkyGolayFilterC\">SavitzkyGolayFilter</ref.class>&lt;PointT&gt;.<decl.name>Options</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FilterOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 423, "key.name": "Options", "key.namelength": 7, "key.nameoffset": 2408, "key.offset": 2402, "key.parsed_declaration": "public class Options: FilterOptions", "key.parsed_scope.end": 84, "key.parsed_scope.start": 67, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(leftScan: <Type usr=\"s:Si\">Int</Type> = 2, rightScan: <Type usr=\"s:Si\">Int</Type> = 2, polonomialOrder: <Type usr=\"s:Si\">Int</Type> = 2)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2513}], "key.bodylength": 114, "key.bodyoffset": 2590, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>leftScan</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rightScan</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>polonomialOrder</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 185, "key.name": "init(leftScan:rightScan:polonomialOrder:)", "key.namelength": 69, "key.nameoffset": 2520, "key.offset": 2520, "key.parsed_declaration": "public init(leftScan: Int = 2, rightScan: Int = 2, polonomialOrder: Int = 2)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 73, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsCAEyx_Gycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Options.Type) -> (Int, Int, Int) -> SavitzkyGolayFilter<PointT>.Options", "key.typeusr": "$s8leftScan05rightB015polonomialOrder11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GSi_S2itcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsC8leftScan05rightH015polonomialOrderAEyx_GSi_S2itcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2718}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2711}], "key.bodylength": 85, "key.bodyoffset": 2735, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 2727, "key.offset": 2727, "key.overrides": [{"key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.parsed_declaration": "public required init()", "key.parsed_scope.end": 83, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC8leftScan05rightH015polonomialOrderAEyx_GSi_S2itcfc\">init(leftScan:rightScan:polonomialOrder:)</RelatedName>"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Options.Type) -> () -> SavitzkyGolayFilter<PointT>.Options", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GycD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsCAEyx_Gycfc"}], "key.typename": "SavitzkyGolayFilter<PointT>.Options.Type", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(options: <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC\">Options</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2837}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2830}], "key.bodylength": 366, "key.bodyoffset": 2869, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC\">Options</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 390, "key.name": "init(options:)", "key.namelength": 22, "key.nameoffset": 2846, "key.offset": 2846, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}], "key.parsed_declaration": "public required init(options: Options)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 87, "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Type) -> (SavitzkyGolayFilter<PointT>.Options) -> SavitzkyGolayFilter<PointT>", "key.typeusr": "$s7options11FritzVision19SavitzkyGolayFilterCyxGAD7OptionsCyx_G_tcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7optionsACyxGAC7OptionsCyx_G_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func setParameter(name: <Type usr=\"s:SS\">String</Type>, value: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3240}], "key.bodylength": 223, "key.bodyoffset": 3295, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setParameter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 272, "key.name": "setParameter(name:value:)", "key.namelength": 41, "key.nameoffset": 3252, "key.offset": 3247, "key.parsed_declaration": "public func setParameter(name: String, value: Double)", "key.parsed_scope.end": 100, "key.parsed_scope.start": 96, "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (String, Double) -> ()", "key.typeusr": "$s4name5valueySS_SdtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC12setParameter4name5valueySS_SdtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func filter(_ point: <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</Type>) -&gt; <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3523}], "key.bodylength": 176, "key.bodyoffset": 3570, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 217, "key.name": "filter(_:)", "key.namelength": 23, "key.nameoffset": 3535, "key.offset": 3530, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.parsed_declaration": "public func filter(_ point: PointT) -> PointT", "key.parsed_scope.end": 107, "key.parsed_scope.start": 102, "key.substructure": [{"key.annotated_decl": "<Declaration>let smoothingPoint: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>smoothingPoint</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 60, "key.name": "smoothingPoint", "key.namelength": 14, "key.nameoffset": 3579, "key.offset": 3575, "key.parsed_declaration": "let smoothingPoint = point.buildSmoothingPoint(count: count)", "key.parsed_scope.end": 103, "key.parsed_scope.start": 103, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF14smoothingPointL_AA09SmoothingH0Cvp"}, {"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3644, "key.offset": 3640, "key.parsed_declaration": "let result = addAndProcessDataPoint(dataPoint: smoothingPoint)", "key.parsed_scope.end": 104, "key.parsed_scope.start": 104, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF6resultL_AA14SmoothingPointCvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (PointT) -> PointT", "key.typeusr": "$syxxcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func applyFilter(pointToProcess: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>, buffer: [<Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>]) -&gt; <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4247}], "key.bodylength": 560, "key.bodyoffset": 4347, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>applyFilter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>pointToProcess</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 654, "key.name": "applyFilter(pointToProcess:buffer:)", "key.namelength": 69, "key.nameoffset": 4259, "key.offset": 4254, "key.parsed_declaration": "public func applyFilter(pointToProcess: SmoothingPoint, buffer: [SmoothingPoint]) -> SmoothingPoint", "key.parsed_scope.end": 146, "key.parsed_scope.start": 125, "key.substructure": [{"key.annotated_decl": "<Declaration>let nr: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nr</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "nr", "key.namelength": 2, "key.nameoffset": 4357, "key.offset": 4353, "key.parsed_declaration": "let nr = Int(params[\"rightScan\"]!)", "key.parsed_scope.end": 127, "key.parsed_scope.start": 127, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF2nrL_Sivp"}, {"key.annotated_decl": "<Declaration>let nl: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nl</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "nl", "key.namelength": 2, "key.nameoffset": 4396, "key.offset": 4392, "key.parsed_declaration": "let nl = Int(params[\"leftScan\"]!)", "key.parsed_scope.end": 128, "key.parsed_scope.start": 128, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF2nlL_Sivp"}, {"key.annotated_decl": "<Declaration>let newPoint: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newPoint</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "newPoint", "key.namelength": 8, "key.nameoffset": 4434, "key.offset": 4430, "key.parsed_declaration": "let newPoint = SmoothingPoint()", "key.parsed_scope.end": 129, "key.parsed_scope.start": 129, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF03newL0L_AHvp"}, {"key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 22, "key.name": "size", "key.namelength": 4, "key.nameoffset": 4515, "key.offset": 4511, "key.parsed_declaration": "let size = nl + nr + 1", "key.parsed_scope.end": 131, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC4sizeSivp\">size</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF4sizeL_Sivp"}, {"key.annotated_decl": "<Declaration>var tempX: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempX</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempX", "key.namelength": 5, "key.nameoffset": 4542, "key.offset": 4538, "key.parsed_declaration": "var tempX = 0.0", "key.parsed_scope.end": 132, "key.parsed_scope.start": 132, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempXL_Sdvp"}, {"key.annotated_decl": "<Declaration>var tempY: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempY</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempY", "key.namelength": 5, "key.nameoffset": 4562, "key.offset": 4558, "key.parsed_declaration": "var tempY = 0.0", "key.parsed_scope.end": 133, "key.parsed_scope.start": 133, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempYL_Sdvp"}, {"key.annotated_decl": "<Declaration>var tempZ: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempZ</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempZ", "key.namelength": 5, "key.nameoffset": 4582, "key.offset": 4578, "key.parsed_declaration": "var tempZ = 0.0", "key.parsed_scope.end": 134, "key.parsed_scope.start": 134, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempZL_Sdvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (SmoothingPoint, [SmoothingPoint]) -> SmoothingPoint", "key.typeusr": "$s14pointToProcess6buffer11FritzVision14SmoothingPointCAE_SayAEGtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func shift(index: <Type usr=\"s:Si\">Int</Type>, input: [<Type usr=\"s:Sd\">Double</Type>]) -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6571}], "key.bodylength": 103, "key.bodyoffset": 6630, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shift</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>input</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 156, "key.name": "shift(index:input:)", "key.namelength": 34, "key.nameoffset": 6583, "key.offset": 6578, "key.parsed_declaration": "public func shift(index: Int, input: [Double]) -> [Double]", "key.parsed_scope.end": 213, "key.parsed_scope.start": 209, "key.substructure": [{"key.annotated_decl": "<Declaration>var output: <Type usr=\"s:s10ArraySliceV\">ArraySlice</Type>&lt;<Type usr=\"s:Sd\">Double</Type>&gt;</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type><ref.struct usr=\"s:s10ArraySliceV\">ArraySlice</ref.struct>&lt;<ref.struct usr=\"s:Sd\">Double</ref.struct>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "output", "key.namelength": 6, "key.nameoffset": 6639, "key.offset": 6635, "key.parsed_declaration": "var output = input[index..<input.count]", "key.parsed_scope.end": 210, "key.parsed_scope.start": 210, "key.typename": "ArraySlice<Double>", "key.typeusr": "$ss10ArraySliceVySdGD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC5shift5index5inputSaySdGSi_AGtF6outputL_s10ArraySliceVySdGvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (Int, [Double]) -> [Double]", "key.typeusr": "$s5index5inputSaySdGSi_ACtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC5shift5index5inputSaySdGSi_AGtF"}], "key.typename": "SavitzkyGolayFilter<PointT>.Type", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterCyxGmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4104, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class SmoothingPoint</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1024}], "key.bodylength": 3049, "key.bodyoffset": 1053, "key.doc.column": 14, "key.doc.comment": "Data object representing a set of sensor readings from a single point in time.", "key.doc.declaration": "public class SmoothingPoint", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift\" line=\"16\" column=\"14\"><Name>SmoothingPoint</Name><USR>s:11FritzVision14SmoothingPointC</USR><Declaration>public class SmoothingPoint</Declaration><CommentParts><Abstract><Para>Data object representing a set of sensor readings from a single point in time.</Para></Abstract></CommentParts></Class>", "key.doc.line": 16, "key.doc.name": "SmoothingPoint", "key.doc.type": "Class", "key.doclength": 87, "key.docoffset": 936, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SmoothingPoint</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 3072, "key.name": "SmoothingPoint", "key.namelength": 14, "key.nameoffset": 1037, "key.offset": 1031, "key.parsed_declaration": "public class SmoothingPoint", "key.parsed_scope.end": 154, "key.parsed_scope.start": 16, "key.runtime_name": "_TtC4main14SmoothingPoint", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1057}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xAccel", "key.namelength": 6, "key.nameoffset": 1068, "key.offset": 1064, "key.parsed_declaration": "public var xAccel = 0.0", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6xAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1083}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yAccel", "key.namelength": 6, "key.nameoffset": 1094, "key.offset": 1090, "key.parsed_declaration": "public var yAccel = 0.0", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6yAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var zAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1109}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>zAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "zAccel", "key.namelength": 6, "key.nameoffset": 1120, "key.offset": 1116, "key.parsed_declaration": "public var zAccel = 0.0", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6zAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(dataX: <Type usr=\"s:Sd\">Double</Type>, dataY: <Type usr=\"s:Sd\">Double</Type>, dataZ: <Type usr=\"s:Sd\">Double</Type>, count: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1257}], "key.bodylength": 98, "key.bodyoffset": 1327, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataX</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataY</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataZ</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 162, "key.name": "init(dataX:dataY:dataZ:count:)", "key.namelength": 61, "key.nameoffset": 1264, "key.offset": 1264, "key.parsed_declaration": "public init(dataX: Double, dataY: Double, dataZ: Double, count: Int)", "key.parsed_scope.end": 34, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14SmoothingPointCACycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "(SmoothingPoint.Type) -> (Double, Double, Double, Int) -> SmoothingPoint", "key.typeusr": "$s5dataX0A1Y0A1Z5count11FritzVision14SmoothingPointCSd_S2dSitcD", "key.usr": "s:11FritzVision14SmoothingPointC5dataX0E1Y0E1Z5countACSd_S2dSitcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1430}], "key.bodylength": 82, "key.bodyoffset": 1445, "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1437, "key.offset": 1437, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 41, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14SmoothingPointC5dataX0E1Y0E1Z5countACSd_S2dSitcfc\">init(dataX:dataY:dataZ:count:)</RelatedName>"}], "key.typename": "(SmoothingPoint.Type) -> () -> SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCycD", "key.usr": "s:11FritzVision14SmoothingPointCACycfc"}], "key.typename": "SmoothingPoint.Type", "key.typeusr": "$s11FritzVision14SmoothingPointCmD", "key.usr": "s:11FritzVision14SmoothingPointC"}]}}, {"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1268, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol SmoothingPointable : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 299}], "key.bodylength": 90, "key.bodyoffset": 346, "key.doc.column": 17, "key.doc.comment": "The methods used to initialize and convert points to and from SmoothingPoints used\nin Savitzky-Golay filter.", "key.doc.declaration": "public protocol SmoothingPointable : PointType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift\" line=\"14\" column=\"17\"><Name>SmoothingPointable</Name><USR>s:11FritzVision18SmoothingPointableP</USR><Declaration>public protocol SmoothingPointable : PointType</Declaration><CommentParts><Abstract><Para>The methods used to initialize and convert points to and from SmoothingPoints used in Savitzky-Golay filter.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "SmoothingPointable", "key.doc.type": "Class", "key.doclength": 117, "key.docoffset": 182, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 335}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SmoothingPointable</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 131, "key.name": "SmoothingPointable", "key.namelength": 18, "key.nameoffset": 315, "key.offset": 306, "key.parsed_declaration": "public protocol SmoothingPointable: PointType", "key.parsed_scope.end": 17, "key.parsed_scope.start": 14, "key.runtime_name": "_TtP4main18SmoothingPointable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ point: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 29, "key.name": "init(_:)", "key.namelength": 29, "key.nameoffset": 349, "key.offset": 349, "key.parsed_declaration": "init(_ point: SmoothingPoint)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.substructure": [], "key.typename": "<Self where Self : SmoothingPointable> (Self.Type) -> (SmoothingPoint) -> Self", "key.typeusr": "$syx11FritzVision14SmoothingPointCcD", "key.usr": "s:11FritzVision18SmoothingPointablePyxAA0C5PointCcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func buildSmoothingPoint(count: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildSmoothingPoint</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 54, "key.name": "buildSmoothingPoint(count:)", "key.namelength": 31, "key.nameoffset": 386, "key.offset": 381, "key.parsed_declaration": "func buildSmoothingPoint(count: Int) -> SmoothingPoint", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "<Self where Self : SmoothingPointable> (Self) -> (Int) -> SmoothingPoint", "key.typeusr": "$s5count11FritzVision14SmoothingPointCSi_tcD", "key.usr": "s:11FritzVision18SmoothingPointableP05buildC5Point5countAA0cF0CSi_tF"}], "key.typename": "SmoothingPointable.Protocol", "key.typeusr": "$s11FritzVision18SmoothingPointable_pmD", "key.usr": "s:11FritzVision18SmoothingPointableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/CoreMLImagePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1325, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/CoreMLOrVisionFrameworkPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1562, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/CoreMLPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1311, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1404, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol DownloadableModel : <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 194}], "key.bodylength": 255, "key.bodyoffset": 280, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 253}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DownloadableModel</decl.name> : <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzMLModelInitializable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 311, "key.name": "DownloadableModel", "key.namelength": 17, "key.nameoffset": 234, "key.offset": 225, "key.parsed_declaration": "public protocol DownloadableModel: FritzMLModelInitializable", "key.parsed_scope.end": 21, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main17DownloadableModel_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 333, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 295, "key.offset": 284, "key.parsed_declaration": "static var modelConfig: FritzModelConfiguration", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 387, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 50, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 354, "key.offset": 343, "key.parsed_declaration": "static var managedModel: FritzManagedModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 444, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 57, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 408, "key.offset": 397, "key.parsed_declaration": "static var wifiRequiredForModelDownload: Bool", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision17DownloadableModelP4Selfxmfp\">Self</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision17DownloadableModelP4Selfxmfp\">Self</ref.generic_type_param>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 76, "key.name": "fetchModel(completionHandler:)", "key.namelength": 64, "key.nameoffset": 470, "key.offset": 458, "key.parsed_declaration": "static func fetchModel(completionHandler: @escaping (Self?, Error?) -> Void)", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.substructure": [], "key.typename": "<Self where Self : DownloadableModel> (Self.Type) -> (@escaping (Self?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryyxSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.typename": "DownloadableModel.Protocol", "key.typeusr": "$s11FritzVision17DownloadableModel_pmD", "key.usr": "s:11FritzVision17DownloadableModelP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2549, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzVisionModelTagError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 202}], "key.bodylength": 72, "key.bodyoffset": 247, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 240}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionModelTagError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 111, "key.name": "FritzVisionModelTagError", "key.namelength": 24, "key.nameoffset": 214, "key.offset": 209, "key.parsed_declaration": "public enum FritzVisionModelTagError: Error", "key.parsed_scope.end": 15, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 252, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case loadingModelsFailed(errors: [<Type usr=\"s:s5ErrorP\">Error</Type>])</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingModelsFailed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>errors</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "loadingModelsFailed(errors:)", "key.namelength": 36, "key.nameoffset": 257, "key.offset": 257, "key.parsed_declaration": "case loadingModelsFailed(errors: [Error])", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzVisionModelTagError.Type) -> ([Error]) -> FritzVisionModelTagError", "key.typeusr": "$sy11FritzVision0aB13ModelTagErrorOSays0E0_pG_tcACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO19loadingModelsFailedyACSays0E0_pG_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 298, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case noModelReturned</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noModelReturned</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "noModelReturned", "key.namelength": 15, "key.nameoffset": 303, "key.offset": 303, "key.parsed_declaration": "case noModelReturned", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(FritzVisionModelTagError.Type) -> FritzVisionModelTagError", "key.typeusr": "$sy11FritzVision0aB13ModelTagErrorOACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO02noC8ReturnedyA2CmF"}]}], "key.typename": "FritzVisionModelTagError.Type", "key.typeusr": "$s11FritzVision0aB13ModelTagErrorOmD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 423, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzMLModelInitializable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 272}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 248}], "key.bodylength": 106, "key.bodyoffset": 315, "key.doc.column": 17, "key.doc.comment": "Model that can be initialized purely from a FritzMLModel.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol FritzMLModelInitializable", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift\" line=\"13\" column=\"17\"><Name>FritzMLModelInitializable</Name><USR>s:11FritzVision0A20MLModelInitializableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol FritzMLModelInitializable</Declaration><CommentParts><Abstract><Para>Model that can be initialized purely from a FritzMLModel.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzMLModelInitializable", "key.doc.type": "Class", "key.doclength": 62, "key.docoffset": 186, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzMLModelInitializable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 143, "key.name": "FritzMLModelInitializable", "key.namelength": 25, "key.nameoffset": 288, "key.offset": 279, "key.parsed_declaration": "public protocol FritzMLModelInitializable", "key.parsed_scope.end": 18, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main25FritzMLModelInitializable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 32, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 319, "key.offset": 319, "key.parsed_declaration": "init(model: FritzMLModel) throws", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzMLModelInitializable> (Self.Type) -> (FritzMLModel) throws -> Self", "key.typeusr": "$s5modelx17FritzManagedModel0B7MLModelC_tKcD", "key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>) throws</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 355, "key.offset": 355, "key.parsed_declaration": "init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc\">init(model:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzMLModelInitializable> (Self.Type) -> (FritzMLModel, FritzManagedModel) throws -> Self", "key.typeusr": "$s5model12managedModelx012FritzManagedC00D7MLModelC_A2CCtKcD", "key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.typename": "FritzMLModelInitializable.Protocol", "key.typeusr": "$s11FritzVision0A20MLModelInitializable_pmD", "key.usr": "s:11FritzVision0A20MLModelInitializableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 471, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzManagedModelType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 309}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 285}], "key.bodylength": 121, "key.bodyoffset": 348, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzManagedModelType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 154, "key.name": "FritzManagedModelType", "key.namelength": 21, "key.nameoffset": 325, "key.offset": 316, "key.parsed_declaration": "public protocol FritzManagedModelType", "key.parsed_scope.end": 27, "key.parsed_scope.start": 20, "key.runtime_name": "_TtP4main21FritzManagedModelType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 389, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 356, "key.offset": 352, "key.parsed_declaration": "var managedModel: FritzManagedModel", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var metadata: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 431, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 403, "key.offset": 399, "key.parsed_declaration": "var metadata: [String:String]?", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP8metadataSDyS2SGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 462, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 445, "key.offset": 441, "key.parsed_declaration": "var tags: [String]?", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP4tagsSaySSGSgvp"}], "key.typename": "FritzManagedModelType.Protocol", "key.typeusr": "$s11FritzVision0A16ManagedModelType_pmD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 545, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictorOptionType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 185}], "key.bodylength": 10, "key.bodyoffset": 227, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictorOptionType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 46, "key.name": "FritzPredictorOptionType", "key.namelength": 24, "key.nameoffset": 201, "key.offset": 192, "key.parsed_declaration": "public protocol FritzPredictorOptionType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main24FritzPredictorOptionType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init()</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 6, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 230, "key.offset": 230, "key.parsed_declaration": "init()", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "<Self where Self : FritzPredictorOptionType> (Self.Type) -> () -> Self", "key.typeusr": "$sxycD", "key.usr": "s:11FritzVision0A19PredictorOptionTypePxycfc"}], "key.typename": "FritzPredictorOptionType.Protocol", "key.typeusr": "$s11FritzVision0A19PredictorOptionType_pmD", "key.usr": "s:11FritzVision0A19PredictorOptionTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzImageOptions : <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 281}], "key.bodylength": 201, "key.bodyoffset": 342, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 316}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzImageOptions</decl.name> : <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictorOptionType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 256, "key.name": "FritzImageOptions", "key.namelength": 17, "key.nameoffset": 297, "key.offset": 288, "key.parsed_declaration": "public protocol FritzImageOptions: FritzPredictorOptionType", "key.parsed_scope.end": 26, "key.parsed_scope.start": 17, "key.runtime_name": "_TtP4main17FritzImageOptions_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 386, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 46, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 357, "key.offset": 346, "key.parsed_declaration": "static var defaults: FritzImageOptions", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 450, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 60, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 400, "key.offset": 396, "key.parsed_declaration": "var imageCropAndScaleOption: FritzVisionCropAndScale", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 493, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 464, "key.offset": 460, "key.parsed_declaration": "var forceCoreMLPrediction: Bool", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 536, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 507, "key.offset": 503, "key.parsed_declaration": "var forceVisionPrediction: Bool", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.typename": "FritzImageOptions.Protocol", "key.typeusr": "$s11FritzVision0A12ImageOptions_pmD", "key.usr": "s:11FritzVision0A12ImageOptionsP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1767, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictable : <Type usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 473}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 449}], "key.bodylength": 376, "key.bodyoffset": 530, "key.doc.comment": "Public protocol exposing main interface for Fritz predictors.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 507}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictable</decl.name> : <ref.protocol usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzManagedModelType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 427, "key.name": "FritzPredictable", "key.namelength": 16, "key.nameoffset": 489, "key.offset": 480, "key.parsed_declaration": "public protocol FritzPredictable: FritzManagedModelType", "key.parsed_scope.end": 25, "key.parsed_scope.start": 16, "key.runtime_name": "_TtP4main16FritzPredictable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionInput : <Type usr=\"s:11FritzVision0A15PredictionInputP\">FritzPredictionInput</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionInput</decl.name> : <ref.protocol usr=\"s:11FritzVision0A15PredictionInputP\">FritzPredictionInput</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 52, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 549, "key.offset": 534, "key.parsed_declaration": "associatedtype PredictionInput: FritzPredictionInput", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Self.PredictionInput.Type", "key.typeusr": "$s15PredictionInput11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype ModelOptions : <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>ModelOptions</decl.name> : <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 604, "key.offset": 589, "key.parsed_declaration": "associatedtype ModelOptions: FritzPredictorOptionType", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Self.ModelOptions.Type", "key.typeusr": "$s12ModelOptions11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionResult : <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionResult</decl.name> : <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 54, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 660, "key.offset": 645, "key.parsed_declaration": "associatedtype PredictionResult: FritzPredictionResult", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Self.PredictionResult.Type", "key.typeusr": "$s16PredictionResult11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 110, "key.name": "predict(_:options:completion:)", "key.namelength": 105, "key.nameoffset": 708, "key.offset": 703, "key.parsed_declaration": "func predict(_ input: PredictionInput, options: ModelOptions, completion: (PredictionResult?, Error?) -> Void)", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions) throws -&gt; PredictionResult</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzPredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony15PredictionInputQz_12ModelOptionsQzy0C6ResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>) throws -&gt; <Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "predict(_:options:)", "key.namelength": 56, "key.nameoffset": 822, "key.offset": 817, "key.parsed_declaration": "func predict(_ input: PredictionInput, options: ModelOptions) throws -> PredictionResult", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF\">predict(_:options:completion:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzPredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions) throws -> Self.PredictionResult", "key.typeusr": "$s_7options16PredictionResultQz0B5InputQz_12ModelOptionsQztKcD", "key.usr": "s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF"}], "key.typename": "FritzPredictable.Protocol", "key.typeusr": "$s11FritzVision0A11Predictable_pmD", "key.usr": "s:11FritzVision0A11PredictableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictionInput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 305, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictionInput</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 188}], "key.bodylength": 0, "key.bodyoffset": 226, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictionInput.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictionInput</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 32, "key.name": "FritzPredictionInput", "key.namelength": 20, "key.nameoffset": 204, "key.offset": 195, "key.parsed_declaration": "public protocol FritzPredictionInput", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main20FritzPredictionInput_", "key.typename": "FritzPredictionInput.Protocol", "key.typeusr": "$s11FritzVision0A15PredictionInput_pmD", "key.usr": "s:11FritzVision0A15PredictionInputP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 386, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictionResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 189}], "key.bodylength": 0, "key.bodyoffset": 228, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzPredictionResult.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictionResult</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 33, "key.name": "FritzPredictionResult", "key.namelength": 21, "key.nameoffset": 205, "key.offset": 196, "key.parsed_declaration": "public protocol FritzPredictionResult", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main21FritzPredictionResult_", "key.typename": "FritzPredictionResult.Protocol", "key.typeusr": "$s11FritzVision0A16PredictionResult_pmD", "key.usr": "s:11FritzVision0A16PredictionResultP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 514, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzVisionImagePredictable : <Type usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</Type> where <Type usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</Type>.ModelOptions : <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type>, <Type usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</Type>.PredictionInput : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 261}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 237}], "key.bodylength": 115, "key.bodyoffset": 397, "key.doc.column": 17, "key.doc.comment": "Able to run predictions on a FritzVisionImage", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol FritzVisionImagePredictable : FritzPredictable where Self.ModelOptions : FritzImageOptions, Self.PredictionInput : FritzVision.FritzVisionImage", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift\" line=\"14\" column=\"17\"><Name>FritzVisionImagePredictable</Name><USR>s:11FritzVision0aB16ImagePredictableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol FritzVisionImagePredictable : FritzPredictable where Self.ModelOptions : FritzImageOptions, Self.PredictionInput : FritzVision.FritzVisionImage</Declaration><CommentParts><Abstract><Para>Able to run predictions on a FritzVisionImage</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionImagePredictable", "key.doc.type": "Class", "key.doclength": 50, "key.docoffset": 187, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 306}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzVisionImagePredictable</decl.name> : <ref.protocol usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</ref.generic_type_param>.ModelOptions : <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</ref.generic_type_param>.PredictionInput : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.generic_type_requirement></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 245, "key.name": "FritzVisionImagePredictable", "key.namelength": 27, "key.nameoffset": 277, "key.offset": 268, "key.parsed_declaration": "public protocol FritzVisionImagePredictable: FritzPredictable where PredictionInput: FritzVisionImage, ModelOptions: FritzImageOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 14, "key.runtime_name": "_TtP4main27FritzVisionImagePredictable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 110, "key.name": "predict(_:options:completion:)", "key.namelength": 105, "key.nameoffset": 406, "key.offset": 401, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "func predict(_ input: PredictionInput, options: ModelOptions, completion: (PredictionResult?, Error?) -> Void)", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions) throws -&gt; PredictionResult</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzVisionImagePredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony15PredictionInputQz_12ModelOptionsQzy0C6ResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}], "key.typename": "FritzVisionImagePredictable.Protocol", "key.typeusr": "$s11FritzVision0aB16ImagePredictable_pmD", "key.usr": "s:11FritzVision0aB16ImagePredictableP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/PackagedModelType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 398, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PackagedModelType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 324}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 300}], "key.bodylength": 37, "key.bodyoffset": 359, "key.doc.column": 17, "key.doc.comment": "The methods adopted by the object used to instantiate a predictor that\nincludes a model in the app bundle.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol PackagedModelType", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/Protocols/PackagedModelType.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/Protocols/PackagedModelType.swift\" line=\"14\" column=\"17\"><Name>PackagedModelType</Name><USR>s:11FritzVision17PackagedModelTypeP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol PackagedModelType</Declaration><CommentParts><Abstract><Para>The methods adopted by the object used to instantiate a predictor that includes a model in the app bundle.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "PackagedModelType", "key.doc.type": "Class", "key.doclength": 115, "key.docoffset": 185, "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/PackagedModelType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PackagedModelType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 66, "key.name": "PackagedModelType", "key.namelength": 17, "key.nameoffset": 340, "key.offset": 331, "key.parsed_declaration": "public protocol PackagedModelType", "key.parsed_scope.end": 18, "key.parsed_scope.start": 14, "key.runtime_name": "_TtP4main17PackagedModelType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(with model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>?)</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/Protocols/PackagedModelType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 31, "key.name": "init(with:)", "key.namelength": 31, "key.nameoffset": 363, "key.offset": 363, "key.parsed_declaration": "init(with model: FritzMLModel?)", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "<Self where Self : PackagedModelType> (Self.Type) -> (FritzMLModel?) -> Self", "key.typeusr": "$s4withx17FritzManagedModel0B7MLModelCSg_tcD", "key.usr": "s:11FritzVision17PackagedModelTypeP4withx0a7ManagedD00A7MLModelCSg_tcfc"}], "key.typename": "PackagedModelType.Protocol", "key.typeusr": "$s11FritzVision17PackagedModelType_pmD", "key.usr": "s:11FritzVision17PackagedModelTypeP"}]}}, {"/Users/vagrant/git/Source/FritzVision/Protocols/VisionFrameworkPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2096, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10429, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FlexibleModelDimensions) public class FlexibleModelDimensions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 389}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 220}], "key.bodylength": 333, "key.bodyoffset": 437, "key.doc.comment": "Specify dimensions for how to run flexible model. Calling `init` with no arguments will cause the model to run on original file size.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 427}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FlexibleModelDimensions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FlexibleModelDimensions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 375, "key.name": "FlexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 402, "key.offset": 396, "key.parsed_declaration": "public class FlexibleModelDimensions: NSObject", "key.parsed_scope.end": 35, "key.parsed_scope.start": 16, "key.runtime_name": "FlexibleModelDimensions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let size: <Type usr=\"c:@S@CGSize\">CGSize</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 443}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "size", "key.namelength": 4, "key.nameoffset": 454, "key.offset": 450, "key.parsed_declaration": "public let size: CGSize?", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "CGSize?", "key.typeusr": "$sSo6CGSizeVSgD", "key.usr": "s:11FritzVision23FlexibleModelDimensionsC4sizeSo6CGSizeVSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) override public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 496}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 487}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 473}], "key.bodylength": 40, "key.bodyoffset": 511, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 49, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 503, "key.offset": 503, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "override public init()", "key.parsed_scope.end": 24, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> () -> FlexibleModelDimensions", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCycD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSize:) public init(size: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 581}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 558}], "key.bodylength": 24, "key.bodyoffset": 608, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSize:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 45, "key.name": "init(size:)", "key.namelength": 18, "key.nameoffset": 588, "key.offset": 588, "key.parsed_declaration": "public init(size: CGSize)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (CGSize) -> FlexibleModelDimensions", "key.typeusr": "$s4size11FritzVision23FlexibleModelDimensionsCSo6CGSizeV_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithWidth:withHeight:) public init(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 674}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 639}], "key.bodylength": 56, "key.bodyoffset": 712, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithWidth:withHeight:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "init(width:height:)", "key.namelength": 29, "key.nameoffset": 681, "key.offset": 681, "key.parsed_declaration": "public init(width: Int, height: Int)", "key.parsed_scope.end": 34, "key.parsed_scope.start": 32, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (Int, Int) -> FlexibleModelDimensions", "key.typeusr": "$s5width6height11FritzVision23FlexibleModelDimensionsCSi_SitcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:"}], "key.typename": "FlexibleModelDimensions.Type", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModelOptions) public final class FritzVisionFlexibleStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1397}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1390}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 1346}], "key.bodylength": 671, "key.bodyoffset": 1476, "key.doc.column": 20, "key.doc.comment": "Options for how to run flexible style transfer model.", "key.doc.declaration": "@objc(FritzVisionFlexibleStyleModelOptions) public final class FritzVisionFlexibleStyleModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"48\" column=\"20\"><Name>FritzVisionFlexibleStyleModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions</USR><Declaration>@objc(FritzVisionFlexibleStyleModelOptions) public final class FritzVisionFlexibleStyleModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for how to run flexible style transfer model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 48, "key.doc.name": "FritzVisionFlexibleStyleModelOptions", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 1288, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1447}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1457}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 745, "key.name": "FritzVisionFlexibleStyleModelOptions", "key.namelength": 36, "key.nameoffset": 1409, "key.offset": 1403, "key.parsed_declaration": "public final class FritzVisionFlexibleStyleModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 63, "key.parsed_scope.start": 48, "key.runtime_name": "FritzVisionFlexibleStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1546}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1540}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default option is .scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"51\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default option is .scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 51, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 1482, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 1557, "key.offset": 1553, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1804}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1798}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"55\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 1623, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1815, "key.offset": 1811, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1859}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1853}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1870, "key.offset": 1866, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var flexibleModelDimensions: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1975}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1969}], "key.doc.column": 20, "key.doc.comment": "Set dimensions for output result of flexible model.", "key.doc.declaration": "@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"60\" column=\"20\"><Name>flexibleModelDimensions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)flexibleModelDimensions</USR><Declaration>@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions</Declaration><CommentParts><Abstract><Para>Set dimensions for output result of flexible model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "flexibleModelDimensions", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 1911, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flexibleModelDimensions</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 72, "key.name": "flexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 1986, "key.offset": 1982, "key.parsed_declaration": "@objc public var flexibleModelDimensions: FlexibleModelDimensions = .mediumResolution", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FlexibleModelDimensions", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)flexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2060}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 79, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 2078, "key.offset": 2067, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionFlexibleStyleModelOptions()", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB25FlexibleStyleModelOptionsC8defaultsAA0a5ImageF0_pvpZ"}], "key.typename": "FritzVisionFlexibleStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB25FlexibleStyleModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2402}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 2365}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2341}], "key.bodylength": 6451, "key.bodyoffset": 2526, "key.doc.column": 14, "key.doc.comment": "Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over `FritzVisionStyleTransferModel` to produce stylized images with customizable output sizes.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLImagePredictor, FritzMLModelInitializable, FritzStylePredictor", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"69\" column=\"14\"><Name>FritzVisionFlexibleStyleModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLImagePredictor, FritzMLModelInitializable, FritzStylePredictor</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over <codeVoice>FritzVisionStyleTransferModel</codeVoice> to produce stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 69, "key.doc.name": "FritzVisionFlexibleStyleModel", "key.doc.type": "Class", "key.doclength": 190, "key.docoffset": 2151, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2446}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 20, "key.offset": 2456}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 2478}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 2505}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLImagePredictor"}, {"key.name": "FritzMLModelInitializable"}, {"key.name": "FritzStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 6569, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 2415, "key.offset": 2409, "key.parsed_declaration": "public class FritzVisionFlexibleStyleModel: NSObject, CoreMLImagePredictor, FritzMLModelInitializable, FritzStylePredictor", "key.parsed_scope.end": 217, "key.parsed_scope.start": 69, "key.runtime_name": "FritzVisionFlexibleStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2529}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2546, "key.offset": 2536, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2583}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 61, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2600, "key.offset": 2590, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionFlexibleStyleModelOptions", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "FritzVisionFlexibleStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB25FlexibleStyleModelOptionsCmD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC0E7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>.PredictionResult = <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2654}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2671, "key.offset": 2661, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = CVPixelBuffer", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "CVBuffer.Type", "key.typeusr": "$sSo11CVBufferRefamD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2744}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2738}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2755, "key.offset": 2751, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3750}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3743}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3709}], "key.bodylength": 330, "key.bodyoffset": 3797, "key.doc.column": 22, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"98\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 98, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 3570, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 366, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 3762, "key.offset": 3762, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 107, "key.parsed_scope.start": 98, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3997, "key.offset": 3997, "key.parsed_declaration": "} catch let error as FritzModelSpecificationError", "key.parsed_scope.end": 102, "key.parsed_scope.start": 102, "key.typename": "FritzModelSpecificationError", "key.typeusr": "$s11FritzVision0A23ModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC5modelAC0a7ManagedE0015SwiftIdentifiedE0_p_tcfc5errorL_AA0aE18SpecificationErrorOvp"}], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionFlexibleStyleModel", "key.typeusr": "$s5model11FritzVision0bC18FlexibleStyleModelC0b7ManagedF0015SwiftIdentifiedF0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4325}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 4316}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4279}], "key.bodylength": 229, "key.bodyoffset": 4366, "key.doc.column": 19, "key.doc.comment": "Initialize FritzVisionFlexibleStyleModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"114\" column=\"19\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:</USR><Declaration>@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzVisionFlexibleStyleModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 114, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 143, "key.docoffset": 4134, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 264, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4332, "key.offset": 4332, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel) throws", "key.parsed_scope.end": 118, "key.parsed_scope.start": 114, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> (FritzMLModel) throws -> FritzVisionFlexibleStyleModel", "key.typeusr": "$s5model11FritzVision0bC18FlexibleStyleModelC0b7ManagedF00B7MLModelC_tKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4856}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 4847}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 4797}], "key.bodylength": 121, "key.bodyoffset": 4930, "key.doc.column": 19, "key.doc.comment": "Initialize FritzVisionFlexibleStyleModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.\n  - managedModel: FritzManagedModel to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"126\" column=\"19\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:managedModel:error:</USR><Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzVisionFlexibleStyleModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter><Parameter><Name>managedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzManagedModel to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 126, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}, {"discussion": [{"Para": "FritzManagedModel to use."}], "name": "managedModel"}], "key.doc.type": "Function", "key.doclength": 193, "key.docoffset": 4602, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:managedModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 189, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 4863, "key.offset": 4863, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.parsed_scope.end": 130, "key.parsed_scope.start": 126, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> (FritzMLModel, FritzManagedModel) throws -> FritzVisionFlexibleStyleModel", "key.typeusr": "$s5model12managedModel11FritzVision0de13FlexibleStyleC0C0d7ManagedC00D7MLModelC_A2FCtKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:managedModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</Type> = .init(), completion: (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5625}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 5588}], "key.bodylength": 159, "key.bodyoffset": 5776, "key.doc.column": 15, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"143\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 143, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 302, "key.docoffset": 5284, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 304, "key.name": "predict(_:options:completion:)", "key.namelength": 137, "key.nameoffset": 5637, "key.offset": 5632, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 146, "key.parsed_scope.start": 143, "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel) -> (FritzVisionImage, FritzVisionFlexibleStyleModelOptions, (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD25FlexibleStyleModelOptionsCySo11CVBufferRefaSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)predict:options:completion:"}], "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$s11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9319}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 9295}], "key.bodylength": 1060, "key.bodyoffset": 9367, "key.doc.column": 14, "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLImagePredictor, FritzMLModelInitializable, FritzStylePredictor", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"69\" column=\"14\"><Name>FritzVisionFlexibleStyleModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLImagePredictor, FritzMLModelInitializable, FritzStylePredictor</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over <codeVoice>FritzVisionStyleTransferModel</codeVoice> to produce stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 69, "key.doc.name": "FritzVisionFlexibleStyleModel", "key.doc.type": "Class", "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1102, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 9336, "key.offset": 9326, "key.parsed_declaration": "public extension FritzVisionFlexibleStyleModel", "key.parsed_scope.end": 251, "key.parsed_scope.start": 233, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [<Type usr=\"s:SS\">String</Type>], wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false, completionHandler: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 82, "key.offset": 9957}], "key.bodylength": 202, "key.bodyoffset": 10220, "key.doc.column": 15, "key.doc.comment": "Fetch and load Style Models for the given tags.\n\nNote that this instantiates all models which could cause memory pressure if you are loading many models.\nIf you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.\n\n- Parameters:\n  - tags: List of tags to load models for.\n  - wifiRequiredForModelDownload: If true, client must be connected to a wifi network to download a model. Default is false.\n  - completionHandler: Completion handler with instantiated FritzVisionStyleModels", "key.doc.declaration": "@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> Void)", "key.doc.discussion": [{"Para": "Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift\" line=\"245\" column=\"15\"><Name>fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:</USR><Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch and load Style Models for the given tags.</Para></Abstract><Parameters><Parameter><Name>tags</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of tags to load models for.</Para></Discussion></Parameter><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true, client must be connected to a wifi network to download a model. Default is false.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler with instantiated FritzVisionStyleModels</Para></Discussion></Parameter></Parameters><Discussion><Para>Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.</Para></Discussion></CommentParts></Function>", "key.doc.line": 245, "key.doc.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "List of tags to load models for."}], "name": "tags"}, {"discussion": [{"Para": "If true, client must be connected to a wifi network to download a model. Default is false."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Completion handler with instantiated FritzVisionStyleModels"}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 582, "key.docoffset": 9373, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchStyleModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 381, "key.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 164, "key.nameoffset": 10054, "key.offset": 10042, "key.parsed_declaration": "static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> Void)", "key.parsed_scope.end": 249, "key.parsed_scope.start": 245, "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> ([String], Bool, @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> ()) -> ()", "key.typeusr": "$s4tags28wifiRequiredForModelDownload17completionHandlerySaySSG_SbySay11FritzVision0ij13FlexibleStyleE0CGSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:"}], "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$s11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}]}}, {"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8298, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModelOptions) public final class FritzVisionStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 245}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 238}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 202}], "key.bodylength": 1131, "key.bodyoffset": 316, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 287}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 297}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1197, "key.name": "FritzVisionStyleModelOptions", "key.namelength": 28, "key.nameoffset": 257, "key.offset": 251, "key.parsed_declaration": "public final class FritzVisionStyleModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 37, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 357}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 351}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"18\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 322, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 368, "key.offset": 364, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 615}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 609}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"22\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 434, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 626, "key.offset": 622, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1190}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1184}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"31\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 664, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1201, "key.offset": 1197, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var resizeOutputToInputDimensions: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1308}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1302}], "key.doc.column": 20, "key.doc.comment": "Resize the output to match the FritzVisionImage size.", "key.doc.declaration": "@objc public var resizeOutputToInputDimensions: Bool", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"34\" column=\"20\"><Name>resizeOutputToInputDimensions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)resizeOutputToInputDimensions</USR><Declaration>@objc public var resizeOutputToInputDimensions: Bool</Declaration><CommentParts><Abstract><Para>Resize the output to match the FritzVisionImage size.</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "resizeOutputToInputDimensions", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 1242, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resizeOutputToInputDimensions</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "resizeOutputToInputDimensions", "key.namelength": 29, "key.nameoffset": 1319, "key.offset": 1315, "key.parsed_declaration": "@objc public var resizeOutputToInputDimensions: Bool = false", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)resizeOutputToInputDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1368}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 1386, "key.offset": 1375, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionStyleModelOptions()", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17StyleModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}], "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzStylePredictor : <Type usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2529}], "key.bodylength": 0, "key.bodyoffset": 2584, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 2566}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzStylePredictor</decl.name> : <ref.protocol usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 49, "key.name": "FritzStylePredictor", "key.namelength": 19, "key.nameoffset": 2545, "key.offset": 2536, "key.parsed_declaration": "public protocol FritzStylePredictor: FritzPredictable", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.runtime_name": "_TtP4main19FritzStylePredictor_", "key.typename": "FritzStylePredictor.Protocol", "key.typeusr": "$s11FritzVision0A14StylePredictor_pmD", "key.usr": "s:11FritzVision0A14StylePredictorP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public final class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2647}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2640}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 2611}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2587}], "key.bodylength": 4112, "key.bodyoffset": 2765, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2682}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2692}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 2717}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 2744}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "FritzMLModelInitializable"}, {"key.name": "FritzStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4225, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 2659, "key.offset": 2653, "key.parsed_declaration": "public final class FritzVisionStyleModel: NSObject, CoreMLOrVisionPredictor, FritzMLModelInitializable, FritzStylePredictor", "key.parsed_scope.end": 171, "key.parsed_scope.start": 73, "key.runtime_name": "FritzVisionStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2768}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2785, "key.offset": 2775, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB10StyleModelC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2822}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2839, "key.offset": 2829, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionStyleModelOptions", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "s:11FritzVision0aB10StyleModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>.PredictionResult = <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2885}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2902, "key.offset": 2892, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = CVPixelBuffer", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.typename": "CVBuffer.Type", "key.typeusr": "$sSo11CVBufferRefamD", "key.usr": "s:11FritzVision0aB10StyleModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3035}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3029}], "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 3046, "key.offset": 3042, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4033}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4026}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3992}], "key.bodylength": 364, "key.bodyoffset": 4080, "key.doc.column": 22, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"104\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 104, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 3853, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 400, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 4045, "key.offset": 4045, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 114, "key.parsed_scope.start": 104, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 4314, "key.offset": 4314, "key.parsed_declaration": "} catch let error as FritzModelSpecificationError", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "FritzModelSpecificationError", "key.typeusr": "$s11FritzVision0A23ModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB10StyleModelC5modelAC0a7ManagedD0015SwiftIdentifiedD0_p_tcfc5errorL_AA0aD18SpecificationErrorOvp"}], "key.typename": "(FritzVisionStyleModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionStyleModel", "key.typeusr": "$s5model11FritzVision0bC10StyleModelC0b7ManagedE0015SwiftIdentifiedE0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:error:) required public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4643}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4636}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 4627}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4590}], "key.bodylength": 207, "key.bodyoffset": 4689, "key.doc.column": 31, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:error:) required public convenience init(model: FritzMLModel) throws", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"121\" column=\"31\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:</USR><Declaration>@objc(initWithFritzMLModel:error:) required public convenience init(model: FritzMLModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 121, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 4451, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 242, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4655, "key.offset": 4655, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "required public convenience init(model: FritzMLModel) throws", "key.parsed_scope.end": 124, "key.parsed_scope.start": 121, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 139, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 4698, "key.offset": 4694, "key.parsed_declaration": "let managedModel = FritzManagedModel(modelConfig: model.activeModelConfig, sessionManager: model.sessionManager, loadActiveFromDisk: false)", "key.parsed_scope.end": 122, "key.parsed_scope.start": 122, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB10StyleModelC5modelAC0a7ManagedD00A7MLModelC_tKcfc07managedD0L_A2ECvp"}], "key.typename": "(FritzVisionStyleModel.Type) -> (FritzMLModel) throws -> FritzVisionStyleModel", "key.typeusr": "$s5model11FritzVision0bC10StyleModelC0b7ManagedE00B7MLModelC_tKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5146}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 5137}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 5087}], "key.bodylength": 121, "key.bodyoffset": 5220, "key.doc.column": 19, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.\n  - managedModel: ManagedModel to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"132\" column=\"19\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:managedModel:error:</USR><Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter><Parameter><Name>managedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>ManagedModel to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 132, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}, {"discussion": [{"Para": "ManagedModel to use."}], "name": "managedModel"}], "key.doc.type": "Function", "key.doclength": 182, "key.docoffset": 4903, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:managedModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 189, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 5153, "key.offset": 5153, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.parsed_scope.end": 136, "key.parsed_scope.start": 132, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> (FritzMLModel, FritzManagedModel) throws -> FritzVisionStyleModel", "key.typeusr": "$s5model12managedModel11FritzVision0de5StyleC0C0d7ManagedC00D7MLModelC_A2FCtKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:managedModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = .init(), completion: (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6578}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 6541}], "key.bodylength": 154, "key.bodyoffset": 6721, "key.doc.column": 15, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"167\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 167, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 302, "key.docoffset": 6237, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 291, "key.name": "predict(_:options:completion:)", "key.namelength": 129, "key.nameoffset": 6590, "key.offset": 6585, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 170, "key.parsed_scope.start": 167, "key.substructure": [], "key.typename": "(FritzVisionStyleModel) -> (FritzVisionImage, FritzVisionStyleModelOptions, (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17StyleModelOptionsCySo11CVBufferRefaSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)predict:options:completion:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$s11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public final class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7215}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 7191}], "key.bodylength": 1041, "key.bodyoffset": 7255, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1075, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 7232, "key.offset": 7222, "key.parsed_declaration": "public extension FritzVisionStyleModel", "key.parsed_scope.end": 206, "key.parsed_scope.start": 189, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [<Type usr=\"s:SS\">String</Type>], wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false, completionHandler: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 82, "key.offset": 7845}], "key.bodylength": 194, "key.bodyoffset": 8100, "key.doc.column": 15, "key.doc.comment": "Fetch and load Style Models for the given tags.\n\nNote that this instantiates all models which could cause memory pressure if you are loading many models.\nIf you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.\n\n- Parameters:\n  - tags: List of tags to load models for.\n  - wifiRequiredForModelDownload: If true, client must be connected to a wifi network to download a model. Default is false.\n  - completionHandler: Completion handler with instantiated FritzVisionStyleModels", "key.doc.declaration": "@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -> Void)", "key.doc.discussion": [{"Para": "Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift\" line=\"201\" column=\"15\"><Name>fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:</USR><Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch and load Style Models for the given tags.</Para></Abstract><Parameters><Parameter><Name>tags</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of tags to load models for.</Para></Discussion></Parameter><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true, client must be connected to a wifi network to download a model. Default is false.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler with instantiated FritzVisionStyleModels</Para></Discussion></Parameter></Parameters><Discussion><Para>Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.</Para></Discussion></CommentParts></Function>", "key.doc.line": 201, "key.doc.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "List of tags to load models for."}], "name": "tags"}, {"discussion": [{"Para": "If true, client must be connected to a wifi network to download a model. Default is false."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Completion handler with instantiated FritzVisionStyleModels"}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 582, "key.docoffset": 7261, "key.filepath": "/Users/vagrant/git/Source/FritzVision/StyleTransfer/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchStyleModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 365, "key.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 156, "key.nameoffset": 7942, "key.offset": 7930, "key.parsed_declaration": "static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -> Void)", "key.parsed_scope.end": 205, "key.parsed_scope.start": 201, "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> ([String], Bool, @escaping ([FritzVisionStyleModel]?, Error?) -> ()) -> ()", "key.typeusr": "$s4tags28wifiRequiredForModelDownload17completionHandlerySaySSG_SbySay11FritzVision0ij5StyleE0CGSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$s11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}]}}, {"/Users/vagrant/git/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1174, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1039, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10679, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzPaintingStyle) public class PaintingStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5020}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4996}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 4970}], "key.bodylength": 3424, "key.bodyoffset": 5063, "key.doc.column": 14, "key.doc.comment": "Enumeration of all Painting Styles available.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzPaintingStyle) public class PaintingStyleModel : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"102\" column=\"14\"><Name>PaintingStyleModel</Name><USR>c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzPaintingStyle) public class PaintingStyleModel : NSObject</Declaration><CommentParts><Abstract><Para>Enumeration of all Painting Styles available.</Para></Abstract></CommentParts></Class>", "key.doc.line": 102, "key.doc.name": "PaintingStyleModel", "key.doc.type": "Class", "key.doclength": 50, "key.docoffset": 4920, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5053}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPaintingStyle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PaintingStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3461, "key.name": "PaintingStyleModel", "key.namelength": 18, "key.nameoffset": 5033, "key.offset": 5027, "key.parsed_declaration": "public class PaintingStyleModel: NSObject", "key.parsed_scope.end": 214, "key.parsed_scope.start": 102, "key.runtime_name": "FritzPaintingStyle", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPaintingStyleModel) public enum <Type usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle\">PaintingStyleModel</Type>.Style : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5145}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 5104}], "key.bodylength": 3096, "key.bodyoffset": 5183, "key.doc.column": 17, "key.doc.comment": "Available Painting Styles.", "key.doc.declaration": "@objc(FritzVisionPaintingStyleModel) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"106\" column=\"17\"><Name>Style</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O</USR><Declaration>@objc(FritzVisionPaintingStyleModel) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable</Declaration><CommentParts><Abstract><Para>Available Painting Styles.</Para></Abstract></CommentParts></Other>", "key.doc.line": 106, "key.doc.name": "Style", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 5069, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 5164}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 5169}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPaintingStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle\">PaintingStyleModel</ref.class>.<decl.name>Style</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "CaseIterable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 3128, "key.name": "Style", "key.namelength": 5, "key.nameoffset": 5157, "key.offset": 5152, "key.parsed_declaration": "public enum Style: Int, CaseIterable", "key.parsed_scope.end": 207, "key.parsed_scope.start": 106, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5192, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case starryNight</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>starryNight</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "starryNight", "key.namelength": 11, "key.nameoffset": 5197, "key.offset": 5197, "key.parsed_declaration": "case starryNight", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11starryNightyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5217, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case pinkBlueRhombus</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>pinkBlueRhombus</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "pinkBlueRhombus", "key.namelength": 15, "key.nameoffset": 5222, "key.offset": 5222, "key.parsed_declaration": "case pinkBlueRhombus", "key.parsed_scope.end": 108, "key.parsed_scope.start": 108, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O15pinkBlueRhombusyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5246, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case theScream</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theScream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "theScream", "key.namelength": 9, "key.nameoffset": 5251, "key.offset": 5251, "key.parsed_declaration": "case theScream", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O9theScreamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5269, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case bicentennialPrint</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bicentennialPrint</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "bicentennialPrint", "key.namelength": 17, "key.nameoffset": 5274, "key.offset": 5274, "key.parsed_declaration": "case bicentennialPrint", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O17bicentennialPrintyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5300, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case poppyField</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poppyField</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "poppyField", "key.namelength": 10, "key.nameoffset": 5305, "key.offset": 5305, "key.parsed_declaration": "case poppyField", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O10poppyFieldyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5324, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case kaleidoscope</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>kaleidoscope</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "kaleidoscope", "key.namelength": 12, "key.nameoffset": 5329, "key.offset": 5329, "key.parsed_declaration": "case kaleidoscope", "key.parsed_scope.end": 112, "key.parsed_scope.start": 112, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O12kaleidoscopeyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5350, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case femmes</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>femmes</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "femmes", "key.namelength": 6, "key.nameoffset": 5355, "key.offset": 5355, "key.parsed_declaration": "case femmes", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O6femmesyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5370, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case headOfClown</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>headOfClown</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "headOfClown", "key.namelength": 11, "key.nameoffset": 5375, "key.offset": 5375, "key.parsed_declaration": "case headOfClown", "key.parsed_scope.end": 114, "key.parsed_scope.start": 114, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11headOfClownyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5395, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case horsesOnSeashore</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>horsesOnSeashore</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "horsesOnSeashore", "key.namelength": 16, "key.nameoffset": 5400, "key.offset": 5400, "key.parsed_declaration": "case horsesOnSeashore", "key.parsed_scope.end": 115, "key.parsed_scope.start": 115, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O16horsesOnSeashoreyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5425, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case theTrial</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theTrial</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "theTrial", "key.namelength": 8, "key.nameoffset": 5430, "key.offset": 5430, "key.parsed_declaration": "case theTrial", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O8theTrialyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5447, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case ritmoPlastico</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>ritmoPlastico</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "ritmoPlastico", "key.namelength": 13, "key.nameoffset": 5452, "key.offset": 5452, "key.parsed_declaration": "case ritmoPlastico", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O13ritmoPlasticoyA2EmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var name: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5475}], "key.bodylength": 811, "key.bodyoffset": 5500, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 830, "key.name": "name", "key.namelength": 4, "key.nameoffset": 5486, "key.offset": 5482, "key.parsed_declaration": "public var name: String", "key.parsed_scope.end": 144, "key.parsed_scope.start": 119, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getFromName(_ name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6322}], "key.bodylength": 859, "key.bodyoffset": 6380, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getFromName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</ref.enum>?</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 911, "key.name": "getFromName(_:)", "key.namelength": 27, "key.nameoffset": 6341, "key.offset": 6329, "key.parsed_declaration": "public static func getFromName(_ name: String) -> Style?", "key.parsed_scope.end": 173, "key.parsed_scope.start": 146, "key.substructure": [], "key.typename": "(PaintingStyleModel.Style.Type) -> (String) -> PaintingStyleModel.Style?", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OSgSScD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11getFromNameyAESgSSFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func build() -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7302}], "key.bodylength": 924, "key.bodyoffset": 7348, "key.doc.column": 21, "key.doc.comment": "Build FritzVisionStyleModel from style.", "key.doc.declaration": "public func build() -> FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"176\" column=\"21\"><Name>build()</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF</USR><Declaration>public func build() -&gt; FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Build FritzVisionStyleModel from style.</Para></Abstract></CommentParts></Function>", "key.doc.line": 176, "key.doc.name": "build()", "key.doc.type": "Function", "key.doclength": 44, "key.docoffset": 7250, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>build</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 964, "key.name": "build()", "key.namelength": 7, "key.nameoffset": 7314, "key.offset": 7309, "key.parsed_declaration": "public func build() -> FritzVisionStyleModel", "key.parsed_scope.end": 205, "key.parsed_scope.start": 176, "key.substructure": [{"key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>!</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol>!</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "model", "key.namelength": 5, "key.nameoffset": 7365, "key.offset": 7361, "key.parsed_declaration": "var model: SwiftIdentifiedModel!", "key.parsed_scope.end": 177, "key.parsed_scope.start": 177, "key.typename": "SwiftIdentifiedModel?", "key.typeusr": "$s17FritzManagedModel015SwiftIdentifiedC0_pSgD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF5modelL_0a7ManagedD0015SwiftIdentifiedD0_pSgvp"}], "key.typename": "(PaintingStyleModel.Style) -> () -> FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCycD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF"}], "key.typename": "PaintingStyleModel.Style.Type", "key.typeusr": "$s30FritzVisionStyleModelPaintings08PaintingcD0C0C0OmD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O"}], "key.typename": "PaintingStyleModel.Type", "key.typeusr": "$s30FritzVisionStyleModelPaintings08PaintingcD0CmD", "key.usr": "c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) final class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8515}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 8491}], "key.bodylength": 2122, "key.bodyoffset": 8555, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2156, "key.modulename": "FritzVision", "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 8532, "key.offset": 8522, "key.parsed_declaration": "public extension FritzVisionStyleModel", "key.parsed_scope.end": 270, "key.parsed_scope.start": 218, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let starryNight: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8629}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Vincent Van Gogh's Starry Night painting", "key.doc.declaration": "@objc static let starryNight: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"221\" column=\"20\"><Name>starryNight</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)starryNight</USR><Declaration>@objc static let starryNight: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Vincent Van Gogh\u2019s Starry Night painting</Para></Abstract></CommentParts></Other>", "key.doc.line": 221, "key.doc.name": "starryNight", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 8561, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>starryNight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "starryNight", "key.namelength": 11, "key.nameoffset": 8646, "key.offset": 8635, "key.parsed_declaration": "@objc static let starryNight = PaintingStyleModel.Style.starryNight.build()", "key.parsed_scope.end": 221, "key.parsed_scope.start": 221, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)starryNight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let pinkBlueRhombus: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8768}], "key.doc.column": 20, "key.doc.comment": "Style Model with shapes of pink and blue rhombuses.", "key.doc.declaration": "@objc static let pinkBlueRhombus: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"224\" column=\"20\"><Name>pinkBlueRhombus</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)pinkBlueRhombus</USR><Declaration>@objc static let pinkBlueRhombus: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model with shapes of pink and blue rhombuses.</Para></Abstract></CommentParts></Other>", "key.doc.line": 224, "key.doc.name": "pinkBlueRhombus", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 8710, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pinkBlueRhombus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "pinkBlueRhombus", "key.namelength": 15, "key.nameoffset": 8785, "key.offset": 8774, "key.parsed_declaration": "@objc static let pinkBlueRhombus = PaintingStyleModel.Style.pinkBlueRhombus.build()", "key.parsed_scope.end": 224, "key.parsed_scope.start": 224, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)pinkBlueRhombus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let theScream: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8920}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Edvard Munch's The Scream painting.", "key.doc.declaration": "@objc static let theScream: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"227\" column=\"20\"><Name>theScream</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theScream</USR><Declaration>@objc static let theScream: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Edvard Munch\u2019s The Scream painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 227, "key.doc.name": "theScream", "key.doc.type": "Other", "key.doclength": 61, "key.docoffset": 8857, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>theScream</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "theScream", "key.namelength": 9, "key.nameoffset": 8937, "key.offset": 8926, "key.parsed_declaration": "@objc static let theScream = PaintingStyleModel.Style.theScream.build()", "key.parsed_scope.end": 227, "key.parsed_scope.start": 227, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theScream"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let bicentennialPrint: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9094}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Roy Lichtenstein's Bicentennial Print from America: The Third Century", "key.doc.declaration": "@objc static let bicentennialPrint: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"230\" column=\"20\"><Name>bicentennialPrint</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)bicentennialPrint</USR><Declaration>@objc static let bicentennialPrint: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Roy Lichtenstein\u2019s Bicentennial Print from America: The Third Century</Para></Abstract></CommentParts></Other>", "key.doc.line": 230, "key.doc.name": "bicentennialPrint", "key.doc.type": "Other", "key.doclength": 95, "key.docoffset": 8997, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicentennialPrint</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 81, "key.name": "bicentennialPrint", "key.namelength": 17, "key.nameoffset": 9111, "key.offset": 9100, "key.parsed_declaration": "@objc static let bicentennialPrint = PaintingStyleModel.Style.bicentennialPrint.build()", "key.parsed_scope.end": 230, "key.parsed_scope.start": 230, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)bicentennialPrint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let poppyField: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9255}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Claude Monet's The Poppy Field painting.", "key.doc.declaration": "@objc static let poppyField: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"233\" column=\"20\"><Name>poppyField</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)poppyField</USR><Declaration>@objc static let poppyField: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Claude Monet\u2019s The Poppy Field painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 233, "key.doc.name": "poppyField", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 9187, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poppyField</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 67, "key.name": "poppyField", "key.namelength": 10, "key.nameoffset": 9272, "key.offset": 9261, "key.parsed_declaration": "@objc static let poppyField = PaintingStyleModel.Style.poppyField.build()", "key.parsed_scope.end": 233, "key.parsed_scope.start": 233, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)poppyField"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let kaleidoscope: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9413}], "key.doc.column": 20, "key.doc.comment": "Style Model based on an image depicting the view through a kaleidoscope.", "key.doc.declaration": "@objc static let kaleidoscope: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"236\" column=\"20\"><Name>kaleidoscope</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)kaleidoscope</USR><Declaration>@objc static let kaleidoscope: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on an image depicting the view through a kaleidoscope.</Para></Abstract></CommentParts></Other>", "key.doc.line": 236, "key.doc.name": "kaleidoscope", "key.doc.type": "Other", "key.doclength": 77, "key.docoffset": 9334, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kaleidoscope</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "kaleidoscope", "key.namelength": 12, "key.nameoffset": 9430, "key.offset": 9419, "key.parsed_declaration": "@objc static let kaleidoscope = PaintingStyleModel.Style.kaleidoscope.build()", "key.parsed_scope.end": 236, "key.parsed_scope.start": 236, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)kaleidoscope"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let femmes: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9562}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Picasso's Les Femmes d'Alger painting.", "key.doc.declaration": "@objc static let femmes: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"239\" column=\"20\"><Name>femmes</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)femmes</USR><Declaration>@objc static let femmes: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Picasso\u2019s Les Femmes d\u2019Alger painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 239, "key.doc.name": "femmes", "key.doc.type": "Other", "key.doclength": 64, "key.docoffset": 9496, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>femmes</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "femmes", "key.namelength": 6, "key.nameoffset": 9579, "key.offset": 9568, "key.parsed_declaration": "@objc static let femmes = PaintingStyleModel.Style.femmes.build()", "key.parsed_scope.end": 239, "key.parsed_scope.start": 239, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)femmes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let headOfClown: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9702}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Joseph Kutter's Head of a Clown painting.", "key.doc.declaration": "@objc static let headOfClown: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"242\" column=\"20\"><Name>headOfClown</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)headOfClown</USR><Declaration>@objc static let headOfClown: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Joseph Kutter\u2019s Head of a Clown painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 242, "key.doc.name": "headOfClown", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 9633, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>headOfClown</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "headOfClown", "key.namelength": 11, "key.nameoffset": 9719, "key.offset": 9708, "key.parsed_declaration": "@objc static let headOfClown = PaintingStyleModel.Style.headOfClown.build()", "key.parsed_scope.end": 242, "key.parsed_scope.start": 242, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)headOfClown"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let horsesOnSeashore: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9863}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Giorgio de Chirico's Horses on the Seashore painting", "key.doc.declaration": "@objc static let horsesOnSeashore: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"245\" column=\"20\"><Name>horsesOnSeashore</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)horsesOnSeashore</USR><Declaration>@objc static let horsesOnSeashore: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Giorgio de Chirico\u2019s Horses on the Seashore painting</Para></Abstract></CommentParts></Other>", "key.doc.line": 245, "key.doc.name": "horsesOnSeashore", "key.doc.type": "Other", "key.doclength": 78, "key.docoffset": 9783, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>horsesOnSeashore</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 79, "key.name": "horsesOnSeashore", "key.namelength": 16, "key.nameoffset": 9880, "key.offset": 9869, "key.parsed_declaration": "@objc static let horsesOnSeashore = PaintingStyleModel.Style.horsesOnSeashore.build()", "key.parsed_scope.end": 245, "key.parsed_scope.start": 245, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)horsesOnSeashore"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let theTrial: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 10016}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Sidney Nolan's The Trial painting.", "key.doc.declaration": "@objc static let theTrial: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"248\" column=\"20\"><Name>theTrial</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theTrial</USR><Declaration>@objc static let theTrial: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Sidney Nolan\u2019s The Trial painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 248, "key.doc.name": "theTrial", "key.doc.type": "Other", "key.doclength": 60, "key.docoffset": 9954, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>theTrial</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 63, "key.name": "theTrial", "key.namelength": 8, "key.nameoffset": 10033, "key.offset": 10022, "key.parsed_declaration": "@objc static let theTrial = PaintingStyleModel.Style.theTrial.build()", "key.parsed_scope.end": 248, "key.parsed_scope.start": 248, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theTrial"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc static let ritmoPlastico: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 10159}], "key.doc.column": 20, "key.doc.comment": "Style Model based on Gino Severini's Ritmo Plastico painting.", "key.doc.declaration": "@objc static let ritmoPlastico: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"251\" column=\"20\"><Name>ritmoPlastico</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)ritmoPlastico</USR><Declaration>@objc static let ritmoPlastico: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Gino Severini\u2019s Ritmo Plastico painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 251, "key.doc.name": "ritmoPlastico", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 10091, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ritmoPlastico</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 73, "key.name": "ritmoPlastico", "key.namelength": 13, "key.nameoffset": 10176, "key.offset": 10165, "key.parsed_declaration": "@objc static let ritmoPlastico = PaintingStyleModel.Style.ritmoPlastico.build()", "key.parsed_scope.end": 251, "key.parsed_scope.start": 251, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$s11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)ritmoPlastico"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(allModels) static func allModels() -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 10280}], "key.bodylength": 324, "key.bodyoffset": 10351, "key.doc.column": 15, "key.doc.comment": "A list of all Style Models.", "key.doc.declaration": "@objc(allModels) static func allModels() -> [FritzVisionStyleModel]", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"255\" column=\"15\"><Name>allModels()</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cm)allModels</USR><Declaration>@objc(allModels) static func allModels() -&gt; [FritzVisionStyleModel]</Declaration><CommentParts><Abstract><Para>A list of all Style Models.</Para></Abstract></CommentParts></Function>", "key.doc.line": 255, "key.doc.name": "allModels()", "key.doc.type": "Function", "key.doclength": 32, "key.docoffset": 10244, "key.filepath": "/Users/vagrant/git/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(allModels)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>allModels</decl.name>() -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>]</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 377, "key.name": "allModels()", "key.namelength": 11, "key.nameoffset": 10311, "key.offset": 10299, "key.parsed_declaration": "static func allModels() -> [FritzVisionStyleModel]", "key.parsed_scope.end": 269, "key.parsed_scope.start": 255, "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> () -> [FritzVisionStyleModel]", "key.typeusr": "$sSay11FritzVision0aB10StyleModelCGycD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cm)allModels"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$s11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}]}}, {"/Users/vagrant/git/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1649, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1777, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1673, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionPeopleSegmentationMediumModel/FritzVisionPeopleSegmentationMediumModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1993, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionHairSegmentationModel/FritzVisionHairSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1035, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionHairSegmentationModel.build/DerivedSources/CoreMLGenerated/hair_a1_224x224_1_1557202212/hair_a1_224x224_1_1557202212.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6481, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4073, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetSegmentationMediumClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2036}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 1982}], "key.bodylength": 431, "key.bodyoffset": 2107, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionPeopleAndPetSegmentationMediumModel", "key.doc.declaration": "@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetSegmentationMediumClass : NSObject", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift\" line=\"45\" column=\"14\"><Name>FritzVisionPeopleAndPetSegmentationMediumClass</Name><USR>c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass</USR><Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetSegmentationMediumClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionPeopleAndPetSegmentationMediumModel</Para></Abstract></CommentParts></Class>", "key.doc.line": 45, "key.doc.name": "FritzVisionPeopleAndPetSegmentationMediumClass", "key.doc.type": "Class", "key.doclength": 68, "key.docoffset": 1914, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2097}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleAndPetSegmentationMediumClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleAndPetSegmentationMediumClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 496, "key.name": "FritzVisionPeopleAndPetSegmentationMediumClass", "key.namelength": 46, "key.nameoffset": 2049, "key.offset": 2043, "key.parsed_declaration": "public class FritzVisionPeopleAndPetSegmentationMediumClass: NSObject", "key.parsed_scope.end": 53, "key.parsed_scope.start": 45, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationMediumClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2118}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2112}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 2136, "key.offset": 2125, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let petOrPerson: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2222}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2216}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>petOrPerson</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 104, "key.name": "petOrPerson", "key.namelength": 11, "key.nameoffset": 2240, "key.offset": 2229, "key.parsed_declaration": "@objc public static let petOrPerson = ModelSegmentationClass(label: \"Pet or Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)petOrPerson"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2345}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2339}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 185, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 2363, "key.offset": 2352, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleAndPetSegmentationMediumClass.Type", "key.typeusr": "$s46FritzVisionPeopleAndPetSegmentationMediumModel0abcdefG5ClassCmD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public final class FritzVisionPeopleAndPetSegmentationMediumModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2683}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2676}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 2622}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2598}], "key.bodylength": 1279, "key.bodyoffset": 2792, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people and pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public final class FritzVisionPeopleAndPetSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift\" line=\"59\" column=\"20\"><Name>FritzVisionPeopleAndPetSegmentationMediumModel</Name><USR>c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public final class FritzVisionPeopleAndPetSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people and pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 59, "key.doc.name": "FritzVisionPeopleAndPetSegmentationMediumModel", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 2542, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 2743}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 2773}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleAndPetSegmentationMediumModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleAndPetSegmentationMediumModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1383, "key.name": "FritzVisionPeopleAndPetSegmentationMediumModel", "key.namelength": 46, "key.nameoffset": 2695, "key.offset": 2689, "key.parsed_declaration": "public final class FritzVisionPeopleAndPetSegmentationMediumModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 86, "key.parsed_scope.start": 59, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationMediumModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2804}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2798}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 2822, "key.offset": 2811, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"996011d930ad4a0791f02349f0971039\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2952}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2946}], "key.bodylength": 52, "key.bodyoffset": 3003, "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2970, "key.offset": 2959, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3068}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3062}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 3086, "key.offset": 3075, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3191}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3184}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 3158}], "key.bodylength": 130, "key.bodyoffset": 3230, "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 158, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 3203, "key.offset": 3203, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 70, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationMediumModel.Type) -> (FritzMLModel) -> FritzVisionPeopleAndPetSegmentationMediumModel", "key.typeusr": "$s5model46FritzVisionPeopleAndPetSegmentationMediumModelABC0b7ManagedI00B7MLModelC_tcD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3413}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3406}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3367}], "key.bodylength": 158, "key.bodyoffset": 3485, "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 219, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 3425, "key.offset": 3425, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationMediumModel.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPeopleAndPetSegmentationMediumModel", "key.typeusr": "$s5model12managedModel041FritzVisionPeopleAndPetSegmentationMediumC0ACC0d7ManagedC00D7MLModelC_A2ECtcD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel\">FritzVisionPeopleAndPetSegmentationMediumModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3879}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3835}], "key.bodylength": 63, "key.bodyoffset": 4006, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationMediumModel?, Error?) -> Void)", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift\" line=\"83\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationMediumModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 83, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 3650, "key.filepath": "/Users/vagrant/git/Source/FritzVisionPeopleAndPetSegmentationMediumModel/FritzVisionPeopleAndPetSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel\">FritzVisionPeopleAndPetSegmentationMediumModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 184, "key.name": "fetchModel(completionHandler:)", "key.namelength": 106, "key.nameoffset": 3898, "key.offset": 3886, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationMediumModel?, Error?) -> Void)", "key.parsed_scope.end": 85, "key.parsed_scope.start": 83, "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationMediumModel.Type) -> (@escaping (FritzVisionPeopleAndPetSegmentationMediumModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy46FritzVisionPeopleAndPetSegmentationMediumModelABCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleAndPetSegmentationMediumModel.Type", "key.typeusr": "$s46FritzVisionPeopleAndPetSegmentationMediumModelAACmD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationMediumModel@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel"}]}}, {"/Users/vagrant/git/Source/FritzVisionPetSegmentationModel/FritzVisionPetSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 936, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionPetSegmentationModel.build/DerivedSources/CoreMLGenerated/cat_dog_256x256_1_1557281033/cat_dog_256x256_1_1557281033.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6481, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionSkySegmentationModel/FritzModels.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 396, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionSkySegmentationModel/FritzVisionSkySegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 668, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionSkySegmentationModel.build/DerivedSources/CoreMLGenerated/sky_224x224_1_1557906569/sky_224x224_1_1557906569.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6385, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionPoseModel/FritzVisionHumanPoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 884, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionPoseModel.build/DerivedSources/CoreMLGenerated/pose_mobilenet_353x257_5_8_large_1565381656/pose_mobilenet_353x257_5_8_large_1565381656.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8079, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6307, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct FritzSCNPose</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 245}], "key.bodylength": 560, "key.bodyoffset": 273, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FritzSCNPose</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 582, "key.name": "FritzSCNPose", "key.namelength": 12, "key.nameoffset": 259, "key.offset": 252, "key.parsed_declaration": "public struct FritzSCNPose", "key.parsed_scope.end": 33, "key.parsed_scope.start": 14, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let scenekitCameraTransform: <Type usr=\"c:@S@SCNMatrix4\">SCNMatrix4</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 343}], "key.doc.column": 14, "key.doc.comment": "Transformation matrix to place object in camera coordinates.", "key.doc.declaration": "public let scenekitCameraTransform: SCNMatrix4", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"16\" column=\"14\"><Name>scenekitCameraTransform</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransformSo10SCNMatrix4Vvp</USR><Declaration>public let scenekitCameraTransform: SCNMatrix4</Declaration><CommentParts><Abstract><Para>Transformation matrix to place object in camera coordinates.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "scenekitCameraTransform", "key.doc.type": "Other", "key.doclength": 65, "key.docoffset": 276, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scenekitCameraTransform</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNMatrix4\">SCNMatrix4</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "scenekitCameraTransform", "key.namelength": 23, "key.nameoffset": 354, "key.offset": 350, "key.parsed_declaration": "public let scenekitCameraTransform: SCNMatrix4", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "SCNMatrix4", "key.typeusr": "$sSo10SCNMatrix4VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransformSo10SCNMatrix4Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rotationVector: <Type usr=\"c:@S@SCNVector4\">SCNVector4</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 429}], "key.doc.column": 14, "key.doc.comment": "Axis-angle rotatation vector.", "key.doc.declaration": "public let rotationVector: SCNVector4", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"19\" column=\"14\"><Name>rotationVector</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV14rotationVectorSo10SCNVector4Vvp</USR><Declaration>public let rotationVector: SCNVector4</Declaration><CommentParts><Abstract><Para>Axis-angle rotatation vector.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "rotationVector", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 393, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rotationVector</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNVector4\">SCNVector4</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "rotationVector", "key.namelength": 14, "key.nameoffset": 440, "key.offset": 436, "key.parsed_declaration": "public let rotationVector: SCNVector4", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "SCNVector4", "key.typeusr": "$sSo10SCNVector4VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV14rotationVectorSo10SCNVector4Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let translationVector: <Type usr=\"c:@S@SCNVector3\">SCNVector3</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 512}], "key.doc.column": 14, "key.doc.comment": "Translation vector to place object.", "key.doc.declaration": "public let translationVector: SCNVector3", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"22\" column=\"14\"><Name>translationVector</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV17translationVectorSo10SCNVector3Vvp</USR><Declaration>public let translationVector: SCNVector3</Declaration><CommentParts><Abstract><Para>Translation vector to place object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "translationVector", "key.doc.type": "Other", "key.doclength": 40, "key.docoffset": 470, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>translationVector</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "translationVector", "key.namelength": 17, "key.nameoffset": 523, "key.offset": 519, "key.parsed_declaration": "public let translationVector: SCNVector3", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "SCNVector3", "key.typeusr": "$sSo10SCNVector3VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV17translationVectorSo10SCNVector3Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(scenekitCameraTransform: <Type usr=\"c:@S@SCNMatrix4\">SCNMatrix4</Type>, rotationVector: <Type usr=\"c:@S@SCNVector4\">SCNVector4</Type>, translationVector: <Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 556}], "key.bodylength": 150, "key.bodyoffset": 681, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>scenekitCameraTransform</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNMatrix4\">SCNMatrix4</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rotationVector</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNVector4\">SCNVector4</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>translationVector</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 269, "key.name": "init(scenekitCameraTransform:rotationVector:translationVector:)", "key.namelength": 116, "key.nameoffset": 563, "key.offset": 563, "key.parsed_declaration": "public init(\n  scenekitCameraTransform: SCNMatrix4,\n  rotationVector: SCNVector4,\n  translationVector: SCNVector3\n)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "(FritzSCNPose.Type) -> (SCNMatrix4, SCNVector4, SCNVector3) -> FritzSCNPose", "key.typeusr": "$s23scenekitCameraTransform14rotationVector011translationE020FritzVisionRigidPose0G7SCNPoseVSo10SCNMatrix4V_So10SCNVector4VSo10SCNVector3VtcD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransform14rotationVector011translationJ0ACSo10SCNMatrix4V_So10SCNVector4VSo10SCNVector3Vtcfc"}], "key.typename": "FritzSCNPose.Type", "key.typeusr": "$s20FritzVisionRigidPose0A7SCNPoseVmD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionRigidBodyPoseLiftingOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 837}], "key.bodylength": 753, "key.bodyoffset": 890, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionRigidBodyPoseLiftingOptions</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 800, "key.name": "FritzVisionRigidBodyPoseLiftingOptions", "key.namelength": 38, "key.nameoffset": 850, "key.offset": 844, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLiftingOptions", "key.parsed_scope.end": 59, "key.parsed_scope.start": 36, "key.runtime_name": "_TtC4main38FritzVisionRigidBodyPoseLiftingOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var modelOptions: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 926}], "key.doc.column": 14, "key.doc.comment": "Custom Pose Model Options", "key.doc.declaration": "public var modelOptions: FritzVision.FritzVisionPoseModelOptions", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"39\" column=\"14\"><Name>modelOptions</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC05modelG00aB00abd5ModelG0Cvp</USR><Declaration>public var modelOptions: FritzVision.FritzVisionPoseModelOptions</Declaration><CommentParts><Abstract><Para>Custom Pose Model Options</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "modelOptions", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 894, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelOptions</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "modelOptions", "key.namelength": 12, "key.nameoffset": 937, "key.offset": 933, "key.parsed_declaration": "public var modelOptions: FritzVisionPoseModelOptions = FritzVisionPoseModelOptions()", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC05modelG00aB00abd5ModelG0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var requiredKeypointsMeetingThreshold: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1092}], "key.doc.column": 14, "key.doc.comment": "Required number of keypoints meeting threshold for valid 2D pose result", "key.doc.declaration": "public var requiredKeypointsMeetingThreshold: Int", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"42\" column=\"14\"><Name>requiredKeypointsMeetingThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC33requiredKeypointsMeetingThresholdSivp</USR><Declaration>public var requiredKeypointsMeetingThreshold: Int</Declaration><CommentParts><Abstract><Para>Required number of keypoints meeting threshold for valid 2D pose result</Para></Abstract></CommentParts></Other>", "key.doc.line": 42, "key.doc.name": "requiredKeypointsMeetingThreshold", "key.doc.type": "Other", "key.doclength": 76, "key.docoffset": 1014, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiredKeypointsMeetingThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "requiredKeypointsMeetingThreshold", "key.namelength": 33, "key.nameoffset": 1103, "key.offset": 1099, "key.parsed_declaration": "public var requiredKeypointsMeetingThreshold = 3", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC33requiredKeypointsMeetingThresholdSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var keypointThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1266}], "key.doc.column": 14, "key.doc.comment": "Keypoint confidence score minimum needed for a keypoint to count towards\n`requiredKeypointsMeetingThreshold`.", "key.doc.declaration": "public var keypointThreshold: Double", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"46\" column=\"14\"><Name>keypointThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC17keypointThresholdSdvp</USR><Declaration>public var keypointThreshold: Double</Declaration><CommentParts><Abstract><Para>Keypoint confidence score minimum needed for a keypoint to count towards <codeVoice>requiredKeypointsMeetingThreshold</codeVoice>.</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "keypointThreshold", "key.doc.type": "Other", "key.doclength": 120, "key.docoffset": 1144, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypointThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "keypointThreshold", "key.namelength": 17, "key.nameoffset": 1277, "key.offset": 1273, "key.parsed_declaration": "public var keypointThreshold = 0.6", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC17keypointThresholdSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var excludedKeypointIndices: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1356}], "key.doc.column": 14, "key.doc.comment": "Indices of keypoints to exclude from 3D Pose.", "key.doc.declaration": "public var excludedKeypointIndices: [Int]", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"49\" column=\"14\"><Name>excludedKeypointIndices</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC23excludedKeypointIndicesSaySiGvp</USR><Declaration>public var excludedKeypointIndices: [Int]</Declaration><CommentParts><Abstract><Para>Indices of keypoints to exclude from 3D Pose.</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "excludedKeypointIndices", "key.doc.type": "Other", "key.doclength": 50, "key.docoffset": 1304, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>excludedKeypointIndices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "excludedKeypointIndices", "key.namelength": 23, "key.nameoffset": 1367, "key.offset": 1363, "key.parsed_declaration": "public var excludedKeypointIndices: [Int] = []", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC23excludedKeypointIndicesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var smoothingOptions: <Type usr=\"s:11FritzVision20PoseSmoothingOptionsC\">PoseSmoothingOptions</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1435}], "key.doc.column": 14, "key.doc.comment": "Pose Smoothing Options", "key.doc.declaration": "public var smoothingOptions: FritzVision.PoseSmoothingOptions?", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"52\" column=\"14\"><Name>smoothingOptions</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC09smoothingG00aB00d9SmoothingG0CSgvp</USR><Declaration>public var smoothingOptions: FritzVision.PoseSmoothingOptions?</Declaration><CommentParts><Abstract><Para>Pose Smoothing Options</Para></Abstract></CommentParts></Other>", "key.doc.line": 52, "key.doc.name": "smoothingOptions", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 1406, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothingOptions</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision20PoseSmoothingOptionsC\">PoseSmoothingOptions</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "smoothingOptions", "key.namelength": 16, "key.nameoffset": 1446, "key.offset": 1442, "key.parsed_declaration": "public var smoothingOptions: PoseSmoothingOptions?", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "PoseSmoothingOptions?", "key.typeusr": "$s11FritzVision20PoseSmoothingOptionsCSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC09smoothingG00aB00d9SmoothingG0CSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var orientationFlipAngleThreshold: <Type usr=\"s:Sd\">Double</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1571}], "key.doc.column": 14, "key.doc.comment": "Angle at which keypoints are reversed.  Helps prevent accidental rotations.", "key.doc.declaration": "public var orientationFlipAngleThreshold: Double?", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"55\" column=\"14\"><Name>orientationFlipAngleThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC29orientationFlipAngleThresholdSdSgvp</USR><Declaration>public var orientationFlipAngleThreshold: Double?</Declaration><CommentParts><Abstract><Para>Angle at which keypoints are reversed.  Helps prevent accidental rotations.</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "orientationFlipAngleThreshold", "key.doc.type": "Other", "key.doclength": 80, "key.docoffset": 1489, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationFlipAngleThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "orientationFlipAngleThreshold", "key.namelength": 29, "key.nameoffset": 1582, "key.offset": 1578, "key.parsed_declaration": "public var orientationFlipAngleThreshold: Double?", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double?", "key.typeusr": "$sSdSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC29orientationFlipAngleThresholdSdSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1624}], "key.bodylength": 1, "key.bodyoffset": 1639, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 10, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1631, "key.offset": 1631, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "(FritzVisionRigidBodyPoseLiftingOptions.Type) -> () -> FritzVisionRigidBodyPoseLiftingOptions", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCycD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCACycfc"}], "key.typename": "FritzVisionRigidBodyPoseLiftingOptions.Type", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionRigidBodyPoseLifting&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1723}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1699}], "key.bodylength": 4512, "key.bodyoffset": 1793, "key.doc.column": 14, "key.doc.comment": "Runs 2D and 3D pose estimation for rigid bodies.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionRigidBodyPoseLifting<Skeleton> where Skeleton : SkeletonType", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Class file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"63\" column=\"14\"><Name>FritzVisionRigidBodyPoseLifting</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionRigidBodyPoseLifting&lt;Skeleton&gt; where Skeleton : SkeletonType</Declaration><CommentParts><Abstract><Para>Runs 2D and 3D pose estimation for rigid bodies.</Para></Abstract></CommentParts></Class>", "key.doc.line": 63, "key.doc.name": "FritzVisionRigidBodyPoseLifting", "key.doc.type": "Class", "key.doclength": 53, "key.docoffset": 1646, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionRigidBodyPoseLifting</decl.name>&lt;<decl.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 4576, "key.name": "FritzVisionRigidBodyPoseLifting", "key.namelength": 31, "key.nameoffset": 1736, "key.offset": 1730, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLifting<Skeleton: SkeletonType>", "key.parsed_scope.end": 181, "key.parsed_scope.start": 63, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1778}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1768, "key.offset": 1768, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLifting<Skeleton: SkeletonType>", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let poseModel: <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1796}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseModel</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 49, "key.name": "poseModel", "key.namelength": 9, "key.nameoffset": 1807, "key.offset": 1803, "key.parsed_declaration": "public let poseModel: FritzVisionPosePredictor<Skeleton>", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "FritzVisionPosePredictor<Skeleton>", "key.typeusr": "$s11FritzVision0aB13PosePredictorCyxGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC9poseModel0aB00abD9PredictorCyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var orientationManager: <Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC\">RigidBodyPoseOrientationManager</Type>&lt;Skeleton&gt;? {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1936}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1929}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationManager</decl.name>: <decl.var.type><ref.class usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC\">RigidBodyPoseOrientationManager</ref.class>&lt;Skeleton&gt;?</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 66, "key.name": "orientationManager", "key.namelength": 18, "key.nameoffset": 1953, "key.offset": 1949, "key.parsed_declaration": "public private(set) var orientationManager: RigidBodyPoseOrientationManager<Skeleton>?", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "RigidBodyPoseOrientationManager<Skeleton>?", "key.typeusr": "$s20FritzVisionRigidPose0c4BodyD18OrientationManagerCyxGSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC18orientationManagerAA0ced11OrientationH0CyxGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, modelPoints: [<Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2052}], "key.bodylength": 65, "key.bodyoffset": 2135, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelPoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(model:modelPoints:)", "key.namelength": 74, "key.nameoffset": 2059, "key.offset": 2059, "key.parsed_declaration": "public init(model: FritzVisionPosePredictor<Skeleton>, modelPoints: [SCNVector3])", "key.parsed_scope.end": 74, "key.parsed_scope.start": 71, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>.Type) -> (FritzVisionPosePredictor<Skeleton>, [SCNVector3]) -> FritzVisionRigidBodyPoseLifting<Skeleton>", "key.typeusr": "$s5model0A6Points20FritzVisionRigidPose0cde4BodyF7LiftingCyxG0cD00cdF9PredictorCyxG_SaySo10SCNVector3VGtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC5model0G6PointsACyxG0aB00abD9PredictorCyxG_SaySo10SCNVector3VGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func run2DPrediction(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</Type> = FritzVisionRigidBodyPoseLiftingOptions()) -&gt; (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, result: <Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3225}], "key.bodylength": 814, "key.bodyoffset": 3453, "key.doc.column": 15, "key.doc.comment": "Run 2D rigid body pose estimation on FritzVisionImage with given orientation.\n\nApplies orientation and smoothing adjustment on pose if parameters specified in options.\n\n- Parameters:\n  - image: FritzVisionImage to run 2D pose estimation on.\n- Returns: Modified pose and raw poseResult from 2D pose prediction.", "key.doc.declaration": "public func run2DPrediction(_ image: FritzVisionImage, options: FritzVisionRigidBodyPoseLiftingOptions = FritzVisionRigidBodyPoseLiftingOptions()) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.doc.discussion": [{"Para": "Applies orientation and smoothing adjustment on pose if parameters specified in options."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"99\" column=\"15\"><Name>run2DPrediction(_:options:)</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF</USR><Declaration>public func run2DPrediction(_ image: FritzVisionImage, options: FritzVisionRigidBodyPoseLiftingOptions = FritzVisionRigidBodyPoseLiftingOptions()) -&gt; (pose: Pose&lt;Skeleton&gt;, result: FritzVisionPoseResult&lt;Skeleton&gt;)?</Declaration><CommentParts><Abstract><Para>Run 2D rigid body pose estimation on FritzVisionImage with given orientation.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzVisionImage to run 2D pose estimation on.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Modified pose and raw poseResult from 2D pose prediction.</Para></ResultDiscussion><Discussion><Para>Applies orientation and smoothing adjustment on pose if parameters specified in options.</Para></Discussion></CommentParts></Function>", "key.doc.line": 99, "key.doc.name": "run2DPrediction(_:options:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzVisionImage to run 2D pose estimation on."}], "name": "image"}], "key.doc.result_discussion": [{"Para": "Modified pose and raw poseResult from 2D pose prediction."}], "key.doc.type": "Function", "key.doclength": 348, "key.docoffset": 2875, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>run2DPrediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</ref.class></decl.var.parameter.type> = FritzVisionRigidBodyPoseLiftingOptions()</decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>result</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1036, "key.name": "run2DPrediction(_:options:)", "key.namelength": 146, "key.nameoffset": 3237, "key.offset": 3232, "key.parsed_declaration": "public func run2DPrediction(\n  _ image: FritzVisionImage,\n  options: FritzVisionRigidBodyPoseLiftingOptions = FritzVisionRigidBodyPoseLiftingOptions()\n) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.parsed_scope.end": 126, "key.parsed_scope.start": 99, "key.substructure": [{"key.annotated_decl": "<Declaration>let filtered: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>filtered</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "filtered", "key.namelength": 8, "key.nameoffset": 3658, "key.offset": 3654, "key.parsed_declaration": "let filtered = pose.keypoints.filter { !options.excludedKeypointIndices.contains($0.index) }", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF8filteredL_SayAF8KeypointCyxGGvp"}, {"key.annotated_decl": "<Declaration>let pointsMeetingThreshold: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointsMeetingThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 91, "key.name": "pointsMeetingThreshold", "key.namelength": 22, "key.nameoffset": 3755, "key.offset": 3751, "key.parsed_declaration": "let pointsMeetingThreshold = filtered.filter { $0.score > options.keypointThreshold }.count", "key.parsed_scope.end": 112, "key.parsed_scope.start": 112, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF22pointsMeetingThresholdL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>) -> (FritzVisionImage, FritzVisionRigidBodyPoseLiftingOptions) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.typeusr": "$s_7options11FritzVision4PoseCyxG4pose_AB0bcD6ResultCyxG6resulttSgAB0bC5ImageC_0bc5RigidD00bci4BodyD14LiftingOptionsCtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func infer3DPose(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, frame: <Type usr=\"c:objc(cs)ARFrame\">ARFrame</Type>, options: <Type usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</Type>) -&gt; <Type usr=\"s:20FritzVisionRigidPose0A7SCNPoseV\">FritzSCNPose</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4712}], "key.bodylength": 1415, "key.bodyoffset": 4888, "key.doc.column": 15, "key.doc.comment": "Infer 3D Points from 2D pose. Currently only works in portrait orientation.\n\n- Parameters:\n  - pose: CustomPose result from 2D Rigid Pose Prediction.\n  - image: FritzVisionImage of current image.\n  - frame: Frame for current image.\n  - options: Options for Pose lifting.\n- Returns: FritzSCNPose object containing transforms necessary to place SCNNode in\n    SceneKit Camera Coordinates.", "key.doc.declaration": "public func infer3DPose(_ pose: Pose<Skeleton>, image: FritzVisionImage, frame: ARFrame, options: FritzVisionRigidBodyPoseLiftingOptions) -> FritzSCNPose?", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"137\" column=\"15\"><Name>infer3DPose(_:image:frame:options:)</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF</USR><Declaration>public func infer3DPose(_ pose: Pose&lt;Skeleton&gt;, image: FritzVisionImage, frame: ARFrame, options: FritzVisionRigidBodyPoseLiftingOptions) -&gt; FritzSCNPose?</Declaration><CommentParts><Abstract><Para>Infer 3D Points from 2D pose. Currently only works in portrait orientation.</Para></Abstract><Parameters><Parameter><Name>pose</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CustomPose result from 2D Rigid Pose Prediction.</Para></Discussion></Parameter><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzVisionImage of current image.</Para></Discussion></Parameter><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Frame for current image.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for Pose lifting.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzSCNPose object containing transforms necessary to place SCNNode in SceneKit Camera Coordinates.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 137, "key.doc.name": "infer3DPose(_:image:frame:options:)", "key.doc.parameters": [{"discussion": [{"Para": "CustomPose result from 2D Rigid Pose Prediction."}], "name": "pose"}, {"discussion": [{"Para": "FritzVisionImage of current image."}], "name": "image"}, {"discussion": [{"Para": "Frame for current image."}], "name": "frame"}, {"discussion": [{"Para": "Options for Pose lifting."}], "name": "options"}], "key.doc.result_discussion": [{"Para": "FritzSCNPose object containing transforms necessary to place SCNNode in SceneKit Camera Coordinates."}], "key.doc.type": "Function", "key.doclength": 438, "key.docoffset": 4272, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>infer3DPose</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)ARFrame\">ARFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:20FritzVisionRigidPose0A7SCNPoseV\">FritzSCNPose</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1585, "key.name": "infer3DPose(_:image:frame:options:)", "key.namelength": 145, "key.nameoffset": 4724, "key.offset": 4719, "key.parsed_declaration": "public func infer3DPose(\n  _ pose: Pose<Skeleton>,\n  image: FritzVisionImage,\n  frame: ARFrame,\n  options: FritzVisionRigidBodyPoseLiftingOptions\n) -> FritzSCNPose?", "key.parsed_scope.end": 180, "key.parsed_scope.start": 137, "key.substructure": [{"key.annotated_decl": "<Declaration>let originalSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>originalSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "originalSize", "key.namelength": 12, "key.nameoffset": 4898, "key.offset": 4894, "key.parsed_declaration": "let originalSize = image.originalSize", "key.parsed_scope.end": 144, "key.parsed_scope.start": 144, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF12originalSizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let excludedKeypoints: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>excludedKeypoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "excludedKeypoints", "key.namelength": 17, "key.nameoffset": 4940, "key.offset": 4936, "key.parsed_declaration": "let excludedKeypoints = options.excludedKeypointIndices", "key.parsed_scope.end": 145, "key.parsed_scope.start": 145, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF17excludedKeypointsL_SaySiGvp"}, {"key.annotated_decl": "<Declaration>let rotatedPose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rotatedPose</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "rotatedPose", "key.namelength": 11, "key.nameoffset": 5001, "key.offset": 4997, "key.parsed_declaration": "let rotatedPose = pose.rotateKeypointsToOriginalImage(image: image)", "key.parsed_scope.end": 147, "key.parsed_scope.start": 147, "key.typename": "Pose<Skeleton>", "key.typeusr": "$s11FritzVision4PoseCyxGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF07rotatedD0L_ANvp"}, {"key.annotated_decl": "<Declaration>let keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 86, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 5073, "key.offset": 5069, "key.parsed_declaration": "let keypoints = rotatedPose.keypoints.filter { !excludedKeypoints.contains($0.index) }", "key.parsed_scope.end": 148, "key.parsed_scope.start": 148, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF9keypointsL_SayAK8KeypointCyxGGvp"}, {"key.annotated_decl": "<Declaration>let keypointsOpenCVCoords: [[<Type usr=\"s:Sd\">Double</Type>]]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypointsOpenCVCoords</decl.name>: <decl.var.type>[[<ref.struct usr=\"s:Sd\">Double</ref.struct>]]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 176, "key.name": "keypointsOpenCVCoords", "key.namelength": 21, "key.nameoffset": 5164, "key.offset": 5160, "key.parsed_declaration": "let keypointsOpenCVCoords: [[Double]] = keypoints.map", "key.parsed_scope.end": 149, "key.parsed_scope.start": 149, "key.typename": "[[Double]]", "key.typeusr": "$sSaySaySdGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF21keypointsOpenCVCoordsL_SaySaySdGGvp"}, {"key.annotated_decl": "<Declaration>var flattenedPoints: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flattenedPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "flattenedPoints", "key.namelength": 15, "key.nameoffset": 5346, "key.offset": 5342, "key.parsed_declaration": "var flattenedPoints = keypointsOpenCVCoords.flatMap { $0 }", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF15flattenedPointsL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>let includedModelPoints: [<Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>includedModelPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 131, "key.name": "includedModelPoints", "key.namelength": 19, "key.nameoffset": 5410, "key.offset": 5406, "key.parsed_declaration": "let includedModelPoints = modelPoints.enumerated().filter", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "[SCNVector3]", "key.typeusr": "$sSaySo10SCNVector3VGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF19includedModelPointsL_SaySo10SCNVector3VGvp"}, {"key.annotated_decl": "<Declaration>let dentastix3DOpenCV: [[<Type usr=\"s:Sf\">Float</Type>]]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dentastix3DOpenCV</decl.name>: <decl.var.type>[[<ref.struct usr=\"s:Sf\">Float</ref.struct>]]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 72, "key.name": "dentastix3DOpenCV", "key.namelength": 17, "key.nameoffset": 5547, "key.offset": 5543, "key.parsed_declaration": "let dentastix3DOpenCV = includedModelPoints.map { [$0.x, -$0.y, -$0.z] }", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "[[Float]]", "key.typeusr": "$sSaySaySfGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF17dentastix3DOpenCVL_SaySaySfGGvp"}, {"key.annotated_decl": "<Declaration>var flattened3DModelPoints: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flattened3DModelPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "flattened3DModelPoints", "key.namelength": 22, "key.nameoffset": 5624, "key.offset": 5620, "key.parsed_declaration": "var flattened3DModelPoints = dentastix3DOpenCV.flatMap { $0 }.map { Double($0) }", "key.parsed_scope.end": 161, "key.parsed_scope.start": 161, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF22flattened3DModelPointsL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>let fx: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fx</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "fx", "key.namelength": 2, "key.nameoffset": 5710, "key.offset": 5706, "key.parsed_declaration": "let fx = frame.camera.intrinsics[0][0]", "key.parsed_scope.end": 163, "key.parsed_scope.start": 163, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF2fxL_Sfvp"}, {"key.annotated_decl": "<Declaration>let numKeypoints: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>numKeypoints</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "numKeypoints", "key.namelength": 12, "key.nameoffset": 5753, "key.offset": 5749, "key.parsed_declaration": "let numKeypoints = modelPoints.count - excludedKeypoints.count", "key.parsed_scope.end": 164, "key.parsed_scope.start": 164, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF12numKeypointsL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>) -> (Pose<Skeleton>, FritzVisionImage, ARFrame, FritzVisionRigidBodyPoseLiftingOptions) -> FritzSCNPose?", "key.typeusr": "$s_5image5frame7options20FritzVisionRigidPose0D7SCNPoseVSg0dE00G0CyxG_AH0dE5ImageCSo7ARFrameCAD0def4BodyG14LiftingOptionsCtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF"}], "key.typename": "FritzVisionRigidBodyPoseLifting<Skeleton>.Type", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD7LiftingCyxGmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC"}]}}, {"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2555, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class RigidBodyPoseOrientationManager&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 626}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 602}], "key.bodylength": 1857, "key.bodyoffset": 696, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>RigidBodyPoseOrientationManager</decl.name>&lt;<decl.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1921, "key.name": "RigidBodyPoseOrientationManager", "key.namelength": 31, "key.nameoffset": 639, "key.offset": 633, "key.parsed_declaration": "public class RigidBodyPoseOrientationManager<Skeleton: SkeletonType>", "key.parsed_scope.end": 83, "key.parsed_scope.start": 30, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 681}], "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 671, "key.offset": 671, "key.parsed_declaration": "public class RigidBodyPoseOrientationManager<Skeleton: SkeletonType>", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public internal(set) var flipOrientationDegrees: <Type usr=\"s:Sd\">Double</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.internal", "key.length": 13, "key.offset": 912}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 905}], "key.doc.column": 28, "key.doc.comment": "Degree threshold for flipping pose.  If the absolute value of the angle\nof the previous pose direction and current pose direction is greater than the\nthreshold, the pose will be flipped.", "key.doc.declaration": "public internal(set) var flipOrientationDegrees: Double {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"35\" column=\"28\"><Name>flipOrientationDegrees</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesSdvp</USR><Declaration>public internal(set) var flipOrientationDegrees: Double {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Degree threshold for flipping pose.  If the absolute value of the angle of the previous pose direction and current pose direction is greater than the threshold, the pose will be flipped.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "flipOrientationDegrees", "key.doc.type": "Other", "key.doclength": 203, "key.docoffset": 700, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>internal</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flipOrientationDegrees</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "flipOrientationDegrees", "key.namelength": 22, "key.nameoffset": 930, "key.offset": 926, "key.parsed_declaration": "public internal(set) var flipOrientationDegrees: Double", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.internal", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var previousPoseFlipped: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1040}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1033}], "key.doc.column": 27, "key.doc.comment": "If true, `previousPose` flipped from its original orientation.", "key.doc.declaration": "public private(set) var previousPoseFlipped: Bool {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"38\" column=\"27\"><Name>previousPoseFlipped</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD7FlippedSbvp</USR><Declaration>public private(set) var previousPoseFlipped: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>If true, <codeVoice>previousPose</codeVoice> flipped from its original orientation.</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "previousPoseFlipped", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 964, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>previousPoseFlipped</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "previousPoseFlipped", "key.namelength": 19, "key.nameoffset": 1057, "key.offset": 1053, "key.parsed_declaration": "public private(set) var previousPoseFlipped = false", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD7FlippedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var previousPose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;? {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1142}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1135}], "key.doc.column": 27, "key.doc.comment": "Previous pose after orientation applied.", "key.doc.declaration": "public private(set) var previousPose: FritzVision.Pose<Skeleton>? {\n    get\n    }", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"41\" column=\"27\"><Name>previousPose</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD00aB00D0CyxGSgvp</USR><Declaration>public private(set) var previousPose: FritzVision.Pose&lt;Skeleton&gt;? {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Previous pose after orientation applied.</Para></Abstract></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "previousPose", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1088, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>previousPose</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;?</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "previousPose", "key.namelength": 12, "key.nameoffset": 1159, "key.offset": 1155, "key.parsed_declaration": "public private(set) var previousPose: Pose<Skeleton>?", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Pose<Skeleton>?", "key.typeusr": "$s11FritzVision4PoseCyxGSgD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD00aB00D0CyxGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(flipOrientationDegrees: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1414}], "key.bodylength": 60, "key.bodyoffset": 1459, "key.doc.column": 10, "key.doc.comment": "Initialize RigidPoseOrientationManager\n\n- Parameter flipOrientationDegrees: Degree threshold for flipping orientation\n    of pose.", "key.doc.declaration": "public init(flipOrientationDegrees: Double)", "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"49\" column=\"10\"><Name>init(flipOrientationDegrees:)</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesACyxGSd_tcfc</USR><Declaration>public init(flipOrientationDegrees: Double)</Declaration><CommentParts><Abstract><Para>Initialize RigidPoseOrientationManager</Para></Abstract><Parameters><Parameter><Name>flipOrientationDegrees</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Degree threshold for flipping orientation of pose.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 49, "key.doc.name": "init(flipOrientationDegrees:)", "key.doc.parameters": [{"discussion": [{"Para": "Degree threshold for flipping orientation of pose."}], "name": "flipOrientationDegrees"}], "key.doc.type": "Function", "key.doclength": 152, "key.docoffset": 1260, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>flipOrientationDegrees</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 99, "key.name": "init(flipOrientationDegrees:)", "key.namelength": 36, "key.nameoffset": 1421, "key.offset": 1421, "key.parsed_declaration": "public init(flipOrientationDegrees: Double)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 49, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (RigidBodyPoseOrientationManager<Skeleton>.Type) -> (Double) -> RigidBodyPoseOrientationManager<Skeleton>", "key.typeusr": "$s22flipOrientationDegrees20FritzVisionRigidPose0f4BodygB7ManagerCyxGSd_tcD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesACyxGSd_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func orientPose(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1781}], "key.bodylength": 704, "key.bodyoffset": 1847, "key.doc.column": 15, "key.doc.comment": "Orient pose according to previous pose and current pose direction.\n\nThe current `pose` is compared against the previously oriented pose.\n\n- Parameter pose: Custom pose to align with previous pose.\n- Returns: Oriented pose.", "key.doc.declaration": "public func orientPose(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.doc.discussion": [{"Para": "The current `pose` is compared against the previously oriented pose."}], "key.doc.file": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"59\" column=\"15\"><Name>orientPose(_:)</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF</USR><Declaration>public func orientPose(_ pose: Pose&lt;Skeleton&gt;) -&gt; Pose&lt;Skeleton&gt;</Declaration><CommentParts><Abstract><Para>Orient pose according to previous pose and current pose direction.</Para></Abstract><Parameters><Parameter><Name>pose</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Custom pose to align with previous pose.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Oriented pose.</Para></ResultDiscussion><Discussion><Para>The current <codeVoice>pose</codeVoice> is compared against the previously oriented pose.</Para></Discussion></CommentParts></Function>", "key.doc.line": 59, "key.doc.name": "orientPose(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Custom pose to align with previous pose."}], "name": "pose"}], "key.doc.result_discussion": [{"Para": "Oriented pose."}], "key.doc.type": "Function", "key.doclength": 255, "key.docoffset": 1524, "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>orientPose</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 764, "key.name": "orientPose(_:)", "key.namelength": 34, "key.nameoffset": 1793, "key.offset": 1788, "key.parsed_declaration": "public func orientPose(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.parsed_scope.end": 82, "key.parsed_scope.start": 59, "key.substructure": [{"key.annotated_decl": "<Declaration>let angle: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/vagrant/git/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>angle</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 77, "key.name": "angle", "key.namelength": 5, "key.nameoffset": 1960, "key.offset": 1956, "key.parsed_declaration": "let angle = previousPose.direction.angle(between: pose.direction) * 180 / .pi", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF5angleL_Sfvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (RigidBodyPoseOrientationManager<Skeleton>) -> (Pose<Skeleton>) -> Pose<Skeleton>", "key.typeusr": "$sy11FritzVision4PoseCyxGADcD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF"}], "key.typename": "RigidBodyPoseOrientationManager<Skeleton>.Type", "key.typeusr": "$s20FritzVisionRigidPose0c4BodyD18OrientationManagerCyxGmD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC"}]}}, {"/Users/vagrant/git/Source/FritzVisionRigidPose/SCNVector+Extensions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 13686, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: Axis aliases", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10221}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Debugging", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10541}]}}, {"/Users/vagrant/git/Source/FritzVisionMultiPoseModel/FritzVisionPoseLiftingModel+Downloadable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1922, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionMultiPoseModel.build/DerivedSources/CoreMLGenerated/poseLifter/poseLifter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6020, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/Source/FritzVisionDepthModel/FritzVisionDepthModel+PackagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 905, "key.offset": 0, "key.substructure": []}}, {"/Users/vagrant/git/build/Fritz.build/Release-iphoneos/FritzVisionDepthModel.build/DerivedSources/CoreMLGenerated/depth_mobilenet_224x224_1_1564969669/depth_mobilenet_224x224_1_1564969669.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6673, "key.offset": 0, "key.substructure": []}}]