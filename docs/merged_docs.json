[{"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8236, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum Response</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 288}], "key.bodylength": 87, "key.bodyoffset": 310, "key.doc.column": 13, "key.doc.comment": "Represents an HTTP response", "key.doc.declaration": "public enum Response", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"15\" column=\"13\"><Name>Response</Name><USR>s:9FritzCore8ResponseO</USR><Declaration>public enum Response</Declaration><CommentParts><Abstract><Para>Represents an HTTP response</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "Response", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 256, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Response</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 103, "key.name": "Response", "key.namelength": 8, "key.nameoffset": 300, "key.offset": 295, "key.parsed_declaration": "public enum Response", "key.parsed_scope.end": 18, "key.parsed_scope.start": 15, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 315, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case success(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "success(data:)", "key.namelength": 19, "key.nameoffset": 320, "key.offset": 320, "key.parsed_declaration": "case success(data: Data)", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(Response.Type) -> (Data) -> Response", "key.typeusr": "$Sy9FritzCore8ResponseO10Foundation4DataV_tcACmcD", "key.usr": "s:9FritzCore8ResponseO7successyAC10Foundation4DataV_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 52, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 344, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case error(error: <Type usr=\"s:s5ErrorP\">Error</Type>, response: <Type usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</Type>?)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>response</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 47, "key.name": "error(error:response:)", "key.namelength": 47, "key.nameoffset": 349, "key.offset": 349, "key.parsed_declaration": "case error(error: Error, response: HTTPURLResponse?)", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(Response.Type) -> (Error, HTTPURLResponse?) -> Response", "key.typeusr": "$Sy9FritzCore8ResponseOs5Error_p_So17NSHTTPURLResponseCSgtcACmcD", "key.usr": "s:9FritzCore8ResponseO5erroryACs5Error_p_So17NSHTTPURLResponseCSgtcACmF"}]}], "key.typename": "Response.Type", "key.typeusr": "$S9FritzCore8ResponseOmD", "key.usr": "s:9FritzCore8ResponseO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RequestError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.bodylength": 87, "key.bodyoffset": 478, "key.doc.column": 13, "key.doc.comment": "Represents an internal HTTP client error", "key.doc.declaration": "public enum RequestError : Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"21\" column=\"13\"><Name>RequestError</Name><USR>s:9FritzCore12RequestErrorO</USR><Declaration>public enum RequestError : Error</Declaration><CommentParts><Abstract><Para>Represents an internal HTTP client error</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "RequestError", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 400, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 471}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RequestError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 114, "key.name": "RequestError", "key.namelength": 12, "key.nameoffset": 457, "key.offset": 452, "key.parsed_declaration": "public enum RequestError: Error", "key.parsed_scope.end": 26, "key.parsed_scope.start": 21, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 483, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case invalidData</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidData</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "invalidData", "key.namelength": 11, "key.nameoffset": 488, "key.offset": 488, "key.parsed_declaration": "case invalidData", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$Sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO11invalidDatayA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 504, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case invalidResponse</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidResponse</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "invalidResponse", "key.namelength": 15, "key.nameoffset": 509, "key.offset": 509, "key.parsed_declaration": "case invalidResponse", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$Sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO15invalidResponseyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 529, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case invalidURL</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidURL</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "invalidURL", "key.namelength": 10, "key.nameoffset": 534, "key.offset": 534, "key.parsed_declaration": "case invalidURL", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$Sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10invalidURLyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 549, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case statusCode</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>statusCode</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "statusCode", "key.namelength": 10, "key.nameoffset": 554, "key.offset": 554, "key.parsed_declaration": "case statusCode", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$Sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10statusCodeyA2CmF"}]}], "key.typename": "RequestError.Type", "key.typeusr": "$S9FritzCore12RequestErrorOmD", "key.usr": "s:9FritzCore12RequestErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestCompletionHandler = (<Type usr=\"s:9FritzCore8ResponseO\">Response</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.doc.column": 18, "key.doc.comment": "Type to handle network request completion", "key.doc.declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"29\" column=\"18\"><Name>RequestCompletionHandler</Name><USR>s:9FritzCore24RequestCompletionHandlera</USR><Declaration>public typealias RequestCompletionHandler = (Response) -&gt; Void</Declaration><CommentParts><Abstract><Para>Type to handle network request completion</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "RequestCompletionHandler", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 568, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestCompletionHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore8ResponseO\">Response</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 55, "key.name": "RequestCompletionHandler", "key.namelength": 24, "key.nameoffset": 631, "key.offset": 621, "key.parsed_declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(Response) -> ().Type", "key.typeusr": "$Sy9FritzCore8ResponseOcmD", "key.usr": "s:9FritzCore24RequestCompletionHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestOptions = [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}], "key.doc.column": 18, "key.doc.comment": "Type to represent request body/url options", "key.doc.declaration": "public typealias RequestOptions = [String : Any]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"32\" column=\"18\"><Name>RequestOptions</Name><USR>s:9FritzCore14RequestOptionsa</USR><Declaration>public typealias RequestOptions = [String : Any]</Declaration><CommentParts><Abstract><Para>Type to represent request body/url options</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "RequestOptions", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 678, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestOptions</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 40, "key.name": "RequestOptions", "key.namelength": 14, "key.nameoffset": 742, "key.offset": 732, "key.parsed_declaration": "public typealias RequestOptions = [String: Any]", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[String : Any].Type", "key.typeusr": "$SSDySSypGmD", "key.usr": "s:9FritzCore14RequestOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestHeaders = [<Type usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 812}], "key.doc.column": 18, "key.doc.comment": "Type to represent request headers", "key.doc.declaration": "public typealias RequestHeaders = [HTTPHeader : String]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"35\" column=\"18\"><Name>RequestHeaders</Name><USR>s:9FritzCore14RequestHeadersa</USR><Declaration>public typealias RequestHeaders = [HTTPHeader : String]</Declaration><CommentParts><Abstract><Para>Type to represent request headers</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "RequestHeaders", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 774, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestHeaders</decl.name> = [<ref.enum usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</ref.enum> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "RequestHeaders", "key.namelength": 14, "key.nameoffset": 829, "key.offset": 819, "key.parsed_declaration": "public typealias RequestHeaders = [HTTPHeader: String]", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "[HTTPHeader : String].Type", "key.typeusr": "$SSDy9FritzCore10HTTPHeaderOSSGmD", "key.usr": "s:9FritzCore14RequestHeadersa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPMethod : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 892}], "key.bodylength": 93, "key.bodyoffset": 924, "key.doc.column": 13, "key.doc.comment": "HTTP methods we use", "key.doc.declaration": "public enum HTTPMethod : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"38\" column=\"13\"><Name>HTTPMethod</Name><USR>s:9FritzCore10HTTPMethodO</USR><Declaration>public enum HTTPMethod : String</Declaration><CommentParts><Abstract><Para>HTTP methods we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "HTTPMethod", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 868, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 916}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPMethod</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 119, "key.name": "HTTPMethod", "key.namelength": 10, "key.nameoffset": 904, "key.offset": 899, "key.parsed_declaration": "public enum HTTPMethod: String", "key.parsed_scope.end": 43, "key.parsed_scope.start": 38, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 929, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case get = &quot;GET&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 940}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>get</decl.name> = <syntaxtype.string>&quot;GET&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "get", "key.namelength": 3, "key.nameoffset": 934, "key.offset": 934, "key.parsed_declaration": "case get = \"GET\"", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$Sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3getyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 950, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case post = &quot;POST&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 6, "key.offset": 962}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>post</decl.name> = <syntaxtype.string>&quot;POST&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "post", "key.namelength": 4, "key.nameoffset": 955, "key.offset": 955, "key.parsed_declaration": "case post = \"POST\"", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$Sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO4postyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 973, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case put = &quot;PUT&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 984}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>put</decl.name> = <syntaxtype.string>&quot;PUT&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "put", "key.namelength": 3, "key.nameoffset": 978, "key.offset": 978, "key.parsed_declaration": "case put = \"PUT\"", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$Sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3putyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 994, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case delete = &quot;DELETE&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 8, "key.offset": 1008}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>delete</decl.name> = <syntaxtype.string>&quot;DELETE&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "delete", "key.namelength": 6, "key.nameoffset": 999, "key.offset": 999, "key.parsed_declaration": "case delete = \"DELETE\"", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$Sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO6deleteyA2CmF"}]}], "key.typename": "HTTPMethod.Type", "key.typeusr": "$S9FritzCore10HTTPMethodOmD", "key.usr": "s:9FritzCore10HTTPMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPHeader : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1044}], "key.bodylength": 299, "key.bodyoffset": 1076, "key.doc.column": 13, "key.doc.comment": "HTTP headers we use", "key.doc.declaration": "public enum HTTPHeader : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"46\" column=\"13\"><Name>HTTPHeader</Name><USR>s:9FritzCore10HTTPHeaderO</USR><Declaration>public enum HTTPHeader : String</Declaration><CommentParts><Abstract><Para>HTTP headers we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "HTTPHeader", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1020, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1068}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPHeader</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 325, "key.name": "HTTPHeader", "key.namelength": 10, "key.nameoffset": 1056, "key.offset": 1051, "key.parsed_declaration": "public enum HTTPHeader: String", "key.parsed_scope.end": 54, "key.parsed_scope.start": 46, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 31, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1081, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case appToken = &quot;x-fritz-token&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 15, "key.offset": 1097}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>appToken</decl.name> = <syntaxtype.string>&quot;x-fritz-token&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 26, "key.name": "appToken", "key.namelength": 8, "key.nameoffset": 1086, "key.offset": 1086, "key.parsed_declaration": "case appToken = \"x-fritz-token\"", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO8appTokenyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 33, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1117, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case contentType = &quot;content-type&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 14, "key.offset": 1136}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentType</decl.name> = <syntaxtype.string>&quot;content-type&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 28, "key.name": "contentType", "key.namelength": 11, "key.nameoffset": 1122, "key.offset": 1122, "key.parsed_declaration": "case contentType = \"content-type\"", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO11contentTypeyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 47, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1155, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case instanceIdentifier = &quot;x-fritz-instance-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1181}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>instanceIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-instance-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 42, "key.name": "instanceIdentifier", "key.namelength": 18, "key.nameoffset": 1160, "key.offset": 1160, "key.parsed_declaration": "case instanceIdentifier = \"x-fritz-instance-id\"", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO18instanceIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 45, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1207, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case sessionIdentifier = &quot;x-fritz-session-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 20, "key.offset": 1232}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-session-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 40, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1212, "key.offset": 1212, "key.parsed_declaration": "case sessionIdentifier = \"x-fritz-session-id\"", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO17sessionIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1257, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case userAgent = &quot;user-agent&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 1274}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>userAgent</decl.name> = <syntaxtype.string>&quot;user-agent&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 24, "key.name": "userAgent", "key.namelength": 9, "key.nameoffset": 1262, "key.offset": 1262, "key.parsed_declaration": "case userAgent = \"user-agent\"", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO9userAgentyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1291, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case contentEncoding = &quot;content-encoding&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 18, "key.offset": 1314}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentEncoding</decl.name> = <syntaxtype.string>&quot;content-encoding&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "contentEncoding", "key.namelength": 15, "key.nameoffset": 1296, "key.offset": 1296, "key.parsed_declaration": "case contentEncoding = \"content-encoding\"", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO15contentEncodingyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 37, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1337, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case contentLength = &quot;content-length&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 16, "key.offset": 1358}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentLength</decl.name> = <syntaxtype.string>&quot;content-length&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 32, "key.name": "contentLength", "key.namelength": 13, "key.nameoffset": 1342, "key.offset": 1342, "key.parsed_declaration": "case contentLength = \"content-length\"", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$Sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO13contentLengthyA2CmF"}]}], "key.typename": "HTTPHeader.Type", "key.typeusr": "$S9FritzCore10HTTPHeaderOmD", "key.usr": "s:9FritzCore10HTTPHeaderO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1493}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1486}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}], "key.bodylength": 414, "key.bodyoffset": 1516, "key.doc.column": 20, "key.doc.comment": "Class for communicating with the Fritz API", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 1378, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 432, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 1505, "key.offset": 1499, "key.parsed_declaration": "public final class APIClient", "key.parsed_scope.end": 73, "key.parsed_scope.start": 58, "key.runtime_name": "_TtC4main9APIClient", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1642}], "key.doc.column": 16, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"64\" column=\"16\"><Name>session</Name><USR>s:9FritzCore9APIClientC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 64, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1606, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 1653, "key.offset": 1649, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore9APIClientC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1711}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1704}], "key.bodylength": 36, "key.bodyoffset": 1744, "key.doc.column": 21, "key.doc.comment": "Required initializer", "key.doc.declaration": "public required init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"67\" column=\"21\"><Name>init(session:)</Name><USR>s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc</USR><Declaration>public required init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 67, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1675, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 61, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 1720, "key.offset": 1720, "key.parsed_declaration": "public required init(session: Session)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 67, "key.substructure": [], "key.typename": "(APIClient.Type) -> (Session) -> APIClient", "key.typeusr": "$S7session9FritzCore9APIClientCAB7SessionC_tcD", "key.usr": "s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc"}], "key.typename": "APIClient.Type", "key.typeusr": "$S9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}, {"key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}], "key.bodylength": 6219, "key.bodyoffset": 2015, "key.doc.column": 20, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 6241, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 2004, "key.offset": 1994, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func dataTask(_ request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type>, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2076}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 2053}], "key.bodylength": 360, "key.bodyoffset": 2195, "key.doc.column": 17, "key.doc.comment": "Create a json data task", "key.doc.declaration": "public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = default) -> URLSessionDataTask", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"80\" column=\"17\"><Name>dataTask(_:completionHandler:)</Name><USR>s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF</USR><Declaration>public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = default) -&gt; URLSessionDataTask</Declaration><CommentParts><Abstract><Para>Create a json data task</Para></Abstract></CommentParts></Function>", "key.doc.line": 80, "key.doc.name": "dataTask(_:completionHandler:)", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 2021, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>dataTask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>request</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 473, "key.name": "dataTask(_:completionHandler:)", "key.namelength": 83, "key.nameoffset": 2088, "key.offset": 2083, "key.parsed_declaration": "public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = nil) -> URLSessionDataTask", "key.parsed_scope.end": 88, "key.parsed_scope.start": 80, "key.substructure": [{"key.annotated_decl": "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>task</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 304, "key.name": "task", "key.namelength": 4, "key.nameoffset": 2208, "key.offset": 2204, "key.parsed_declaration": "let task = ephemeralURLSession.dataTask(with: request) { data, response, error in", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "URLSessionDataTask", "key.typeusr": "$SSo20NSURLSessionDataTaskCD", "key.usr": "s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF4taskL_AGvp"}], "key.typename": "(APIClient) -> (URLRequest, (Response) -> ()?) -> URLSessionDataTask", "key.typeusr": "$S_17completionHandlerSo20NSURLSessionDataTaskC10Foundation10URLRequestV_y9FritzCore8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func get(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2626}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 2603}], "key.bodylength": 179, "key.bodyoffset": 2787, "key.doc.column": 17, "key.doc.comment": "Perform GET request to Fritz API", "key.doc.declaration": "public func get(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"92\" column=\"17\"><Name>get(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func get(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform GET request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 92, "key.doc.name": "get(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 37, "key.docoffset": 2562, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>get</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 334, "key.name": "get(path:options:headers:completionHandler:)", "key.namelength": 133, "key.nameoffset": 2638, "key.offset": 2633, "key.parsed_declaration": "public func get(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 96, "key.parsed_scope.start": 92, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 78, "key.name": "request", "key.namelength": 7, "key.nameoffset": 2800, "key.offset": 2796, "key.parsed_declaration": "let request = urlRequest(.get, path: path, options: options, headers: headers)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func post(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3038}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3015}], "key.bodylength": 180, "key.bodyoffset": 3200, "key.doc.column": 17, "key.doc.comment": "Perform POST request to Fritz API", "key.doc.declaration": "public func post(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"100\" column=\"17\"><Name>post(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func post(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform POST request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "post(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 38, "key.docoffset": 2973, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 336, "key.name": "post(path:options:headers:completionHandler:)", "key.namelength": 134, "key.nameoffset": 3050, "key.offset": 3045, "key.parsed_declaration": "public func post(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 104, "key.parsed_scope.start": 100, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 79, "key.name": "request", "key.namelength": 7, "key.nameoffset": 3213, "key.offset": 3209, "key.parsed_declaration": "let request = urlRequest(.post, path: path, options: options, headers: headers)", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func put(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3451}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3428}], "key.bodylength": 179, "key.bodyoffset": 3612, "key.doc.column": 17, "key.doc.comment": "Perform PUT request to Fritz API", "key.doc.declaration": "public func put(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"108\" column=\"17\"><Name>put(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func put(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform PUT request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 108, "key.doc.name": "put(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 37, "key.docoffset": 3387, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>put</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 334, "key.name": "put(path:options:headers:completionHandler:)", "key.namelength": 133, "key.nameoffset": 3463, "key.offset": 3458, "key.parsed_declaration": "public func put(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 112, "key.parsed_scope.start": 108, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 78, "key.name": "request", "key.namelength": 7, "key.nameoffset": 3625, "key.offset": 3621, "key.parsed_declaration": "let request = urlRequest(.put, path: path, options: options, headers: headers)", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func delete(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3865}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3842}], "key.bodylength": 182, "key.bodyoffset": 4029, "key.doc.column": 17, "key.doc.comment": "Perform DELETE request to Fritz API", "key.doc.declaration": "public func delete(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"116\" column=\"17\"><Name>delete(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func delete(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform DELETE request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "delete(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 40, "key.docoffset": 3798, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>delete</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 340, "key.name": "delete(path:options:headers:completionHandler:)", "key.namelength": 136, "key.nameoffset": 3877, "key.offset": 3872, "key.parsed_declaration": "public func delete(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 120, "key.parsed_scope.start": 116, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 81, "key.name": "request", "key.namelength": 7, "key.nameoffset": 4042, "key.offset": 4038, "key.parsed_declaration": "let request = urlRequest(.delete, path: path, options: options, headers: headers)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}], "key.typename": "APIClient.Type", "key.typeusr": "$S9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8402, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultMaxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 271}], "key.doc.column": 12, "key.doc.comment": "Default to 10 retries, last retry is ~1 hour", "key.doc.declaration": "public let kDefaultMaxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"13\" column=\"12\"><Name>kDefaultMaxRetries</Name><USR>s:9FritzCore18kDefaultMaxRetriesSuvp</USR><Declaration>public let kDefaultMaxRetries: UInt</Declaration><CommentParts><Abstract><Para>Default to 10 retries, last retry is ~1 hour</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "kDefaultMaxRetries", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 222, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultMaxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 33, "key.name": "kDefaultMaxRetries", "key.namelength": 18, "key.nameoffset": 282, "key.offset": 278, "key.parsed_declaration": "public let kDefaultMaxRetries: UInt = 12", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore18kDefaultMaxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 351}], "key.doc.column": 12, "key.doc.comment": "Status codes to retry if received", "key.doc.declaration": "public let kDefaultRetryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"16\" column=\"12\"><Name>kDefaultRetryStatusCodes</Name><USR>s:9FritzCore24kDefaultRetryStatusCodesShySiGvp</USR><Declaration>public let kDefaultRetryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry if received</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "kDefaultRetryStatusCodes", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 313, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 51, "key.name": "kDefaultRetryStatusCodes", "key.namelength": 24, "key.nameoffset": 362, "key.offset": 358, "key.parsed_declaration": "public let kDefaultRetryStatusCodes: Set<Int> = [502, 503]", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore24kDefaultRetryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 436}], "key.doc.column": 12, "key.doc.comment": "Error codes to retry", "key.doc.declaration": "public let kDefaultRetryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"19\" column=\"12\"><Name>kDefaultRetryErrorCodes</Name><USR>s:9FritzCore23kDefaultRetryErrorCodesShySiGvp</USR><Declaration>public let kDefaultRetryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "kDefaultRetryErrorCodes", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 411, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 127, "key.name": "kDefaultRetryErrorCodes", "key.namelength": 23, "key.nameoffset": 447, "key.offset": 443, "key.parsed_declaration": "public let kDefaultRetryErrorCodes: Set<Int> = [", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore23kDefaultRetryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultExponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 620}], "key.doc.column": 12, "key.doc.comment": "1 second multiplier for exponential backoff", "key.doc.declaration": "public let kDefaultExponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"26\" column=\"12\"><Name>kDefaultExponentialMultiplier</Name><USR>s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp</USR><Declaration>public let kDefaultExponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>1 second multiplier for exponential backoff</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "kDefaultExponentialMultiplier", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 572, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultExponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 48, "key.name": "kDefaultExponentialMultiplier", "key.namelength": 29, "key.nameoffset": 631, "key.offset": 627, "key.parsed_declaration": "public let kDefaultExponentialMultiplier: UInt32 = 1000", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class BatchedRequestQueue&lt;Element&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1500}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1493}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}], "key.bodylength": 6858, "key.bodyoffset": 1542, "key.doc.column": 20, "key.doc.comment": "This class attemmpts to strategically batch send requests and batch retry requests on failures.\nThe main flow of this class looks like:\n\nSUCCESS:\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush was successful\n\nFAILURE\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush failed\n4. Add items back into items array\n5. Stop processing queue (maintenance mode)\n5. If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck\n\nHEALTHCHECK SUCCESS\n1. We received a successful healthcheck\n2. Start processing items again (disable maintenance mode)\n\nHEALTHCHECK FAILURE\n1. We received a failed healthcheck, exponential backoff and retry health check", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue<Element>", "key.doc.discussion": [{"Para": "SUCCESS:"}, {"List-Number": ""}, {"Para": "FAILURE"}, {"List-Number": ""}, {"Para": "HEALTHCHECK SUCCESS"}, {"List-Number": ""}, {"Para": "HEALTHCHECK FAILURE"}, {"List-Number": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"53\" column=\"20\"><Name>BatchedRequestQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>This class attemmpts to strategically batch send requests and batch retry requests on failures. The main flow of this class looks like:</Para></Abstract><Discussion><Para>SUCCESS:</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush was successful</Para></Item></List-Number><Para>FAILURE</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush failed</Para></Item><Item><Para>Add items back into items array</Para></Item><Item><Para>Stop processing queue (maintenance mode)</Para></Item><Item><Para>If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck</Para></Item></List-Number><Para>HEALTHCHECK SUCCESS</Para><List-Number><Item><Para>We received a successful healthcheck</Para></Item><Item><Para>Start processing items again (disable maintenance mode)</Para></Item></List-Number><Para>HEALTHCHECK FAILURE</Para><List-Number><Item><Para>We received a failed healthcheck, exponential backoff and retry health check</Para></Item></List-Number></Discussion></CommentParts></Class>", "key.doc.line": 53, "key.doc.name": "BatchedRequestQueue", "key.doc.type": "Class", "key.doclength": 754, "key.docoffset": 677, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BatchedRequestQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 6895, "key.name": "BatchedRequestQueue", "key.namelength": 19, "key.nameoffset": 1512, "key.offset": 1506, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 264, "key.parsed_scope.start": 53, "key.substructure": [{"key.annotated_decl": "<Declaration>Element</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 7, "key.name": "Element", "key.namelength": 7, "key.nameoffset": 1532, "key.offset": 1532, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "Element.Type", "key.typeusr": "$SxmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7Elementxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.FlushHandler = ([<Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1548}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>FlushHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 80, "key.name": "FlushHandler", "key.namelength": 12, "key.nameoffset": 1565, "key.offset": 1555, "key.parsed_declaration": "public typealias FlushHandler = ([Element], @escaping RequestCompletionHandler) -> Void", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "(([Element], @escaping (Response) -> ()) -> ()).Type", "key.typeusr": "$SySayxG_y9FritzCore8ResponseOctcmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12FlushHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.HealthcheckHandler = (@escaping (<Type usr=\"s:Sb\">Bool</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1641}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>HealthcheckHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 65, "key.name": "HealthcheckHandler", "key.namelength": 18, "key.nameoffset": 1658, "key.offset": 1648, "key.parsed_declaration": "public typealias HealthcheckHandler = (@escaping (Bool) -> Void) -> Void", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "((@escaping (Bool) -> ()) -> ()).Type", "key.typeusr": "$SyySbccmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var batchThreshold: <Type usr=\"s:Su\">UInt</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1809}], "key.bodylength": 87, "key.bodyoffset": 1842, "key.doc.column": 16, "key.doc.comment": "Number of events to store before flushing queue", "key.doc.declaration": "public var batchThreshold: UInt { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"62\" column=\"16\"><Name>batchThreshold</Name><USR>s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp</USR><Declaration>public var batchThreshold: UInt { get }</Declaration><CommentParts><Abstract><Para>Number of events to store before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 62, "key.doc.name": "batchThreshold", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 1753, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>batchThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 114, "key.name": "batchThreshold", "key.namelength": 14, "key.nameoffset": 1820, "key.offset": 1816, "key.parsed_declaration": "public var batchThreshold: UInt", "key.parsed_scope.end": 64, "key.parsed_scope.start": 62, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var flushInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1984}], "key.bodylength": 78, "key.bodyoffset": 2024, "key.doc.column": 16, "key.doc.comment": "Number of seconds before flushing queue", "key.doc.declaration": "public var flushInterval: TimeInterval { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"67\" column=\"16\"><Name>flushInterval</Name><USR>s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp</USR><Declaration>public var flushInterval: TimeInterval { get }</Declaration><CommentParts><Abstract><Para>Number of seconds before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 67, "key.doc.name": "flushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 1936, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flushInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 112, "key.name": "flushInterval", "key.namelength": 13, "key.nameoffset": 1995, "key.offset": 1991, "key.parsed_declaration": "public var flushInterval: TimeInterval", "key.parsed_scope.end": 69, "key.parsed_scope.start": 67, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2151}], "key.doc.column": 16, "key.doc.comment": "Queue to call delegate methods on", "key.doc.declaration": "public let flushQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"72\" column=\"16\"><Name>flushQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp</USR><Declaration>public let flushQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to call delegate methods on</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "flushQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 2109, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flushQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "flushQueue", "key.namelength": 10, "key.nameoffset": 2162, "key.offset": 2158, "key.parsed_declaration": "public let flushQueue: DispatchQueue", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "DispatchQueue", "key.typeusr": "$SSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2244}], "key.doc.column": 16, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"75\" column=\"16\"><Name>maxRetries</Name><USR>s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 75, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2193, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 2255, "key.offset": 2251, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2317}], "key.doc.column": 16, "key.doc.comment": "Status codes to retry a request", "key.doc.declaration": "public let retryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"78\" column=\"16\"><Name>retryStatusCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp</USR><Declaration>public let retryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 78, "key.doc.name": "retryStatusCodes", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 2277, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "retryStatusCodes", "key.namelength": 16, "key.nameoffset": 2328, "key.offset": 2324, "key.parsed_declaration": "public let retryStatusCodes: Set<Int>", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2399}], "key.doc.column": 16, "key.doc.comment": "Error codes to retry a request", "key.doc.declaration": "public let retryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"81\" column=\"16\"><Name>retryErrorCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp</USR><Declaration>public let retryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "retryErrorCodes", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 2360, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryErrorCodes", "key.namelength": 15, "key.nameoffset": 2410, "key.offset": 2406, "key.parsed_declaration": "public let retryErrorCodes: Set<Int>", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2482}], "key.doc.column": 16, "key.doc.comment": "Pass through to OperationRetrier", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"84\" column=\"16\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Pass through to OperationRetrier</Para></Abstract></CommentParts></Other>", "key.doc.line": 84, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 2441, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 2493, "key.offset": 2489, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var onFlush: (([Element], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2564}], "key.doc.column": 16, "key.doc.comment": "Block to be called on flush", "key.doc.declaration": "public var onFlush: (([Element], @escaping RequestCompletionHandler) -> Void)?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"87\" column=\"16\"><Name>onFlush</Name><USR>s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp</USR><Declaration>public var onFlush: (([Element], @escaping RequestCompletionHandler) -&gt; Void)?</Declaration><CommentParts><Abstract><Para>Block to be called on flush</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "onFlush", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2528, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>onFlush</decl.name>: <decl.var.type>((<decl.var.parameter><decl.var.parameter.type>[Element]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter>@escaping <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype>)?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "onFlush", "key.namelength": 7, "key.nameoffset": 2575, "key.offset": 2571, "key.parsed_declaration": "public var onFlush: FlushHandler?", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(([Element], @escaping (Response) -> ()) -> ())?", "key.typeusr": "$SySayxG_y9FritzCore8ResponseOctcSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var apiHealthcheck: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.<Type usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2660}], "key.doc.column": 16, "key.doc.comment": "Block to be called when asking for a healthcheck", "key.doc.declaration": "public var apiHealthcheck: FritzCore.BatchedRequestQueue<Element>.HealthcheckHandler?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"90\" column=\"16\"><Name>apiHealthcheck</Name><USR>s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp</USR><Declaration>public var apiHealthcheck: FritzCore.BatchedRequestQueue&lt;Element&gt;.HealthcheckHandler?</Declaration><CommentParts><Abstract><Para>Block to be called when asking for a healthcheck</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "apiHealthcheck", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 2603, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>apiHealthcheck</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<ref.typealias usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "apiHealthcheck", "key.namelength": 14, "key.nameoffset": 2671, "key.offset": 2667, "key.parsed_declaration": "public var apiHealthcheck: HealthcheckHandler?", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(@escaping (Bool) -> ()) -> ()?", "key.typeusr": "$SyySbccSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var items: [Element]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2750}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2743}], "key.doc.column": 29, "key.doc.comment": "Current items in queue", "key.doc.declaration": "public private(set) var items: [Element]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"93\" column=\"29\"><Name>items</Name><USR>s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp</USR><Declaration>public private(set) var items: [Element]</Declaration><CommentParts><Abstract><Para>Current items in queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 93, "key.doc.name": "items", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 2712, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>items</decl.name>: <decl.var.type>[Element]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "items", "key.namelength": 5, "key.nameoffset": 2767, "key.offset": 2763, "key.parsed_declaration": "public private(set) var items: [Element] = []", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Element]", "key.typeusr": "$SSayxGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isApiHealthy: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2896}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2889}], "key.doc.column": 29, "key.doc.comment": "If true, we are processing available items, if false we are waiting for API to recover", "key.doc.declaration": "public private(set) var isApiHealthy: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"96\" column=\"29\"><Name>isApiHealthy</Name><USR>s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp</USR><Declaration>public private(set) var isApiHealthy: Bool</Declaration><CommentParts><Abstract><Para>If true, we are processing available items, if false we are waiting for API to recover</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "isApiHealthy", "key.doc.type": "Other", "key.doclength": 91, "key.docoffset": 2794, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isApiHealthy</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "isApiHealthy", "key.namelength": 12, "key.nameoffset": 2913, "key.offset": 2909, "key.parsed_declaration": "public private(set) var isApiHealthy = true", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type> = default, retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = default, retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = default, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3288}], "key.bodylength": 431, "key.bodyoffset": 3556, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flushQueue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryStatusCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryErrorCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 693, "key.name": "init(session:flushQueue:maxRetries:retryStatusCodes:retryErrorCodes:exponentialMultiplier:)", "key.namelength": 259, "key.nameoffset": 3295, "key.offset": 3295, "key.parsed_declaration": "public init(session: Session, flushQueue: DispatchQueue, maxRetries: UInt = kDefaultMaxRetries, retryStatusCodes: Set<Int> = kDefaultRetryStatusCodes, retryErrorCodes: Set<Int> = kDefaultRetryErrorCodes, exponentialMultiplier: UInt32 = kDefaultExponentialMultiplier)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 107, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>.Type) -> (Session, DispatchQueue, UInt, Set<Int>, Set<Int>, UInt32) -> BatchedRequestQueue<Element>", "key.typeusr": "$S7session10flushQueue10maxRetries16retryStatusCodes0f5ErrorH021exponentialMultiplier9FritzCore014BatchedRequestC0CyxGAG7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32VtcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7session05flushE010maxRetries16retryStatusCodes0j5ErrorL021exponentialMultiplierACyxGAA7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func add(_ item: <Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4173}], "key.bodylength": 325, "key.bodyoffset": 4207, "key.doc.column": 17, "key.doc.comment": "Add an item to the queue", "key.doc.declaration": "public func add(_ item: Element)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"127\" column=\"17\"><Name>add(_:)</Name><USR>s:9FritzCore19BatchedRequestQueueC3addyyxF</USR><Declaration>public func add(_ item: Element)</Declaration><CommentParts><Abstract><Para>Add an item to the queue</Para></Abstract></CommentParts></Function>", "key.doc.line": 127, "key.doc.name": "add(_:)", "key.doc.type": "Function", "key.doclength": 29, "key.docoffset": 4140, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>item</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 353, "key.name": "add(_:)", "key.namelength": 20, "key.nameoffset": 4185, "key.offset": 4180, "key.parsed_declaration": "public func add(_ item: Element)", "key.parsed_scope.end": 138, "key.parsed_scope.start": 127, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Element) -> ()", "key.typeusr": "$SyyxcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC3addyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func flush(force: <Type usr=\"s:Sb\">Bool</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4623}], "key.bodylength": 199, "key.bodyoffset": 4663, "key.doc.column": 17, "key.doc.comment": "Flush all items, if force is true then will flush regardless of healthy api", "key.doc.declaration": "public func flush(force: Bool = default)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"141\" column=\"17\"><Name>flush(force:)</Name><USR>s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF</USR><Declaration>public func flush(force: Bool = default)</Declaration><CommentParts><Abstract><Para>Flush all items, if force is true then will flush regardless of healthy api</Para></Abstract></CommentParts></Function>", "key.doc.line": 141, "key.doc.name": "flush(force:)", "key.doc.type": "Function", "key.doclength": 80, "key.docoffset": 4539, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>flush</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>force</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 233, "key.name": "flush(force:)", "key.namelength": 26, "key.nameoffset": 4635, "key.offset": 4630, "key.parsed_declaration": "public func flush(force: Bool = false)", "key.parsed_scope.end": 149, "key.parsed_scope.start": 141, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19BatchedRequestQueueC5flush33_3CCE68730D8FEA873DE9CED2E1F8F915LL5itemsySayxG_tF\">flush(items:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Bool) -> ()", "key.typeusr": "$S5forceySb_tcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clear()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4924}], "key.bodylength": 64, "key.bodyoffset": 4945, "key.doc.column": 17, "key.doc.comment": "Clears all items in the queue WITHOUT flushing", "key.doc.declaration": "public func clear()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"152\" column=\"17\"><Name>clear()</Name><USR>s:9FritzCore19BatchedRequestQueueC5clearyyF</USR><Declaration>public func clear()</Declaration><CommentParts><Abstract><Para>Clears all items in the queue WITHOUT flushing</Para></Abstract></CommentParts></Function>", "key.doc.line": 152, "key.doc.name": "clear()", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 4869, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clear</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 79, "key.name": "clear()", "key.namelength": 7, "key.nameoffset": 4936, "key.offset": 4931, "key.parsed_declaration": "public func clear()", "key.parsed_scope.end": 156, "key.parsed_scope.start": 152, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5clearyyF"}], "key.typename": "BatchedRequestQueue<Element>.Type", "key.typeusr": "$S9FritzCore19BatchedRequestQueueCyxGmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 649, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzConfiguration) public class Configuration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 262}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 175}], "key.bodylength": 347, "key.bodyoffset": 300, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 290}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Configuration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 379, "key.name": "Configuration", "key.namelength": 13, "key.nameoffset": 275, "key.offset": 269, "key.parsed_declaration": "public class Configuration: NSObject", "key.parsed_scope.end": 27, "key.parsed_scope.start": 13, "key.runtime_name": "FritzConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 306}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "default", "key.namelength": 7, "key.nameoffset": 324, "key.offset": 313, "key.parsed_declaration": "public static let `default` = Configuration(session: .default)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "s:9FritzCore13ConfigurationC7defaultACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 380}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 374}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 391, "key.offset": 387, "key.parsed_declaration": "@objc public let session: Session", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)session"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 419}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 413}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 430, "key.offset": 426, "key.parsed_declaration": "@objc public let sessionManager: SessionManager", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "SessionManager", "key.typeusr": "$S9FritzCore14SessionManagerCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)sessionManager"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSession:) public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 494}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 466}], "key.bodylength": 120, "key.bodyoffset": 525, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSession:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 145, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 501, "key.offset": 501, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 22, "key.substructure": [], "key.typename": "(Configuration.Type) -> (Session) -> Configuration", "key.typeusr": "$S7session9FritzCore13ConfigurationCAB7SessionC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(im)initWithSession:"}], "key.typename": "Configuration.Type", "key.typeusr": "$S9FritzCore13ConfigurationCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8557, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct CompressionLevel : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1243}], "key.bodylength": 583, "key.bodyoffset": 1293, "key.doc.column": 15, "key.doc.comment": "Compression level whose rawValue is based on the zlib's constants.", "key.doc.declaration": "public struct CompressionLevel : RawRepresentable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"36\" column=\"15\"><Name>CompressionLevel</Name><USR>s:9FritzCore16CompressionLevelV</USR><Declaration>public struct CompressionLevel : RawRepresentable</Declaration><CommentParts><Abstract><Para>Compression level whose rawValue is based on the zlib\u2019s constants.</Para></Abstract></CommentParts></Class>", "key.doc.line": 36, "key.doc.name": "CompressionLevel", "key.doc.type": "Class", "key.doclength": 75, "key.docoffset": 1167, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 1275}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CompressionLevel</decl.name> : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 627, "key.name": "CompressionLevel", "key.namelength": 16, "key.nameoffset": 1257, "key.offset": 1250, "key.parsed_declaration": "public struct CompressionLevel: RawRepresentable", "key.parsed_scope.end": 59, "key.parsed_scope.start": 36, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rawValue: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1392}], "key.doc.column": 16, "key.doc.comment": "Compression level in the range of `0` (no compression) to `9` (maximum compression).", "key.doc.declaration": "public let rawValue: Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"39\" column=\"16\"><Name>rawValue</Name><USR>s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp</USR><Declaration>public let rawValue: Int32</Declaration><CommentParts><Abstract><Para>Compression level in the range of <codeVoice>0</codeVoice> (no compression) to <codeVoice>9</codeVoice> (maximum compression).</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "rawValue", "key.doc.type": "Other", "key.doclength": 89, "key.docoffset": 1299, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 1403, "key.offset": 1399, "key.overrides": [{"key.usr": "s:SY8rawValue03RawB0Qzvp"}], "key.parsed_declaration": "public let rawValue: Int32", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let noCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1424}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 61, "key.name": "noCompression", "key.namelength": 13, "key.nameoffset": 1442, "key.offset": 1431, "key.parsed_declaration": "public static let noCompression = CompressionLevel(Z_NO_COMPRESSION)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV02noC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestSpeed: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1497}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestSpeed</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 53, "key.name": "bestSpeed", "key.namelength": 9, "key.nameoffset": 1515, "key.offset": 1504, "key.parsed_declaration": "public static let bestSpeed = CompressionLevel(Z_BEST_SPEED)", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV9bestSpeedACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1562}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "bestCompression", "key.namelength": 15, "key.nameoffset": 1580, "key.offset": 1569, "key.parsed_declaration": "public static let bestCompression = CompressionLevel(Z_BEST_COMPRESSION)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV04bestC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaultCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1640}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaultCompression", "key.namelength": 18, "key.nameoffset": 1658, "key.offset": 1647, "key.parsed_declaration": "public static let defaultCompression = CompressionLevel(Z_DEFAULT_COMPRESSION)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV07defaultC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1725}], "key.bodylength": 39, "key.bodyoffset": 1755, "key.doc.declaration": "init?(rawValue: Self.RawValue)", "key.doc.discussion": [{"Para": "If there is no value of the type that corresponds with the specified raw value, this initializer returns `nil`. For example:"}, {"CodeListing": ""}], "key.doc.full_as_xml": "<Function><Name>init(rawValue:)</Name><USR>s:SY8rawValuexSg03RawB0Qz_tcfc</USR><Declaration>init?(rawValue: Self.RawValue)</Declaration><CommentParts><Abstract><Para>Creates a new instance with the specified raw value.</Para></Abstract><Parameters><Parameter><Name>rawValue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The raw value to use for the new instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>If there is no value of the type that corresponds with the specified raw value, this initializer returns <codeVoice>nil</codeVoice>. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Legal\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"PaperSize.Legal\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Tabloid\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>", "key.doc.name": "init(rawValue:)", "key.doc.parameters": [{"discussion": [{"Para": "The raw value to use for the new instance."}], "name": "rawValue"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "init(rawValue:)", "key.namelength": 21, "key.nameoffset": 1732, "key.offset": 1732, "key.overrides": [{"key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}], "key.parsed_declaration": "public init(rawValue: Int32)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelVyACs5Int32Vcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$S8rawValue9FritzCore16CompressionLevelVs5Int32V_tcD", "key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1802}], "key.bodylength": 39, "key.bodyoffset": 1834, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init(_:)", "key.namelength": 23, "key.nameoffset": 1809, "key.offset": 1809, "key.parsed_declaration": "public init(_ rawValue: Int32)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelV8rawValueACs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$Sy9FritzCore16CompressionLevelVs5Int32VcD", "key.usr": "s:9FritzCore16CompressionLevelVyACs5Int32Vcfc"}], "key.typename": "CompressionLevel.Type", "key.typeusr": "$S9FritzCore16CompressionLevelVmD", "key.usr": "s:9FritzCore16CompressionLevelV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct GzipError : Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1950}], "key.bodylength": 2018, "key.bodyoffset": 1988, "key.doc.column": 15, "key.doc.comment": "Errors on gzipping/gunzipping based on the zlib error codes.", "key.doc.declaration": "public struct GzipError : Swift.Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"65\" column=\"15\"><Name>GzipError</Name><USR>s:9FritzCore9GzipErrorV</USR><Declaration>public struct GzipError : Swift.Error</Declaration><CommentParts><Abstract><Para>Errors on gzipping/gunzipping based on the zlib error codes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 65, "key.doc.name": "GzipError", "key.doc.type": "Class", "key.doclength": 69, "key.docoffset": 1880, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 1975}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>GzipError</decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2050, "key.name": "GzipError", "key.namelength": 9, "key.nameoffset": 1964, "key.offset": 1957, "key.parsed_declaration": "public struct GzipError: Swift.Error", "key.parsed_scope.end": 152, "key.parsed_scope.start": 65, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore9GzipErrorV\">GzipError</Type>.Kind</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2037}], "key.bodylength": 1021, "key.bodyoffset": 2055, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore9GzipErrorV\">GzipError</ref.struct>.<decl.name>Kind</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 1033, "key.name": "Kind", "key.namelength": 4, "key.nameoffset": 2049, "key.offset": 2044, "key.parsed_declaration": "public enum Kind", "key.parsed_scope.end": 110, "key.parsed_scope.start": 68, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2193, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case stream</Declaration>", "key.doc.column": 14, "key.doc.comment": "The stream structure was inconsistent.\n\n- underlying zlib error: `Z_STREAM_ERROR` (-2)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"74\" column=\"14\"><Name>stream</Name><USR>s:9FritzCore9GzipErrorV4KindO6streamyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The stream structure was inconsistent.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_STREAM_ERROR</codeVoice> (-2)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 74, "key.doc.name": "stream", "key.doc.type": "Other", "key.doclength": 120, "key.docoffset": 2064, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>stream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 2198, "key.offset": 2198, "key.parsed_declaration": "case stream", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6streamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2406, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case data</Declaration>", "key.doc.column": 14, "key.doc.comment": "The input data was corrupted (input stream not conforming to the zlib format or incorrect check value).\n\n- underlying zlib error: `Z_DATA_ERROR` (-3)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"81\" column=\"14\"><Name>data</Name><USR>s:9FritzCore9GzipErrorV4KindO4datayA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The input data was corrupted (input stream not conforming to the zlib format or incorrect check value).</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_DATA_ERROR</codeVoice> (-3)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "data", "key.doc.type": "Other", "key.doclength": 183, "key.docoffset": 2214, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>data</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "data", "key.namelength": 4, "key.nameoffset": 2411, "key.offset": 2411, "key.parsed_declaration": "case data", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO4datayA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2541, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case memory</Declaration>", "key.doc.column": 14, "key.doc.comment": "There was not enough memory.\n\n- underlying zlib error: `Z_MEM_ERROR` (-4)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"88\" column=\"14\"><Name>memory</Name><USR>s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>There was not enough memory.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_MEM_ERROR</codeVoice> (-4)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "memory", "key.doc.type": "Other", "key.doclength": 107, "key.docoffset": 2425, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>memory</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "memory", "key.namelength": 6, "key.nameoffset": 2546, "key.offset": 2546, "key.parsed_declaration": "case memory", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2724, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case buffer</Declaration>", "key.doc.column": 14, "key.doc.comment": "No progress is possible or there was not enough room in the output buffer.\n\n- underlying zlib error: `Z_BUF_ERROR` (-5)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"95\" column=\"14\"><Name>buffer</Name><USR>s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>No progress is possible or there was not enough room in the output buffer.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_BUF_ERROR</codeVoice> (-5)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 95, "key.doc.name": "buffer", "key.doc.type": "Other", "key.doclength": 153, "key.docoffset": 2562, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>buffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "buffer", "key.namelength": 6, "key.nameoffset": 2729, "key.offset": 2729, "key.parsed_declaration": "case buffer", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2917, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case version</Declaration>", "key.doc.column": 14, "key.doc.comment": "The zlib library version is incompatible with the version assumed by the caller.\n\n- underlying zlib error: `Z_VERSION_ERROR` (-6)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"102\" column=\"14\"><Name>version</Name><USR>s:9FritzCore9GzipErrorV4KindO7versionyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The zlib library version is incompatible with the version assumed by the caller.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_VERSION_ERROR</codeVoice> (-6)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 102, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 163, "key.docoffset": 2745, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>version</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "version", "key.namelength": 7, "key.nameoffset": 2922, "key.offset": 2922, "key.parsed_declaration": "case version", "key.parsed_scope.end": 102, "key.parsed_scope.start": 102, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7versionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3048, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case unknown(code: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.doc.column": 14, "key.doc.comment": "An unknown error occurred.\n\n- parameter code: return error by zlib", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"109\" column=\"14\"><Name>unknown(code:)</Name><USR>s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>An unknown error occurred.</Para></Abstract><Parameters><Parameter><Name>code</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>return error by zlib</Para></Discussion></Parameter></Parameters></CommentParts></Other>", "key.doc.line": 109, "key.doc.name": "unknown(code:)", "key.doc.parameters": [{"discussion": [{"Para": "return error by zlib"}], "name": "code"}], "key.doc.type": "Other", "key.doclength": 100, "key.docoffset": 2939, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unknown</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 18, "key.name": "unknown(code:)", "key.namelength": 18, "key.nameoffset": 3053, "key.offset": 3053, "key.parsed_declaration": "case unknown(code: Int)", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "(GzipError.Kind.Type) -> (Int) -> GzipError.Kind", "key.typeusr": "$Sy9FritzCore9GzipErrorV4KindOSi_tcAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF"}]}], "key.typename": "GzipError.Kind.Type", "key.typeusr": "$S9FritzCore9GzipErrorV4KindOmD", "key.usr": "s:9FritzCore9GzipErrorV4KindO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kind: <Type usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3103}], "key.doc.column": 16, "key.doc.comment": "Error kind.", "key.doc.declaration": "public let kind: Kind", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"113\" column=\"16\"><Name>kind</Name><USR>s:9FritzCore9GzipErrorV4kindAC4KindOvp</USR><Declaration>public let kind: Kind</Declaration><CommentParts><Abstract><Para>Error kind.</Para></Abstract></CommentParts></Other>", "key.doc.line": 113, "key.doc.name": "kind", "key.doc.type": "Other", "key.doclength": 16, "key.docoffset": 3083, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kind</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "kind", "key.namelength": 4, "key.nameoffset": 3114, "key.offset": 3110, "key.parsed_declaration": "public let kind: Kind", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "GzipError.Kind", "key.typeusr": "$S9FritzCore9GzipErrorV4KindOD", "key.usr": "s:9FritzCore9GzipErrorV4kindAC4KindOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let message: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3164}], "key.doc.column": 16, "key.doc.comment": "Returned message by zlib.", "key.doc.declaration": "public let message: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"116\" column=\"16\"><Name>message</Name><USR>s:9FritzCore9GzipErrorV7messageSSvp</USR><Declaration>public let message: String</Declaration><CommentParts><Abstract><Para>Returned message by zlib.</Para></Abstract></CommentParts></Other>", "key.doc.line": 116, "key.doc.name": "message", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 3130, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>message</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "message", "key.namelength": 7, "key.nameoffset": 3175, "key.offset": 3171, "key.parsed_declaration": "public let message: String", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore9GzipErrorV7messageSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var localizedDescription: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3928}], "key.bodylength": 34, "key.bodyoffset": 3969, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>localizedDescription</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 69, "key.name": "localizedDescription", "key.namelength": 20, "key.nameoffset": 3939, "key.offset": 3935, "key.parsed_declaration": "public var localizedDescription: String", "key.parsed_scope.end": 150, "key.parsed_scope.start": 147, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore9GzipErrorV20localizedDescriptionSSvp"}], "key.typename": "GzipError.Type", "key.typeusr": "$S9FritzCore9GzipErrorVmD", "key.usr": "s:9FritzCore9GzipErrorV"}, {"key.annotated_decl": "<Declaration>struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</Type>, <Type usr=\"s:SQ\">Equatable</Type>, <Type usr=\"s:SH\">Hashable</Type>, <Type usr=\"s:Sk\">RandomAccessCollection</Type>, <Type usr=\"s:SM\">MutableCollection</Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection</Type></Declaration>", "key.bodylength": 4392, "key.bodyoffset": 4026, "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Data</decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable</ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection</ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection</ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection</ref.protocol></decl.struct>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 4409, "key.modulename": "Foundation", "key.name": "Data", "key.namelength": 4, "key.nameoffset": 4020, "key.offset": 4010, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isGzipped: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4100}], "key.bodylength": 76, "key.bodyoffset": 4128, "key.doc.column": 16, "key.doc.comment": "Whether the data is compressed in gzip format.", "key.doc.declaration": "public var isGzipped: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"160\" column=\"16\"><Name>isGzipped</Name><USR>s:10Foundation4DataV9FritzCoreE9isGzippedSbvp</USR><Declaration>public var isGzipped: Bool { get }</Declaration><CommentParts><Abstract><Para>Whether the data is compressed in gzip format.</Para></Abstract></CommentParts></Other>", "key.doc.line": 160, "key.doc.name": "isGzipped", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 4032, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isGzipped</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 98, "key.name": "isGzipped", "key.namelength": 9, "key.nameoffset": 4111, "key.offset": 4107, "key.parsed_declaration": "public var isGzipped: Bool", "key.parsed_scope.end": 163, "key.parsed_scope.start": 160, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:10Foundation4DataV9FritzCoreE9isGzippedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func gzipped(level: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type> = default) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4472}], "key.bodylength": 1367, "key.bodyoffset": 4555, "key.doc.column": 17, "key.doc.comment": "Create a new `Data` object by compressing the receiver using zlib.\nThrows an error if compression failed.\n\n- parameters:\n- level: Compression level.\n\n- throws: `GzipError`\n- returns: Gzip-compressed `Data` object.", "key.doc.declaration": "public func gzipped(level: CompressionLevel = default) throws -> Data", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"176\" column=\"17\"><Name>gzipped(level:)</Name><USR>s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF</USR><Declaration>public func gzipped(level: CompressionLevel = default) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Data</codeVoice> object by compressing the receiver using zlib. Throws an error if compression failed.</Para></Abstract><ResultDiscussion><Para>Gzip-compressed <codeVoice>Data</codeVoice> object.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>GzipError</codeVoice></Para></ThrowsDiscussion><Discussion><List-Bullet><Item><Para>parameters:</Para></Item><Item><Para>level: Compression level.</Para></Item></List-Bullet></Discussion></CommentParts></Function>", "key.doc.line": 176, "key.doc.name": "gzipped(level:)", "key.doc.result_discussion": [{"Para": "Gzip-compressed `Data` object."}], "key.doc.type": "Function", "key.doclength": 255, "key.docoffset": 4212, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gzipped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1444, "key.name": "gzipped(level:)", "key.namelength": 54, "key.nameoffset": 4484, "key.offset": 4479, "key.parsed_declaration": "public func gzipped(level: CompressionLevel = .defaultCompression) throws -> Data", "key.parsed_scope.end": 215, "key.parsed_scope.start": 176, "key.substructure": [{"key.annotated_decl": "<Declaration>let contiguousData: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contiguousData</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "contiguousData", "key.namelength": 14, "key.nameoffset": 4641, "key.offset": 4637, "key.parsed_declaration": "let contiguousData = self.withUnsafeBytes { Data(bytes: $0, count: self.count) }", "key.parsed_scope.end": 182, "key.parsed_scope.start": 182, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF010contiguousB0L_ACvp"}, {"key.annotated_decl": "<Declaration>var stream: <Type usr=\"c:@T@z_stream\">z_stream</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>stream</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@z_stream\">z_stream</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 4730, "key.offset": 4726, "key.parsed_declaration": "var stream = contiguousData.createZStream()", "key.parsed_scope.end": 183, "key.parsed_scope.start": 183, "key.typename": "z_stream_s", "key.typeusr": "$SSo10z_stream_sVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF6streamL_So02z_I2_sVvp"}, {"key.annotated_decl": "<Declaration>var status: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "status", "key.namelength": 6, "key.nameoffset": 4782, "key.offset": 4778, "key.parsed_declaration": "var status: Int32", "key.parsed_scope.end": 184, "key.parsed_scope.start": 184, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "data", "key.namelength": 4, "key.nameoffset": 5341, "key.offset": 5337, "key.parsed_declaration": "var data = Data(capacity: DataSize.chunk)", "key.parsed_scope.end": 197, "key.parsed_scope.start": 197, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF4dataL_ACvp"}], "key.typename": "(Data) -> (CompressionLevel) throws -> Data", "key.typeusr": "$S5level10Foundation4DataV9FritzCore16CompressionLevelV_tKcD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func gunzipped() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6143}], "key.bodylength": 1929, "key.bodyoffset": 6183, "key.doc.column": 17, "key.doc.comment": "Create a new `Data` object by decompressing the receiver using zlib.\nThrows an error if decompression failed.\n\n- throws: `GzipError`\n- returns: Gzip-decompressed `Data` object.", "key.doc.declaration": "public func gunzipped() throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"225\" column=\"17\"><Name>gunzipped()</Name><USR>s:10Foundation4DataV9FritzCoreE9gunzippedACyKF</USR><Declaration>public func gunzipped() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Data</codeVoice> object by decompressing the receiver using zlib. Throws an error if decompression failed.</Para></Abstract><ResultDiscussion><Para>Gzip-decompressed <codeVoice>Data</codeVoice> object.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>GzipError</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 225, "key.doc.name": "gunzipped()", "key.doc.result_discussion": [{"Para": "Gzip-decompressed `Data` object."}], "key.doc.type": "Function", "key.doclength": 208, "key.docoffset": 5930, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gunzipped</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1963, "key.name": "gunzipped()", "key.namelength": 11, "key.nameoffset": 6155, "key.offset": 6150, "key.parsed_declaration": "public func gunzipped() throws -> Data", "key.parsed_scope.end": 275, "key.parsed_scope.start": 225, "key.substructure": [{"key.annotated_decl": "<Declaration>let contiguousData: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contiguousData</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "contiguousData", "key.namelength": 14, "key.nameoffset": 6269, "key.offset": 6265, "key.parsed_declaration": "let contiguousData = self.withUnsafeBytes { Data(bytes: $0, count: self.count) }", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF010contiguousB0L_ACvp"}, {"key.annotated_decl": "<Declaration>var stream: <Type usr=\"c:@T@z_stream\">z_stream</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>stream</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@z_stream\">z_stream</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 6358, "key.offset": 6354, "key.parsed_declaration": "var stream = contiguousData.createZStream()", "key.parsed_scope.end": 232, "key.parsed_scope.start": 232, "key.typename": "z_stream_s", "key.typeusr": "$SSo10z_stream_sVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF6streamL_So02z_F2_sVvp"}, {"key.annotated_decl": "<Declaration>var status: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "status", "key.namelength": 6, "key.nameoffset": 6410, "key.offset": 6406, "key.parsed_declaration": "var status: Int32", "key.parsed_scope.end": 233, "key.parsed_scope.start": 233, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 51, "key.name": "data", "key.namelength": 4, "key.nameoffset": 6911, "key.offset": 6907, "key.parsed_declaration": "var data = Data(capacity: contiguousData.count * 2)", "key.parsed_scope.end": 246, "key.parsed_scope.start": 246, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF4dataL_ACvp"}], "key.typename": "(Data) -> () throws -> Data", "key.typeusr": "$S10Foundation4DataVyKcD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF"}], "key.typename": "Data.Type", "key.typeusr": "$S10Foundation4DataVmD", "key.usr": "s:10Foundation4DataV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2794, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorCode) public enum ErrorCode : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 220}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 198}], "key.bodylength": 129, "key.bodyoffset": 248, "key.doc.column": 13, "key.doc.comment": "The type of error encountered", "key.doc.declaration": "@objc(FritzErrorCode) public enum ErrorCode : Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"13\" column=\"13\"><Name>ErrorCode</Name><USR>c:@M@FritzCore@E@FritzErrorCode</USR><Declaration>@objc(FritzErrorCode) public enum ErrorCode : Int</Declaration><CommentParts><Abstract><Para>The type of error encountered</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "ErrorCode", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 164, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 243}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorCode)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ErrorCode</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 151, "key.name": "ErrorCode", "key.namelength": 9, "key.nameoffset": 232, "key.offset": 227, "key.parsed_declaration": "public enum ErrorCode: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 253, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelCompilation</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompilation</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "modelCompilation", "key.namelength": 16, "key.nameoffset": 258, "key.offset": 258, "key.parsed_declaration": "case modelCompilation", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$Sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelCompilation"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 279, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDecryption</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryption</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "modelDecryption", "key.namelength": 15, "key.nameoffset": 284, "key.offset": 284, "key.parsed_declaration": "case modelDecryption", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$Sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDecryption"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 304, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDownload</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownload</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "modelDownload", "key.namelength": 13, "key.nameoffset": 309, "key.offset": 309, "key.parsed_declaration": "case modelDownload", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$Sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDownload"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 327, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case sessionDisabled</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionDisabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "sessionDisabled", "key.namelength": 15, "key.nameoffset": 332, "key.offset": 332, "key.parsed_declaration": "case sessionDisabled", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$Sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeSessionDisabled"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 352, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelInitialization</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInitialization</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "modelInitialization", "key.namelength": 19, "key.nameoffset": 357, "key.offset": 357, "key.parsed_declaration": "case modelInitialization", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$Sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelInitialization"}]}], "key.typename": "ErrorCode.Type", "key.typeusr": "$S9FritzCore9ErrorCodeOmD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzError) public final class FritzError : <Type usr=\"c:objc(cs)NSError\">NSError</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 661}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 654}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 17, "key.offset": 575}], "key.bodylength": 1221, "key.bodyoffset": 694, "key.doc.column": 20, "key.doc.comment": "Class representing a Fritz-related error\n\n- Note: You subscribe to a notification to be notified anytime an error is encountered in the SDK.\n\n- SeeAlso: `Notification.Name.fritzError`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError", "key.doc.discussion": [{"Note": ""}, {"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"30\" column=\"20\"><Name>FritzError</Name><USR>c:@M@FritzCore@objc(cs)FritzError</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError</Declaration><CommentParts><Abstract><Para>Class representing a Fritz-related error</Para></Abstract><Discussion><Note><Para>You subscribe to a notification to be notified anytime an error is encountered in the SDK.</Para></Note><See><Para><codeVoice>Notification.Name.fritzError</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 30, "key.doc.name": "FritzError", "key.doc.type": "Class", "key.doclength": 194, "key.docoffset": 380, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 685}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzError)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzError</decl.name> : <ref.class usr=\"c:objc(cs)NSError\">NSError</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSError"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1249, "key.name": "FritzError", "key.namelength": 10, "key.nameoffset": 673, "key.offset": 667, "key.parsed_declaration": "public final class FritzError: NSError", "key.parsed_scope.end": 64, "key.parsed_scope.start": 30, "key.runtime_name": "FritzError", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 733}], "key.doc.column": 16, "key.doc.comment": "Session error ocurred in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"33\" column=\"16\"><Name>session</Name><USR>s:9FritzCore0A5ErrorC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session error ocurred in</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 700, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 744, "key.offset": 740, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore0A5ErrorC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 808}], "key.doc.column": 16, "key.doc.comment": "Model identifier related to error", "key.doc.declaration": "public let modelIdentifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"36\" column=\"16\"><Name>modelIdentifier</Name><USR>s:9FritzCore0A5ErrorC15modelIdentifierSSvp</USR><Declaration>public let modelIdentifier: String</Declaration><CommentParts><Abstract><Para>Model identifier related to error</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 766, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 819, "key.offset": 815, "key.parsed_declaration": "public let modelIdentifier: String", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore0A5ErrorC15modelIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 876}], "key.doc.column": 16, "key.doc.comment": "Actual thrown error", "key.doc.declaration": "public let error: Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"39\" column=\"16\"><Name>error</Name><USR>s:9FritzCore0A5ErrorC5errors0C0_pvp</USR><Declaration>public let error: Error</Declaration><CommentParts><Abstract><Para>Actual thrown error</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "error", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "error", "key.namelength": 5, "key.nameoffset": 887, "key.offset": 883, "key.parsed_declaration": "public let error: Error", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "Error", "key.typeusr": "$Ss5Error_pD", "key.usr": "s:9FritzCore0A5ErrorC5errors0C0_pvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func post(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1163}], "key.bodylength": 141, "key.bodyoffset": 1262, "key.doc.column": 24, "key.doc.comment": "Posts a Fritz error to the default notification center", "key.doc.declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"47\" column=\"24\"><Name>post(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ</USR><Declaration>public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Posts a Fritz error to the default notification center</Para></Abstract></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "post(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1100, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 234, "key.name": "post(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1182, "key.offset": 1170, "key.parsed_declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC4post5erroryAC_tFZ\">post(error:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 100, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1275, "key.offset": 1271, "key.parsed_declaration": "let error = FritzError(session: session, modelIdentifier: modelIdentifier, code: code, error: error)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC5errors0C0_pvp\">error</RelatedName>"}], "key.typename": "FritzError", "key.typeusr": "$S9FritzCore0A5ErrorCD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZAHL0_ACvp"}], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> ()", "key.typeusr": "$S7session15modelIdentifier4code5errory9FritzCore7SessionC_SSAE9ErrorCodeOs0I0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1449}], "key.bodylength": 200, "key.bodyoffset": 1536, "key.doc.column": 12, "key.doc.comment": "Create an internal Fritz error", "key.doc.declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"53\" column=\"12\"><Name>init(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc</USR><Declaration>public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Create an internal Fritz error</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "init(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 35, "key.docoffset": 1410, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 281, "key.name": "init(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1456, "key.offset": 1456, "key.parsed_declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:\">init(coder:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> FritzError", "key.typeusr": "$S7session15modelIdentifier4code5error9FritzCore0F5ErrorCAE7SessionC_SSAE0H4CodeOs0H0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init?(coder aDecoder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1809}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1800}], "key.bodylength": 65, "key.bodyoffset": 1848, "key.doc.column": 21, "key.doc.comment": "Do not create an instance of this class directly", "key.doc.declaration": "required public init?(coder aDecoder: NSCoder)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"61\" column=\"21\"><Name>init(coder:)</Name><USR>c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:</USR><Declaration>required public init?(coder aDecoder: NSCoder)</Declaration><CommentParts><Abstract><Para>Do not create an instance of this class directly</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "init(coder:)", "key.doc.type": "Function", "key.doclength": 53, "key.docoffset": 1743, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder</decl.var.parameter.argument_label> <decl.var.parameter.name>aDecoder</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 98, "key.name": "init(coder:)", "key.namelength": 30, "key.nameoffset": 1816, "key.offset": 1816, "key.overrides": [{"key.usr": "c:objc(pl)NSCoding(im)initWithCoder:"}], "key.parsed_declaration": "required public init?(coder aDecoder: NSCoder)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc\">init(session:modelIdentifier:code:error:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (NSCoder) -> FritzError?", "key.typeusr": "$S5coder9FritzCore0B5ErrorCSgSo7NSCoderC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:"}], "key.typename": "FritzError.Type", "key.typeusr": "$S9FritzCore0A5ErrorCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - JSON", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1921}, {"key.annotated_decl": "<Declaration>protocol Error</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}], "key.bodylength": 779, "key.bodyoffset": 2013, "key.doc.declaration": "protocol Error", "key.doc.discussion": [{"Para": "Any type that declares conformance to the `Error` protocol can be used to represent an error in Swift\u2019s error handling system. Because the `Error` protocol has no requirements of its own, you can declare conformance on any custom type you create."}, {"Para": "Swift\u2019s enumerations are well suited to represent simple errors. Create an enumeration that conforms to the `Error` protocol with a case for each possible error. If there are additional details about the error that could be helpful for recovery, use associated values to include that information."}, {"Para": "The following example shows an `IntParsingError` enumeration that captures two different kinds of errors that can occur when parsing an integer from a string: overflow, where the value represented by the string is too large for the integer data type, and invalid input, where nonnumeric characters are found within the input."}, {"CodeListing": ""}, {"Para": "The `invalidInput` case includes the invalid character as an associated value."}, {"Para": "The next code sample shows a possible extension to the `Int` type that parses the integer value of a `String` instance, throwing an error when there is a problem during parsing."}, {"CodeListing": ""}, {"Para": "When calling the new `Int` initializer within a `do` statement, you can use pattern matching to match specific cases of your custom error type and access their associated values, as in the example below."}, {"CodeListing": ""}, {"Para": "Sometimes you may want different error states to include the same common data, such as the position in a file or some of your application\u2019s state. When you do, use a structure to represent errors. The following example uses a structure to represent an error when parsing an XML document, including the line and column numbers where the error occurred:"}, {"CodeListing": ""}, {"Para": "Once again, use pattern matching to conditionally catch errors. Here\u2019s how you can catch any `XMLParsingError` errors thrown by the `parse(_:)` function:"}, {"CodeListing": ""}], "key.doc.full_as_xml": "<Class><Name>Error</Name><USR>s:s5ErrorP</USR><Declaration>protocol Error</Declaration><CommentParts><Abstract><Para>A type representing an error value that can be thrown.</Para></Abstract><Discussion><Para>Any type that declares conformance to the <codeVoice>Error</codeVoice> protocol can be used to represent an error in Swift\u2019s error handling system. Because the <codeVoice>Error</codeVoice> protocol has no requirements of its own, you can declare conformance on any custom type you create.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Using Enumerations as Errors<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Swift\u2019s enumerations are well suited to represent simple errors. Create an enumeration that conforms to the <codeVoice>Error</codeVoice> protocol with a case for each possible error. If there are additional details about the error that could be helpful for recovery, use associated values to include that information.</Para><Para>The following example shows an <codeVoice>IntParsingError</codeVoice> enumeration that captures two different kinds of errors that can occur when parsing an integer from a string: overflow, where the value represented by the string is too large for the integer data type, and invalid input, where nonnumeric characters are found within the input.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum IntParsingError: Error {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case overflow]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case invalidInput(String)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>invalidInput</codeVoice> case includes the invalid character as an associated value.</Para><Para>The next code sample shows a possible extension to the <codeVoice>Int</codeVoice> type that parses the integer value of a <codeVoice>String</codeVoice> instance, throwing an error when there is a problem during parsing.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension Int {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    init(validating input: String) throws {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        if !_isValid(s) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[            throw IntParsingError.invalidInput(s)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>When calling the new <codeVoice>Int</codeVoice> initializer within a <codeVoice>do</codeVoice> statement, you can use pattern matching to match specific cases of your custom error type and access their associated values, as in the example below.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[do {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let price = try Int(validating: \"$100\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch IntParsingError.invalidInput(let invalid) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Invalid character: '\\(invalid)'\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch IntParsingError.overflow {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Overflow error\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Other error\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Invalid character: '$'\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Including More Data in Errors<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Sometimes you may want different error states to include the same common data, such as the position in a file or some of your application\u2019s state. When you do, use a structure to represent errors. The following example uses a structure to represent an error when parsing an XML document, including the line and column numbers where the error occurred:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct XMLParsingError: Error {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    enum ErrorKind {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case invalidCharacter]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case mismatchedTag]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case internalError]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let line: Int]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let column: Int]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let kind: ErrorKind]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[func parse(_ source: String) throws -> XMLDoc {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    throw XMLParsingError(line: 19, column: 5, kind: .mismatchedTag)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Once again, use pattern matching to conditionally catch errors. Here\u2019s how you can catch any <codeVoice>XMLParsingError</codeVoice> errors thrown by the <codeVoice>parse(_:)</codeVoice> function:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[do {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let xmlDoc = try parse(myXMLData)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch let e as XMLParsingError {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Parsing error: \\(e.kind) [\\(e.line):\\(e.column)]\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Other error: \\(error)\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Parsing error: mismatchedTag [19:5]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Class>", "key.doc.name": "Error", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Error</decl.name></decl.protocol>", "key.groupname": "Misc", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 797, "key.modulename": "Swift", "key.name": "Error", "key.namelength": 5, "key.nameoffset": 2006, "key.offset": 1996, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toJSON() -&gt; [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2078}], "key.bodylength": 673, "key.bodyoffset": 2117, "key.doc.column": 17, "key.doc.comment": "Converts an error to json to send over the network", "key.doc.declaration": "public func toJSON() -> [String : Any]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"72\" column=\"17\"><Name>toJSON()</Name><USR>s:s5ErrorP9FritzCoreE6toJSONSDySSypGyF</USR><Declaration>public func toJSON() -&gt; [String : Any]</Declaration><CommentParts><Abstract><Para>Converts an error to json to send over the network</Para></Abstract></CommentParts></Function>", "key.doc.line": 72, "key.doc.name": "toJSON()", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 2019, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toJSON</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Misc", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 706, "key.name": "toJSON()", "key.namelength": 8, "key.nameoffset": 2090, "key.offset": 2085, "key.parsed_declaration": "public func toJSON() -> [String: Any]", "key.parsed_scope.end": 94, "key.parsed_scope.start": 72, "key.substructure": [], "key.typename": "<Self where Self : Error> (Self) -> () -> [String : Any]", "key.typeusr": "$SSDySSypGycD", "key.usr": "s:s5ErrorP9FritzCoreE6toJSONSDySSypGyF"}], "key.typename": "Error.Protocol", "key.typeusr": "$Ss5Error_pmD", "key.usr": "s:s5ErrorP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7357, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 682}], "key.bodylength": 1098, "key.bodyoffset": 794, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 784}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1126, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 773, "key.offset": 767, "key.parsed_declaration": "public class FritzCore: NSObject", "key.parsed_scope.end": 64, "key.parsed_scope.start": 25, "key.runtime_name": "FritzCore", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configuration) public static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 909}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 884}], "key.bodylength": 274, "key.bodyoffset": 957, "key.doc.column": 23, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(configuration) public static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"31\" column=\"23\"><Name>configuration</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration</USR><Declaration>@objc(configuration) public static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 855, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configuration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 316, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 927, "key.offset": 916, "key.parsed_declaration": "public static var configuration: Configuration", "key.parsed_scope.end": 36, "key.parsed_scope.start": 31, "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configure) public static func configure()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1291}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 1270}], "key.bodylength": 44, "key.bodyoffset": 1323, "key.doc.column": 24, "key.doc.comment": "Configure the Fritz SDK", "key.doc.declaration": "@objc(configure) public static func configure()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"40\" column=\"24\"><Name>configure()</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configure</USR><Declaration>@objc(configure) public static func configure()</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "configure()", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 1238, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configure)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 70, "key.name": "configure()", "key.namelength": 11, "key.nameoffset": 1310, "key.offset": 1298, "key.parsed_declaration": "public static func configure()", "key.parsed_scope.end": 42, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:\">configure(with:)</RelatedName>"}], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configure"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configureWith:) public static func configure(with configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1460}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1434}], "key.bodylength": 49, "key.bodyoffset": 1525, "key.doc.column": 24, "key.doc.comment": "Configure the Fritz SDK with a custom configuration", "key.doc.declaration": "@objc(configureWith:) public static func configure(with configuration: Configuration)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"46\" column=\"24\"><Name>configure(with:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:</USR><Declaration>@objc(configureWith:) public static func configure(with configuration: Configuration)</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK with a custom configuration</Para></Abstract></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "configure(with:)", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 1374, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configureWith:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>configuration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 108, "key.name": "configure(with:)", "key.namelength": 44, "key.nameoffset": 1479, "key.offset": 1467, "key.parsed_declaration": "public static func configure(with configuration: Configuration)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configure\">configure()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> (Configuration) -> ()", "key.typeusr": "$S4withy9FritzCore13ConfigurationC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1802}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 1778}], "key.bodylength": 37, "key.bodyoffset": 1853, "key.doc.column": 24, "key.doc.comment": "Enables Fritz SDK logging\n\n- Parameter level:\n-- 0: Debug logging\n-- 1: Info logging\n-- 2: Warn logging\n-- 3: Error logging\n-- 4: Disable logging", "key.doc.declaration": "@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"61\" column=\"24\"><Name>setLogLevel(_:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:</USR><Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)</Declaration><CommentParts><Abstract><Para>Enables Fritz SDK logging</Para></Abstract><Parameters><Parameter><Name>level</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para> \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "setLogLevel(_:)", "key.doc.parameters": [{"discussion": [{"Para": " \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging"}], "name": "level"}], "key.doc.type": "Function", "key.doclength": 192, "key.docoffset": 1581, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(setLogLevel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setLogLevel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>level</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 82, "key.name": "setLogLevel(_:)", "key.namelength": 30, "key.nameoffset": 1821, "key.offset": 1809, "key.parsed_declaration": "public static func setLogLevel(_ level: LogLevel)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.substructure": [], "key.typename": "(FritzCore.Type) -> (LogLevel) -> ()", "key.typeusr": "$Syy9FritzCore8LogLevelOcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Instance Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1898}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}], "key.bodylength": 415, "key.bodyoffset": 2009, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 437, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 1998, "key.offset": 1988, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let instanceIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2066}], "key.doc.column": 23, "key.doc.comment": "Instance identifier, persisted to defaults", "key.doc.declaration": "public static let instanceIdentifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"72\" column=\"23\"><Name>instanceIdentifier</Name><USR>s:9FritzCoreAAC18instanceIdentifierSSvpZ</USR><Declaration>public static let instanceIdentifier: String</Declaration><CommentParts><Abstract><Para>Instance identifier, persisted to defaults</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "instanceIdentifier", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2015, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>instanceIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 350, "key.name": "instanceIdentifier", "key.namelength": 18, "key.nameoffset": 2084, "key.offset": 2073, "key.parsed_declaration": "public static let instanceIdentifier: String =", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCoreAAC18instanceIdentifierSSvpZ"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Session Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2430}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}], "key.bodylength": 2056, "key.bodyoffset": 2540, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2078, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 2529, "key.offset": 2519, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var sessionIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2596}], "key.bodylength": 80, "key.bodyoffset": 2641, "key.doc.column": 23, "key.doc.comment": "Session identifier, persisted to defaults", "key.doc.declaration": "public static var sessionIdentifier: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"88\" column=\"23\"><Name>sessionIdentifier</Name><USR>s:9FritzCoreAAC17sessionIdentifierSSvpZ</USR><Declaration>public static var sessionIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>Session identifier, persisted to defaults</Para></Abstract></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "sessionIdentifier", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 2546, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 119, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 2614, "key.offset": 2603, "key.parsed_declaration": "public static var sessionIdentifier: String", "key.parsed_scope.end": 90, "key.parsed_scope.start": 88, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCoreAAC17sessionIdentifierSSvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func extendSessionIdentifier()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2779}], "key.bodylength": 50, "key.bodyoffset": 2825, "key.doc.column": 24, "key.doc.comment": "Extends the lifetime of session identifier", "key.doc.declaration": "public static func extendSessionIdentifier()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"93\" column=\"24\"><Name>extendSessionIdentifier()</Name><USR>s:9FritzCoreAAC23extendSessionIdentifieryyFZ</USR><Declaration>public static func extendSessionIdentifier()</Declaration><CommentParts><Abstract><Para>Extends the lifetime of session identifier</Para></Abstract></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "extendSessionIdentifier()", "key.doc.type": "Function", "key.doclength": 47, "key.docoffset": 2728, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extendSessionIdentifier</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 90, "key.name": "extendSessionIdentifier()", "key.namelength": 25, "key.nameoffset": 2798, "key.offset": 2786, "key.parsed_declaration": "public static func extendSessionIdentifier()", "key.parsed_scope.end": 95, "key.parsed_scope.start": 93, "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCoreAAC23extendSessionIdentifieryyFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public static func resetSessionIdentifierIfNeeded() -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3051}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3028}], "key.bodylength": 313, "key.bodyoffset": 3114, "key.doc.column": 24, "key.doc.comment": "Resets the session identifier if last access was more than the default expiration interval\nReturns the current session identifier", "key.doc.declaration": "public static func resetSessionIdentifierIfNeeded() -> String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"100\" column=\"24\"><Name>resetSessionIdentifierIfNeeded()</Name><USR>s:9FritzCoreAAC30resetSessionIdentifierIfNeededSSyFZ</USR><Declaration>public static func resetSessionIdentifierIfNeeded() -&gt; String</Declaration><CommentParts><Abstract><Para>Resets the session identifier if last access was more than the default expiration interval Returns the current session identifier</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "resetSessionIdentifierIfNeeded()", "key.doc.type": "Function", "key.doclength": 142, "key.docoffset": 2882, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resetSessionIdentifierIfNeeded</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 370, "key.name": "resetSessionIdentifierIfNeeded()", "key.namelength": 32, "key.nameoffset": 3070, "key.offset": 3058, "key.parsed_declaration": "public static func resetSessionIdentifierIfNeeded() -> String", "key.parsed_scope.end": 108, "key.parsed_scope.start": 100, "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> String", "key.typeusr": "$SSSycD", "key.usr": "s:9FritzCoreAAC30resetSessionIdentifierIfNeededSSyFZ"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - User Agent", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4602}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}], "key.bodylength": 2540, "key.bodyoffset": 4704, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2562, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 4693, "key.offset": 4683, "key.substructure": [], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>struct Date : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</Type>, <Type usr=\"s:SL\">Comparable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7247}], "key.bodylength": 84, "key.bodyoffset": 7270, "key.doc.declaration": "struct Date : ReferenceConvertible, Comparable, Equatable", "key.doc.discussion": [{"Para": "A `Date` is independent of a particular calendar or time zone. To represent a `Date` to a user, you must interpret it in the context of a `Calendar`."}], "key.doc.full_as_xml": "<Class><Name>Date</Name><USR>s:10Foundation4DateV</USR><Declaration>struct Date : ReferenceConvertible, Comparable, Equatable</Declaration><CommentParts><Abstract><Para><codeVoice>Date</codeVoice> represents a single point in time.</Para></Abstract><Discussion><Para>A <codeVoice>Date</codeVoice> is independent of a particular calendar or time zone. To represent a <codeVoice>Date</codeVoice> to a user, you must interpret it in the context of a <codeVoice>Calendar</codeVoice>.</Para></Discussion></CommentParts></Class>", "key.doc.name": "Date", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Date</decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</ref.protocol>, <ref.protocol usr=\"s:SL\">Comparable</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 101, "key.modulename": "Foundation", "key.name": "Date", "key.namelength": 4, "key.nameoffset": 7264, "key.offset": 7254, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func elapsed() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.bodylength": 51, "key.bodyoffset": 7301, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>elapsed</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 78, "key.name": "elapsed()", "key.namelength": 9, "key.nameoffset": 7280, "key.offset": 7275, "key.parsed_declaration": "func elapsed() -> Double", "key.parsed_scope.end": 203, "key.parsed_scope.start": 201, "key.substructure": [], "key.typename": "(Date) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:10Foundation4DateV9FritzCoreE7elapsedSdyF"}], "key.typename": "Date.Type", "key.typeusr": "$S10Foundation4DateVmD", "key.usr": "s:10Foundation4DateV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2242, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum LogLevel : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 367}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 361}], "key.bodylength": 126, "key.bodyoffset": 394, "key.doc.column": 13, "key.doc.comment": "Logging level for the SDK\n\n- debug: log all logs\n- info: log info logs or higher\n- warn: log warning logs or higher\n- error: log error logs only\n- none: disable logging", "key.doc.declaration": "@objc public enum LogLevel : Int", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"19\" column=\"13\"><Name>LogLevel</Name><USR>c:@M@FritzCore@E@LogLevel</USR><Declaration>@objc public enum LogLevel : Int</Declaration><CommentParts><Abstract><Para>Logging level for the SDK</Para></Abstract><Discussion><List-Bullet><Item><Para>debug: log all logs</Para></Item><Item><Para>info: log info logs or higher</Para></Item><Item><Para>warn: log warning logs or higher</Para></Item><Item><Para>error: log error logs only</Para></Item><Item><Para>none: disable logging</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "LogLevel", "key.doc.type": "Other", "key.doclength": 196, "key.docoffset": 165, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 389}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>LogLevel</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 147, "key.name": "LogLevel", "key.namelength": 8, "key.nameoffset": 379, "key.offset": 374, "key.parsed_declaration": "public enum LogLevel: Int", "key.parsed_scope.end": 27, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 399, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case debug = 0</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 412}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>debug</decl.name> = <syntaxtype.number>0</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "debug", "key.namelength": 5, "key.nameoffset": 404, "key.offset": 404, "key.parsed_declaration": "case debug = 0", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$Sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelDebug"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 418, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case info</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>info</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "info", "key.namelength": 4, "key.nameoffset": 423, "key.offset": 423, "key.parsed_declaration": "case info", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$Sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelInfo"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 432, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case warn</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>warn</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "warn", "key.namelength": 4, "key.nameoffset": 437, "key.offset": 437, "key.parsed_declaration": "case warn", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$Sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelWarn"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 446, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 451, "key.offset": 451, "key.parsed_declaration": "case error", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$Sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelError"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 461, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case none</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>none</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "none", "key.namelength": 4, "key.nameoffset": 466, "key.offset": 466, "key.parsed_declaration": "case none", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$Sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelNone"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var shared: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 476}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shared</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 36, "key.name": "shared", "key.namelength": 6, "key.nameoffset": 494, "key.offset": 483, "key.parsed_declaration": "public static var shared: LogLevel = .error", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "LogLevel", "key.typeusr": "$S9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore8LogLevelO6sharedACvpZ"}], "key.typename": "LogLevel.Type", "key.typeusr": "$S9FritzCore8LogLevelOmD", "key.usr": "c:@M@FritzCore@E@LogLevel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Logger</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 523}], "key.bodylength": 1695, "key.bodyoffset": 545, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Logger</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1711, "key.name": "Logger", "key.namelength": 6, "key.nameoffset": 537, "key.offset": 530, "key.parsed_declaration": "public struct Logger", "key.parsed_scope.end": 78, "key.parsed_scope.start": 29, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 551}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>level</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "level", "key.namelength": 5, "key.nameoffset": 562, "key.offset": 558, "key.parsed_declaration": "public let level: LogLevel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "LogLevel", "key.typeusr": "$S9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore6LoggerV5levelAA8LogLevelOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 583}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 594, "key.offset": 590, "key.parsed_declaration": "public let name: String", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type>, level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 612}], "key.bodylength": 57, "key.bodyoffset": 666, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 105, "key.name": "init(name:level:)", "key.namelength": 45, "key.nameoffset": 619, "key.offset": 619, "key.parsed_declaration": "public init(name: String, level: LogLevel = .shared)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 35, "key.substructure": [], "key.typename": "(Logger.Type) -> (String, LogLevel) -> Logger", "key.typeusr": "$S4name5level9FritzCore6LoggerVSS_AC8LogLevelOtcD", "key.usr": "s:9FritzCore6LoggerV4name5levelACSS_AA8LogLevelOtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func debug(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 777}], "key.bodylength": 185, "key.bodyoffset": 813, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `debug`", "key.doc.declaration": "public func debug(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"41\" column=\"17\"><Name>debug(_:)</Name><USR>s:9FritzCore6LoggerV5debugyyypd_tF</USR><Declaration>public func debug(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>debug</codeVoice></Para></Abstract></CommentParts></Function>", "key.doc.line": 41, "key.doc.name": "debug(_:)", "key.doc.type": "Function", "key.doclength": 43, "key.docoffset": 730, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>debug</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 215, "key.name": "debug(_:)", "key.namelength": 22, "key.nameoffset": 789, "key.offset": 784, "key.parsed_declaration": "public func debug(_ items: Any...)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 41, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 879, "key.offset": 875, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func info(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1060}], "key.bodylength": 183, "key.bodyoffset": 1095, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `info` or lower", "key.doc.declaration": "public func info(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"48\" column=\"17\"><Name>info(_:)</Name><USR>s:9FritzCore6LoggerV4infoyyypd_tF</USR><Declaration>public func info(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>info</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 48, "key.doc.name": "info(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1005, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>info</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "info(_:)", "key.namelength": 21, "key.nameoffset": 1072, "key.offset": 1067, "key.parsed_declaration": "public func info(_ items: Any...)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1160, "key.offset": 1156, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func warn(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1340}], "key.bodylength": 183, "key.bodyoffset": 1375, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `warn` or lower", "key.doc.declaration": "public func warn(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"55\" column=\"17\"><Name>warn(_:)</Name><USR>s:9FritzCore6LoggerV4warnyyypd_tF</USR><Declaration>public func warn(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>warn</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "warn(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1285, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>warn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "warn(_:)", "key.namelength": 21, "key.nameoffset": 1352, "key.offset": 1347, "key.parsed_declaration": "public func warn(_ items: Any...)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1440, "key.offset": 1436, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func error(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1621}], "key.bodylength": 185, "key.bodyoffset": 1657, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `error` or lower", "key.doc.declaration": "public func error(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"62\" column=\"17\"><Name>error(_:)</Name><USR>s:9FritzCore6LoggerV5erroryyypd_tF</USR><Declaration>public func error(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>error</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "error(_:)", "key.doc.type": "Function", "key.doclength": 52, "key.docoffset": 1565, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 215, "key.name": "error(_:)", "key.namelength": 22, "key.nameoffset": 1633, "key.offset": 1628, "key.parsed_declaration": "public func error(_ items: Any...)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 62, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1723, "key.offset": 1719, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func log(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1961}], "key.bodylength": 125, "key.bodyoffset": 1995, "key.doc.column": 17, "key.doc.comment": "Prints to stdout\n- Note: Should use one of the functions above that are controlled by log level", "key.doc.declaration": "public func log(_ items: Any...)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"70\" column=\"17\"><Name>log(_:)</Name><USR>s:9FritzCore6LoggerV3logyyypd_tF</USR><Declaration>public func log(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout</Para></Abstract><Discussion><Note><Para>Should use one of the functions above that are controlled by log level</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 70, "key.doc.name": "log(_:)", "key.doc.type": "Function", "key.doclength": 108, "key.docoffset": 1849, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>log</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 153, "key.name": "log(_:)", "key.namelength": 20, "key.nameoffset": 1973, "key.offset": 1968, "key.parsed_declaration": "public func log(_ items: Any...)", "key.parsed_scope.end": 73, "key.parsed_scope.start": 70, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 2008, "key.offset": 2004, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF"}], "key.typename": "Logger.Type", "key.typeusr": "$S9FritzCore6LoggerVmD", "key.usr": "s:9FritzCore6LoggerV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1338, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>class NSNotification : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSCopying\">NSCopying</Type>, <Type usr=\"c:objc(pl)NSCoding\">NSCoding</Type></Declaration>", "key.bodylength": 664, "key.bodyoffset": 198, "key.doc.column": 12, "key.doc.declaration": "class NSNotification : NSObject, NSCopying, NSCoding", "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h\" line=\"15\" column=\"12\"><Name>NSNotification</Name><USR>c:objc(cs)NSNotification</USR><Declaration>class NSNotification : NSObject, NSCopying, NSCoding</Declaration><Abstract><Para>**************\tNotifications\t***************</Para></Abstract></Other>", "key.doc.line": 15, "key.doc.name": "NSNotification", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>NSNotification</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSCopying\">NSCopying</ref.protocol>, <ref.protocol usr=\"c:objc(pl)NSCoding\">NSCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 691, "key.modulename": "Foundation.NSNotification", "key.name": "NSNotification", "key.namelength": 14, "key.nameoffset": 182, "key.offset": 172, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorNotificationKey) public static let errorNotificationKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 312}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 275}], "key.doc.column": 23, "key.doc.comment": "Subscribe to this notification to receive Fritz-related errors", "key.doc.declaration": "@objc(FritzErrorNotificationKey) public static let errorNotificationKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"15\" column=\"23\"><Name>errorNotificationKey</Name><USR>c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzErrorNotificationKey</USR><Declaration>@objc(FritzErrorNotificationKey) public static let errorNotificationKey: String</Declaration><CommentParts><Abstract><Para>Subscribe to this notification to receive Fritz-related errors</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "errorNotificationKey", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 204, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorNotificationKey)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>errorNotificationKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "errorNotificationKey", "key.namelength": 20, "key.nameoffset": 330, "key.offset": 319, "key.parsed_declaration": "public static let errorNotificationKey = \"com.fritz.sdk.notifications.error\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzErrorNotificationKey"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 521}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 477}], "key.doc.column": 23, "key.doc.comment": "Subscribe to this notification to know when a Fritz model has been updated", "key.doc.declaration": "@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"19\" column=\"23\"><Name>modelUpdatedNotificationKey</Name><USR>c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelUpdatedNotificationKey</USR><Declaration>@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: String</Declaration><CommentParts><Abstract><Para>Subscribe to this notification to know when a Fritz model has been updated</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "modelUpdatedNotificationKey", "key.doc.type": "Other", "key.doclength": 79, "key.docoffset": 394, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelUpdatedNotificationKey)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelUpdatedNotificationKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 84, "key.name": "modelUpdatedNotificationKey", "key.namelength": 27, "key.nameoffset": 539, "key.offset": 528, "key.parsed_declaration": "public static let modelUpdatedNotificationKey = \"com.fritz.sdk.notifications.model-updated\"", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelUpdatedNotificationKey"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelActiveModelChangedNotificationKey) public static let activeModelChangedNotificationKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 757}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 702}], "key.doc.column": 23, "key.doc.comment": "Subscribe to this notification to know when a Fritz activeModel has changed", "key.doc.declaration": "@objc(FritzModelActiveModelChangedNotificationKey) public static let activeModelChangedNotificationKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"23\" column=\"23\"><Name>activeModelChangedNotificationKey</Name><USR>c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelActiveModelChangedNotificationKey</USR><Declaration>@objc(FritzModelActiveModelChangedNotificationKey) public static let activeModelChangedNotificationKey: String</Declaration><CommentParts><Abstract><Para>Subscribe to this notification to know when a Fritz activeModel has changed</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "activeModelChangedNotificationKey", "key.doc.type": "Other", "key.doclength": 80, "key.docoffset": 618, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelActiveModelChangedNotificationKey)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>activeModelChangedNotificationKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "activeModelChangedNotificationKey", "key.namelength": 33, "key.nameoffset": 775, "key.offset": 764, "key.parsed_declaration": "public static let activeModelChangedNotificationKey = \"com.fritz.sdk.notifications.active-model-changed\"", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelActiveModelChangedNotificationKey"}], "key.typename": "NSNotification.Type", "key.typeusr": "$SSo14NSNotificationCmD", "key.usr": "c:objc(cs)NSNotification"}, {"key.annotated_decl": "<Declaration>typealias <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.Name = <Type usr=\"c:objc(cs)NSNotification\">NSNotification</Type>.<Type usr=\"c:@T@NSNotificationName\">Name</Type></Declaration>", "key.bodylength": 442, "key.bodyoffset": 894, "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<decl.name>Name</decl.name> = <ref.class usr=\"c:objc(cs)NSNotification\">NSNotification</ref.class>.<ref.struct usr=\"c:@T@NSNotificationName\">Name</ref.struct></decl.typealias>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 472, "key.modulename": "Foundation", "key.name": "Notification.Name", "key.namelength": 17, "key.nameoffset": 875, "key.offset": 865, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let fritzError: <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.<Type usr=\"s:10Foundation12NotificationV4Namea\">Name</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 952}], "key.doc.column": 23, "key.doc.comment": "All Fritz errors are posted under this name", "key.doc.declaration": "public static let fritzError: Notification.Name", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"29\" column=\"23\"><Name>fritzError</Name><USR>s:So18NSNotificationNamea9FritzCoreE10fritzErrorABvpZ</USR><Declaration>public static let fritzError: Notification.Name</Declaration><CommentParts><Abstract><Para>All Fritz errors are posted under this name</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "fritzError", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 900, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzError</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<ref.typealias usr=\"s:10Foundation12NotificationV4Namea\">Name</ref.typealias></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "fritzError", "key.namelength": 10, "key.nameoffset": 970, "key.offset": 959, "key.parsed_declaration": "public static let fritzError = Notification.Name(NSNotification.errorNotificationKey)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "NSNotification.Name", "key.typeusr": "$SSo18NSNotificationNameaD", "key.usr": "s:So18NSNotificationNamea9FritzCoreE10fritzErrorABvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let modelUpdated: <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.<Type usr=\"s:10Foundation12NotificationV4Namea\">Name</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1086}], "key.doc.column": 23, "key.doc.comment": "Posted when a model is updated OTA", "key.doc.declaration": "public static let modelUpdated: Notification.Name", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"32\" column=\"23\"><Name>modelUpdated</Name><USR>s:So18NSNotificationNamea9FritzCoreE12modelUpdatedABvpZ</USR><Declaration>public static let modelUpdated: Notification.Name</Declaration><CommentParts><Abstract><Para>Posted when a model is updated OTA</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "modelUpdated", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 1043, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelUpdated</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<ref.typealias usr=\"s:10Foundation12NotificationV4Namea\">Name</ref.typealias></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 87, "key.name": "modelUpdated", "key.namelength": 12, "key.nameoffset": 1104, "key.offset": 1093, "key.parsed_declaration": "public static let modelUpdated = Notification.Name(NSNotification.modelUpdatedNotificationKey)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "NSNotification.Name", "key.typeusr": "$SSo18NSNotificationNameaD", "key.usr": "s:So18NSNotificationNamea9FritzCoreE12modelUpdatedABvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let activeModelChanged: <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.<Type usr=\"s:10Foundation12NotificationV4Namea\">Name</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1229}], "key.doc.column": 23, "key.doc.comment": "Posted when a model is updated OTA", "key.doc.declaration": "public static let activeModelChanged: Notification.Name", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"35\" column=\"23\"><Name>activeModelChanged</Name><USR>s:So18NSNotificationNamea9FritzCoreE18activeModelChangedABvpZ</USR><Declaration>public static let activeModelChanged: Notification.Name</Declaration><CommentParts><Abstract><Para>Posted when a model is updated OTA</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "activeModelChanged", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 1186, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>activeModelChanged</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<ref.typealias usr=\"s:10Foundation12NotificationV4Namea\">Name</ref.typealias></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 99, "key.name": "activeModelChanged", "key.namelength": 18, "key.nameoffset": 1247, "key.offset": 1236, "key.parsed_declaration": "public static let activeModelChanged = Notification.Name(NSNotification.activeModelChangedNotificationKey)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "NSNotification.Name", "key.typeusr": "$SSo18NSNotificationNameaD", "key.usr": "s:So18NSNotificationNamea9FritzCoreE18activeModelChangedABvpZ"}], "key.typename": "NSNotification.Name.Type", "key.typeusr": "$SSo18NSNotificationNameamD", "key.usr": "s:10Foundation12NotificationV4Namea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2809, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RetryResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 174}], "key.bodylength": 33, "key.bodyoffset": 199, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RetryResult</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 52, "key.name": "RetryResult", "key.namelength": 11, "key.nameoffset": 186, "key.offset": 181, "key.parsed_declaration": "public enum RetryResult", "key.parsed_scope.end": 14, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 204, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case success</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "success", "key.namelength": 7, "key.nameoffset": 209, "key.offset": 209, "key.parsed_declaration": "case success", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$Sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO7successyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 221, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 226, "key.offset": 226, "key.parsed_declaration": "case error", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$Sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO5erroryA2CmF"}]}], "key.typename": "RetryResult.Type", "key.typeusr": "$S9FritzCore11RetryResultOmD", "key.usr": "s:9FritzCore11RetryResultO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct OperationRetryHandler</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 235}], "key.bodylength": 446, "key.bodyoffset": 272, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>OperationRetryHandler</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 477, "key.name": "OperationRetryHandler", "key.namelength": 21, "key.nameoffset": 249, "key.offset": 242, "key.parsed_declaration": "public struct OperationRetryHandler", "key.parsed_scope.end": 29, "key.parsed_scope.start": 16, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 323}], "key.doc.column": 16, "key.doc.comment": "Queue to dispatch retry operation on", "key.doc.declaration": "public let retryQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"19\" column=\"16\"><Name>retryQueue</Name><USR>s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp</USR><Declaration>public let retryQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to dispatch retry operation on</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "retryQueue", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 278, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryQueue", "key.namelength": 10, "key.nameoffset": 334, "key.offset": 330, "key.parsed_declaration": "public let retryQueue: DispatchQueue", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "DispatchQueue", "key.typeusr": "$SSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retry: (@escaping (<Type usr=\"s:9FritzCore11RetryResultO\">RetryResult</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 438}], "key.doc.column": 16, "key.doc.comment": "Perform a retry and call completion handler with result of retry", "key.doc.declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"22\" column=\"16\"><Name>retry</Name><USR>s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp</USR><Declaration>public let retry: (@escaping (RetryResult) -&gt; Void) -&gt; Void</Declaration><CommentParts><Abstract><Para>Perform a retry and call completion handler with result of retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "retry", "key.doc.type": "Other", "key.doclength": 69, "key.docoffset": 365, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retry</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore11RetryResultO\">RetryResult</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "retry", "key.namelength": 5, "key.nameoffset": 449, "key.offset": 445, "key.parsed_declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(@escaping (RetryResult) -> ()) -> ()", "key.typeusr": "$Syyy9FritzCore11RetryResultOccD", "key.usr": "s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onSuccess: () -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 569}], "key.doc.column": 16, "key.doc.comment": "Retrier received a successful retry, will not retry again", "key.doc.declaration": "public let onSuccess: () -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"25\" column=\"16\"><Name>onSuccess</Name><USR>s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp</USR><Declaration>public let onSuccess: () -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier received a successful retry, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "onSuccess", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 503, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onSuccess</decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "onSuccess", "key.namelength": 9, "key.nameoffset": 580, "key.offset": 576, "key.parsed_declaration": "public let onSuccess: () -> Void", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "() -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onFailure: (<Type usr=\"s:Su\">UInt</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 681}], "key.doc.column": 16, "key.doc.comment": "Retrier retried the maximum number of times, will not retry again", "key.doc.declaration": "public let onFailure: (UInt) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"28\" column=\"16\"><Name>onFailure</Name><USR>s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp</USR><Declaration>public let onFailure: (UInt) -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier retried the maximum number of times, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "onFailure", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 607, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onFailure</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "onFailure", "key.namelength": 9, "key.nameoffset": 692, "key.offset": 688, "key.parsed_declaration": "public let onFailure: (UInt) -> Void", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(UInt) -> ()", "key.typeusr": "$SyySucD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp"}], "key.typename": "OperationRetryHandler.Type", "key.typeusr": "$S9FritzCore21OperationRetryHandlerVmD", "key.usr": "s:9FritzCore21OperationRetryHandlerV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class OperationRetrier</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 728}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 721}], "key.bodylength": 2049, "key.bodyoffset": 758, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OperationRetrier</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 2074, "key.name": "OperationRetrier", "key.namelength": 16, "key.nameoffset": 740, "key.offset": 734, "key.parsed_declaration": "public final class OperationRetrier", "key.parsed_scope.end": 100, "key.parsed_scope.start": 31, "key.runtime_name": "_TtC4main16OperationRetrier", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 803}], "key.doc.column": 16, "key.doc.comment": "Delegate to handle retry cases", "key.doc.declaration": "public let handler: OperationRetryHandler", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"34\" column=\"16\"><Name>handler</Name><USR>s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp</USR><Declaration>public let handler: OperationRetryHandler</Declaration><CommentParts><Abstract><Para>Delegate to handle retry cases</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "handler", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 764, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>handler</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "handler", "key.namelength": 7, "key.nameoffset": 814, "key.offset": 810, "key.parsed_declaration": "public let handler: OperationRetryHandler", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "OperationRetryHandler", "key.typeusr": "$S9FritzCore21OperationRetryHandlerVD", "key.usr": "s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 901}], "key.doc.column": 16, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"37\" column=\"16\"><Name>maxRetries</Name><USR>s:9FritzCore16OperationRetrierC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 850, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 912, "key.offset": 908, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore16OperationRetrierC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 993}], "key.doc.column": 16, "key.doc.comment": "Millisecond multiplier to adjust exponential curve", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"40\" column=\"16\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Millisecond multiplier to adjust exponential curve</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 934, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 1004, "key.offset": 1000, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isPaused: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1089}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1082}], "key.doc.column": 29, "key.doc.comment": "Is the retry loop currently paused", "key.doc.declaration": "public private(set) var isPaused: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"43\" column=\"29\"><Name>isPaused</Name><USR>s:9FritzCore16OperationRetrierC8isPausedSbvp</USR><Declaration>public private(set) var isPaused: Bool</Declaration><CommentParts><Abstract><Para>Is the retry loop currently paused</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "isPaused", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 1039, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isPaused</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "isPaused", "key.namelength": 8, "key.nameoffset": 1106, "key.offset": 1102, "key.parsed_declaration": "public private(set) var isPaused: Bool = true", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore16OperationRetrierC8isPausedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var attemptedRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1176}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1169}], "key.doc.column": 29, "key.doc.comment": "Number of attempted retries", "key.doc.declaration": "public private(set) var attemptedRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"46\" column=\"29\"><Name>attemptedRetries</Name><USR>s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp</USR><Declaration>public private(set) var attemptedRetries: UInt</Declaration><CommentParts><Abstract><Para>Number of attempted retries</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "attemptedRetries", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1133, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>attemptedRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "attemptedRetries", "key.namelength": 16, "key.nameoffset": 1193, "key.offset": 1189, "key.parsed_declaration": "public private(set) var attemptedRetries: UInt = 0", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type>, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1225}], "key.bodylength": 132, "key.bodyoffset": 1319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>handler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 220, "key.name": "init(handler:maxRetries:exponentialMultiplier:)", "key.namelength": 85, "key.nameoffset": 1232, "key.offset": 1232, "key.parsed_declaration": "public init(handler: OperationRetryHandler, maxRetries: UInt, exponentialMultiplier: UInt32)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [], "key.typename": "(OperationRetrier.Type) -> (OperationRetryHandler, UInt, UInt32) -> OperationRetrier", "key.typeusr": "$S7handler10maxRetries21exponentialMultiplier9FritzCore16OperationRetrierCAD0H12RetryHandlerV_Sus6UInt32VtcD", "key.usr": "s:9FritzCore16OperationRetrierC7handler10maxRetries21exponentialMultiplierAcA0C12RetryHandlerV_Sus6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func start()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1487}], "key.bodylength": 102, "key.bodyoffset": 1508, "key.doc.column": 17, "key.doc.comment": "Start the retry loop", "key.doc.declaration": "public func start()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"55\" column=\"17\"><Name>start()</Name><USR>s:9FritzCore16OperationRetrierC5startyyF</USR><Declaration>public func start()</Declaration><CommentParts><Abstract><Para>Start the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "start()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1458, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>start</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 117, "key.name": "start()", "key.namelength": 7, "key.nameoffset": 1499, "key.offset": 1494, "key.parsed_declaration": "public func start()", "key.parsed_scope.end": 59, "key.parsed_scope.start": 55, "key.substructure": [], "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore16OperationRetrierC5startyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stop()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1646}], "key.bodylength": 29, "key.bodyoffset": 1666, "key.doc.column": 17, "key.doc.comment": "Stops the retry loop", "key.doc.declaration": "public func stop()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"62\" column=\"17\"><Name>stop()</Name><USR>s:9FritzCore16OperationRetrierC4stopyyF</USR><Declaration>public func stop()</Declaration><CommentParts><Abstract><Para>Stops the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "stop()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1617, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stop</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 43, "key.name": "stop()", "key.namelength": 6, "key.nameoffset": 1658, "key.offset": 1653, "key.parsed_declaration": "public func stop()", "key.parsed_scope.end": 64, "key.parsed_scope.start": 62, "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore16OperationRetrierC4stopyyF"}, {"key.annotated_decl": "<Declaration>let base: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>base</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "base", "key.namelength": 4, "key.nameoffset": 2464, "key.offset": 2460, "key.parsed_declaration": "let base = Double(2)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg4baseL_Sdvp"}, {"key.annotated_decl": "<Declaration>let exponent: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponent</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "exponent", "key.namelength": 8, "key.nameoffset": 2493, "key.offset": 2489, "key.parsed_declaration": "let exponent = Double(attemptedRetries)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg8exponentL_Sdvp"}, {"key.annotated_decl": "<Declaration>let milliseconds: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>milliseconds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "milliseconds", "key.namelength": 12, "key.nameoffset": 2541, "key.offset": 2537, "key.parsed_declaration": "let milliseconds = pow(base, exponent) * Double(exponentialMultiplier)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg12millisecondsL_Sdvp"}, {"key.annotated_decl": "<Declaration>let millisecondJitter: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>millisecondJitter</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "millisecondJitter", "key.namelength": 17, "key.nameoffset": 2620, "key.offset": 2616, "key.parsed_declaration": "let millisecondJitter = arc4random_uniform(exponentialMultiplier * 10)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg17millisecondJitterL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let waitTime: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>waitTime</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "waitTime", "key.namelength": 8, "key.nameoffset": 2699, "key.offset": 2695, "key.parsed_declaration": "let waitTime = Int(milliseconds) + Int(millisecondJitter)", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg04waitP0L_Sivp"}], "key.typename": "OperationRetrier.Type", "key.typeusr": "$S9FritzCore16OperationRetrierCmD", "key.usr": "s:9FritzCore16OperationRetrierC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2310, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSession) public final class Session : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 798}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 791}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 710}], "key.bodylength": 1479, "key.bodyoffset": 829, "key.doc.column": 20, "key.doc.comment": "Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.\n\n- Note: By default the SDK will read your App Token from the `FritzToken` line in your apps Info.plist. However, by providing a `Session` when conforming to `BaseIdentifiedModel` you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"18\" column=\"20\"><Name>Session</Name><USR>c:@M@FritzCore@objc(cs)FritzSession</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject</Declaration><CommentParts><Abstract><Para>Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract><Discussion><Note><Para>By default the SDK will read your App Token from the <codeVoice>FritzToken</codeVoice> line in your apps Info.plist. However, by providing a <codeVoice>Session</codeVoice> when conforming to <codeVoice>BaseIdentifiedModel</codeVoice> you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 18, "key.doc.name": "Session", "key.doc.type": "Class", "key.doclength": 548, "key.docoffset": 161, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 819}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Session</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1505, "key.name": "Session", "key.namelength": 7, "key.nameoffset": 810, "key.offset": 804, "key.parsed_declaration": "public final class Session: NSObject", "key.parsed_scope.end": 64, "key.parsed_scope.start": 18, "key.runtime_name": "FritzSession", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>.Info : <Type usr=\"s:Se\">Decodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 835}], "key.bodylength": 110, "key.bodyoffset": 866, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 855}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class>.<decl.name>Info</decl.name> : <ref.protocol usr=\"s:Se\">Decodable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Decodable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 135, "key.name": "Info", "key.namelength": 4, "key.nameoffset": 849, "key.offset": 842, "key.parsed_declaration": "public struct Info: Decodable", "key.parsed_scope.end": 24, "key.parsed_scope.start": 20, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 875}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 886, "key.offset": 882, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 909}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 920, "key.offset": 916, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 954, "key.offset": 950, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV9namespaceSSvp"}], "key.typename": "Session.Info.Type", "key.typeusr": "$S9FritzCore7SessionC4InfoVmD", "key.usr": "s:9FritzCore7SessionC4InfoV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(defaultSession) public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1055}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1029}], "key.doc.column": 23, "key.doc.comment": "Default session to use throughout SDK", "key.doc.declaration": "@objc(defaultSession) public static let `default`: FritzCore.Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"28\" column=\"23\"><Name>default</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession</USR><Declaration>@objc(defaultSession) public static let `default`: FritzCore.Session</Declaration><CommentParts><Abstract><Para>Default session to use throughout SDK</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "default", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 983, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(defaultSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 440, "key.name": "default", "key.namelength": 7, "key.nameoffset": 1073, "key.offset": 1062, "key.parsed_declaration": "public static let `default`: Session =", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1547}], "key.doc.column": 16, "key.doc.comment": "App token sent on all requests", "key.doc.declaration": "public let apiKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"38\" column=\"16\"><Name>apiKey</Name><USR>s:9FritzCore7SessionC6apiKeySSvp</USR><Declaration>public let apiKey: String</Declaration><CommentParts><Abstract><Para>App token sent on all requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "apiKey", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 1508, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 1558, "key.offset": 1554, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1604}], "key.doc.column": 16, "key.doc.comment": "Api to connect to", "key.doc.declaration": "public let apiUrl: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"41\" column=\"16\"><Name>apiUrl</Name><USR>s:9FritzCore7SessionC6apiUrlSSvp</USR><Declaration>public let apiUrl: String</Declaration><CommentParts><Abstract><Para>Api to connect to</Para></Abstract></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "apiUrl", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 1578, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 1615, "key.offset": 1611, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1686}], "key.doc.column": 16, "key.doc.comment": "Namespace for local storage of Fritz files", "key.doc.declaration": "public let namespace: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"44\" column=\"16\"><Name>namespace</Name><USR>s:9FritzCore7SessionC9namespaceSSvp</USR><Declaration>public let namespace: String</Declaration><CommentParts><Abstract><Para>Namespace for local storage of Fritz files</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "namespace", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1635, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 1697, "key.offset": 1693, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC9namespaceSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1762}], "key.bodylength": 41, "key.bodyoffset": 1800, "key.doc.column": 16, "key.doc.comment": "Current settings for this session", "key.doc.declaration": "public var settings: SessionSettings { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"47\" column=\"16\"><Name>settings</Name><USR>s:9FritzCore7SessionC8settingsAA0C8SettingsVvp</USR><Declaration>public var settings: SessionSettings { get }</Declaration><CommentParts><Abstract><Para>Current settings for this session</Para></Abstract></CommentParts></Other>", "key.doc.line": 47, "key.doc.name": "settings", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1720, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>settings</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 73, "key.name": "settings", "key.namelength": 8, "key.nameoffset": 1773, "key.offset": 1769, "key.parsed_declaration": "public var settings: SessionSettings", "key.parsed_scope.end": 49, "key.parsed_scope.start": 47, "key.typename": "SessionSettings", "key.typeusr": "$S9FritzCore15SessionSettingsVD", "key.usr": "s:9FritzCore7SessionC8settingsAA0C8SettingsVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: <Type usr=\"s:SS\">String</Type>, apiUrl: <Type usr=\"s:SS\">String</Type>, namespace: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1919}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1873}], "key.bodylength": 119, "key.bodyoffset": 1983, "key.doc.column": 12, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"53\" column=\"12\"><Name>init(apiKey:apiUrl:namespace:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:</USR><Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "init(apiKey:apiUrl:namespace:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 1848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:apiUrl:namespace:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>apiUrl</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>namespace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 177, "key.name": "init(apiKey:apiUrl:namespace:)", "key.namelength": 55, "key.nameoffset": 1926, "key.offset": 1926, "key.parsed_declaration": "public init(apiKey: String, apiUrl: String, namespace: String)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:\">init(apiKey:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String, String, String) -> Session", "key.typeusr": "$S6apiKey0A3Url9namespace9FritzCore7SessionCSS_S2StcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:) public convenience init(apiKey: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2169}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2162}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 2133}], "key.bodylength": 103, "key.bodyoffset": 2203, "key.doc.column": 24, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:) public convenience init(apiKey: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"61\" column=\"24\"><Name>init(apiKey:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:</USR><Declaration>@objc(initWithAppToken:) public convenience init(apiKey: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "init(apiKey:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 2108, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 126, "key.name": "init(apiKey:)", "key.namelength": 20, "key.nameoffset": 2181, "key.offset": 2181, "key.parsed_declaration": "public convenience init(apiKey: String)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:\">init(apiKey:apiUrl:namespace:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String) -> Session", "key.typeusr": "$S6apiKey9FritzCore7SessionCSS_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:"}], "key.typename": "Session.Type", "key.typeusr": "$S9FritzCore7SessionCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1407, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 231}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}], "key.bodylength": 1146, "key.bodyoffset": 259, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1168, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 245, "key.offset": 238, "key.parsed_declaration": "public struct SessionEvent", "key.parsed_scope.end": 42, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>.EventType : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}], "key.bodylength": 803, "key.bodyoffset": 296, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 288}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>.<decl.name>EventType</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 828, "key.name": "EventType", "key.namelength": 9, "key.nameoffset": 277, "key.offset": 272, "key.parsed_declaration": "public enum EventType: String", "key.parsed_scope.end": 28, "key.parsed_scope.start": 14, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 63, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 305, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case applicationDidEnterBackground = &quot;app_did_enter_background&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 342}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidEnterBackground</decl.name> = <syntaxtype.string>&quot;app_did_enter_background&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 58, "key.name": "applicationDidEnterBackground", "key.namelength": 29, "key.nameoffset": 310, "key.offset": 310, "key.parsed_declaration": "case applicationDidEnterBackground = \"app_did_enter_background\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO29applicationDidEnterBackgroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 377, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case applicationWillEnterForeground = &quot;app_will_enter_foreground&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 27, "key.offset": 415}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillEnterForeground</decl.name> = <syntaxtype.string>&quot;app_will_enter_foreground&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 60, "key.name": "applicationWillEnterForeground", "key.namelength": 30, "key.nameoffset": 382, "key.offset": 382, "key.parsed_declaration": "case applicationWillEnterForeground = \"app_will_enter_foreground\"", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO30applicationWillEnterForegroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 57, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 451, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case applicationDidBecomeActive = &quot;app_did_become_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 485}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidBecomeActive</decl.name> = <syntaxtype.string>&quot;app_did_become_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 52, "key.name": "applicationDidBecomeActive", "key.namelength": 26, "key.nameoffset": 456, "key.offset": 456, "key.parsed_declaration": "case applicationDidBecomeActive = \"app_did_become_active\"", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO26applicationDidBecomeActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 59, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 517, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case applicationWillResignActive = &quot;app_will_resign_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 24, "key.offset": 552}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillResignActive</decl.name> = <syntaxtype.string>&quot;app_will_resign_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 54, "key.name": "applicationWillResignActive", "key.namelength": 27, "key.nameoffset": 522, "key.offset": 522, "key.parsed_declaration": "case applicationWillResignActive = \"app_will_resign_active\"", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO27applicationWillResignActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 39, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 585, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelInstalled = &quot;model_installed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 17, "key.offset": 607}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInstalled</decl.name> = <syntaxtype.string>&quot;model_installed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 34, "key.name": "modelInstalled", "key.namelength": 14, "key.nameoffset": 590, "key.offset": 590, "key.parsed_declaration": "case modelInstalled = \"model_installed\"", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO14modelInstalledyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 56, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 633, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDownloadCompleted = &quot;model_download_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 663}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadCompleted</decl.name> = <syntaxtype.string>&quot;model_download_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 51, "key.name": "modelDownloadCompleted", "key.namelength": 22, "key.nameoffset": 638, "key.offset": 638, "key.parsed_declaration": "case modelDownloadCompleted = \"model_download_completed\"", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO22modelDownloadCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 50, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 698, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDownloadFailed = &quot;model_download_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 725}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadFailed</decl.name> = <syntaxtype.string>&quot;model_download_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 45, "key.name": "modelDownloadFailed", "key.namelength": 19, "key.nameoffset": 703, "key.offset": 703, "key.parsed_declaration": "case modelDownloadFailed = \"model_download_failed\"", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO19modelDownloadFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 757, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelCompileCompleted = &quot;model_compile_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 786}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileCompleted</decl.name> = <syntaxtype.string>&quot;model_compile_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelCompileCompleted", "key.namelength": 21, "key.nameoffset": 762, "key.offset": 762, "key.parsed_declaration": "case modelCompileCompleted = \"model_compile_completed\"", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelCompileCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 48, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 820, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelCompileFailed = &quot;model_compile_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 22, "key.offset": 846}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileFailed</decl.name> = <syntaxtype.string>&quot;model_compile_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 43, "key.name": "modelCompileFailed", "key.namelength": 18, "key.nameoffset": 825, "key.offset": 825, "key.parsed_declaration": "case modelCompileFailed = \"model_compile_failed\"", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO18modelCompileFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 60, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 877, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDecryptionCompleted = &quot;model_decryption_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 28, "key.offset": 909}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionCompleted</decl.name> = <syntaxtype.string>&quot;model_decryption_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 55, "key.name": "modelDecryptionCompleted", "key.namelength": 24, "key.nameoffset": 882, "key.offset": 882, "key.parsed_declaration": "case modelDecryptionCompleted = \"model_decryption_completed\"", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO24modelDecryptionCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 946, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case modelDecryptionFailed = &quot;model_decryption_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 975}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionFailed</decl.name> = <syntaxtype.string>&quot;model_decryption_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelDecryptionFailed", "key.namelength": 21, "key.nameoffset": 951, "key.offset": 951, "key.parsed_declaration": "case modelDecryptionFailed = \"model_decryption_failed\"", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelDecryptionFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 30, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1009, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case prediction = &quot;prediction&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 1027}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>prediction</decl.name> = <syntaxtype.string>&quot;prediction&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 25, "key.name": "prediction", "key.namelength": 10, "key.nameoffset": 1014, "key.offset": 1014, "key.parsed_declaration": "case prediction = \"prediction\"", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO10predictionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 46, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1048, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case inputOutputSample = &quot;input_output_sample&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1073}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>inputOutputSample</decl.name> = <syntaxtype.string>&quot;input_output_sample&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 41, "key.name": "inputOutputSample", "key.namelength": 17, "key.nameoffset": 1053, "key.offset": 1053, "key.parsed_declaration": "case inputOutputSample = \"input_output_sample\"", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$Sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO17inputOutputSampleyA2EmF"}]}], "key.typename": "SessionEvent.EventType.Type", "key.typeusr": "$S9FritzCore12SessionEventV0D4TypeOmD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1106}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "type", "key.namelength": 4, "key.nameoffset": 1117, "key.offset": 1113, "key.parsed_declaration": "public let type: EventType", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "SessionEvent.EventType", "key.typeusr": "$S9FritzCore12SessionEventV0D4TypeOD", "key.usr": "s:9FritzCore12SessionEventV4typeAC0D4TypeOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1138}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "data", "key.namelength": 4, "key.nameoffset": 1149, "key.offset": 1145, "key.parsed_declaration": "public let data: RequestOptions", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[String : Any]", "key.typeusr": "$SSDySSypGD", "key.usr": "s:9FritzCore12SessionEventV4dataSDySSypGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sessionIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1175}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 51, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1186, "key.offset": 1182, "key.parsed_declaration": "public let sessionIdentifier = FritzCore.sessionIdentifier", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore12SessionEventV17sessionIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let timestamp: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1239}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>timestamp</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "timestamp", "key.namelength": 9, "key.nameoffset": 1250, "key.offset": 1246, "key.parsed_declaration": "public let timestamp = Date().timeIntervalSince1970", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore12SessionEventV9timestampSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type>, data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1296}], "key.bodylength": 55, "key.bodyoffset": 1348, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>type</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 101, "key.name": "init(type:data:)", "key.namelength": 43, "key.nameoffset": 1303, "key.offset": 1303, "key.parsed_declaration": "public init(type: EventType, data: RequestOptions)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 38, "key.substructure": [], "key.typename": "(SessionEvent.Type) -> (SessionEvent.EventType, [String : Any]) -> SessionEvent", "key.typeusr": "$S4type4data9FritzCore12SessionEventVAE0F4TypeO_SDySSypGtcD", "key.usr": "s:9FritzCore12SessionEventV4type4dataA2C0D4TypeO_SDySSypGtcfc"}], "key.typename": "SessionEvent.Type", "key.typeusr": "$S9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7725, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum SessionManagerError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 232}], "key.bodylength": 19, "key.bodyoffset": 272, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 265}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SessionManagerError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 53, "key.name": "SessionManagerError", "key.namelength": 19, "key.nameoffset": 244, "key.offset": 239, "key.parsed_declaration": "public enum SessionManagerError: Error", "key.parsed_scope.end": 16, "key.parsed_scope.start": 14, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 277, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case disabled</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>disabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "disabled", "key.namelength": 8, "key.nameoffset": 282, "key.offset": 282, "key.parsed_declaration": "case disabled", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(SessionManagerError.Type) -> SessionManagerError", "key.typeusr": "$Sy9FritzCore19SessionManagerErrorOACmcD", "key.usr": "s:9FritzCore19SessionManagerErrorO8disabledyA2CmF"}]}], "key.typename": "SessionManagerError.Type", "key.typeusr": "$S9FritzCore19SessionManagerErrorOmD", "key.usr": "s:9FritzCore19SessionManagerErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 362}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 355}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}], "key.bodylength": 1801, "key.bodyoffset": 400, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 390}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1834, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 374, "key.offset": 368, "key.parsed_declaration": "public final class SessionManager: NSObject", "key.parsed_scope.end": 72, "key.parsed_scope.start": 19, "key.runtime_name": "_TtC4main14SessionManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 442}], "key.doc.column": 16, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"22\" column=\"16\"><Name>session</Name><USR>s:9FritzCore14SessionManagerC7sessionAA0C0Cvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 406, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 453, "key.offset": 449, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAA0C0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiClient: <Type usr=\"s:9FritzCore9APIClientC\">APIClient</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 516}], "key.doc.column": 16, "key.doc.comment": "API client to make requests with", "key.doc.declaration": "public let apiClient: APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"25\" column=\"16\"><Name>apiClient</Name><USR>s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp</USR><Declaration>public let apiClient: APIClient</Declaration><CommentParts><Abstract><Para>API client to make requests with</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "apiClient", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 475, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiClient</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore9APIClientC\">APIClient</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "apiClient", "key.namelength": 9, "key.nameoffset": 527, "key.offset": 523, "key.parsed_declaration": "public let apiClient: APIClient", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "APIClient", "key.typeusr": "$S9FritzCore9APIClientCD", "key.usr": "s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestQueue: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;<Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 595}], "key.doc.column": 16, "key.doc.comment": "Queue to batch and retry requests", "key.doc.declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"28\" column=\"16\"><Name>trackRequestQueue</Name><USR>s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp</USR><Declaration>public let trackRequestQueue: BatchedRequestQueue&lt;SessionEvent&gt;</Declaration><CommentParts><Abstract><Para>Queue to batch and retry requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "trackRequestQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 553, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestQueue</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;<ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "trackRequestQueue", "key.namelength": 17, "key.nameoffset": 606, "key.offset": 602, "key.parsed_declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore14SessionManagerC17trackRequestQueue7flushed17completionHandlerySayAA0C5EventVG_yAA8ResponseOctF\">trackRequestQueue(flushed:completionHandler:)</RelatedName>"}], "key.typename": "BatchedRequestQueue<SessionEvent>", "key.typeusr": "$S9FritzCore19BatchedRequestQueueCyAA12SessionEventVGD", "key.usr": "s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let fileManager: <Type usr=\"c:objc(cs)NSFileManager\">FileManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 693}], "key.doc.column": 16, "key.doc.comment": "Default file manager", "key.doc.declaration": "public let fileManager: FileManager", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"31\" column=\"16\"><Name>fileManager</Name><USR>s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp</USR><Declaration>public let fileManager: FileManager</Declaration><CommentParts><Abstract><Para>Default file manager</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "fileManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 664, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fileManager</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSFileManager\">FileManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "fileManager", "key.namelength": 11, "key.nameoffset": 704, "key.offset": 700, "key.parsed_declaration": "public let fileManager: FileManager = .default", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "FileManager", "key.typeusr": "$SSo13NSFileManagerCD", "key.usr": "s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let logger: <Type usr=\"s:9FritzCore6LoggerV\">Logger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 777}], "key.doc.column": 16, "key.doc.comment": "Private logger instance", "key.doc.declaration": "public let logger: FritzCore.Logger", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"34\" column=\"16\"><Name>logger</Name><USR>s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp</USR><Declaration>public let logger: FritzCore.Logger</Declaration><CommentParts><Abstract><Para>Private logger instance</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "logger", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 745, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>logger</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore6LoggerV\">Logger</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "logger", "key.namelength": 6, "key.nameoffset": 788, "key.offset": 784, "key.parsed_declaration": "public let logger = Logger(name: \"SessionManager\")", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "Logger", "key.typeusr": "$S9FritzCore6LoggerVD", "key.usr": "s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1153}], "key.bodylength": 623, "key.bodyoffset": 1184, "key.doc.column": 12, "key.doc.comment": "Required initializer", "key.doc.declaration": "public init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"45\" column=\"12\"><Name>init(session:)</Name><USR>s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc</USR><Declaration>public init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1124, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 648, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 1160, "key.offset": 1160, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 45, "key.substructure": [{"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1430, "key.offset": 1430, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1430, "key.offset": 1430, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1622, "key.offset": 1622, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1622, "key.offset": 1622, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}], "key.typename": "(SessionManager.Type) -> (Session) -> SessionManager", "key.typeusr": "$S7session9FritzCore14SessionManagerCAB0D0C_tcD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func trackEvent(_ event: <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1877}], "key.bodylength": 135, "key.bodyoffset": 1924, "key.doc.column": 17, "key.doc.comment": "Track an event, taking into account blacklisted events", "key.doc.declaration": "public func trackEvent(_ event: SessionEvent)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"62\" column=\"17\"><Name>trackEvent(_:)</Name><USR>s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF</USR><Declaration>public func trackEvent(_ event: SessionEvent)</Declaration><CommentParts><Abstract><Para>Track an event, taking into account blacklisted events</Para></Abstract></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "trackEvent(_:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1814, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackEvent</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>event</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 176, "key.name": "trackEvent(_:)", "key.namelength": 33, "key.nameoffset": 1889, "key.offset": 1884, "key.parsed_declaration": "public func trackEvent(_ event: SessionEvent)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 62, "key.substructure": [], "key.typename": "(SessionManager) -> (SessionEvent) -> ()", "key.typeusr": "$Syy9FritzCore12SessionEventVcD", "key.usr": "s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF"}], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Initialize", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2207}, {"key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2227}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2227}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2227}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2227}], "key.bodylength": 1536, "key.bodyoffset": 2314, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1563, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 2298, "key.offset": 2288, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func loadSessionSettings()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2741}], "key.bodylength": 676, "key.bodyoffset": 2776, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadSessionSettings</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 705, "key.name": "loadSessionSettings()", "key.namelength": 21, "key.nameoffset": 2753, "key.offset": 2748, "key.parsed_declaration": "public func loadSessionSettings()", "key.parsed_scope.end": 104, "key.parsed_scope.start": 88, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "path", "key.namelength": 4, "key.nameoffset": 2789, "key.offset": 2785, "key.parsed_declaration": "let path = \"/session/settings\"", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore14SessionManagerC04loadC8SettingsyyF4pathL_SSvp"}], "key.typename": "(SessionManager) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore14SessionManagerC04loadC8SettingsyyF"}], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Healthcheck", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3856}, {"key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3876}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3876}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3876}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3876}], "key.bodylength": 675, "key.bodyoffset": 3963, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 702, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 3947, "key.offset": 3937, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4644}, {"key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4662}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4662}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4662}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4662}], "key.bodylength": 2653, "key.bodyoffset": 4749, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2680, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 4733, "key.offset": 4723, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7405}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7405}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7405}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7405}], "key.bodylength": 233, "key.bodyoffset": 7490, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 258, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 7476, "key.offset": 7466, "key.substructure": [], "key.typename": "SessionEvent.Type", "key.typeusr": "$S9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3594, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 235}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}], "key.bodylength": 2161, "key.bodyoffset": 275, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 266}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2195, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 249, "key.offset": 242, "key.parsed_declaration": "public struct SessionSettings: Codable", "key.parsed_scope.end": 60, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}], "key.doc.column": 16, "key.doc.comment": "If false, no calls will be made to the API", "key.doc.declaration": "public let apiRequestsEnabled: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"15\" column=\"16\"><Name>apiRequestsEnabled</Name><USR>s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp</USR><Declaration>public let apiRequestsEnabled: Bool</Declaration><CommentParts><Abstract><Para>If false, no calls will be made to the API</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "apiRequestsEnabled", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiRequestsEnabled</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "apiRequestsEnabled", "key.namelength": 18, "key.nameoffset": 343, "key.offset": 339, "key.parsed_declaration": "public let apiRequestsEnabled: Bool", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 407}], "key.doc.column": 16, "key.doc.comment": "Settings refresh interval", "key.doc.declaration": "public let settingsRefreshInterval: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"18\" column=\"16\"><Name>settingsRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp</USR><Declaration>public let settingsRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>Settings refresh interval</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "settingsRefreshInterval", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 373, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>settingsRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "settingsRefreshInterval", "key.namelength": 23, "key.nameoffset": 418, "key.offset": 414, "key.parsed_declaration": "public let settingsRefreshInterval: TimeInterval", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 516}], "key.doc.column": 16, "key.doc.comment": "Control model I/O sampling based on ratio, 0-1", "key.doc.declaration": "public let modelInputOutputSamplingRatio: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"21\" column=\"16\"><Name>modelInputOutputSamplingRatio</Name><USR>s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp</USR><Declaration>public let modelInputOutputSamplingRatio: Float</Declaration><CommentParts><Abstract><Para>Control model I/O sampling based on ratio, 0-1</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "modelInputOutputSamplingRatio", "key.doc.type": "Other", "key.doclength": 51, "key.docoffset": 461, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputOutputSamplingRatio</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "modelInputOutputSamplingRatio", "key.namelength": 29, "key.nameoffset": 527, "key.offset": 523, "key.parsed_declaration": "public let modelInputOutputSamplingRatio: Float", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "Float", "key.typeusr": "$SSfD", "key.usr": "s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.doc.column": 16, "key.doc.comment": "Control batch size of track requests", "key.doc.declaration": "public let trackRequestBatchSize: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"24\" column=\"16\"><Name>trackRequestBatchSize</Name><USR>s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp</USR><Declaration>public let trackRequestBatchSize: Int</Declaration><CommentParts><Abstract><Para>Control batch size of track requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "trackRequestBatchSize", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 569, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestBatchSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "trackRequestBatchSize", "key.namelength": 21, "key.nameoffset": 625, "key.offset": 621, "key.parsed_declaration": "public let trackRequestBatchSize: Int", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 713}], "key.doc.column": 16, "key.doc.comment": "Control if events are gzipped in track response", "key.doc.declaration": "public let gzipTrackEvents: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"27\" column=\"16\"><Name>gzipTrackEvents</Name><USR>s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp</USR><Declaration>public let gzipTrackEvents: Bool</Declaration><CommentParts><Abstract><Para>Control if events are gzipped in track response</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "gzipTrackEvents", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>gzipTrackEvents</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "gzipTrackEvents", "key.namelength": 15, "key.nameoffset": 724, "key.offset": 720, "key.parsed_declaration": "public let gzipTrackEvents: Bool", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let batchFlushInterval: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 799}], "key.doc.column": 16, "key.doc.comment": "Batch request flush interval in seconds", "key.doc.declaration": "public let batchFlushInterval: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"30\" column=\"16\"><Name>batchFlushInterval</Name><USR>s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp</USR><Declaration>public let batchFlushInterval: Double</Declaration><CommentParts><Abstract><Para>Batch request flush interval in seconds</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "batchFlushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 751, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>batchFlushInterval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "batchFlushInterval", "key.namelength": 18, "key.nameoffset": 810, "key.offset": 806, "key.parsed_declaration": "public let batchFlushInterval: Double", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 885}], "key.doc.column": 16, "key.doc.comment": "List of events we should not track", "key.doc.declaration": "public let eventBlacklist: Set<String>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"33\" column=\"16\"><Name>eventBlacklist</Name><USR>s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp</USR><Declaration>public let eventBlacklist: Set&lt;String&gt;</Declaration><CommentParts><Abstract><Para>List of events we should not track</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "eventBlacklist", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 842, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>eventBlacklist</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "eventBlacklist", "key.namelength": 14, "key.nameoffset": 896, "key.offset": 892, "key.parsed_declaration": "public let eventBlacklist: Set<String>", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "Set<String>", "key.typeusr": "$SShySSGD", "key.usr": "s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1000}], "key.doc.column": 16, "key.doc.comment": "TimeInterval to refresh active model settings from the server.", "key.doc.declaration": "public let activeModelRefreshInterval: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"36\" column=\"16\"><Name>activeModelRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp</USR><Declaration>public let activeModelRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>TimeInterval to refresh active model settings from the server.</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "activeModelRefreshInterval", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 929, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>activeModelRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "activeModelRefreshInterval", "key.namelength": 26, "key.nameoffset": 1011, "key.offset": 1007, "key.parsed_declaration": "public let activeModelRefreshInterval: TimeInterval", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type> = default, settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = default, modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type> = default, gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type> = default, trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type> = default, batchFlushInterval: <Type usr=\"s:Sd\">Double</Type> = default, eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt; = default, activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1642}], "key.bodylength": 469, "key.bodyoffset": 1965, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiRequestsEnabled</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>settingsRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelInputOutputSamplingRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>gzipTrackEvents</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trackRequestBatchSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>batchFlushInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventBlacklist</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 786, "key.name": "init(apiRequestsEnabled:settingsRefreshInterval:modelInputOutputSamplingRatio:gzipTrackEvents:trackRequestBatchSize:batchFlushInterval:eventBlacklist:activeModelRefreshInterval:)", "key.namelength": 314, "key.nameoffset": 1649, "key.offset": 1649, "key.parsed_declaration": "public init(apiRequestsEnabled: Bool = true, settingsRefreshInterval: TimeInterval = 30 * 60, modelInputOutputSamplingRatio: Float = 0, gzipTrackEvents: Bool = false, trackRequestBatchSize: Int = 100, batchFlushInterval: Double = 60.0, eventBlacklist: Set<String> = [], activeModelRefreshInterval: TimeInterval = 15 * 60)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 50, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore15SessionSettingsV4fromACs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Bool, Double, Float, Bool, Int, Double, Set<String>, Double) -> SessionSettings", "key.typeusr": "$S18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushF014eventBlacklist011activeModeleF09FritzCore15SessionSettingsVSb_SdSfSbSiSdShySSGSdtcD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushJ014eventBlacklist011activeModeliJ0ACSb_SdSfSbSiSdShySSGSdtcfc"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 14, "key.name": "MARK: - Static", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2442}, {"key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}], "key.bodylength": 522, "key.bodyoffset": 2546, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 550, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 2529, "key.offset": 2519, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func settings(for session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>) -&gt; <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2740}], "key.bodylength": 70, "key.bodyoffset": 2810, "key.doc.column": 24, "key.doc.comment": "Returns cached settings for a session, or default settings if not cached", "key.doc.declaration": "public static func settings(for session: Session) -> SessionSettings", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"71\" column=\"24\"><Name>settings(for:)</Name><USR>s:9FritzCore15SessionSettingsV8settings3forAcA0C0C_tFZ</USR><Declaration>public static func settings(for session: Session) -&gt; SessionSettings</Declaration><CommentParts><Abstract><Para>Returns cached settings for a session, or default settings if not cached</Para></Abstract></CommentParts></Function>", "key.doc.line": 71, "key.doc.name": "settings(for:)", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 2659, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>settings</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>session</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 134, "key.name": "settings(for:)", "key.namelength": 30, "key.nameoffset": 2759, "key.offset": 2747, "key.parsed_declaration": "public static func settings(for session: Session) -> SessionSettings", "key.parsed_scope.end": 73, "key.parsed_scope.start": 71, "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Session) -> SessionSettings", "key.typeusr": "$S3for9FritzCore15SessionSettingsVAB0D0C_tcD", "key.usr": "s:9FritzCore15SessionSettingsV8settings3forAcA0C0C_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func setSettings(_ settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type>, for session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2937}], "key.bodylength": 46, "key.bodyoffset": 3020, "key.doc.column": 24, "key.doc.comment": "Updates the cached settings for a session", "key.doc.declaration": "public static func setSettings(_ settings: SessionSettings, for session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"76\" column=\"24\"><Name>setSettings(_:for:)</Name><USR>s:9FritzCore15SessionSettingsV03setD0_3foryAC_AA0C0CtFZ</USR><Declaration>public static func setSettings(_ settings: SessionSettings, for session: Session)</Declaration><CommentParts><Abstract><Para>Updates the cached settings for a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 76, "key.doc.name": "setSettings(_:for:)", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2887, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setSettings</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>settings</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>session</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 123, "key.name": "setSettings(_:for:)", "key.namelength": 62, "key.nameoffset": 2956, "key.offset": 2944, "key.parsed_declaration": "public static func setSettings(_ settings: SessionSettings, for session: Session)", "key.parsed_scope.end": 78, "key.parsed_scope.start": 76, "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (SessionSettings, Session) -> ()", "key.typeusr": "$S_3fory9FritzCore15SessionSettingsV_AB0D0CtcD", "key.usr": "s:9FritzCore15SessionSettingsV03setD0_3foryAC_AA0C0CtFZ"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 16, "key.name": "MARK: - Sampling", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3074}, {"key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3092}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3092}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3092}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3092}], "key.bodylength": 412, "key.bodyoffset": 3180, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 440, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 3163, "key.offset": 3153, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func shouldSampleInputOutput() -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3319}], "key.bodylength": 224, "key.bodyoffset": 3366, "key.doc.column": 17, "key.doc.comment": "Randomly decides whether we should sample based on the I/O percentage", "key.doc.declaration": "public func shouldSampleInputOutput() -> Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"89\" column=\"17\"><Name>shouldSampleInputOutput()</Name><USR>s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF</USR><Declaration>public func shouldSampleInputOutput() -&gt; Bool</Declaration><CommentParts><Abstract><Para>Randomly decides whether we should sample based on the I/O percentage</Para></Abstract></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "shouldSampleInputOutput()", "key.doc.type": "Function", "key.doclength": 74, "key.docoffset": 3241, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shouldSampleInputOutput</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 265, "key.name": "shouldSampleInputOutput()", "key.namelength": 25, "key.nameoffset": 3331, "key.offset": 3326, "key.parsed_declaration": "public func shouldSampleInputOutput() -> Bool", "key.parsed_scope.end": 93, "key.parsed_scope.start": 89, "key.substructure": [{"key.annotated_decl": "<Declaration>let randomInt: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>randomInt</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "randomInt", "key.namelength": 9, "key.nameoffset": 3379, "key.offset": 3375, "key.parsed_declaration": "let randomInt = arc4random_uniform(SessionSettings.samplePrecision)", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF9randomIntL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let randomFloat: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>randomFloat</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 75, "key.name": "randomFloat", "key.namelength": 11, "key.nameoffset": 3455, "key.offset": 3451, "key.parsed_declaration": "let randomFloat = Float(randomInt) / Float(SessionSettings.samplePrecision)", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "Float", "key.typeusr": "$SSfD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF11randomFloatL_Sfvp"}], "key.typename": "(SessionSettings) -> () -> Bool", "key.typeusr": "$SSbycD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2007, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1111}], "key.bodylength": 844, "key.bodyoffset": 1161, "key.doc.declaration": "struct Array<Element>", "key.doc.discussion": [{"Para": "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the `Array` type to hold elements of a single type, the array\u2019s `Element` type. An array can store any kind of elements\u2014from integers to strings to classes."}, {"Para": "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s `Element` type. For example:"}, {"CodeListing": ""}, {"Para": "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"}, {"CodeListing": ""}, {"Para": "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."}, {"CodeListing": ""}, {"Para": "When you need to perform an operation on all of an array\u2019s elements, use a `for`-`in` loop to iterate through the array\u2019s contents."}, {"CodeListing": ""}, {"Para": "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."}, {"CodeListing": ""}, {"Para": "Use the `first` and `last` properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are `nil`."}, {"CodeListing": ""}, {"Para": "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"}, {"CodeListing": ""}, {"Para": "Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class."}, {"CodeListing": ""}, {"Para": "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."}, {"CodeListing": ""}, {"Para": "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."}, {"CodeListing": ""}, {"Para": "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."}, {"CodeListing": ""}, {"Para": "You can replace an existing element with a new value by assigning the new value to the subscript."}, {"CodeListing": ""}, {"Para": "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."}, {"Para": "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."}, {"Para": "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."}, {"Para": "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"}, {"CodeListing": ""}, {"Para": "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:"}, {"CodeListing": ""}, {"Para": "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."}, {"Para": "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."}, {"Para": "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."}, {"CodeListing": ""}, {"Para": "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."}, {"Para": "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array\u2019s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."}, {"CodeListing": ""}, {"Para": "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."}, {"Para": "When the destination array\u2019s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."}, {"Para": "When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."}, {"Note": ""}], "key.doc.full_as_xml": "<Class><Name>Array</Name><USR>s:Sa</USR><Declaration>struct Array&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.</Para></Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the <codeVoice>Array</codeVoice> type to hold elements of a single type, the array\u2019s <codeVoice>Element</codeVoice> type. An array can store any kind of elements\u2014from integers to strings to classes.</Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s <codeVoice>Element</codeVoice> type. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An array of 'Int' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// An array of 'String' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element</codeVoice> type of your array in the declaration. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Shortened forms are preferred]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The full type name is also allowed]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)</codeVoice> initializer.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Array Values<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to perform an operation on all of an array\u2019s elements, use a <codeVoice>for</codeVoice>-<codeVoice>in</codeVoice> loop to iterate through the array\u2019s contents.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Albemarle.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Brandywine.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Chesapeake.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>isEmpty</codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count</codeVoice> property to find the number of elements in the array.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I know 8 odd numbers.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>first</codeVoice> and <codeVoice>last</codeVoice> properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are <codeVoice>nil</codeVoice>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 15\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil, nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count</codeVoice> triggers a runtime error. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 7\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Triggers runtime error: Index out of range]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Adding and Removing Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)</codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)</codeVoice> method.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)</codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)</codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)</codeVoice>, <codeVoice>removeSubrange(_:)</codeVoice>, and <codeVoice>removeLast()</codeVoice> methods.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Ben's family is moving to another state]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// William is signing up for a different class]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Growing the Size of an Array<rawHTML><![CDATA[</h2>]]></rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.</Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)</codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity</codeVoice> and <codeVoice>count</codeVoice> properties to determine how many more elements the array can store without allocating larger storage.</Para><Para>For arrays of most <codeVoice>Element</codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element</codeVoice> type that is a class or <codeVoice>@objc</codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray</codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray</codeVoice> can become an <codeVoice>Array</codeVoice>, there are no guarantees about representation or efficiency in this case.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[100, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[1, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An integer type with reference semantics]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Modifications to an instance are visible from either array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Replacements, additions, and removals are still visible]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// only in the modified array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"10\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.</Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.</Para><Para>In the example below, a <codeVoice>numbers</codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers</codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers</codeVoice> are made in place, while the two copies continue to share the original storage.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The storage for 'numbers' is copied here]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'numbers' is [100, 200, 300, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray</codeVoice> instance instead of <codeVoice>Array</codeVoice>, use the type-cast operator (<codeVoice>as</codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element</codeVoice> type of your array must be a class, an <codeVoice>@objc</codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc</codeVoice> attribute), or a type that bridges to a Foundation type.</Para><Para>The following example shows how you can bridge an <codeVoice>Array</codeVoice> instance to <codeVoice>NSArray</codeVoice> to use the <codeVoice>write(to:atomically:)</codeVoice> method. In this example, the <codeVoice>colors</codeVoice> array can be bridged to <codeVoice>NSArray</codeVoice> because the <codeVoice>colors</codeVoice> array\u2019s <codeVoice>String</codeVoice> elements bridge to <codeVoice>NSString</codeVoice>. The compiler prevents bridging the <codeVoice>moreColors</codeVoice> array, on the other hand, because its <codeVoice>Element</codeVoice> type is <codeVoice>Optional&lt;String&gt;</codeVoice>, which does <emphasis>not</emphasis> bridge to a Foundation type.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// true]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// error: cannot convert value of type '[String?]' to type 'NSArray']]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Bridging from <codeVoice>Array</codeVoice> to <codeVoice>NSArray</codeVoice> takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an <codeVoice>@objc</codeVoice> protocol; otherwise, it takes O(<emphasis>n</emphasis>) time and space.</Para><Para>When the destination array\u2019s element type is a class or an <codeVoice>@objc</codeVoice> protocol, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> first calls the <codeVoice>copy(with:)</codeVoice> (<codeVoice>- copyWithZone:</codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray</codeVoice> that are already immutable, <codeVoice>copy(with:)</codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)</codeVoice> returns the same array, the instances of <codeVoice>NSArray</codeVoice> and <codeVoice>Array</codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array</codeVoice> share storage.</Para><Para>When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n</emphasis>) time. For example, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array&lt;Int&gt;</codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array</codeVoice> instance.</Para><Note><Para>The <codeVoice>ContiguousArray</codeVoice> and <codeVoice>ArraySlice</codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.</Para></Note></Discussion></CommentParts></Class>", "key.doc.name": "Array", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Array</decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</ref.protocol></decl.struct>", "key.groupname": "Collection/Array", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 888, "key.modulename": "Swift", "key.name": "Array", "key.namelength": 5, "key.nameoffset": 1128, "key.offset": 1118, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func argmax() -&gt; (<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Sa7Elementa\">Element</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1244}], "key.bodylength": 238, "key.bodyoffset": 1284, "key.doc.column": 15, "key.doc.comment": "Returns the index and value of the largest element in the array.", "key.doc.declaration": "public func argmax() -> (Int, Element)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift\" line=\"29\" column=\"15\"><Name>argmax()</Name><USR>s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF</USR><Declaration>public func argmax() -&gt; (Int, Element)</Declaration><CommentParts><Abstract><Para>Returns the index and value of the largest element in the array.</Para></Abstract></CommentParts></Function>", "key.doc.line": 29, "key.doc.name": "argmax()", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 1164, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>argmax</decl.name>() -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.typealias usr=\"s:Sa7Elementa\">Element</ref.typealias></tuple.element.type></tuple.element>)</tuple></decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 272, "key.name": "argmax()", "key.namelength": 8, "key.nameoffset": 1256, "key.offset": 1251, "key.parsed_declaration": "public func argmax() -> (Int, Element)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 29, "key.substructure": [{"key.annotated_decl": "<Declaration>var maxIndex: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxIndex</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 16, "key.name": "maxIndex", "key.namelength": 8, "key.nameoffset": 1326, "key.offset": 1322, "key.parsed_declaration": "var maxIndex = 0", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF8maxIndexL_Sivp"}, {"key.annotated_decl": "<Declaration>var maxValue: Element</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxValue</decl.name>: <decl.var.type>Element</decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 22, "key.name": "maxValue", "key.namelength": 8, "key.nameoffset": 1347, "key.offset": 1343, "key.parsed_declaration": "var maxValue = self[0]", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Element", "key.typeusr": "$SxD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF8maxValueL_xvp"}], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> () -> (Int, Element)", "key.typeusr": "$SSi_xtycD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6argmaxSi_xtyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func argsort(by areInIncreasingOrder: (<Type usr=\"s:Sa7Elementa\">Element</Type>, <Type usr=\"s:Sa7Elementa\">Element</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>) -&gt; [<Type usr=\"s:Sa\">Array</Type>.<Type usr=\"s:Sa5Indexa\">Index</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1603}], "key.bodylength": 79, "key.bodyoffset": 1694, "key.doc.column": 15, "key.doc.comment": "Returns the indices of the array's elements in sorted order.", "key.doc.declaration": "public func argsort(by areInIncreasingOrder: (Element, Element) -> Bool) -> [Array.Index]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift\" line=\"45\" column=\"15\"><Name>argsort(by:)</Name><USR>s:Sa13CoreMLHelpersSLRzlE7argsort2bySaySiGSbx_xtXE_tF</USR><Declaration>public func argsort(by areInIncreasingOrder: (Element, Element) -&gt; Bool) -&gt; [Array.Index]</Declaration><CommentParts><Abstract><Para>Returns the indices of the array\u2019s elements in sorted order.</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "argsort(by:)", "key.doc.type": "Function", "key.doclength": 73, "key.docoffset": 1527, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>argsort</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by</decl.var.parameter.argument_label> <decl.var.parameter.name>areInIncreasingOrder</decl.var.parameter.name>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"s:Sa7Elementa\">Element</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sa\">Array</ref.struct>.<ref.typealias usr=\"s:Sa5Indexa\">Index</ref.typealias>]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 164, "key.name": "argsort(by:)", "key.namelength": 60, "key.nameoffset": 1615, "key.offset": 1610, "key.parsed_declaration": "public func argsort(by areInIncreasingOrder: (Element, Element) -> Bool) -> [Array.Index]", "key.parsed_scope.end": 47, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> ((Element, Element) -> Bool) -> [Int]", "key.typeusr": "$S2bySaySiGSbx_xtXE_tcD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE7argsort2bySaySiGSbx_xtXE_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func gather(indices: [<Type usr=\"s:Sa\">Array</Type>.<Type usr=\"s:Sa5Indexa\">Index</Type>]) -&gt; [<Type usr=\"s:Sa7Elementa\">Element</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1863}], "key.bodylength": 83, "key.bodyoffset": 1920, "key.doc.column": 15, "key.doc.comment": "Returns a new array containing the elements at the specified indices.", "key.doc.declaration": "public func gather(indices: [Array.Index]) -> [Element]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift\" line=\"52\" column=\"15\"><Name>gather(indices:)</Name><USR>s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF</USR><Declaration>public func gather(indices: [Array.Index]) -&gt; [Element]</Declaration><CommentParts><Abstract><Para>Returns a new array containing the elements at the specified indices.</Para></Abstract></CommentParts></Function>", "key.doc.line": 52, "key.doc.name": "gather(indices:)", "key.doc.type": "Function", "key.doclength": 82, "key.docoffset": 1778, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gather</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>indices</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sa\">Array</ref.struct>.<ref.typealias usr=\"s:Sa5Indexa\">Index</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:Sa7Elementa\">Element</ref.typealias>]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 134, "key.name": "gather(indices:)", "key.namelength": 30, "key.nameoffset": 1875, "key.offset": 1870, "key.parsed_declaration": "public func gather(indices: [Array.Index]) -> [Element]", "key.parsed_scope.end": 56, "key.parsed_scope.start": 52, "key.substructure": [{"key.annotated_decl": "<Declaration>var a: [Element]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>a</decl.name>: <decl.var.type>[Element]</decl.var.type></decl.var.local>", "key.groupname": "Collection/Array", "key.kind": "source.lang.swift.decl.var.local", "key.length": 19, "key.name": "a", "key.namelength": 1, "key.nameoffset": 1929, "key.offset": 1925, "key.parsed_declaration": "var a = [Element]()", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "[Element]", "key.typeusr": "$SSayxGD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF1aL_ADvp"}], "key.typename": "<Element where Element : Comparable> (Array<Element>) -> ([Int]) -> [Element]", "key.typeusr": "$S7indicesSayxGSaySiG_tcD", "key.usr": "s:Sa13CoreMLHelpersSLRzlE6gather7indicesSayxGSaySiG_tF"}], "key.typename": "Array<Element>.Type", "key.typeusr": "$SSayxGmD", "key.usr": "s:Sa"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7702, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func createPixelBuffer(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1221}], "key.bodylength": 346, "key.bodyoffset": 1295, "key.doc.column": 13, "key.doc.comment": "Creates a RGB pixel buffer of the specified width and height.", "key.doc.declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"30\" column=\"13\"><Name>createPixelBuffer(width:height:)</Name><USR>s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF</USR><Declaration>public func createPixelBuffer(width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Creates a RGB pixel buffer of the specified width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 30, "key.doc.name": "createPixelBuffer(width:height:)", "key.doc.type": "Function", "key.doclength": 69, "key.docoffset": 1151, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>createPixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 414, "key.name": "createPixelBuffer(width:height:)", "key.namelength": 42, "key.nameoffset": 1233, "key.offset": 1228, "key.parsed_declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 40, "key.parsed_scope.start": 30, "key.substructure": [{"key.annotated_decl": "<Declaration>var pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelBuffer", "key.namelength": 11, "key.nameoffset": 1302, "key.offset": 1298, "key.parsed_declaration": "var pixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF05pixelE0L_AGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 168, "key.name": "status", "key.namelength": 6, "key.nameoffset": 1336, "key.offset": 1332, "key.parsed_declaration": "let status = CVPixelBufferCreate(nil, width, height,", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF6statusL_s5Int32Vvp"}], "key.typename": "(Int, Int) -> CVBuffer?", "key.typeusr": "$S5width6heightSo11CVBufferRefaSgSi_SitcD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, cropX: <Type usr=\"s:Si\">Int</Type>, cropY: <Type usr=\"s:Si\">Int</Type>, cropWidth: <Type usr=\"s:Si\">Int</Type>, cropHeight: <Type usr=\"s:Si\">Int</Type>, scaleWidth: <Type usr=\"s:Si\">Int</Type>, scaleHeight: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1699}], "key.bodylength": 1990, "key.bodyoffset": 2053, "key.doc.column": 13, "key.doc.comment": "First crops the pixel buffer, then resizes it.", "key.doc.declaration": "public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"45\" column=\"13\"><Name>resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF</USR><Declaration>public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>First crops the pixel buffer, then resizes it.</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.doc.type": "Function", "key.doclength": 54, "key.docoffset": 1644, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropX</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropY</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 2338, "key.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.namelength": 322, "key.nameoffset": 1711, "key.offset": 1706, "key.parsed_declaration": "public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer,\n                              cropX: Int,\n                              cropY: Int,\n                              cropWidth: Int,\n                              cropHeight: Int,\n                              scaleWidth: Int,\n                              scaleHeight: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 101, "key.parsed_scope.start": 45, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 2297, "key.offset": 2293, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>let offset: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "offset", "key.namelength": 6, "key.nameoffset": 2364, "key.offset": 2360, "key.parsed_declaration": "let offset = cropY*srcBytesPerRow + cropX*4", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6offsetL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 261, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 2410, "key.offset": 2406, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(data: srcData.advanced(by: offset),", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "vImage_Buffer", "key.typeusr": "$SSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 2675, "key.offset": 2671, "key.parsed_declaration": "let destBytesPerRow = scaleWidth*4", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 248, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 2831, "key.offset": 2827, "key.parsed_declaration": "var destBuffer = vImage_Buffer(data: destData,", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "vImage_Buffer", "key.typeusr": "$SSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 79, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3083, "key.offset": 3079, "key.parsed_declaration": "let error = vImageScale_ARGB8888(&srcBuffer, &destBuffer, nil, vImage_Flags(0))", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 152, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 3348, "key.offset": 3344, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 83, "key.parsed_scope.start": 83, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$SyySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 3504, "key.offset": 3500, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 3572, "key.offset": 3568, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03dstdE0L_AKvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 287, "key.name": "status", "key.namelength": 6, "key.nameoffset": 3609, "key.offset": 3605, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(nil, scaleWidth, scaleHeight,", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, Int, Int, Int, Int, Int, Int) -> CVBuffer?", "key.typeusr": "$S_5cropX0A1Y0A5Width0A6Height05scaleB00dC0So11CVBufferRefaSgAH_S6itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4105}], "key.bodylength": 278, "key.bodyoffset": 4239, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"106\" column=\"13\"><Name>resizePixelBuffer(_:width:height:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 106, "key.doc.name": "resizePixelBuffer(_:width:height:)", "key.doc.type": "Function", "key.doclength": 58, "key.docoffset": 4046, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 406, "key.name": "resizePixelBuffer(_:width:height:)", "key.namelength": 102, "key.nameoffset": 4117, "key.offset": 4112, "key.parsed_declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer,\n                              width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 112, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CVBuffer, Int, Int) -> CVBuffer?", "key.typeusr": "$S_5width6heightSo11CVBufferRefaSgAD_S2itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, output: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4579}], "key.bodylength": 361, "key.bodyoffset": 4768, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"117\" column=\"13\"><Name>resizePixelBuffer(_:width:height:output:context:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 117, "key.doc.name": "resizePixelBuffer(_:width:height:output:context:)", "key.doc.type": "Function", "key.doclength": 58, "key.docoffset": 4520, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>output</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 544, "key.name": "resizePixelBuffer(_:width:height:output:context:)", "key.namelength": 175, "key.nameoffset": 4591, "key.offset": 4586, "key.parsed_declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer,\n                              width: Int, height: Int,\n                              output: CVPixelBuffer, context: CIContext)", "key.parsed_scope.end": 126, "key.parsed_scope.start": 117, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let ciImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ciImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "ciImage", "key.namelength": 7, "key.nameoffset": 4775, "key.offset": 4771, "key.parsed_declaration": "let ciImage = CIImage(cvPixelBuffer: pixelBuffer)", "key.parsed_scope.end": 120, "key.parsed_scope.start": 120, "key.typename": "CIImage", "key.typeusr": "$SSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF7ciImageL_So7CIImageCvp"}, {"key.annotated_decl": "<Declaration>let sx: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sx</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 69, "key.name": "sx", "key.namelength": 2, "key.nameoffset": 4827, "key.offset": 4823, "key.parsed_declaration": "let sx = CGFloat(width) / CGFloat(CVPixelBufferGetWidth(pixelBuffer))", "key.parsed_scope.end": 121, "key.parsed_scope.start": 121, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2sxL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let sy: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sy</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 71, "key.name": "sy", "key.namelength": 2, "key.nameoffset": 4899, "key.offset": 4895, "key.parsed_declaration": "let sy = CGFloat(height) / CGFloat(CVPixelBufferGetHeight(pixelBuffer))", "key.parsed_scope.end": 122, "key.parsed_scope.start": 122, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2syL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let scaleTransform: <Type usr=\"c:@S@CGAffineTransform\">CGAffineTransform</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaleTransform</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGAffineTransform\">CGAffineTransform</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaleTransform", "key.namelength": 14, "key.nameoffset": 4973, "key.offset": 4969, "key.parsed_declaration": "let scaleTransform = CGAffineTransform(scaleX: sx, y: sy)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "CGAffineTransform", "key.typeusr": "$SSo17CGAffineTransformVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF14scaleTransformL_So08CGAffineN0Vvp"}, {"key.annotated_decl": "<Declaration>let scaledImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaledImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaledImage", "key.namelength": 11, "key.nameoffset": 5033, "key.offset": 5029, "key.parsed_declaration": "let scaledImage = ciImage.transformed(by: scaleTransform)", "key.parsed_scope.end": 124, "key.parsed_scope.start": 124, "key.typename": "CIImage", "key.typeusr": "$SSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF11scaledImageL_So7CIImageCvp"}], "key.typename": "(CVBuffer, Int, Int, CVBuffer, CIContext) -> ()", "key.typeusr": "$S_5width6height6output7contextySo11CVBufferRefa_S2iAFSo9CIContextCtcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, factor: <Type usr=\"s:s5UInt8V\">UInt8</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5212}], "key.bodylength": 2389, "key.bodyoffset": 5311, "key.doc.column": 13, "key.doc.comment": "Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.", "key.doc.declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"132\" column=\"13\"><Name>rotate90PixelBuffer(_:factor:)</Name><USR>s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF</USR><Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.</Para></Abstract></CommentParts></Function>", "key.doc.line": 132, "key.doc.name": "rotate90PixelBuffer(_:factor:)", "key.doc.type": "Function", "key.doclength": 78, "key.docoffset": 5132, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rotate90PixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>factor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 2482, "key.name": "rotate90PixelBuffer(_:factor:)", "key.namelength": 67, "key.nameoffset": 5224, "key.offset": 5219, "key.parsed_declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.parsed_scope.end": 192, "key.parsed_scope.start": 132, "key.substructure": [{"key.annotated_decl": "<Declaration>let sourceWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "sourceWidth", "key.namelength": 11, "key.nameoffset": 5570, "key.offset": 5566, "key.parsed_declaration": "let sourceWidth = CVPixelBufferGetWidth(srcPixelBuffer)", "key.parsed_scope.end": 138, "key.parsed_scope.start": 138, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11sourceWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>let sourceHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "sourceHeight", "key.namelength": 12, "key.nameoffset": 5630, "key.offset": 5626, "key.parsed_declaration": "let sourceHeight = CVPixelBufferGetHeight(srcPixelBuffer)", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF12sourceHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var destWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destWidth", "key.namelength": 9, "key.nameoffset": 5692, "key.offset": 5688, "key.parsed_declaration": "var destWidth = sourceHeight", "key.parsed_scope.end": 140, "key.parsed_scope.start": 140, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF9destWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>var destHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destHeight", "key.namelength": 10, "key.nameoffset": 5725, "key.offset": 5721, "key.parsed_declaration": "var destHeight = sourceWidth", "key.parsed_scope.end": 141, "key.parsed_scope.start": 141, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF10destHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var color: <Type usr=\"s:s5UInt8V\">UInt8</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 5758, "key.offset": 5754, "key.parsed_declaration": "var color = UInt8(0)", "key.parsed_scope.end": 142, "key.parsed_scope.start": 142, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5colorL_AHvp"}, {"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 5890, "key.offset": 5886, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 149, "key.parsed_scope.start": 149, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 250, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 5959, "key.offset": 5955, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(data: srcData,", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.typename": "vImage_Buffer", "key.typeusr": "$SSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 6219, "key.offset": 6215, "key.parsed_declaration": "let destBytesPerRow = destWidth*4", "key.parsed_scope.end": 155, "key.parsed_scope.start": 155, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 252, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 6387, "key.offset": 6383, "key.parsed_declaration": "var destBuffer = vImage_Buffer(data: destData,", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "vImage_Buffer", "key.typeusr": "$SSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 93, "key.name": "error", "key.namelength": 5, "key.nameoffset": 6649, "key.offset": 6645, "key.parsed_declaration": "let error = vImageRotate90_ARGB8888(&srcBuffer, &destBuffer, factor, &color, vImage_Flags(0))", "key.parsed_scope.end": 165, "key.parsed_scope.start": 165, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 168, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 6957, "key.offset": 6953, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 174, "key.parsed_scope.start": 174, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$SyySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 7135, "key.offset": 7131, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 180, "key.parsed_scope.start": 180, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 7205, "key.offset": 7201, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 181, "key.parsed_scope.start": 181, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03dstdE0L_AFvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 291, "key.name": "status", "key.namelength": 6, "key.nameoffset": 7244, "key.offset": 7240, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(nil, destWidth, destHeight,", "key.parsed_scope.end": 182, "key.parsed_scope.start": 182, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, UInt8) -> CVBuffer?", "key.typeusr": "$S_6factorSo11CVBufferRefaSgAC_s5UInt8VtcD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1386, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>class MLMultiArray : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1154}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1130}], "key.bodylength": 199, "key.bodyoffset": 1185, "key.doc.column": 12, "key.doc.declaration": "class MLMultiArray : NSObject", "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h\" line=\"28\" column=\"12\"><Name>MLMultiArray</Name><USR>c:objc(cs)MLMultiArray</USR><Declaration>class MLMultiArray : NSObject</Declaration><Abstract><Para> Multidimensional Array</Para></Abstract><Availability distribution=\"tvOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"watchOS\"><IntroducedInVersion>4.0</IntroducedInVersion></Availability><Availability distribution=\"iOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"macOS\"><IntroducedInVersion>10.13</IntroducedInVersion></Availability></Other>", "key.doc.line": 28, "key.doc.name": "MLMultiArray", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLMultiArray.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MLMultiArray</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 224, "key.modulename": "CoreML.MLMultiArray", "key.name": "MLMultiArray", "key.namelength": 12, "key.nameoffset": 1171, "key.offset": 1161, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func image&lt;T&gt;(offset: <Type usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</Type>, scale: <Type usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>? where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1241}], "key.bodylength": 70, "key.bodyoffset": 1312, "key.doc.column": 15, "key.doc.comment": "Converts the multi-array to a UIImage.", "key.doc.declaration": "public func image<T>(offset: T, scale: T) -> UIImage? where T : MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift\" line=\"31\" column=\"15\"><Name>image(offset:scale:)</Name><USR>s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF</USR><Declaration>public func image&lt;T&gt;(offset: T, scale: T) -&gt; UIImage? where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Converts the multi-array to a UIImage.</Para></Abstract></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "image(offset:scale:)", "key.doc.type": "Function", "key.doclength": 50, "key.docoffset": 1188, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>&lt;<decl.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 135, "key.name": "image(offset:scale:)", "key.namelength": 45, "key.nameoffset": 1253, "key.offset": 1248, "key.parsed_declaration": "public func image<T: MultiArrayType>(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1262}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 1259, "key.offset": 1259, "key.parsed_declaration": "public func image<T: MultiArrayType>(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF1TL_xmfp"}], "key.typename": "<T where T : MultiArrayType> (MLMultiArray) -> (T, T) -> UIImage?", "key.typeusr": "$S6offset5scaleSo7UIImageCSgx_xtc13CoreMLHelpers14MultiArrayTypeRzluD", "key.usr": "s:So12MLMultiArrayC13CoreMLHelpersE5image6offset5scaleSo7UIImageCSgx_xtAC05MultiB4TypeRzlF"}], "key.typename": "MLMultiArray.Type", "key.typeusr": "$SSo12MLMultiArrayCmD", "key.usr": "c:objc(cs)MLMultiArray"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1249, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clamp&lt;T&gt;(_ x: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, min: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, max: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1116}], "key.bodylength": 68, "key.bodyoffset": 1179, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_requirement></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 125, "key.name": "clamp(_:min:max:)", "key.namelength": 44, "key.nameoffset": 1128, "key.offset": 1123, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 29, "key.parsed_scope.start": 25, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1137}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 13, "key.name": "T", "key.namelength": 1, "key.nameoffset": 1134, "key.offset": 1134, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp"}], "key.typename": "<T where T : Comparable> (T, min: T, max: T) -> T", "key.typeusr": "$S_3min3maxxx_xxtcSLRzluD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10643, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol MultiArrayType : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1167}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1143}], "key.bodylength": 199, "key.bodyoffset": 1211, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1199}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MultiArrayType</decl.name> : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 237, "key.name": "MultiArrayType", "key.namelength": 14, "key.nameoffset": 1183, "key.offset": 1174, "key.parsed_declaration": "public protocol MultiArrayType: Comparable", "key.parsed_scope.end": 34, "key.parsed_scope.start": 28, "key.runtime_name": "_TtP4main14MultiArrayType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1267, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1225, "key.offset": 1214, "key.parsed_declaration": "static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func + (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "+(_:_:)", "key.namelength": 23, "key.nameoffset": 1288, "key.offset": 1276, "key.parsed_declaration": "static func +(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyxx_0C5ValueQztFZ\">+ (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyx0C5ValueQz_xtFZ\">+ (_: Self.RawValue, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$Syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1poiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "*(_:_:)", "key.namelength": 23, "key.nameoffset": 1334, "key.offset": 1322, "key.parsed_declaration": "static func *(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$Syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 12, "key.name": "init(_:)", "key.namelength": 12, "key.nameoffset": 1368, "key.offset": 1368, "key.parsed_declaration": "init(_: Int)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Int) -> Self", "key.typeusr": "$SyxSicD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypePyxSicfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1403, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1387, "key.offset": 1383, "key.parsed_declaration": "var toUInt8: UInt8", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.typename": "MultiArrayType.Protocol", "key.typeusr": "$S13CoreMLHelpers14MultiArrayType_pmD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP"}, {"key.annotated_decl": "<Declaration>struct Double</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1413}], "key.bodylength": 132, "key.bodyoffset": 1471, "key.doc.declaration": "struct Double", "key.doc.full_as_xml": "<Class><Name>Double</Name><USR>s:Sd</USR><Declaration>struct Double</Declaration><CommentParts><Abstract><Para>A double-precision, floating-point value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Double", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1455}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Double</decl.name></decl.struct>", "key.groupname": "Math/Floating", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 167, "key.modulename": "Swift", "key.name": "Double", "key.namelength": 6, "key.nameoffset": 1447, "key.offset": 1437, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1474}], "key.bodylength": 16, "key.bodyoffset": 1534, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.static", "key.length": 70, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1492, "key.offset": 1481, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:Sd13CoreMLHelpersE18multiArrayDataTypeSo07MLMultideF0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1554}], "key.bodylength": 20, "key.bodyoffset": 1581, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1565, "key.offset": 1561, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:Sd13CoreMLHelpersE7toUInt8s0D0Vvp"}], "key.typename": "Double.Type", "key.typeusr": "$SSdmD", "key.usr": "s:Sd"}, {"key.annotated_decl": "<Declaration>struct Float</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1606}], "key.bodylength": 133, "key.bodyoffset": 1663, "key.doc.declaration": "struct Float", "key.doc.full_as_xml": "<Class><Name>Float</Name><USR>s:Sf</USR><Declaration>struct Float</Declaration><CommentParts><Abstract><Para>A single-precision, floating-point value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Float", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1647}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Float</decl.name></decl.struct>", "key.groupname": "Math/Floating", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 167, "key.modulename": "Swift", "key.name": "Float", "key.namelength": 5, "key.nameoffset": 1640, "key.offset": 1630, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1666}], "key.bodylength": 17, "key.bodyoffset": 1726, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1684, "key.offset": 1673, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:Sf13CoreMLHelpersE18multiArrayDataTypeSo07MLMultideF0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1747}], "key.bodylength": 20, "key.bodyoffset": 1774, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1758, "key.offset": 1754, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:Sf13CoreMLHelpersE7toUInt8s0D0Vvp"}], "key.typename": "Float.Type", "key.typeusr": "$SSfmD", "key.usr": "s:Sf"}, {"key.annotated_decl": "<Declaration>struct Int32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</Type>, <Type usr=\"s:SZ\">SignedInteger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1799}], "key.bodylength": 131, "key.bodyoffset": 1856, "key.doc.declaration": "struct Int32 : FixedWidthInteger, SignedInteger", "key.doc.full_as_xml": "<Class><Name>Int32</Name><USR>s:s5Int32V</USR><Declaration>struct Int32 : FixedWidthInteger, SignedInteger</Declaration><CommentParts><Abstract><Para>A 32-bit signed integer value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Int32", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1840}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Int32</decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger</ref.protocol></decl.struct>", "key.groupname": "Math/Integers", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 165, "key.modulename": "Swift", "key.name": "Int32", "key.namelength": 5, "key.nameoffset": 1833, "key.offset": 1823, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1859}], "key.bodylength": 15, "key.bodyoffset": 1919, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Integers", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1877, "key.offset": 1866, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:s5Int32V13CoreMLHelpersE18multiArrayDataTypeSo07MLMultiefG0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1938}], "key.bodylength": 20, "key.bodyoffset": 1965, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Integers", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1949, "key.offset": 1945, "key.overrides": [{"key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:s5Int32V13CoreMLHelpersE7toUInt8s0E0Vvp"}], "key.typename": "Int32.Type", "key.typeusr": "$Ss5Int32VmD", "key.usr": "s:s5Int32V"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2074}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2050}], "key.bodylength": 3477, "key.bodyoffset": 2119, "key.doc.column": 15, "key.doc.comment": "Wrapper around MLMultiArray to make it more Swifty.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"58\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.doclength": 59, "key.docoffset": 1990, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 3516, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 2088, "key.offset": 2081, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 173, "key.parsed_scope.start": 58, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 2102}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 2099, "key.offset": 2099, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2122}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "array", "key.namelength": 5, "key.nameoffset": 2133, "key.offset": 2129, "key.parsed_declaration": "public let array: MLMultiArray", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5arraySo07MLMultiD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let pointer: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2155}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "pointer", "key.namelength": 7, "key.nameoffset": 2166, "key.offset": 2162, "key.parsed_declaration": "public let pointer: UnsafeMutablePointer<T>", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "UnsafeMutablePointer<T>", "key.typeusr": "$SSpyxGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7pointerSpyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var strides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2215}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2202}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>strides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "strides", "key.namelength": 7, "key.nameoffset": 2226, "key.offset": 2222, "key.parsed_declaration": "private(set) public var strides: [Int]", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7stridesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var shape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2256}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2243}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "shape", "key.namelength": 5, "key.nameoffset": 2267, "key.offset": 2263, "key.parsed_declaration": "private(set) public var shape: [Int]", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2346}], "key.bodylength": 165, "key.bodyoffset": 2373, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array filled with all zeros.", "key.doc.declaration": "public init(shape: [Int])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"68\" column=\"10\"><Name>init(shape:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc</USR><Declaration>public init(shape: [Int])</Declaration><CommentParts><Abstract><Para>Creates a new multi-array filled with all zeros.</Para></Abstract></CommentParts></Function>", "key.doc.line": 68, "key.doc.name": "init(shape:)", "key.doc.type": "Function", "key.doclength": 60, "key.docoffset": 2283, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(shape:)", "key.namelength": 18, "key.nameoffset": 2353, "key.offset": 2353, "key.parsed_declaration": "public init(shape: [Int])", "key.parsed_scope.end": 72, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let m: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>m</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 85, "key.name": "m", "key.namelength": 1, "key.nameoffset": 2382, "key.offset": 2378, "key.parsed_declaration": "let m = try! MLMultiArray(shape: shape as [NSNumber], dataType: T.multiArrayDataType)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc1mL_So07MLMultiD0Cvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$S5shape13CoreMLHelpers10MultiArrayVyxGSaySiG_tcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>], initial: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2621}], "key.bodylength": 89, "key.bodyoffset": 2660, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array initialized with the specified value.", "key.doc.declaration": "public init(shape: [Int], initial: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"77\" column=\"10\"><Name>init(shape:initial:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc</USR><Declaration>public init(shape: [Int], initial: T)</Declaration><CommentParts><Abstract><Para>Creates a new multi-array initialized with the specified value.</Para></Abstract></CommentParts></Function>", "key.doc.line": 77, "key.doc.name": "init(shape:initial:)", "key.doc.type": "Function", "key.doclength": 75, "key.docoffset": 2543, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initial</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init(shape:initial:)", "key.namelength": 30, "key.nameoffset": 2628, "key.offset": 2628, "key.parsed_declaration": "public init(shape: [Int], initial: T)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 77, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int], T) -> MultiArray<T>", "key.typeusr": "$S5shape7initial13CoreMLHelpers10MultiArrayVyxGSaySiG_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2827}], "key.bodylength": 72, "key.bodyoffset": 2863, "key.doc.column": 10, "key.doc.comment": "Creates a multi-array that wraps an existing MLMultiArray.", "key.doc.declaration": "public init(_ array: MLMultiArray)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"87\" column=\"10\"><Name>init(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc</USR><Declaration>public init(_ array: MLMultiArray)</Declaration><CommentParts><Abstract><Para>Creates a multi-array that wraps an existing MLMultiArray.</Para></Abstract></CommentParts></Function>", "key.doc.line": 87, "key.doc.name": "init(_:)", "key.doc.type": "Function", "key.doclength": 70, "key.docoffset": 2754, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 102, "key.name": "init(_:)", "key.namelength": 27, "key.nameoffset": 2834, "key.offset": 2834, "key.parsed_declaration": "public init(_ array: MLMultiArray)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 87, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> (MLMultiArray) -> MultiArray<T>", "key.typeusr": "$Sy13CoreMLHelpers10MultiArrayVyxGSo07MLMultiD0CcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3222}], "key.bodylength": 33, "key.bodyoffset": 3245, "key.doc.column": 14, "key.doc.comment": "Returns the number of elements in the entire array.", "key.doc.declaration": "public var count: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"101\" column=\"14\"><Name>count</Name><USR>s:13CoreMLHelpers10MultiArrayV5countSivp</USR><Declaration>public var count: Int { get }</Declaration><CommentParts><Abstract><Para>Returns the number of elements in the entire array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 101, "key.doc.name": "count", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 3156, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 50, "key.name": "count", "key.namelength": 5, "key.nameoffset": 3233, "key.offset": 3229, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 103, "key.parsed_scope.start": 101, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3283}], "key.bodylength": 67, "key.bodyoffset": 3314, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 92, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 3290, "key.offset": 3290, "key.parsed_declaration": "public subscript(a: Int) -> T", "key.parsed_scope.end": 108, "key.parsed_scope.start": 105, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int) -> T", "key.typeusr": "$SyxSicD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSicip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3386}], "key.bodylength": 119, "key.bodyoffset": 3425, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 152, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 3393, "key.offset": 3393, "key.parsed_declaration": "public subscript(a: Int, b: Int) -> T", "key.parsed_scope.end": 113, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int) -> T", "key.typeusr": "$SyxSi_SitcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3549}], "key.bodylength": 149, "key.bodyoffset": 3596, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 190, "key.name": "subscript(_:_:_:)", "key.namelength": 33, "key.nameoffset": 3556, "key.offset": 3556, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int) -> T", "key.parsed_scope.end": 118, "key.parsed_scope.start": 115, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S2itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3750}], "key.bodylength": 179, "key.bodyoffset": 3805, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 228, "key.name": "subscript(_:_:_:_:)", "key.namelength": 41, "key.nameoffset": 3757, "key.offset": 3757, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int) -> T", "key.parsed_scope.end": 123, "key.parsed_scope.start": 120, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S3itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>, e: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3989}], "key.bodylength": 209, "key.bodyoffset": 4052, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>e</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 266, "key.name": "subscript(_:_:_:_:_:)", "key.namelength": 49, "key.nameoffset": 3996, "key.offset": 3996, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int, e: Int) -> T", "key.parsed_scope.end": 128, "key.parsed_scope.start": 125, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S4itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(indices: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4266}], "key.bodylength": 105, "key.bodyoffset": 4305, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 138, "key.name": "subscript(_:)", "key.namelength": 25, "key.nameoffset": 4273, "key.offset": 4273, "key.parsed_declaration": "public subscript(indices: [Int]) -> T", "key.parsed_scope.end": 133, "key.parsed_scope.start": 130, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> ([Int]) -> T", "key.typeusr": "$SyxSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSaySiGcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func transposed(_ order: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4731}], "key.bodylength": 268, "key.bodyoffset": 4785, "key.doc.column": 15, "key.doc.comment": "Returns a transposed version of this array. NOTE: The new array still uses\nthe same underlying storage (the same MLMultiArray object).", "key.doc.declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"147\" column=\"15\"><Name>transposed(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF</USR><Declaration>public func transposed(_ order: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Returns a transposed version of this array. NOTE: The new array still uses the same underlying storage (the same MLMultiArray object).</Para></Abstract></CommentParts></Function>", "key.doc.line": 147, "key.doc.name": "transposed(_:)", "key.doc.type": "Function", "key.doclength": 149, "key.docoffset": 4579, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>order</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 316, "key.name": "transposed(_:)", "key.namelength": 26, "key.nameoffset": 4743, "key.offset": 4738, "key.parsed_declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.parsed_scope.end": 156, "key.parsed_scope.start": 147, "key.substructure": [{"key.annotated_decl": "<Declaration>var newShape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newShape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "newShape", "key.namelength": 8, "key.nameoffset": 4841, "key.offset": 4837, "key.parsed_declaration": "var newShape = shape", "key.parsed_scope.end": 149, "key.parsed_scope.start": 149, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF8newShapeL_AFvp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 4866, "key.offset": 4862, "key.parsed_declaration": "var newStrides = strides", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$Sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func reshaped(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5122}], "key.bodylength": 415, "key.bodyoffset": 5179, "key.doc.column": 15, "key.doc.comment": "Changes the number of dimensions and their sizes.", "key.doc.declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"161\" column=\"15\"><Name>reshaped(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF</USR><Declaration>public func reshaped(_ dimensions: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Changes the number of dimensions and their sizes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 161, "key.doc.name": "reshaped(_:)", "key.doc.type": "Function", "key.doclength": 61, "key.docoffset": 5058, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 466, "key.name": "reshaped(_:)", "key.namelength": 29, "key.nameoffset": 5134, "key.offset": 5129, "key.parsed_declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.parsed_scope.end": 172, "key.parsed_scope.start": 161, "key.substructure": [{"key.annotated_decl": "<Declaration>let newCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "newCount", "key.namelength": 8, "key.nameoffset": 5188, "key.offset": 5184, "key.parsed_declaration": "let newCount = dimensions.reduce(1, *)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF8newCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 5312, "key.offset": 5308, "key.parsed_declaration": "var newStrides = [Int](repeating: 0, count: dimensions.count)", "key.parsed_scope.end": 165, "key.parsed_scope.start": 165, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$Sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$S13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}, {"key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5599}], "key.bodylength": 1210, "key.bodyoffset": 5670, "key.doc.column": 15, "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"58\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 5645}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.inheritedtypes": [{"key.name": "CustomStringConvertible"}], "key.kind": "source.lang.swift.decl.extension", "key.length": 1258, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 5633, "key.offset": 5623, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5673}], "key.bodylength": 30, "key.bodyoffset": 5705, "key.doc.declaration": "var description: String { get }", "key.doc.discussion": [{"Para": "Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the `String(describing:)` initializer. This initializer works with any type, and uses the custom `description` property for types that conform to `CustomStringConvertible`:"}, {"CodeListing": ""}, {"Para": "The conversion of `p` to a string in the assignment to `s` uses the `Point` type\u2019s `description` property."}], "key.doc.full_as_xml": "<Other><Name>description</Name><USR>s:s23CustomStringConvertibleP11descriptionSSvp</USR><Declaration>var description: String { get }</Declaration><CommentParts><Abstract><Para>A textual representation of this instance.</Para></Abstract><Discussion><Para>Calling this property directly is discouraged. Instead, convert an instance of any type to a string by using the <codeVoice>String(describing:)</codeVoice> initializer. This initializer works with any type, and uses the custom <codeVoice>description</codeVoice> property for types that conform to <codeVoice>CustomStringConvertible</codeVoice>:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct Point: CustomStringConvertible {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let x: Int, y: Int]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var description: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        return \"(\\(x), \\(y))\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let p = Point(x: 21, y: 30)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let s = String(describing: p)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(s)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"(21, 30)\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The conversion of <codeVoice>p</codeVoice> to a string in the assignment to <codeVoice>s</codeVoice> uses the <codeVoice>Point</codeVoice> type\u2019s <codeVoice>description</codeVoice> property.</Para></Discussion></CommentParts></Other>", "key.doc.name": "description", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "description", "key.namelength": 11, "key.nameoffset": 5684, "key.offset": 5680, "key.overrides": [{"key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"}], "key.parsed_declaration": "public var description: String", "key.parsed_scope.end": 179, "key.parsed_scope.start": 177, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV11descriptionySSSaySiGF\">description(_:)</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:s23CustomStringConvertibleP11descriptionSSvp"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$S13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6907}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 6883}], "key.bodylength": 3705, "key.bodyoffset": 6936, "key.doc.column": 15, "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"58\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 3728, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 6924, "key.offset": 6914, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func image(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7320}], "key.bodylength": 348, "key.bodyoffset": 7372, "key.doc.column": 15, "key.doc.comment": "Converts the multi-array to a UIImage.\n\nUse the `offset` and `scale` parameters to put the values from the array in\nthe range [0, 255]. The offset is added first, then the result is multiplied\nby the scale.\n\nFor example: if the range of the data is [0, 1), use `offset: 0` and\n`scale: 255`. If the range is [-1, 1], use `offset: 1` and `scale: 127.5`.", "key.doc.declaration": "public func image(offset: T, scale: T) -> UIImage?", "key.doc.discussion": [{"Para": "Use the `offset` and `scale` parameters to put the values from the array in the range [0, 255]. The offset is added first, then the result is multiplied by the scale."}, {"Para": "For example: if the range of the data is [0, 1), use `offset: 0` and `scale: 255`. If the range is [-1, 1], use `offset: 1` and `scale: 127.5`."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"232\" column=\"15\"><Name>image(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF</USR><Declaration>public func image(offset: T, scale: T) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Converts the multi-array to a UIImage.</Para></Abstract><Discussion><Para>Use the <codeVoice>offset</codeVoice> and <codeVoice>scale</codeVoice> parameters to put the values from the array in the range [0, 255]. The offset is added first, then the result is multiplied by the scale.</Para><Para>For example: if the range of the data is [0, 1), use <codeVoice>offset: 0</codeVoice> and <codeVoice>scale: 255</codeVoice>. If the range is [-1, 1], use <codeVoice>offset: 1</codeVoice> and <codeVoice>scale: 127.5</codeVoice>.</Para></Discussion></CommentParts></Function>", "key.doc.line": 232, "key.doc.name": "image(offset:scale:)", "key.doc.type": "Function", "key.doclength": 378, "key.docoffset": 6939, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 394, "key.name": "image(offset:scale:)", "key.namelength": 26, "key.nameoffset": 7332, "key.offset": 7327, "key.parsed_declaration": "public func image(offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 240, "key.parsed_scope.start": 232, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF\">image(channel:offset:scale:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> UIImage?", "key.typeusr": "$S6offset5scaleSo7UIImageCSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toRawBytesRGBA(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; (bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7940}], "key.bodylength": 903, "key.bodyoffset": 8063, "key.doc.column": 15, "key.doc.comment": "Converts the multi-array into an array of RGBA pixels.\n\n- Note: The multi-array must have shape (3, height, width). If your array\n  has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "public func toRawBytesRGBA(offset: T, scale: T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"248\" column=\"15\"><Name>toRawBytesRGBA(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF</USR><Declaration>public func toRawBytesRGBA(offset: T, scale: T) -&gt; (bytes: [UInt8], width: Int, height: Int)?</Declaration><CommentParts><Abstract><Para>Converts the multi-array into an array of RGBA pixels.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (3, height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 248, "key.doc.name": "toRawBytesRGBA(offset:scale:)", "key.doc.type": "Function", "key.doclength": 212, "key.docoffset": 7725, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toRawBytesRGBA</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>bytes</tuple.element.argument_label>: <tuple.element.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>width</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>height</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1020, "key.name": "toRawBytesRGBA(offset:scale:)", "key.namelength": 35, "key.nameoffset": 7952, "key.offset": 7947, "key.parsed_declaration": "public func toRawBytesRGBA(offset: T, scale: T)\n                          -> (bytes: [UInt8], width: Int, height: Int)?", "key.parsed_scope.end": 277, "key.parsed_scope.start": 248, "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 8330, "key.offset": 8326, "key.parsed_declaration": "let height = shape[1]", "key.parsed_scope.end": 259, "key.parsed_scope.start": 259, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFALL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 8356, "key.offset": 8352, "key.parsed_declaration": "let width = shape[2]", "key.parsed_scope.end": 260, "key.parsed_scope.start": 260, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAKL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 60, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 8381, "key.offset": 8377, "key.parsed_declaration": "var bytes = [UInt8](repeating: 0, count: height * width * 4)", "key.parsed_scope.end": 261, "key.parsed_scope.start": 261, "key.typename": "[UInt8]", "key.typeusr": "$SSays5UInt8VGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAJL_AIvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.typeusr": "$S6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesRGBA6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toRawBytesGray(offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; (bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9188}], "key.bodylength": 497, "key.bodyoffset": 9311, "key.doc.column": 15, "key.doc.comment": "Converts the multi-array into an array of grayscale pixels.\n\n- Note: The multi-array must have shape (height, width). If your array\n  has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "public func toRawBytesGray(offset: T, scale: T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"285\" column=\"15\"><Name>toRawBytesGray(offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF</USR><Declaration>public func toRawBytesGray(offset: T, scale: T) -&gt; (bytes: [UInt8], width: Int, height: Int)?</Declaration><CommentParts><Abstract><Para>Converts the multi-array into an array of grayscale pixels.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 285, "key.doc.name": "toRawBytesGray(offset:scale:)", "key.doc.type": "Function", "key.doclength": 214, "key.docoffset": 8971, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toRawBytesGray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>bytes</tuple.element.argument_label>: <tuple.element.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>width</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>height</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 614, "key.name": "toRawBytesGray(offset:scale:)", "key.namelength": 35, "key.nameoffset": 9200, "key.offset": 9195, "key.parsed_declaration": "public func toRawBytesGray(offset: T, scale: T)\n                          -> (bytes: [UInt8], width: Int, height: Int)?", "key.parsed_scope.end": 304, "key.parsed_scope.start": 285, "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 9448, "key.offset": 9444, "key.parsed_declaration": "let height = shape[0]", "key.parsed_scope.end": 292, "key.parsed_scope.start": 292, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFALL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 9474, "key.offset": 9470, "key.parsed_declaration": "let width = shape[1]", "key.parsed_scope.end": 293, "key.parsed_scope.start": 293, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAKL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 56, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 9499, "key.offset": 9495, "key.parsed_declaration": "var bytes = [UInt8](repeating: 0, count: height * width)", "key.parsed_scope.end": 294, "key.parsed_scope.start": 294, "key.typename": "[UInt8]", "key.typeusr": "$SSays5UInt8VGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtFAJL_AIvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (T, T) -> (bytes: [UInt8], width: Int, height: Int)?", "key.typeusr": "$S6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV14toRawBytesGray6offset5scaleSays5UInt8VG5bytes_Si5widthSi6heighttSgx_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func image(channel: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>, scale: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10051}], "key.bodylength": 522, "key.bodyoffset": 10117, "key.doc.column": 15, "key.doc.comment": "Converts a single channel from the multi-array to a grayscale UIImage.\n\n- Note: The multi-array must have shape (channels, height, width). If your\n  array has a different shape, use `reshape()` or `transpose()` first.", "key.doc.declaration": "public func image(channel: Int, offset: T, scale: T) -> UIImage?", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"312\" column=\"15\"><Name>image(channel:offset:scale:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF</USR><Declaration>public func image(channel: Int, offset: T, scale: T) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Converts a single channel from the multi-array to a grayscale UIImage.</Para></Abstract><Discussion><Note><Para>The multi-array must have shape (channels, height, width). If your array has a different shape, use <codeVoice>reshape()</codeVoice> or <codeVoice>transpose()</codeVoice> first.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 312, "key.doc.name": "image(channel:offset:scale:)", "key.doc.type": "Function", "key.doclength": 235, "key.docoffset": 9813, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>image</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>channel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 582, "key.name": "image(channel:offset:scale:)", "key.namelength": 40, "key.nameoffset": 10063, "key.offset": 10058, "key.parsed_declaration": "public func image(channel: Int, offset: T, scale: T) -> UIImage?", "key.parsed_scope.end": 331, "key.parsed_scope.start": 312, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5image6offset5scaleSo7UIImageCSgx_xtF\">image(offset:scale:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "height", "key.namelength": 6, "key.nameoffset": 10390, "key.offset": 10386, "key.parsed_declaration": "let height = shape[1]", "key.parsed_scope.end": 322, "key.parsed_scope.start": 322, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF6heightL_Sivp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "width", "key.namelength": 5, "key.nameoffset": 10416, "key.offset": 10412, "key.parsed_declaration": "let width = shape[2]", "key.parsed_scope.end": 323, "key.parsed_scope.start": 323, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF5widthL_Sivp"}, {"key.annotated_decl": "<Declaration>var a: <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type>&lt;T&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>a</decl.name>: <decl.var.type><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct>&lt;T&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 45, "key.name": "a", "key.namelength": 1, "key.nameoffset": 10441, "key.offset": 10437, "key.parsed_declaration": "var a = MultiArray<T>(shape: [height, width])", "key.parsed_scope.end": 324, "key.parsed_scope.start": 324, "key.typename": "MultiArray<T>", "key.typeusr": "$S13CoreMLHelpers10MultiArrayVyxGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF1aL_ACyxGvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> (Int, T, T) -> UIImage?", "key.typeusr": "$S7channel6offset5scaleSo7UIImageCSgSi_xxtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5image7channel6offset5scaleSo7UIImageCSgSi_xxtF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$S13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6850, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func IOU(_ a: <Type usr=\"c:@S@CGRect\">CGRect</Type>, _ b: <Type usr=\"c:@S@CGRect\">CGRect</Type>) -&gt; <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1239}], "key.bodylength": 517, "key.bodyoffset": 1291, "key.doc.column": 13, "key.doc.comment": "Computes intersection-over-union overlap between two bounding boxes.", "key.doc.declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"31\" column=\"13\"><Name>IOU(_:_:)</Name><USR>s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF</USR><Declaration>public func IOU(_ a: CGRect, _ b: CGRect) -&gt; Float</Declaration><CommentParts><Abstract><Para>Computes intersection-over-union overlap between two bounding boxes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "IOU(_:_:)", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 1161, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>IOU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 563, "key.name": "IOU(_:_:)", "key.namelength": 29, "key.nameoffset": 1251, "key.offset": 1246, "key.parsed_declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.parsed_scope.end": 45, "key.parsed_scope.start": 31, "key.substructure": [{"key.annotated_decl": "<Declaration>let areaA: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaA</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaA", "key.namelength": 5, "key.nameoffset": 1298, "key.offset": 1294, "key.parsed_declaration": "let areaA = a.width * a.height", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaAL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let areaB: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaB</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaB", "key.namelength": 5, "key.nameoffset": 1361, "key.offset": 1357, "key.parsed_declaration": "let areaB = b.width * b.height", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaBL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinX", "key.namelength": 16, "key.nameoffset": 1424, "key.offset": 1420, "key.parsed_declaration": "let intersectionMinX = max(a.minX, b.minX)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinY", "key.namelength": 16, "key.nameoffset": 1469, "key.offset": 1465, "key.parsed_declaration": "let intersectionMinY = max(a.minY, b.minY)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxX", "key.namelength": 16, "key.nameoffset": 1514, "key.offset": 1510, "key.parsed_declaration": "let intersectionMaxX = min(a.maxX, b.maxX)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxY", "key.namelength": 16, "key.nameoffset": 1559, "key.offset": 1555, "key.parsed_declaration": "let intersectionMaxY = min(a.maxY, b.maxY)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionArea: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionArea</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 137, "key.name": "intersectionArea", "key.namelength": 16, "key.nameoffset": 1604, "key.offset": 1600, "key.parsed_declaration": "let intersectionArea = max(intersectionMaxY - intersectionMinY, 0) *", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "CGFloat", "key.typeusr": "$S12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionAreaL_0A8Graphics7CGFloatVvp"}], "key.typename": "(CGRect, CGRect) -> Float", "key.typeusr": "$SySfSo6CGRectV_ABtcD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias NMSPrediction = (classIndex: <Type usr=\"s:Si\">Int</Type>, score: <Type usr=\"s:Sf\">Float</Type>, rect: <Type usr=\"c:@S@CGRect\">CGRect</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1811}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>NMSPrediction</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>classIndex</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>score</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>rect</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 71, "key.name": "NMSPrediction", "key.namelength": 13, "key.nameoffset": 1828, "key.offset": 1818, "key.parsed_declaration": "public typealias NMSPrediction = (classIndex: Int, score: Float, rect: CGRect)", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "(classIndex: Int, score: Float, rect: CGRect).Type", "key.typeusr": "$SSi10classIndex_Sf5scoreSo6CGRectV4recttmD", "key.usr": "s:13CoreMLHelpers13NMSPredictiona"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1990}], "key.bodylength": 220, "key.bodyoffset": 2096, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"53\" column=\"13\"><Name>nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1891, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 320, "key.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.namelength": 83, "key.nameoffset": 2002, "key.offset": 1997, "key.parsed_declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.parsed_scope.end": 58, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF\">nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], Float, Int) -> [Int]", "key.typeusr": "$S11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], indices: [<Type usr=\"s:Si\">Int</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3129}], "key.bodylength": 1015, "key.bodyoffset": 3341, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.\n\nBased on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc\n\n- Note: This version of NMS ignores the class of the bounding boxes. Since it\n  selects the bounding boxes in a greedy fashion, if a certain class has many\n  boxes that are selected, then it is possible none of the boxes of the other\n  classes get selected.\n\n- Parameters:\n  - predictions: an array of bounding boxes and their scores\n  - indices: which predictions to look at\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxBoxes: the maximum number of boxes that will be selected\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.discussion": [{"Para": "Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc"}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"79\" column=\"13\"><Name>nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract><Parameters><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>indices</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>which predictions to look at</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxBoxes</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc</Para><Note><Para>This version of NMS ignores the class of the bounding boxes. Since it selects the bounding boxes in a greedy fashion, if a certain class has many boxes that are selected, then it is possible none of the boxes of the other classes get selected.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 79, "key.doc.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.doc.parameters": [{"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "which predictions to look at"}], "name": "indices"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected"}], "name": "maxBoxes"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 809, "key.docoffset": 2319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>indices</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1221, "key.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.namelength": 189, "key.nameoffset": 3141, "key.offset": 3136, "key.parsed_declaration": "public func nonMaxSuppression(predictions: [NMSPrediction],\n                              indices: [Int],\n                              iouThreshold: Float,\n                              maxBoxes: Int) -> [Int]", "key.parsed_scope.end": 115, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF\">nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let sortedIndices: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedIndices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "sortedIndices", "key.namelength": 13, "key.nameoffset": 3421, "key.offset": 3417, "key.parsed_declaration": "let sortedIndices = indices.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 85, "key.parsed_scope.start": 85, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF13sortedIndicesL_AGvp"}, {"key.annotated_decl": "<Declaration>var selected: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selected</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "selected", "key.namelength": 8, "key.nameoffset": 3509, "key.offset": 3505, "key.parsed_declaration": "var selected: [Int] = []", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF8selectedL_AGvp"}], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], [Int], Float, Int) -> [Int]", "key.typeusr": "$S11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AESfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppressionMultiClass(numClasses: <Type usr=\"s:Si\">Int</Type>, predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], scoreThreshold: <Type usr=\"s:Sf\">Float</Type>, iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxPerClass: <Type usr=\"s:Si\">Int</Type>, maxTotal: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5373}], "key.bodylength": 1101, "key.bodyoffset": 5747, "key.doc.column": 13, "key.doc.comment": "Multi-class version of non maximum suppression.\n\nWhere `nonMaxSuppression()` does not look at the class of the predictions at\nall, the multi-class version first selects the best bounding boxes for each\nclass, and then keeps the best ones of those.\n\nWith this method you can usually expect to see at least one bounding box for\neach class (unless all the scores for a given class are really low).\n\nBased on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py\n\n- Parameters:\n  - numClasses: the number of classes\n  - predictions: an array of bounding boxes and their scores\n  - scoreThreshold: used to only keep bounding boxes with a high enough score\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxPerClass: the maximum number of boxes that will be selected per class\n  - maxTotal: maximum number of boxes that will be selected over all classes\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -> [Int]", "key.doc.discussion": [{"Para": "Where `nonMaxSuppression()` does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those."}, {"Para": "With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low)."}, {"Para": "Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py"}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"139\" column=\"13\"><Name>nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)</Name><USR>s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF</USR><Declaration>public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Multi-class version of non maximum suppression.</Para></Abstract><Parameters><Parameter><Name>numClasses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the number of classes</Para></Discussion></Parameter><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>scoreThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to only keep bounding boxes with a high enough score</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxPerClass</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected per class</Para></Discussion></Parameter><Parameter><Name>maxTotal</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>maximum number of boxes that will be selected over all classes</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Where <codeVoice>nonMaxSuppression()</codeVoice> does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those.</Para><Para>With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low).</Para><Para>Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py</Para></Discussion></CommentParts></Function>", "key.doc.line": 139, "key.doc.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.doc.parameters": [{"discussion": [{"Para": "the number of classes"}], "name": "numClasses"}, {"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "used to only keep bounding boxes with a high enough score"}], "name": "scoreThreshold"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected per class"}], "name": "maxPerClass"}, {"discussion": [{"Para": "maximum number of boxes that will be selected over all classes"}], "name": "maxTotal"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 1013, "key.docoffset": 4359, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppressionMultiClass</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>numClasses</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scoreThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxPerClass</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxTotal</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1469, "key.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.namelength": 351, "key.nameoffset": 5385, "key.offset": 5380, "key.parsed_declaration": "public func nonMaxSuppressionMultiClass(numClasses: Int,\n                                        predictions: [NMSPrediction],\n                                        scoreThreshold: Float,\n                                        iouThreshold: Float,\n                                        maxPerClass: Int,\n                                        maxTotal: Int) -> [Int]", "key.parsed_scope.end": 176, "key.parsed_scope.start": 139, "key.substructure": [{"key.annotated_decl": "<Declaration>var selectedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selectedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 29, "key.name": "selectedBoxes", "key.namelength": 13, "key.nameoffset": 5754, "key.offset": 5750, "key.parsed_declaration": "var selectedBoxes: [Int] = []", "key.parsed_scope.end": 145, "key.parsed_scope.start": 145, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF13selectedBoxesL_AIvp"}, {"key.annotated_decl": "<Declaration>let sortedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 88, "key.name": "sortedBoxes", "key.namelength": 11, "key.nameoffset": 6718, "key.offset": 6714, "key.parsed_declaration": "let sortedBoxes = selectedBoxes.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 174, "key.parsed_scope.start": 174, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF11sortedBoxesL_AIvp"}], "key.typename": "(Int, [(classIndex: Int, score: Float, rect: CGRect)], Float, Float, Int, Int) -> [Int]", "key.typeusr": "$S10numClasses11predictions14scoreThreshold03iouE011maxPerClass0G5TotalSaySiGSi_SaySi10classIndex_Sf0D0So6CGRectV4recttGS2fS2itcD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1924, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ prob: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:Sd\">Double</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1230}], "key.bodylength": 174, "key.bodyoffset": 1305, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Core ML classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "public func top(_ k: Int, _ prob: [String : Double]) -> [(String, Double)]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift\" line=\"29\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF</USR><Declaration>public func top(_ k: Int, _ prob: [String : Double]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Core ML classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 29, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 117, "key.docoffset": 1112, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>prob</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 243, "key.name": "top(_:_:)", "key.namelength": 39, "key.nameoffset": 1242, "key.offset": 1237, "key.parsed_declaration": "public func top(_ k: Int, _ prob: [String: Double]) -> [(String, Double)]", "key.parsed_scope.end": 33, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF\">top(_: Int, _: [VNClassificationObservation]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [String : Double]) -> [(String, Double)]", "key.typeusr": "$SySaySS_SdtGSi_SDySSSdGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ observations: [<Type usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1623}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1599}], "key.bodylength": 203, "key.bodyoffset": 1719, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Vision classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift\" line=\"40\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF</USR><Declaration>@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Vision classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 116, "key.docoffset": 1482, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>observations</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 293, "key.name": "top(_:_:)", "key.namelength": 60, "key.nameoffset": 1635, "key.offset": 1630, "key.parsed_declaration": "public func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.parsed_scope.end": 44, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF\">top(_: Int, _: [String : Double]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [VNClassificationObservation]) -> [(String, Double)]", "key.typeusr": "$SySaySS_SdtGSi_SaySo27VNClassificationObservationCGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7171, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1131}], "key.bodylength": 2511, "key.bodyoffset": 1157, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 2531, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 1148, "key.offset": 1138, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func pixelBuffer(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1251}], "key.bodylength": 239, "key.bodyoffset": 1319, "key.doc.column": 15, "key.doc.comment": "Resizes the image to width x height and converts it to an RGB CVPixelBuffer.", "key.doc.declaration": "public func pixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"30\" column=\"15\"><Name>pixelBuffer(width:height:)</Name><USR>s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF</USR><Declaration>public func pixelBuffer(width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Resizes the image to width x height and converts it to an RGB CVPixelBuffer.</Para></Abstract></CommentParts></Function>", "key.doc.line": 30, "key.doc.name": "pixelBuffer(width:height:)", "key.doc.type": "Function", "key.doclength": 88, "key.docoffset": 1160, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 301, "key.name": "pixelBuffer(width:height:)", "key.namelength": 36, "key.nameoffset": 1263, "key.offset": 1258, "key.parsed_declaration": "public func pixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 35, "key.parsed_scope.start": 30, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF\">pixelBuffer(width:height:pixelFormatType:colorSpace:alphaInfo:)</RelatedName>"}], "key.substructure": [], "key.typename": "(UIImage) -> (Int, Int) -> CVBuffer?", "key.typeusr": "$S5width6heightSo11CVBufferRefaSgSi_SitcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func pixelBufferGray(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1659}], "key.bodylength": 238, "key.bodyoffset": 1731, "key.doc.column": 15, "key.doc.comment": "Resizes the image to width x height and converts it to a grayscale CVPixelBuffer.", "key.doc.declaration": "public func pixelBufferGray(width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"40\" column=\"15\"><Name>pixelBufferGray(width:height:)</Name><USR>s:So7UIImageC13CoreMLHelpersE15pixelBufferGray5width6heightSo11CVBufferRefaSgSi_SitF</USR><Declaration>public func pixelBufferGray(width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Resizes the image to width x height and converts it to a grayscale CVPixelBuffer.</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "pixelBufferGray(width:height:)", "key.doc.type": "Function", "key.doclength": 93, "key.docoffset": 1563, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>pixelBufferGray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 304, "key.name": "pixelBufferGray(width:height:)", "key.namelength": 40, "key.nameoffset": 1671, "key.offset": 1666, "key.parsed_declaration": "public func pixelBufferGray(width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 45, "key.parsed_scope.start": 40, "key.substructure": [], "key.typename": "(UIImage) -> (Int, Int) -> CVBuffer?", "key.typeusr": "$S5width6heightSo11CVBufferRefaSgSi_SitcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE15pixelBufferGray5width6heightSo11CVBufferRefaSgSi_SitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func pixelBuffer(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, pixelFormatType: <Type usr=\"c:@T@OSType\">OSType</Type>, colorSpace: <Type usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</Type>, alphaInfo: <Type usr=\"c:@E@CGImageAlphaInfo\">CGImageAlphaInfo</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.bodylength": 1532, "key.bodyoffset": 2134, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pixelFormatType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>colorSpace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alphaInfo</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImageAlphaInfo\">CGImageAlphaInfo</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1693, "key.name": "pixelBuffer(width:height:pixelFormatType:colorSpace:alphaInfo:)", "key.namelength": 135, "key.nameoffset": 1979, "key.offset": 1974, "key.parsed_declaration": "func pixelBuffer(width: Int, height: Int, pixelFormatType: OSType,\n                 colorSpace: CGColorSpace, alphaInfo: CGImageAlphaInfo) -> CVPixelBuffer?", "key.parsed_scope.end": 85, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF\">pixelBuffer(width:height:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var maybePixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maybePixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "maybePixelBuffer", "key.namelength": 16, "key.nameoffset": 2143, "key.offset": 2139, "key.parsed_declaration": "var maybePixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF010maybePixelE0L_ALvp"}, {"key.annotated_decl": "<Declaration>let attrs: [<Type usr=\"c:@T@CFStringRef\">CFString</Type> : <Type usr=\"c:@T@CFBooleanRef\">CFBoolean</Type>?]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>attrs</decl.name>: <decl.var.type>[<ref.class usr=\"c:@T@CFStringRef\">CFString</ref.class> : <ref.class usr=\"c:@T@CFBooleanRef\">CFBoolean</ref.class>?]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 147, "key.name": "attrs", "key.namelength": 5, "key.nameoffset": 2184, "key.offset": 2180, "key.parsed_declaration": "let attrs = [kCVPixelBufferCGImageCompatibilityKey: kCFBooleanTrue,", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "[CFString : CFBoolean?]", "key.typeusr": "$SSDySo11CFStringRefaSo09CFBooleanB0aSgGD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF5attrsL_SDySo08CFStringO0aSo09CFBooleanO0aSgGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 312, "key.name": "status", "key.namelength": 6, "key.nameoffset": 2336, "key.offset": 2332, "key.parsed_declaration": "let status = CVPixelBufferCreate(kCFAllocatorDefault,", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>let pixelData: <Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelData</decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 56, "key.name": "pixelData", "key.namelength": 9, "key.nameoffset": 2841, "key.offset": 2837, "key.parsed_declaration": "let pixelData = CVPixelBufferGetBaseAddress(pixelBuffer)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "UnsafeMutableRawPointer?", "key.typeusr": "$SSvSgD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF0D4DataL_SvSgvp"}], "key.typename": "(UIImage) -> (Int, Int, UInt32, CGColorSpace, CGImageAlphaInfo) -> CVBuffer?", "key.typeusr": "$S5width6height15pixelFormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorgK0aSo012CGImageAlphaI0VtcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer5width6height0D10FormatType10colorSpace9alphaInfoSo11CVBufferRefaSgSi_Sis6UInt32VSo07CGColorkO0aSo012CGImageAlphaM0VtF"}], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}, {"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 903, "key.bodyoffset": 3690, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 923, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 3681, "key.offset": 3671, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init?(pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3825}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3818}], "key.bodylength": 215, "key.bodyoffset": 3872, "key.doc.column": 22, "key.doc.comment": "Creates a new UIImage from a CVPixelBuffer.\nNOTE: This only works for RGB pixel buffers, not for grayscale.", "key.doc.declaration": "public convenience init?(pixelBuffer: CVPixelBuffer)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"93\" column=\"22\"><Name>init(pixelBuffer:)</Name><USR>s:So7UIImageC13CoreMLHelpersE11pixelBufferABSgSo11CVBufferRefa_tcfc</USR><Declaration>public convenience init?(pixelBuffer: CVPixelBuffer)</Declaration><CommentParts><Abstract><Para>Creates a new UIImage from a CVPixelBuffer. NOTE: This only works for RGB pixel buffers, not for grayscale.</Para></Abstract></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "init(pixelBuffer:)", "key.doc.type": "Function", "key.doclength": 122, "key.docoffset": 3693, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>pixelBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 251, "key.name": "init(pixelBuffer:)", "key.namelength": 33, "key.nameoffset": 3837, "key.offset": 3837, "key.parsed_declaration": "public convenience init?(pixelBuffer: CVPixelBuffer)", "key.parsed_scope.end": 102, "key.parsed_scope.start": 93, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(cm)imageNamed:\">init(named:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(cm)imageNamed:inBundle:compatibleWithTraitCollection:\">init(named:in:compatibleWith:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithContentsOfFile:\">init(contentsOfFile:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithData:\">init(data:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithData:scale:\">init(data:scale:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCGImage:\">init(cgImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCGImage:scale:orientation:\">init(cgImage:scale:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCIImage:scale:orientation:\">init(ciImage:scale:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSCoding(im)initWithCoder:\">init(coder:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC5UIKitE24imageLiteralResourceNameABSS_tcfc\">init(imageLiteralResourceName:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC13CoreMLHelpersE11pixelBuffer7contextABSgSo11CVBufferRefa_So9CIContextCtcfc\">init(pixelBuffer:context:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var cgImage: <Type usr=\"c:@T@CGImageRef\">CGImage</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgImage</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CGImageRef\">CGImage</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 21, "key.name": "cgImage", "key.namelength": 7, "key.nameoffset": 3881, "key.offset": 3877, "key.parsed_declaration": "var cgImage: CGImage?", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(py)CGImage\">cgImage</RelatedName>"}], "key.typename": "CGImage?", "key.typeusr": "$SSo10CGImageRefaSgD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBufferABSgSo11CVBufferRefa_tcfc7cgImageL_So07CGImageG0aSgvp"}], "key.typename": "(UIImage.Type) -> (CVBuffer) -> UIImage?", "key.typeusr": "$S11pixelBufferSo7UIImageCSgSo11CVBufferRefa_tcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBufferABSgSo11CVBufferRefa_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init?(pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4175}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4168}], "key.bodylength": 349, "key.bodyoffset": 4242, "key.doc.column": 22, "key.doc.comment": "Creates a new UIImage from a CVPixelBuffer, using Core Image.", "key.doc.declaration": "public convenience init?(pixelBuffer: CVPixelBuffer, context: CIContext)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"107\" column=\"22\"><Name>init(pixelBuffer:context:)</Name><USR>s:So7UIImageC13CoreMLHelpersE11pixelBuffer7contextABSgSo11CVBufferRefa_So9CIContextCtcfc</USR><Declaration>public convenience init?(pixelBuffer: CVPixelBuffer, context: CIContext)</Declaration><CommentParts><Abstract><Para>Creates a new UIImage from a CVPixelBuffer, using Core Image.</Para></Abstract></CommentParts></Function>", "key.doc.line": 107, "key.doc.name": "init(pixelBuffer:context:)", "key.doc.type": "Function", "key.doclength": 73, "key.docoffset": 4092, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>pixelBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 405, "key.name": "init(pixelBuffer:context:)", "key.namelength": 53, "key.nameoffset": 4187, "key.offset": 4187, "key.parsed_declaration": "public convenience init?(pixelBuffer: CVPixelBuffer, context: CIContext)", "key.parsed_scope.end": 116, "key.parsed_scope.start": 107, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(cm)imageNamed:\">init(named:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(cm)imageNamed:inBundle:compatibleWithTraitCollection:\">init(named:in:compatibleWith:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithContentsOfFile:\">init(contentsOfFile:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithData:\">init(data:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithData:scale:\">init(data:scale:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCGImage:\">init(cgImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCGImage:scale:orientation:\">init(cgImage:scale:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(im)initWithCIImage:scale:orientation:\">init(ciImage:scale:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSCoding(im)initWithCoder:\">init(coder:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC5UIKitE24imageLiteralResourceNameABSS_tcfc\">init(imageLiteralResourceName:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7UIImageC13CoreMLHelpersE11pixelBufferABSgSo11CVBufferRefa_tcfc\">init(pixelBuffer:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let ciImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ciImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "ciImage", "key.namelength": 7, "key.nameoffset": 4251, "key.offset": 4247, "key.parsed_declaration": "let ciImage = CIImage(cvPixelBuffer: pixelBuffer)", "key.parsed_scope.end": 108, "key.parsed_scope.start": 108, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)UIImage(py)CIImage\">ciImage</RelatedName>"}], "key.typename": "CIImage", "key.typeusr": "$SSo7CIImageCD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer7contextABSgSo11CVBufferRefa_So9CIContextCtcfc7ciImageL_So7CIImageCvp"}, {"key.annotated_decl": "<Declaration>let rect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 151, "key.name": "rect", "key.namelength": 4, "key.nameoffset": 4305, "key.offset": 4301, "key.parsed_declaration": "let rect = CGRect(x: 0, y: 0, width: CVPixelBufferGetWidth(pixelBuffer),", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "CGRect", "key.typeusr": "$SSo6CGRectVD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer7contextABSgSo11CVBufferRefa_So9CIContextCtcfc4rectL_So6CGRectVvp"}], "key.typename": "(UIImage.Type) -> (CVBuffer, CIContext) -> UIImage?", "key.typeusr": "$S11pixelBuffer7contextSo7UIImageCSgSo11CVBufferRefa_So9CIContextCtcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE11pixelBuffer7contextABSgSo11CVBufferRefa_So9CIContextCtcfc"}], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}, {"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 2554, "key.bodyoffset": 4615, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 2574, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 4606, "key.offset": 4596, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@nonobjc public class func fromByteArrayRGBA(_ bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, scale: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = default, orientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4694}, {"key.attribute": "source.decl.attribute.nonobjc", "key.length": 8, "key.offset": 4685}], "key.bodylength": 303, "key.bodyoffset": 5034, "key.doc.column": 30, "key.doc.comment": "Creates a new UIImage from an array of RGBA bytes.", "key.doc.declaration": "@nonobjc public class func fromByteArrayRGBA(_ bytes: [UInt8], width: Int, height: Int, scale: CGFloat = default, orientation: UIImage.Orientation = default) -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"123\" column=\"30\"><Name>fromByteArrayRGBA(_:width:height:scale:orientation:)</Name><USR>s:So7UIImageC13CoreMLHelpersE17fromByteArrayRGBA_5width6height5scale11orientationABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVtFZ</USR><Declaration>@nonobjc public class func fromByteArrayRGBA(_ bytes: [UInt8], width: Int, height: Int, scale: CGFloat = default, orientation: UIImage.Orientation = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Creates a new UIImage from an array of RGBA bytes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 123, "key.doc.name": "fromByteArrayRGBA(_:width:height:scale:orientation:)", "key.doc.type": "Function", "key.doclength": 64, "key.docoffset": 4618, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@nonobjc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromByteArrayRGBA</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>bytes</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.class>", "key.kind": "source.lang.swift.decl.function.method.class", "key.length": 637, "key.name": "fromByteArrayRGBA(_:width:height:scale:orientation:)", "key.namelength": 308, "key.nameoffset": 4712, "key.offset": 4701, "key.parsed_declaration": "@nonobjc public class func fromByteArrayRGBA(_ bytes: [UInt8],\n                                             width: Int,\n                                             height: Int,\n                                             scale: CGFloat = 0,\n                                             orientation: UIImage.Orientation = .up) -> UIImage?", "key.parsed_scope.end": 133, "key.parsed_scope.start": 123, "key.substructure": [], "key.typename": "(UIImage.Type) -> ([UInt8], Int, Int, CGFloat, UIImage.Orientation) -> UIImage?", "key.typeusr": "$S_5width6height5scale11orientationSo7UIImageCSgSays5UInt8VG_S2i12CoreGraphics7CGFloatVSo0E11OrientationVtcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE17fromByteArrayRGBA_5width6height5scale11orientationABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@nonobjc public class func fromByteArrayGray(_ bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, scale: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = default, orientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5423}, {"key.attribute": "source.decl.attribute.nonobjc", "key.length": 8, "key.offset": 5414}], "key.bodylength": 287, "key.bodyoffset": 5763, "key.doc.column": 30, "key.doc.comment": "Creates a new UIImage from an array of grayscale bytes.", "key.doc.declaration": "@nonobjc public class func fromByteArrayGray(_ bytes: [UInt8], width: Int, height: Int, scale: CGFloat = default, orientation: UIImage.Orientation = default) -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift\" line=\"138\" column=\"30\"><Name>fromByteArrayGray(_:width:height:scale:orientation:)</Name><USR>s:So7UIImageC13CoreMLHelpersE17fromByteArrayGray_5width6height5scale11orientationABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVtFZ</USR><Declaration>@nonobjc public class func fromByteArrayGray(_ bytes: [UInt8], width: Int, height: Int, scale: CGFloat = default, orientation: UIImage.Orientation = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Creates a new UIImage from an array of grayscale bytes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 138, "key.doc.name": "fromByteArrayGray(_:width:height:scale:orientation:)", "key.doc.type": "Function", "key.doclength": 69, "key.docoffset": 5342, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@nonobjc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromByteArrayGray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>bytes</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.class>", "key.kind": "source.lang.swift.decl.function.method.class", "key.length": 621, "key.name": "fromByteArrayGray(_:width:height:scale:orientation:)", "key.namelength": 308, "key.nameoffset": 5441, "key.offset": 5430, "key.parsed_declaration": "@nonobjc public class func fromByteArrayGray(_ bytes: [UInt8],\n                                             width: Int,\n                                             height: Int,\n                                             scale: CGFloat = 0,\n                                             orientation: UIImage.Orientation = .up) -> UIImage?", "key.parsed_scope.end": 148, "key.parsed_scope.start": 138, "key.substructure": [], "key.typename": "(UIImage.Type) -> ([UInt8], Int, Int, CGFloat, UIImage.Orientation) -> UIImage?", "key.typeusr": "$S_5width6height5scale11orientationSo7UIImageCSgSays5UInt8VG_S2i12CoreGraphics7CGFloatVSo0E11OrientationVtcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE17fromByteArrayGray_5width6height5scale11orientationABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@nonobjc public class func fromByteArray(_ bytes: [<Type usr=\"s:s5UInt8V\">UInt8</Type>], width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, scale: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, orientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type>, bytesPerRow: <Type usr=\"s:Si\">Int</Type>, colorSpace: <Type usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</Type>, alphaInfo: <Type usr=\"c:@E@CGImageAlphaInfo\">CGImageAlphaInfo</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6064}, {"key.attribute": "source.decl.attribute.nonobjc", "key.length": 8, "key.offset": 6055}], "key.bodylength": 640, "key.bodyoffset": 6527, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.function.method.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@nonobjc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromByteArray</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>bytes</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scale</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bytesPerRow</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>colorSpace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alphaInfo</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImageAlphaInfo\">CGImageAlphaInfo</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.class>", "key.kind": "source.lang.swift.decl.function.method.class", "key.length": 1097, "key.name": "fromByteArray(_:width:height:scale:orientation:bytesPerRow:colorSpace:alphaInfo:)", "key.namelength": 431, "key.nameoffset": 6082, "key.offset": 6071, "key.parsed_declaration": "@nonobjc public class func fromByteArray(_ bytes: [UInt8],\n                                  width: Int,\n                                  height: Int,\n                                  scale: CGFloat,\n                                  orientation: UIImage.Orientation,\n                                  bytesPerRow: Int,\n                                  colorSpace: CGColorSpace,\n                                  alphaInfo: CGImageAlphaInfo) -> UIImage?", "key.parsed_scope.end": 172, "key.parsed_scope.start": 150, "key.substructure": [{"key.annotated_decl": "<Declaration>var image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 19, "key.name": "image", "key.namelength": 5, "key.nameoffset": 6536, "key.offset": 6532, "key.parsed_declaration": "var image: UIImage?", "key.parsed_scope.end": 158, "key.parsed_scope.start": 158, "key.typename": "UIImage?", "key.typeusr": "$SSo7UIImageCSgD", "key.usr": "s:So7UIImageC13CoreMLHelpersE13fromByteArray_5width6height5scale11orientation11bytesPerRow10colorSpace9alphaInfoABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVSiSo07CGColorO3RefaSo012CGImageAlphaQ0VtFZ5imageL_ALvp"}], "key.typename": "(UIImage.Type) -> ([UInt8], Int, Int, CGFloat, UIImage.Orientation, Int, CGColorSpace, CGImageAlphaInfo) -> UIImage?", "key.typeusr": "$S_5width6height5scale11orientation11bytesPerRow10colorSpace9alphaInfoSo7UIImageCSgSays5UInt8VG_S2i12CoreGraphics7CGFloatVSo0L11OrientationVSiSo07CGColorI3RefaSo012CGImageAlphaK0VtcD", "key.usr": "s:So7UIImageC13CoreMLHelpersE13fromByteArray_5width6height5scale11orientation11bytesPerRow10colorSpace9alphaInfoABSgSays5UInt8VG_S2i0B8Graphics7CGFloatVSo0A11OrientationVSiSo07CGColorO3RefaSo012CGImageAlphaQ0VtFZ"}], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11903, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 318}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 227}], "key.bodylength": 198, "key.bodyoffset": 353, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"15\" column=\"17\"><Name>ReadModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "ReadModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 195, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadModelProvider</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 227, "key.name": "ReadModelProvider", "key.namelength": 17, "key.nameoffset": 334, "key.offset": 325, "key.parsed_declaration": "public protocol ReadModelProvider", "key.parsed_scope.end": 23, "key.parsed_scope.start": 15, "key.runtime_name": "FritzReadModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 400, "key.doc.column": 9, "key.doc.comment": "A read model", "key.doc.declaration": "var model: MLModel { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"18\" column=\"9\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model</USR><Declaration>var model: MLModel { get }</Declaration><CommentParts><Abstract><Para>A read model</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 17, "key.docoffset": 359, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "model", "key.namelength": 5, "key.nameoffset": 384, "key.offset": 380, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(urlOfModelInThisBundle) static var urlOfModelInThisBundle: <Type usr=\"s:10Foundation3URLV\">URL</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 469}], "key.bodylength": 5, "key.bodyoffset": 544, "key.doc.column": 16, "key.doc.comment": "The url of the compiled model url in the bundle.", "key.doc.declaration": "@objc(urlOfModelInThisBundle) static var urlOfModelInThisBundle: URL { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"22\" column=\"16\"><Name>urlOfModelInThisBundle</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle</USR><Declaration>@objc(urlOfModelInThisBundle) static var urlOfModelInThisBundle: URL { get }</Declaration><CommentParts><Abstract><Para>The url of the compiled model url in the bundle.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "urlOfModelInThisBundle", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 412, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(urlOfModelInThisBundle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>urlOfModelInThisBundle</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "urlOfModelInThisBundle", "key.namelength": 22, "key.nameoffset": 514, "key.offset": 503, "key.parsed_declaration": "static var urlOfModelInThisBundle : URL", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "URL", "key.typeusr": "$S10Foundation3URLVD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle"}], "key.typename": "ReadModelProvider.Protocol", "key.typeusr": "$S17FritzManagedModel04ReadC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 682}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 621}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 621}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 621}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 621}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 586}], "key.bodylength": 64, "key.bodyoffset": 741, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"28\" column=\"17\"><Name>ReadWriteModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 28, "key.doc.name": "ReadWriteModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 554, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 722}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadWriteModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadWriteModelProvider</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 117, "key.name": "ReadWriteModelProvider", "key.namelength": 22, "key.nameoffset": 698, "key.offset": 689, "key.parsed_declaration": "public protocol ReadWriteModelProvider: ReadModelProvider", "key.parsed_scope.end": 32, "key.parsed_scope.start": 28, "key.runtime_name": "FritzReadWriteModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 794, "key.doc.column": 9, "key.doc.comment": "A read-write model", "key.doc.declaration": "var model: MLModel { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"31\" column=\"9\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model</USR><Declaration>var model: MLModel { get set }</Declaration><CommentParts><Abstract><Para>A read-write model</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 747, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "model", "key.namelength": 5, "key.nameoffset": 778, "key.offset": 774, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model\">model</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model"}], "key.typename": "ReadWriteModelProvider.Protocol", "key.typeusr": "$S17FritzManagedModel09ReadWriteC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - Base", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 811}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1290}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1229}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1229}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1229}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1229}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1197}], "key.bodylength": 1588, "key.bodyoffset": 1353, "key.doc.column": 17, "key.doc.comment": "This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.\n\n- SeeAlso:\n   `SwiftIdentifiedModel`\n   `ObjcIdentifiedModel`\n\n- Note: You should not conform your generated class to this protocol directly, instead conform to either `SwiftIdentifiedModel` when using Swift, or `ObjcIdentifiedModel` when using Objective-C.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"47\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 47, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.doclength": 371, "key.docoffset": 825, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1327}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1334}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : AnyObject, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}, {"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 1645, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 1306, "key.offset": 1297, "key.parsed_declaration": "public protocol BaseIdentifiedModel: class, ReadModelProvider", "key.parsed_scope.end": 84, "key.parsed_scope.start": 47, "key.runtime_name": "FritzBaseIdentifiedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1503}], "key.bodylength": 5, "key.bodyoffset": 1571, "key.doc.column": 16, "key.doc.comment": "The Fritz model identifier that matches this class.\n\n- Note: You should copy this identifier from the Fritz dashboard", "key.doc.declaration": "@objc(fritzModelIdentifier) static var modelIdentifier: String { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"55\" column=\"16\"><Name>modelIdentifier</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier</USR><Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>The Fritz model identifier that matches this class.</Para></Abstract><Discussion><Note><Para>You should copy this identifier from the Fritz dashboard</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 1359, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzModelIdentifier)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 1546, "key.offset": 1535, "key.parsed_declaration": "static var modelIdentifier: String", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 2179}], "key.bodylength": 5, "key.bodyoffset": 2254, "key.doc.column": 16, "key.doc.comment": "This is the version of the model that is packaged with your application at submission time.\n\n- Note: As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.", "key.doc.declaration": "@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"63\" column=\"16\"><Name>packagedModelVersion</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion</USR><Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>This is the version of the model that is packaged with your application at submission time.</Para></Abstract><Discussion><Note><Para>As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 591, "key.docoffset": 1583, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzPackagedModelVersion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 44, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 2227, "key.offset": 2216, "key.parsed_declaration": "static var packagedModelVersion: Int", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2373}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 2342}], "key.bodylength": 5, "key.bodyoffset": 2418, "key.doc.column": 25, "key.doc.comment": "Signifies whether or not the model is encrypted.", "key.doc.declaration": "@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"70\" column=\"25\"><Name>encryptionSeed</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed</USR><Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }</Declaration><CommentParts><Abstract><Para>Signifies whether or not the model is encrypted.</Para></Abstract></CommentParts></Other>", "key.doc.line": 70, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 71, "key.docoffset": 2266, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzEncryptionSeed)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 2393, "key.offset": 2382, "key.parsed_declaration": "optional static var encryptionSeed: [UInt8]", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]", "key.typeusr": "$SSays5UInt8VGD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzConfiguration) optional static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2596}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 2566}], "key.bodylength": 5, "key.bodyoffset": 2646, "key.doc.column": 25, "key.doc.comment": "A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.", "key.doc.declaration": "@objc(fritzConfiguration) optional static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"76\" column=\"25\"><Name>configuration</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration</USR><Declaration>@objc(fritzConfiguration) optional static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract></CommentParts></Other>", "key.doc.line": 76, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 131, "key.docoffset": 2430, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 2616, "key.offset": 2605, "key.parsed_declaration": "optional static var configuration: Configuration", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2882}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 2842}], "key.bodylength": 5, "key.bodyoffset": 2933, "key.doc.column": 25, "key.doc.comment": "Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.", "key.doc.declaration": "@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"82\" column=\"25\"><Name>wifiRequiredForDownload</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload</USR><Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }</Declaration><CommentParts><Abstract><Para>Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.</Para></Abstract></CommentParts></Other>", "key.doc.line": 82, "key.doc.name": "wifiRequiredForDownload", "key.doc.type": "Other", "key.doclength": 179, "key.docoffset": 2658, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzWifiRequiredForDownload)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 48, "key.name": "wifiRequiredForDownload", "key.namelength": 23, "key.nameoffset": 2902, "key.offset": 2891, "key.parsed_declaration": "optional static var wifiRequiredForDownload: Bool", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE23wifiRequiredForDownloadSbvp\">wifiRequiredForDownload</RelatedName>"}], "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2944}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2944}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2944}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2944}], "key.bodylength": 1636, "key.bodyoffset": 3036, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"47\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 47, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : AnyObject, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1668, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 3015, "key.offset": 3005, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var identifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3386}], "key.bodylength": 51, "key.bodyoffset": 3417, "key.doc.column": 16, "key.doc.comment": "Identifier for this instance, proxy from the class identifier", "key.doc.declaration": "public var identifier: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"96\" column=\"16\"><Name>identifier</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE10identifierSSvp</USR><Declaration>public var identifier: String { get }</Declaration><CommentParts><Abstract><Para>Identifier for this instance, proxy from the class identifier</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "identifier", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 3316, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>identifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 76, "key.name": "identifier", "key.namelength": 10, "key.nameoffset": 3397, "key.offset": 3393, "key.parsed_declaration": "public var identifier: String", "key.parsed_scope.end": 98, "key.parsed_scope.start": 96, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE10identifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3513}], "key.bodylength": 50, "key.bodyoffset": 3550, "key.doc.column": 16, "key.doc.comment": "If model is encrypted or not.", "key.doc.declaration": "public var encryptionSeed: [UInt8]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"101\" column=\"16\"><Name>encryptionSeed</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp</USR><Declaration>public var encryptionSeed: [UInt8]? { get }</Declaration><CommentParts><Abstract><Para>If model is encrypted or not.</Para></Abstract></CommentParts></Other>", "key.doc.line": 101, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 3475, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 81, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 3524, "key.offset": 3520, "key.parsed_declaration": "public var encryptionSeed: [UInt8]?", "key.parsed_scope.end": 103, "key.parsed_scope.start": 101, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]?", "key.typeusr": "$SSays5UInt8VGSgD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3683}], "key.bodylength": 76, "key.bodyoffset": 3724, "key.doc.column": 16, "key.doc.comment": "Configuration for this instance, proxy from the class configuration", "key.doc.declaration": "public var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"106\" column=\"16\"><Name>configuration</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp</USR><Declaration>public var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Configuration for this instance, proxy from the class configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 106, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 72, "key.docoffset": 3607, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 111, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 3694, "key.offset": 3690, "key.parsed_declaration": "public var configuration: Configuration", "key.parsed_scope.end": 108, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3877}], "key.bodylength": 56, "key.bodyoffset": 3915, "key.doc.column": 16, "key.doc.comment": "Packaged version for this class, proxy from the class version", "key.doc.declaration": "public var packagedModelVersion: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"111\" column=\"16\"><Name>packagedModelVersion</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp</USR><Declaration>public var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>Packaged version for this class, proxy from the class version</Para></Abstract></CommentParts></Other>", "key.doc.line": 111, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 3807, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 88, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 3888, "key.offset": 3884, "key.parsed_declaration": "public var packagedModelVersion: Int", "key.parsed_scope.end": 113, "key.parsed_scope.start": 111, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var wifiRequiredForDownload: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4057}], "key.bodylength": 68, "key.bodyoffset": 4099, "key.doc.column": 16, "key.doc.comment": "isWifiRequiredForDownload for this class, proxy from the class version", "key.doc.declaration": "public var wifiRequiredForDownload: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"116\" column=\"16\"><Name>wifiRequiredForDownload</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE23wifiRequiredForDownloadSbvp</USR><Declaration>public var wifiRequiredForDownload: Bool { get }</Declaration><CommentParts><Abstract><Para>isWifiRequiredForDownload for this class, proxy from the class version</Para></Abstract></CommentParts></Other>", "key.doc.line": 116, "key.doc.name": "wifiRequiredForDownload", "key.doc.type": "Other", "key.doclength": 75, "key.docoffset": 3978, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 104, "key.name": "wifiRequiredForDownload", "key.namelength": 23, "key.nameoffset": 4068, "key.offset": 4064, "key.parsed_declaration": "public var wifiRequiredForDownload: Bool", "key.parsed_scope.end": 118, "key.parsed_scope.start": 116, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload\">wifiRequiredForDownload</RelatedName>"}], "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE23wifiRequiredForDownloadSbvp"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 13, "key.name": "MARK: - Swift", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4678}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4919}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4858}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4858}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4858}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4858}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 4825}], "key.bodylength": 0, "key.bodyoffset": 5002, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"139\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 139, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.doclength": 131, "key.docoffset": 4693, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 4957}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 4978}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}, {"key.name": "ReadWriteModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 77, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 4935, "key.offset": 4926, "key.parsed_declaration": "public protocol SwiftIdentifiedModel: BaseIdentifiedModel, ReadWriteModelProvider", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.runtime_name": "FritzSwiftIdentifiedModel", "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5005}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5005}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5005}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5005}], "key.bodylength": 1267, "key.bodyoffset": 5098, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"139\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 139, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1300, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 5076, "key.offset": 5066, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fritz() -&gt; <Type usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE4Selfxmfp\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5289}], "key.bodylength": 215, "key.bodyoffset": 5318, "key.doc.column": 17, "key.doc.comment": "Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.\n\n- Returns: The same instance that this method was called.", "key.doc.declaration": "public func fritz() -> Self", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"149\" column=\"17\"><Name>fritz()</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF</USR><Declaration>public func fritz() -&gt; Self</Declaration><CommentParts><Abstract><Para>Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.</Para></Abstract><ResultDiscussion><Para>The same instance that this method was called.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 149, "key.doc.name": "fritz()", "key.doc.result_discussion": [{"Para": "The same instance that this method was called."}], "key.doc.type": "Function", "key.doclength": 180, "key.docoffset": 5104, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fritz</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 238, "key.name": "fritz()", "key.namelength": 7, "key.nameoffset": 5301, "key.offset": 5296, "key.parsed_declaration": "public func fritz() -> Self", "key.parsed_scope.end": 154, "key.parsed_scope.start": 149, "key.substructure": [{"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 59, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 5331, "key.offset": 5327, "key.parsed_declaration": "let managedModel = FritzManagedModel(identifiedModel: self)", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF07managedC0L_A2ACvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self) -> () -> Self", "key.typeusr": "$SxycD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5600}], "key.bodylength": 152, "key.bodyoffset": 5681, "key.doc.column": 17, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"159\" column=\"17\"><Name>updateIfNeeded(completionHandler:)</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF</USR><Declaration>public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 159, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 5540, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 227, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 5612, "key.offset": 5607, "key.parsed_declaration": "public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 159, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 59, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 5694, "key.offset": 5690, "key.parsed_declaration": "let managedModel = FritzManagedModel(identifiedModel: self)", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF07managedC0L_A2ACvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5900}], "key.bodylength": 375, "key.bodyoffset": 5988, "key.doc.column": 24, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"167\" column=\"24\"><Name>updateIfNeeded(completionHandler:)</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ</USR><Declaration>public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 167, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 5840, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 457, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 5919, "key.offset": 5907, "key.parsed_declaration": "public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 172, "key.parsed_scope.start": 167, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let config: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>config</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 106, "key.name": "config", "key.namelength": 6, "key.nameoffset": 6052, "key.offset": 6048, "key.parsed_declaration": "let config = FritzModelConfiguration(identifier: Self.modelIdentifier, version: Self.packagedModelVersion)", "key.parsed_scope.end": 169, "key.parsed_scope.start": 169, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ6configL_AA0aC13ConfigurationCvp"}, {"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 116, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 6167, "key.offset": 6163, "key.parsed_declaration": "let managedModel = FritzManagedModel(modelConfig: config, sessionManager: Self.resolvedConfiguration.sessionManager)", "key.parsed_scope.end": 170, "key.parsed_scope.start": 170, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ07managedC0L_A2ACvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self.Type) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ"}], "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6368}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6368}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6368}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6368}], "key.bodylength": 981, "key.bodyoffset": 6461, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"139\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 139, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1014, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 6439, "key.offset": 6429, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func download(completionHandler: @escaping (<Type usr=\"s:10Foundation3URLV\">URL</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6707}], "key.bodylength": 659, "key.bodyoffset": 6781, "key.doc.column": 24, "key.doc.comment": "Downloads active model for IdentifiedModel.\n\n- Parameter completionHandler: Completion with Optional URL of compiled model. The URL is returned so you can instantiate the model with the generated class from Core ML.", "key.doc.declaration": "public static func download(completionHandler: @escaping (URL?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"182\" column=\"24\"><Name>download(completionHandler:)</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ</USR><Declaration>public static func download(completionHandler: @escaping (URL?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Downloads active model for IdentifiedModel.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion with Optional URL of compiled model. The URL is returned so you can instantiate the model with the generated class from Core ML.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 182, "key.doc.name": "download(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Completion with Optional URL of compiled model. The URL is returned so you can instantiate the model with the generated class from Core ML."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 235, "key.docoffset": 6468, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>download</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 727, "key.name": "download(completionHandler:)", "key.namelength": 53, "key.nameoffset": 6726, "key.offset": 6714, "key.parsed_declaration": "public static func download(completionHandler: @escaping (URL?) -> Void)", "key.parsed_scope.end": 197, "key.parsed_scope.start": 182, "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 111, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 6794, "key.offset": 6790, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(identifier: self.modelIdentifier, version: self.packagedModelVersion)", "key.parsed_scope.end": 183, "key.parsed_scope.start": 183, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ11modelConfigL_AA0aC13ConfigurationCvp"}, {"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 6914, "key.offset": 6910, "key.parsed_declaration": "let managedModel = modelConfig.buildManagedModel()", "key.parsed_scope.end": 184, "key.parsed_scope.start": 184, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ07managedC0L_A2ACvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self.Type) -> (@escaping (URL?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy10Foundation3URLVSgc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ"}], "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildModelURL(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:10Foundation3URLV\">URL</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7445}], "key.bodylength": 398, "key.bodyoffset": 7514, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildModelURL</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 461, "key.name": "buildModelURL(bundle:fileName:)", "key.namelength": 47, "key.nameoffset": 7457, "key.offset": 7452, "key.parsed_declaration": "public func buildModelURL(bundle: Bundle, fileName: String) -> URL?", "key.parsed_scope.end": 208, "key.parsed_scope.start": 200, "key.substructure": [{"key.annotated_decl": "<Declaration>var assetPath: <Type usr=\"s:10Foundation3URLV\">URL</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>assetPath</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 87, "key.name": "assetPath", "key.namelength": 9, "key.nameoffset": 7523, "key.offset": 7519, "key.parsed_declaration": "var assetPath = bundle.url(forResource: \"Models/\" + fileName, withExtension:\"mlmodelc\")", "key.parsed_scope.end": 201, "key.parsed_scope.start": 201, "key.typename": "URL?", "key.typeusr": "$S10Foundation3URLVSgD", "key.usr": "s:17FritzManagedModel05buildC3URL6bundle8fileName10Foundation0E0VSgSo8NSBundleC_SStF9assetPathL_AHvp"}], "key.typename": "(Bundle, String) -> URL?", "key.typeusr": "$S6bundle8fileName10Foundation3URLVSgSo8NSBundleC_SStcD", "key.usr": "s:17FritzManagedModel05buildC3URL6bundle8fileName10Foundation0E0VSgSo8NSBundleC_SStF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func modelForFileName(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7940}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 7916}], "key.bodylength": 89, "key.bodyoffset": 8015, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>modelForFileName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 158, "key.name": "modelForFileName(bundle:fileName:)", "key.namelength": 50, "key.nameoffset": 7952, "key.offset": 7947, "key.parsed_declaration": "public func modelForFileName(bundle: Bundle, fileName: String) -> MLModel", "key.parsed_scope.end": 214, "key.parsed_scope.start": 212, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel16modelForFileName6bundle04fileG04withSo7MLModelCSo8NSBundleC_SSSo0K13ConfigurationCtF\">modelForFileName(bundle:fileName:with:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Bundle, String) -> MLModel", "key.typeusr": "$S6bundle8fileNameSo7MLModelCSo8NSBundleC_SStcD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func modelForFileName(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>, with mlmodelConfiguration: <Type usr=\"c:objc(cs)MLModelConfiguration\">MLModelConfiguration</Type>) -&gt; <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8133}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 8109}], "key.bodylength": 126, "key.bodyoffset": 8257, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>modelForFileName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>mlmodelConfiguration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLModelConfiguration\">MLModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 244, "key.name": "modelForFileName(bundle:fileName:with:)", "key.namelength": 99, "key.nameoffset": 8145, "key.offset": 8140, "key.parsed_declaration": "public func modelForFileName(bundle: Bundle, fileName: String, with mlmodelConfiguration: MLModelConfiguration) -> MLModel", "key.parsed_scope.end": 221, "key.parsed_scope.start": 219, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF\">modelForFileName(bundle:fileName:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Bundle, String, MLModelConfiguration) -> MLModel", "key.typeusr": "$S6bundle8fileName4withSo7MLModelCSo8NSBundleC_SSSo0E13ConfigurationCtcD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG04withSo7MLModelCSo8NSBundleC_SSSo0K13ConfigurationCtF"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Objective-C", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 8389}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8580}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 8548}], "key.bodylength": 0, "key.bodyoffset": 8638, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"231\" column=\"17\"><Name>ObjcIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel</USR><Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 231, "key.doc.name": "ObjcIdentifiedModel", "key.doc.type": "Class", "key.doclength": 137, "key.docoffset": 8410, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 8617}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzObjcIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ObjcIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 52, "key.name": "ObjcIdentifiedModel", "key.namelength": 19, "key.nameoffset": 8596, "key.offset": 8587, "key.parsed_declaration": "public protocol ObjcIdentifiedModel: BaseIdentifiedModel", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.runtime_name": "FritzObjcIdentifiedModel", "key.typename": "ObjcIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014ObjcIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel"}, {"key.annotated_decl": "<Declaration>class NSObject : <Type usr=\"c:objc(pl)NSObject\">NSObjectProtocol</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8928}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8928}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8928}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8928}], "key.bodylength": 2062, "key.bodyoffset": 9009, "key.doc.comment": "- Note: In order to expose a Swift extension to Objective-C the extension *must* be mode on a concrete class and not a protocol. Ideally this extension would be made on `ObjcIdentifiedModel` but this is not possible as of Swift 4 and Xcode 9.\n\n- SeeAlso: `ObjcIdentifiedModel`", "key.doclength": 286, "key.docoffset": 8641, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/usr/include/objc/NSObject.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>NSObject</decl.name> : <ref.protocol usr=\"c:objc(pl)NSObject\">NSObjectProtocol</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 2083, "key.modulename": "ObjectiveC.NSObject", "key.name": "NSObject", "key.namelength": 8, "key.nameoffset": 8999, "key.offset": 8989, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritz) public func fritz() -&gt; <Type usr=\"c:objc(cs)NSObject\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9916}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 12, "key.offset": 9899}], "key.bodylength": 360, "key.bodyoffset": 9945, "key.doc.column": 17, "key.doc.comment": "Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.\n\n- Returns: The same instance that this method was called.\n\n- Warning: When Xcode generates a Swift class based on a MLModel file it provides a read-write model property that allows the SDK to safely overwrite the model with a Fritz managed model. When using Objective-C, Xcode generates a class with a readonly model property which forces us to use `setValue:forKey:` instead of a type-safe setter. It's crucial to test your apps on future beta versions of iOS as Apple could change the underlying implementation of the model property causing this method to crash. If this is the case, we will have updated SDKs ready for those newer versions.\n\n- Note: This method will have no affect on any object that does not conform to `ObjcIdentifiedModel`.", "key.doc.declaration": "@objc(fritz) public func fritz() -> Self", "key.doc.discussion": [{"Warning": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"251\" column=\"17\"><Name>fritz()</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(im)fritz</USR><Declaration>@objc(fritz) public func fritz() -&gt; Self</Declaration><CommentParts><Abstract><Para>Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.</Para></Abstract><ResultDiscussion><Para>The same instance that this method was called.</Para></ResultDiscussion><Discussion><Warning><Para>When Xcode generates a Swift class based on a MLModel file it provides a read-write model property that allows the SDK to safely overwrite the model with a Fritz managed model. When using Objective-C, Xcode generates a class with a readonly model property which forces us to use <codeVoice>setValue:forKey:</codeVoice> instead of a type-safe setter. It\u2019s crucial to test your apps on future beta versions of iOS as Apple could change the underlying implementation of the model property causing this method to crash. If this is the case, we will have updated SDKs ready for those newer versions.</Para></Warning><Note><Para>This method will have no affect on any object that does not conform to <codeVoice>ObjcIdentifiedModel</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 251, "key.doc.name": "fritz()", "key.doc.result_discussion": [{"Para": "The same instance that this method was called."}], "key.doc.type": "Function", "key.doclength": 879, "key.docoffset": 9015, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritz)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fritz</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSObject\">Self</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 383, "key.name": "fritz()", "key.namelength": 7, "key.nameoffset": 9928, "key.offset": 9923, "key.parsed_declaration": "public func fritz() -> Self", "key.parsed_scope.end": 259, "key.parsed_scope.start": 251, "key.substructure": [], "key.typename": "(NSObject) -> () -> Self", "key.typeusr": "$SSo8NSObjectCXDycD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(im)fritz"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(updateIfNeeded) public func updateIfNeeded()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10398}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 10372}], "key.bodylength": 45, "key.bodyoffset": 10428, "key.doc.column": 17, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "@objc(updateIfNeeded) public func updateIfNeeded()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"265\" column=\"17\"><Name>updateIfNeeded()</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded</USR><Declaration>@objc(updateIfNeeded) public func updateIfNeeded()</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 265, "key.doc.name": "updateIfNeeded()", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 10312, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(updateIfNeeded)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 69, "key.name": "updateIfNeeded()", "key.namelength": 16, "key.nameoffset": 10410, "key.offset": 10405, "key.parsed_declaration": "public func updateIfNeeded()", "key.parsed_scope.end": 267, "key.parsed_scope.start": 265, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded\">updateIfNeeded()</RelatedName>"}], "key.substructure": [], "key.typename": "(NSObject) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(updateIfNeeded) public static func updateIfNeeded()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10566}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 10540}], "key.bodylength": 466, "key.bodyoffset": 10603, "key.doc.column": 24, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "@objc(updateIfNeeded) public static func updateIfNeeded()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"273\" column=\"24\"><Name>updateIfNeeded()</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded</USR><Declaration>@objc(updateIfNeeded) public static func updateIfNeeded()</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 273, "key.doc.name": "updateIfNeeded()", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 10480, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(updateIfNeeded)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 497, "key.name": "updateIfNeeded()", "key.namelength": 16, "key.nameoffset": 10585, "key.offset": 10573, "key.parsed_declaration": "public static func updateIfNeeded()", "key.parsed_scope.end": 279, "key.parsed_scope.start": 273, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded\">updateIfNeeded()</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelDescription: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelDescription</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 126, "key.name": "modelDescription", "key.namelength": 16, "key.nameoffset": 10747, "key.offset": 10743, "key.parsed_declaration": "let modelDescription = FritzModelConfiguration(identifier: modelType.modelIdentifier, version: modelType.packagedModelVersion)", "key.parsed_scope.end": 276, "key.parsed_scope.start": 276, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:So8NSObjectC17FritzManagedModelE14updateIfNeededyyFZ16modelDescriptionL_AC0bD13ConfigurationCvp"}, {"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 131, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 10882, "key.offset": 10878, "key.parsed_declaration": "let managedModel = FritzManagedModel(modelConfig: modelDescription, sessionManager: modelType.resolvedConfiguration.sessionManager)", "key.parsed_scope.end": 277, "key.parsed_scope.start": 277, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:So8NSObjectC17FritzManagedModelE14updateIfNeededyyFZ07managedD0L_A2CCvp"}], "key.typename": "(NSObject.Type) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded"}], "key.typename": "NSObject.Type", "key.typeusr": "$SSo8NSObjectCmD", "key.usr": "c:objc(cs)NSObject"}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 11074}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 11074}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 11074}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 11074}], "key.bodylength": 745, "key.bodyoffset": 11156, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 767, "key.modulename": "FritzCore", "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 11145, "key.offset": 11135, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11449}, {"key.attribute": "source.decl.attribute.available", "key.length": 137, "key.offset": 11307}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 11266}], "key.bodylength": 0, "key.bodyoffset": 11558, "key.doc.comment": "Removed in v1.0.0-beta.9\n\n- SeeAlso: `updateModelIfNeeded:completionHandler:`", "key.doclength": 99, "key.docoffset": 11162, "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 103, "key.name": "setup(models:completionHandler:)", "key.namelength": 88, "key.nameoffset": 11468, "key.offset": 11456, "key.substructure": []}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11837}, {"key.attribute": "source.decl.attribute.available", "key.length": 137, "key.offset": 11695}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 11672}], "key.bodylength": 0, "key.bodyoffset": 11899, "key.doc.comment": "Deprecated in v1.0.0-beta.9\n\n- SeeAlso: `updateModelIfNeeded:completionHandler:`", "key.doclength": 102, "key.docoffset": 11565, "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 56, "key.name": "setup(models:)", "key.namelength": 41, "key.nameoffset": 11856, "key.offset": 11844, "key.substructure": []}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4814, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzMLModel) public final class FritzMLModel : <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 339}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 251}], "key.bodylength": 4438, "key.bodyoffset": 374, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 365}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzMLModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzMLModel</decl.name> : <ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "MLModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4468, "key.name": "FritzMLModel", "key.namelength": 12, "key.nameoffset": 351, "key.offset": 345, "key.parsed_declaration": "public final class FritzMLModel: MLModel", "key.parsed_scope.end": 126, "key.parsed_scope.start": 16, "key.runtime_name": "FritzMLModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public private(set) var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 397}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 390}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 380}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 46, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 414, "key.offset": 410, "key.parsed_declaration": "public private(set) var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 462}], "key.bodylength": 54, "key.bodyoffset": 485, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "id", "key.namelength": 2, "key.nameoffset": 473, "key.offset": 469, "key.parsed_declaration": "public var id: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:17FritzManagedModel0A7MLModelC2idSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 546}], "key.bodylength": 51, "key.bodyoffset": 571, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "version", "key.namelength": 7, "key.nameoffset": 557, "key.offset": 553, "key.parsed_declaration": "public var version: Int", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:17FritzManagedModel0A7MLModelC7versionSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>unowned public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 676}, {"key.attribute": "source.decl.attribute.weak", "key.length": 7, "key.offset": 668}], "key.doc.column": 24, "key.doc.comment": "Model manager for api requests", "key.doc.declaration": "unowned public let sessionManager: SessionManager", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"30\" column=\"24\"><Name>sessionManager</Name><USR>s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0CXovp</USR><Declaration>unowned public let sessionManager: SessionManager</Declaration><CommentParts><Abstract><Para>Model manager for api requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "sessionManager", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 629, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>unowned</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 687, "key.offset": 683, "key.parsed_declaration": "unowned public let sessionManager: SessionManager", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "SessionManager", "key.typeusr": "$S9FritzCore14SessionManagerCXoD", "key.usr": "s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0CXovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 767}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}], "key.doc.column": 29, "key.doc.comment": "Model to use for predictions", "key.doc.declaration": "public private(set) var model: MLModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"33\" column=\"29\"><Name>model</Name><USR>s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp</USR><Declaration>public private(set) var model: MLModel</Declaration><CommentParts><Abstract><Para>Model to use for predictions</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 723, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "model", "key.namelength": 5, "key.nameoffset": 784, "key.offset": 780, "key.parsed_declaration": "public private(set) var model: MLModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type>, activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1080}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 1022}], "key.bodylength": 325, "key.bodyoffset": 1185, "key.doc.column": 12, "key.doc.comment": "Initialize model with an model type", "key.doc.declaration": "@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"45\" column=\"12\"><Name>init(model:activeModelConfig:sessionManager:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:</USR><Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)</Declaration><CommentParts><Abstract><Para>Initialize model with an model type</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "init(model:activeModelConfig:sessionManager:)", "key.doc.type": "Function", "key.doclength": 40, "key.docoffset": 978, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:config:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 424, "key.name": "init(model:activeModelConfig:sessionManager:)", "key.namelength": 96, "key.nameoffset": 1087, "key.offset": 1087, "key.parsed_declaration": "public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "(FritzMLModel.Type) -> (MLModel, FritzModelConfiguration, SessionManager) -> FritzMLModel", "key.typeusr": "$S5model17activeModelConfig14sessionManager012FritzManagedC00G7MLModelCSo0I0C_AD0gC13ConfigurationC0G4Core07SessionF0CtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var modelDescription: <Type usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2760}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2753}], "key.bodylength": 43, "key.bodyoffset": 2811, "key.doc.column": 25, "key.doc.comment": "Proxy model description", "key.doc.declaration": "public override var modelDescription: MLModelDescription { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"83\" column=\"25\"><Name>modelDescription</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription</USR><Declaration>public override var modelDescription: MLModelDescription { get }</Declaration><CommentParts><Abstract><Para>Proxy model description</Para></Abstract></CommentParts></Other>", "key.doc.line": 83, "key.doc.name": "modelDescription", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 2721, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelDescription</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 86, "key.name": "modelDescription", "key.namelength": 16, "key.nameoffset": 2773, "key.offset": 2769, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(py)modelDescription"}], "key.parsed_declaration": "public override var modelDescription: MLModelDescription", "key.parsed_scope.end": 85, "key.parsed_scope.start": 83, "key.typename": "MLModelDescription", "key.typeusr": "$SSo18MLModelDescriptionCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2979}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2972}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 2931}], "key.bodylength": 298, "key.bodyoffset": 3064, "key.doc.column": 26, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"89\" column=\"26\"><Name>prediction(from:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:</USR><Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "prediction(from:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 2861, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 375, "key.name": "prediction(from:)", "key.namelength": 41, "key.nameoffset": 2993, "key.offset": 2988, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.parsed_scope.end": 94, "key.parsed_scope.start": 89, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:\">prediction(from:options:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 95, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3077, "key.offset": 3073, "key.parsed_declaration": "let result = PredictionResult(input: input, options: nil) { try model.prediction(from: input) }", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "PredictionResult", "key.typeusr": "$S17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4fromSo17MLFeatureProvider_pSoAF_p_tKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider) throws -> MLFeatureProvider", "key.typeusr": "$S4fromSo17MLFeatureProvider_pSoAB_p_tKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>, options: <Type usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3495}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3488}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 3439}], "key.bodylength": 320, "key.bodyoffset": 3610, "key.doc.column": 26, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"98\" column=\"26\"><Name>prediction(from:options:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:</USR><Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 98, "key.doc.name": "prediction(from:options:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 3369, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:options:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 427, "key.name": "prediction(from:options:)", "key.namelength": 71, "key.nameoffset": 3509, "key.offset": 3504, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:options:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.parsed_scope.end": 103, "key.parsed_scope.start": 98, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:\">prediction(from:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 117, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3623, "key.offset": 3619, "key.parsed_declaration": "let result = PredictionResult(input: input, options: options) { try model.prediction(from: input, options: options) }", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "PredictionResult", "key.typeusr": "$S17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4from7optionsSo17MLFeatureProvider_pSoAG_p_So19MLPredictionOptionsCtKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider, MLPredictionOptions) throws -> MLFeatureProvider", "key.typeusr": "$S4from7optionsSo17MLFeatureProvider_pSoAC_p_So19MLPredictionOptionsCtKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:"}, {"key.annotated_decl": "<Declaration>let installs: [<Type usr=\"s:SS\">String</Type> : Any]?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 73, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 4085, "key.offset": 4081, "key.parsed_declaration": "let installs = UserDefaults.standard.dictionary(forKey: reportInstallKey)", "key.parsed_scope.end": 108, "key.parsed_scope.start": 108, "key.typename": "[String : Any]?", "key.typeusr": "$SSDySSypGSgD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvg8installsL_SDySSypGSgvp"}, {"key.annotated_decl": "<Declaration>var installs: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 4236, "key.offset": 4232, "key.parsed_declaration": "var installs = UserDefaults.standard.dictionary(forKey: reportInstallKey) ?? [String: Int]()", "key.parsed_scope.end": 112, "key.parsed_scope.start": 112, "key.typename": "[String : Any]", "key.typeusr": "$SSDySSypGD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvs8installsL_SDySSypGvp"}], "key.typename": "FritzMLModel.Type", "key.typeusr": "$S17FritzManagedModel0A7MLModelCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 18086, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzManagedModelError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 193}], "key.bodylength": 34, "key.bodyoffset": 236, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 229}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzManagedModelError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 71, "key.name": "FritzManagedModelError", "key.namelength": 22, "key.nameoffset": 205, "key.offset": 200, "key.parsed_declaration": "public enum FritzManagedModelError: Error", "key.parsed_scope.end": 14, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 28, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 241, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case loadingSavedModelFailed</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingSavedModelFailed</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 23, "key.name": "loadingSavedModelFailed", "key.namelength": 23, "key.nameoffset": 246, "key.offset": 246, "key.parsed_declaration": "case loadingSavedModelFailed", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzManagedModelError.Type) -> FritzManagedModelError", "key.typeusr": "$Sy17FritzManagedModel0abC5ErrorOACmcD", "key.usr": "s:17FritzManagedModel0abC5ErrorO012loadingSavedC6FailedyA2CmF"}]}], "key.typename": "FritzManagedModelError.Type", "key.typeusr": "$S17FritzManagedModel0abC5ErrorOmD", "key.usr": "s:17FritzManagedModel0abC5ErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzManagedModel) public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 417}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 356}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 356}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 356}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 356}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 331}], "key.bodylength": 4634, "key.bodyoffset": 459, "key.doc.column": 14, "key.doc.comment": "Coordinates tasks for interacting with Fritz Models.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.doclength": 57, "key.docoffset": 274, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 449}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4670, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 430, "key.offset": 424, "key.parsed_declaration": "public class FritzManagedModel: NSObject", "key.parsed_scope.end": 118, "key.parsed_scope.start": 20, "key.runtime_name": "FritzManagedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 516}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 510}], "key.bodylength": 117, "key.bodyoffset": 571, "key.doc.column": 22, "key.doc.comment": "Currenly active model configuration.", "key.doc.declaration": "@objc public var activeModelConfig: FritzModelConfiguration { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"23\" column=\"22\"><Name>activeModelConfig</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig</USR><Declaration>@objc public var activeModelConfig: FritzModelConfiguration { get set }</Declaration><CommentParts><Abstract><Para>Currenly active model configuration.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "activeModelConfig", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 465, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 166, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 527, "key.offset": 523, "key.parsed_declaration": "@objc public var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 27, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1149}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1143}], "key.bodylength": 54, "key.bodyoffset": 1172, "key.doc.column": 22, "key.doc.comment": "Model Identifier of active model.", "key.doc.declaration": "@objc public var id: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"39\" column=\"22\"><Name>id</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id</USR><Declaration>@objc public var id: String { get }</Declaration><CommentParts><Abstract><Para>Model Identifier of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "id", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1101, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "id", "key.namelength": 2, "key.nameoffset": 1160, "key.offset": 1156, "key.parsed_declaration": "@objc public var id: String", "key.parsed_scope.end": 41, "key.parsed_scope.start": 39, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1285}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1279}], "key.bodylength": 51, "key.bodyoffset": 1310, "key.doc.column": 22, "key.doc.comment": "Model Version number of active model.", "key.doc.declaration": "@objc public var version: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"44\" column=\"22\"><Name>version</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version</USR><Declaration>@objc public var version: Int { get }</Declaration><CommentParts><Abstract><Para>Model Version number of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 1233, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1296, "key.offset": 1292, "key.parsed_declaration": "@objc public var version: Int", "key.parsed_scope.end": 46, "key.parsed_scope.start": 44, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var isVersionDownloaded: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1438}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1432}], "key.bodylength": 293, "key.bodyoffset": 1476, "key.doc.column": 22, "key.doc.comment": "If true, the active model config version is downloaded.", "key.doc.declaration": "@objc public var isVersionDownloaded: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"49\" column=\"22\"><Name>isVersionDownloaded</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded</USR><Declaration>@objc public var isVersionDownloaded: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, the active model config version is downloaded.</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "isVersionDownloaded", "key.doc.type": "Other", "key.doclength": 60, "key.docoffset": 1368, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isVersionDownloaded</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 325, "key.name": "isVersionDownloaded", "key.namelength": 19, "key.nameoffset": 1449, "key.offset": 1445, "key.parsed_declaration": "@objc public var isVersionDownloaded: Bool", "key.parsed_scope.end": 57, "key.parsed_scope.start": 49, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var hasDownloadedModel: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1845}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1839}], "key.bodylength": 215, "key.bodyoffset": 1882, "key.doc.column": 22, "key.doc.comment": "If true, there is at least one active model downloaded", "key.doc.declaration": "@objc public var hasDownloadedModel: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"60\" column=\"22\"><Name>hasDownloadedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel</USR><Declaration>@objc public var hasDownloadedModel: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, there is at least one active model downloaded</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "hasDownloadedModel", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1776, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hasDownloadedModel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 246, "key.name": "hasDownloadedModel", "key.namelength": 18, "key.nameoffset": 1856, "key.offset": 1852, "key.parsed_declaration": "@objc public var hasDownloadedModel: Bool", "key.parsed_scope.end": 66, "key.parsed_scope.start": 60, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2349}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2343}], "key.doc.column": 22, "key.doc.comment": "The type of the identified model, if initialized from a conformed model.\nStoring this gives us access to the url of the identified model, so you can call\nself.loadModel() and load the model included in the package.", "key.doc.declaration": "@objc public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"71\" column=\"22\"><Name>packagedIdentifiedModelType</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType</USR><Declaration>@objc public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?</Declaration><CommentParts><Abstract><Para>The type of the identified model, if initialized from a conformed model. Storing this gives us access to the url of the identified model, so you can call self.loadModel() and load the model included in the package.</Para></Abstract></CommentParts></Other>", "key.doc.line": 71, "key.doc.name": "packagedIdentifiedModelType", "key.doc.type": "Other", "key.doclength": 235, "key.docoffset": 2104, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>packagedIdentifiedModelType</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "packagedIdentifiedModelType", "key.namelength": 27, "key.nameoffset": 2360, "key.offset": 2356, "key.parsed_declaration": "@objc public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "BaseIdentifiedModel.Type?", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pXpSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = default, loadActiveFromDisk: <Type usr=\"s:Sb\">Bool</Type> = default, packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2846}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 71, "key.offset": 2770}], "key.bodylength": 903, "key.bodyoffset": 3031, "key.doc.column": 12, "key.doc.comment": "Creates FritzManagedModel from model configuration.\n\n- Parameters:\n  - modelConfig: Specifies which model class is operating on.\n  - sessionManager: Optional SessionManager. If not included uses default globally shared SessionManager.", "key.doc.declaration": "@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = default, loadActiveFromDisk: Bool = default, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = default)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"83\" column=\"12\"><Name>init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:</USR><Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = default, loadActiveFromDisk: Bool = default, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = default)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from model configuration.</Para></Abstract><Parameters><Parameter><Name>modelConfig</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Specifies which model class is operating on.</Para></Discussion></Parameter><Parameter><Name>sessionManager</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional SessionManager. If not included uses default globally shared SessionManager.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 83, "key.doc.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Specifies which model class is operating on."}], "name": "modelConfig"}, {"discussion": [{"Para": "Optional SessionManager. If not included uses default globally shared SessionManager."}], "name": "sessionManager"}], "key.doc.type": "Function", "key.doclength": 270, "key.docoffset": 2496, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModelConfig:sessionManager:loadActive:packagedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>modelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>loadActiveFromDisk</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>packagedIdentifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1082, "key.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.namelength": 176, "key.nameoffset": 2853, "key.offset": 2853, "key.parsed_declaration": "public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 83, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel.Type) -> (FritzModelConfiguration, SessionManager?, Bool, BaseIdentifiedModel.Type?) -> FritzManagedModel", "key.typeusr": "$S11modelConfig14sessionManager18loadActiveFromDisk27packagedIdentifiedModelType012FritzManagedK0AECAE0mK13ConfigurationC_0M4Core07SessionD0CSgSbAE04BasejK0_pXpSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4201}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4194}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 4158}], "key.bodylength": 240, "key.bodyoffset": 4257, "key.doc.column": 24, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModel: Included MLModel class.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"103\" column=\"24\"><Name>init(identifiedModel:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Included MLModel class.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 103, "key.doc.name": "init(identifiedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Included MLModel class."}], "name": "identifiedModel"}], "key.doc.type": "Function", "key.doclength": 212, "key.docoffset": 3942, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 285, "key.name": "init(identifiedModel:)", "key.namelength": 42, "key.nameoffset": 4213, "key.offset": 4213, "key.parsed_declaration": "public convenience init(identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 106, "key.parsed_scope.start": 103, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 4270, "key.offset": 4266, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModel)", "key.parsed_scope.end": 104, "key.parsed_scope.start": 104, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC0AbA014BaseIdentifiedC0_p_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel) -> FritzManagedModel", "key.typeusr": "$S15identifiedModel012FritzManagedB0ABCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4767}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4760}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 4720}], "key.bodylength": 258, "key.bodyoffset": 4832, "key.doc.column": 24, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModel: Included MLModel class.", "key.doc.declaration": "@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"112\" column=\"24\"><Name>init(identifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:</USR><Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Included MLModel class.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 112, "key.doc.name": "init(identifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Included MLModel class."}], "name": "identifiedModel"}], "key.doc.type": "Function", "key.doclength": 212, "key.docoffset": 4504, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 312, "key.name": "init(identifiedModelType:)", "key.namelength": 51, "key.nameoffset": 4779, "key.offset": 4779, "key.parsed_declaration": "public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 116, "key.parsed_scope.start": 112, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 4854, "key.offset": 4850, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModelType)", "key.parsed_scope.end": 114, "key.parsed_scope.start": 114, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC4TypeAbA014BaseIdentifiedC0_pXp_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel.Type) -> FritzManagedModel", "key.typeusr": "$S19identifiedModelType012FritzManagedB0ABCAB014BaseIdentifiedB0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$S17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Handle Active Model Changes", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5099}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Load Model internal methods", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6052}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzManagedModel) public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6155}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 6149}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6088}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6088}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6088}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 6088}], "key.bodylength": 3241, "key.bodyoffset": 6191, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 3271, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 6172, "key.offset": 6162, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(loadModelWithIdentifiedModel:) public func loadModel(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>) -&gt; <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6456}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 6415}], "key.bodylength": 192, "key.bodyoffset": 6533, "key.doc.column": 17, "key.doc.comment": "Load FritzMLModel from stored Fritz Model (as defined by active model metadata) or model included in app bundle.\n\n- Parameter identifiedModel: Conformed MLModel.\n- Returns: FritzMLModel.", "key.doc.declaration": "@objc(loadModelWithIdentifiedModel:) public func loadModel(identifiedModel: BaseIdentifiedModel) -> FritzMLModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"153\" column=\"17\"><Name>loadModel(identifiedModel:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:</USR><Declaration>@objc(loadModelWithIdentifiedModel:) public func loadModel(identifiedModel: BaseIdentifiedModel) -&gt; FritzMLModel</Declaration><CommentParts><Abstract><Para>Load FritzMLModel from stored Fritz Model (as defined by active model metadata) or model included in app bundle.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Conformed MLModel.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzMLModel.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 153, "key.doc.name": "loadModel(identifiedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Conformed MLModel."}], "name": "identifiedModel"}], "key.doc.result_discussion": [{"Para": "FritzMLModel."}], "key.doc.type": "Function", "key.doclength": 214, "key.docoffset": 6197, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(loadModelWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 263, "key.name": "loadModel(identifiedModel:)", "key.namelength": 47, "key.nameoffset": 6468, "key.offset": 6463, "key.parsed_declaration": "public func loadModel(identifiedModel: BaseIdentifiedModel) -> FritzMLModel", "key.parsed_scope.end": 156, "key.parsed_scope.start": 153, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel\">loadModel()</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 66, "key.name": "model", "key.namelength": 5, "key.nameoffset": 6546, "key.offset": 6542, "key.parsed_declaration": "let model: MLModel = loadMLModel(identifiedModel: identifiedModel)", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "s:17FritzManagedModelAAC04loadC0010identifiedC0AA0A7MLModelCAA014BaseIdentifiedC0_p_tF5modelL_So0F0Cvp"}], "key.typename": "(FritzManagedModel) -> (BaseIdentifiedModel) -> FritzMLModel", "key.typeusr": "$S15identifiedModel012FritzManagedB00C7MLModelCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(loadModel) public func loadModel() -&gt; <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6897}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 6876}], "key.bodylength": 712, "key.bodyoffset": 6939, "key.doc.column": 17, "key.doc.comment": "Loads a model previously downloaded OTA if it exists.\n\n- Returns: nil if no model downloaded or FritzMLModel if it does.", "key.doc.declaration": "@objc(loadModel) public func loadModel() -> FritzMLModel?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"162\" column=\"17\"><Name>loadModel()</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel</USR><Declaration>@objc(loadModel) public func loadModel() -&gt; FritzMLModel?</Declaration><CommentParts><Abstract><Para>Loads a model previously downloaded OTA if it exists.</Para></Abstract><ResultDiscussion><Para>nil if no model downloaded or FritzMLModel if it does.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 162, "key.doc.name": "loadModel()", "key.doc.result_discussion": [{"Para": "nil if no model downloaded or FritzMLModel if it does."}], "key.doc.type": "Function", "key.doclength": 140, "key.docoffset": 6732, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(loadModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadModel</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 748, "key.name": "loadModel()", "key.namelength": 11, "key.nameoffset": 6909, "key.offset": 6904, "key.parsed_declaration": "public func loadModel() -> FritzMLModel?", "key.parsed_scope.end": 176, "key.parsed_scope.start": 162, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModelWithIdentifiedModel:\">loadModel(identifiedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> FritzMLModel?", "key.typeusr": "$S17FritzManagedModel0A7MLModelCSgycD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)loadModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletion:) public func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8203}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 8166}], "key.bodylength": 652, "key.bodyoffset": 8289, "key.doc.column": 17, "key.doc.comment": "Loads model when no model is included in application bundle.  If a model has previously been downloaded, it will be used. If not, it will be downloaded from Fritz.\n\nIf `fetchModel` is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed.\n- Parameter completionHandler: Completion handler returning ManagedMLModel if successfully loaded model.", "key.doc.declaration": "@objc(fetchModelWithCompletion:) public func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -> Void)", "key.doc.discussion": [{"Para": "If `fetchModel` is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"183\" column=\"17\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)fetchModelWithCompletion:</USR><Declaration>@objc(fetchModelWithCompletion:) public func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Loads model when no model is included in application bundle.  If a model has previously been downloaded, it will be used. If not, it will be downloaded from Fritz.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler returning ManagedMLModel if successfully loaded model.</Para></Discussion></Parameter></Parameters><Discussion><Para>If <codeVoice>fetchModel</codeVoice> is called multiple times and a download request is already happening, a new downloaded request will not be started.  All completionHandlers will be resolved when active request is completed.</Para></Discussion></CommentParts></Function>", "key.doc.line": 183, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Completion handler returning ManagedMLModel if successfully loaded model."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 504, "key.docoffset": 7658, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 732, "key.name": "fetchModel(completionHandler:)", "key.namelength": 72, "key.nameoffset": 8215, "key.offset": 8210, "key.parsed_declaration": "public func fetchModel(completionHandler: @escaping (FritzMLModel?, Error?) -> Void)", "key.parsed_scope.end": 203, "key.parsed_scope.start": 183, "key.substructure": [], "key.typename": "(FritzManagedModel) -> (@escaping (FritzMLModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy17FritzManagedModel0C7MLModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)fetchModelWithCompletion:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(startDownload) public func startDownload()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9034}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 9009}], "key.bodylength": 367, "key.bodyoffset": 9063, "key.doc.column": 17, "key.doc.comment": "Trigger model download without waiting for response.", "key.doc.declaration": "@objc(startDownload) public func startDownload()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"207\" column=\"17\"><Name>startDownload()</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)startDownload</USR><Declaration>@objc(startDownload) public func startDownload()</Declaration><CommentParts><Abstract><Para>Trigger model download without waiting for response.</Para></Abstract></CommentParts></Function>", "key.doc.line": 207, "key.doc.name": "startDownload()", "key.doc.type": "Function", "key.doclength": 57, "key.docoffset": 8948, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(startDownload)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>startDownload</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 390, "key.name": "startDownload()", "key.namelength": 15, "key.nameoffset": 9046, "key.offset": 9041, "key.parsed_declaration": "public func startDownload()", "key.parsed_scope.end": 215, "key.parsed_scope.start": 207, "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)startDownload"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$S17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzManagedModel) public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9435}], "key.bodylength": 4937, "key.bodyoffset": 9525, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 4967, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 9506, "key.offset": 9496, "key.substructure": [], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$S17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 21, "key.name": "MARK: - Decrypt Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 14468}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzManagedModel) public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 14551}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14490}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14490}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14490}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 14490}], "key.bodylength": 931, "key.bodyoffset": 14587, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 961, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 14568, "key.offset": 14558, "key.substructure": [], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$S17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzManagedModel) public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 15582}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15521}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15521}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15521}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 15521}], "key.bodylength": 2466, "key.bodyoffset": 15618, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"20\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzManagedModel) public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 20, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2496, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 15599, "key.offset": 15589, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(updateModelIfNeededWithCompletion:) public func updateModelIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 15983}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 15937}], "key.bodylength": 1306, "key.bodyoffset": 16069, "key.doc.column": 17, "key.doc.comment": "Check server for latest active model defined in webapp and update local model state if different from webapp.\n\nIf a model is updated, an .activeModelChanged notification is broadcast.\n\n- Parameter completionHandler: Completion handler called with result of update operation.", "key.doc.declaration": "@objc(updateModelIfNeededWithCompletion:) public func updateModelIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.discussion": [{"Para": "If a model is updated, an .activeModelChanged notification is broadcast."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"347\" column=\"17\"><Name>updateModelIfNeeded(completionHandler:)</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)updateModelIfNeededWithCompletion:</USR><Declaration>@objc(updateModelIfNeededWithCompletion:) public func updateModelIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Check server for latest active model defined in webapp and update local model state if different from webapp.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler called with result of update operation.</Para></Discussion></Parameter></Parameters><Discussion><Para>If a model is updated, an .activeModelChanged notification is broadcast.</Para></Discussion></CommentParts></Function>", "key.doc.line": 347, "key.doc.name": "updateModelIfNeeded(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Completion handler called with result of update operation."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 309, "key.docoffset": 15624, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(updateModelIfNeededWithCompletion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateModelIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1386, "key.name": "updateModelIfNeeded(completionHandler:)", "key.namelength": 72, "key.nameoffset": 15995, "key.offset": 15990, "key.parsed_declaration": "public func updateModelIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 375, "key.parsed_scope.start": 347, "key.substructure": [], "key.typename": "(FritzManagedModel) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzManagedModel(im)updateModelIfNeededWithCompletion:"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$S17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10131, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct ActiveServerModels : <Type usr=\"s:s7Codablea\">Codable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 185}], "key.bodylength": 39, "key.bodyoffset": 300, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 280}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 289}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ActiveServerModels</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 87, "key.name": "ActiveServerModels", "key.namelength": 18, "key.nameoffset": 260, "key.offset": 253, "key.parsed_declaration": "public struct ActiveServerModels: Codable, Equatable", "key.parsed_scope.end": 16, "key.parsed_scope.start": 14, "key.substructure": [], "key.typename": "ActiveServerModels.Type", "key.typeusr": "$S17FritzManagedModel18ActiveServerModelsVmD", "key.usr": "s:17FritzManagedModel18ActiveServerModelsV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ModelMetadata = [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 342}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ModelMetadata</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "ModelMetadata", "key.namelength": 13, "key.nameoffset": 359, "key.offset": 349, "key.parsed_declaration": "public typealias ModelMetadata = [String: String]", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "[String : String].Type", "key.typeusr": "$SSDyS2SGmD", "key.usr": "s:17FritzManagedModel0C8Metadataa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelConfiguration) public class FritzModelConfiguration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1129}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 1098}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1037}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1037}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1037}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1037}], "key.bodylength": 7108, "key.bodyoffset": 1186, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1167}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 1177}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzModelConfiguration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 7159, "key.name": "FritzModelConfiguration", "key.namelength": 23, "key.nameoffset": 1142, "key.offset": 1136, "key.parsed_declaration": "public class FritzModelConfiguration: NSObject, Codable", "key.parsed_scope.end": 219, "key.parsed_scope.start": 48, "key.runtime_name": "FritzModelConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let identifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1488}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1482}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>identifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "identifier", "key.namelength": 10, "key.nameoffset": 1499, "key.offset": 1495, "key.parsed_declaration": "@objc public let identifier: String", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)identifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let version: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1529}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1523}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1540, "key.offset": 1536, "key.parsed_declaration": "@objc public let version: Int", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1703}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1697}], "key.bodylength": 611, "key.bodyoffset": 1731, "key.doc.column": 22, "key.doc.comment": "Tags data set in webapp.  Pulls from most recently updated active server response if one exists.", "key.doc.declaration": "@objc public var tags: [String]? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"69\" column=\"22\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags</USR><Declaration>@objc public var tags: [String]? { get set }</Declaration><CommentParts><Abstract><Para>Tags data set in webapp.  Pulls from most recently updated active server response if one exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 1592, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 633, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 1714, "key.offset": 1710, "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 83, "key.parsed_scope.start": 69, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2534}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2528}], "key.bodylength": 623, "key.bodyoffset": 2571, "key.doc.column": 22, "key.doc.comment": "Model Metadata set in webapp. Uses cached server model info if it exists.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"90\" column=\"22\"><Name>metadata</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get set }</Declaration><CommentParts><Abstract><Para>Model Metadata set in webapp. Uses cached server model info if it exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 78, "key.docoffset": 2446, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 654, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2545, "key.offset": 2541, "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 104, "key.parsed_scope.start": 90, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3248}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3242}], "key.bodylength": 164, "key.bodyoffset": 3295, "key.doc.column": 22, "key.doc.comment": "Model downloads will only happen", "key.doc.declaration": "@objc public var wifiRequiredForModelDownload: Bool { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"107\" column=\"22\"><Name>wifiRequiredForModelDownload</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload</USR><Declaration>@objc public var wifiRequiredForModelDownload: Bool { get set }</Declaration><CommentParts><Abstract><Para>Model downloads will only happen</Para></Abstract></CommentParts></Other>", "key.doc.line": 107, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 3201, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 205, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 3259, "key.offset": 3255, "key.parsed_declaration": "@objc public var wifiRequiredForModelDownload: Bool", "key.parsed_scope.end": 114, "key.parsed_scope.start": 107, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3594}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3588}], "key.bodylength": 72, "key.bodyoffset": 3626, "key.doc.column": 22, "key.doc.comment": "Whether or not this model should use CPU and GPU only (not using the ANE).", "key.doc.declaration": "@objc public var cpuAndGPUOnly: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"119\" column=\"22\"><Name>cpuAndGPUOnly</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly</USR><Declaration>@objc public var cpuAndGPUOnly: Bool { get }</Declaration><CommentParts><Abstract><Para>Whether or not this model should use CPU and GPU only (not using the ANE).</Para></Abstract></CommentParts></Other>", "key.doc.line": 119, "key.doc.name": "cpuAndGPUOnly", "key.doc.type": "Other", "key.doclength": 79, "key.docoffset": 3505, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cpuAndGPUOnly</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 98, "key.name": "cpuAndGPUOnly", "key.namelength": 13, "key.nameoffset": 3605, "key.offset": 3601, "key.parsed_declaration": "@objc public var cpuAndGPUOnly: Bool", "key.parsed_scope.end": 123, "key.parsed_scope.start": 119, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var isOTA: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3754}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3748}], "key.bodylength": 31, "key.bodyoffset": 3778, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isOTA</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 49, "key.name": "isOTA", "key.namelength": 5, "key.nameoffset": 3765, "key.offset": 3761, "key.parsed_declaration": "@objc public var isOTA: Bool", "key.parsed_scope.end": 129, "key.parsed_scope.start": 127, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)isOTA"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3825}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3816}], "key.bodylength": 151, "key.bodyoffset": 3857, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 177, "key.name": "description", "key.namelength": 11, "key.nameoffset": 3836, "key.offset": 3832, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "override public var description: String", "key.parsed_scope.end": 133, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:) public init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]?, src: <Type usr=\"s:10Foundation3URLV\">URL</Type>?, tags: [<Type usr=\"s:SS\">String</Type>]?, wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type>, metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>?, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4606}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 108, "key.offset": 4493}], "key.bodylength": 275, "key.bodyoffset": 4790, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>encryptionSeed</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>src</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>metadata</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 453, "key.name": "init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)", "key.namelength": 175, "key.nameoffset": 4613, "key.offset": 4613, "key.parsed_declaration": "public init(identifier: String, version: Int, encryptionSeed: [UInt8]?, src: URL?, tags: [String]?, wifiRequiredForModelDownload: Bool, metadata: ModelMetadata?, cpuAndGPUOnly: Bool)", "key.parsed_scope.end": 153, "key.parsed_scope.start": 145, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, [UInt8]?, URL?, [String]?, Bool, [String : String]?, Bool) -> FritzModelConfiguration", "key.typeusr": "$S10identifier7version14encryptionSeed3src4tags28wifiRequiredForModelDownload8metadata13cpuAndGPUOnly012FritzManagedJ00pJ13ConfigurationCSS_SiSays5UInt8VGSg10Foundation3URLVSgSaySSGSgSbSDyS2SGSgSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:cpuAndGPUOnly:) public convenience init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5132}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5125}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 48, "key.offset": 5072}], "key.bodylength": 189, "key.bodyoffset": 5213, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 259, "key.name": "init(identifier:version:cpuAndGPUOnly:)", "key.namelength": 67, "key.nameoffset": 5144, "key.offset": 5144, "key.parsed_declaration": "public convenience init(identifier: String, version: Int, cpuAndGPUOnly: Bool = false)", "key.parsed_scope.end": 158, "key.parsed_scope.start": 156, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, Bool) -> FritzModelConfiguration", "key.typeusr": "$S10identifier7version13cpuAndGPUOnly17FritzManagedModel0fH13ConfigurationCSS_SiSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModel:) public convenience init(from identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5452}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5445}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 5409}], "key.bodylength": 423, "key.bodyoffset": 5513, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModel</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 473, "key.name": "init(from:)", "key.namelength": 47, "key.nameoffset": 5464, "key.offset": 5464, "key.parsed_declaration": "public convenience init(from identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 170, "key.parsed_scope.start": 161, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel) -> FritzModelConfiguration", "key.typeusr": "$S4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModelType:) public convenience init(from identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5991}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5984}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 5944}], "key.bodylength": 443, "key.bodyoffset": 6061, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModelType</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 502, "key.name": "init(from:)", "key.namelength": 56, "key.nameoffset": 6003, "key.offset": 6003, "key.parsed_declaration": "public convenience init(from identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 183, "key.parsed_scope.start": 174, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel.Type) -> FritzModelConfiguration", "key.typeusr": "$S4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(isEqual:) override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7544}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 7535}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 15, "key.offset": 7515}], "key.bodylength": 517, "key.bodyoffset": 7589, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(isEqual:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 556, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 7556, "key.offset": 7551, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 214, "key.parsed_scope.start": 201, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration) -> (Any?) -> Bool", "key.typeusr": "$SySbypSgcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)isEqual:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var hash: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8122}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 8113}], "key.bodylength": 148, "key.bodyoffset": 8144, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hash</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 164, "key.name": "hash", "key.namelength": 4, "key.nameoffset": 8133, "key.offset": 8129, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)hash"}], "key.parsed_declaration": "override public var hash: Int", "key.parsed_scope.end": 218, "key.parsed_scope.start": 216, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)hash\">hash()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE4hash4intoys6HasherVz_tF\">hash(into:)</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)hash"}], "key.typename": "FritzModelConfiguration.Type", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration"}, {"key.annotated_decl": "<Declaration>internal struct LocalModelInfo : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.bodylength": 0, "key.bodyoffset": 9604, "key.doc.column": 17, "key.doc.declaration": "internal struct LocalModelInfo : Codable", "key.doc.discussion": [{"Para": "When loading a specific ActiveModelInfo configuration, this is used to determine what steps can be done to load ActiveModelInnfo object."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"230\" column=\"17\"><Name>LocalModelInfo</Name><USR>s:17FritzManagedModel05LocalC4InfoV</USR><Declaration>internal struct LocalModelInfo : Codable</Declaration><CommentParts><Abstract><Para>Model metadata about a model saved on disk.</Para></Abstract><Discussion><Para>When loading a specific ActiveModelInfo configuration, this is used to determine what steps can be done to load ActiveModelInnfo object.</Para></Discussion></CommentParts></Class>", "key.doc.line": 230, "key.doc.name": "LocalModelInfo", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 9593}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>internal</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>LocalModelInfo</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.extension", "key.length": 38, "key.name": "LocalModelInfo", "key.namelength": 14, "key.nameoffset": 9577, "key.offset": 9567, "key.typename": "LocalModelInfo.Type", "key.typeusr": "$S17FritzManagedModel05LocalC4InfoVmD", "key.usr": "s:17FritzManagedModel05LocalC4InfoV"}, {"key.annotated_decl": "<Declaration>@objc(FritzModelConfiguration) public class FritzModelConfiguration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 9856}], "key.bodylength": 214, "key.bodyoffset": 9915, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzModelConfiguration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 250, "key.name": "FritzModelConfiguration", "key.namelength": 23, "key.nameoffset": 9890, "key.offset": 9880, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(buildManagedModel) public func buildManagedModel() -&gt; <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10016}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 9987}], "key.bodylength": 57, "key.bodyoffset": 10070, "key.doc.column": 17, "key.doc.comment": "Create managed model from current FritzModelConfiguration", "key.doc.declaration": "@objc(buildManagedModel) public func buildManagedModel() -> FritzManagedModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"282\" column=\"17\"><Name>buildManagedModel()</Name><USR>c:@CM@FritzManagedModel@objc(cs)FritzModelConfiguration(im)buildManagedModel</USR><Declaration>@objc(buildManagedModel) public func buildManagedModel() -&gt; FritzManagedModel</Declaration><CommentParts><Abstract><Para>Create managed model from current FritzModelConfiguration</Para></Abstract></CommentParts></Function>", "key.doc.line": 282, "key.doc.name": "buildManagedModel()", "key.doc.type": "Function", "key.doclength": 62, "key.docoffset": 9921, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(buildManagedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildManagedModel</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 105, "key.name": "buildManagedModel()", "key.namelength": 19, "key.nameoffset": 10028, "key.offset": 10023, "key.parsed_declaration": "public func buildManagedModel() -> FritzManagedModel", "key.parsed_scope.end": 284, "key.parsed_scope.start": 282, "key.substructure": [], "key.typename": "(FritzModelConfiguration) -> () -> FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACycD", "key.usr": "c:@CM@FritzManagedModel@objc(cs)FritzModelConfiguration(im)buildManagedModel"}], "key.typename": "FritzModelConfiguration.Type", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/LocalModelManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7847, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Stored ActiveModel", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2086}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 22, "key.name": "MARK: - LocalModelInfo", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3408}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 31, "key.name": "MARK: - Stored ServerModelCache", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6958}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/MLFeatureProvider+JSON.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1912, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>protocol MLFeatureProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}], "key.bodylength": 642, "key.bodyoffset": 282, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureProvider.h", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MLFeatureProvider</decl.name></decl.protocol>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 672, "key.modulename": "CoreML.MLFeatureProvider", "key.name": "MLFeatureProvider", "key.namelength": 17, "key.nameoffset": 263, "key.offset": 253, "key.substructure": [], "key.typename": "MLFeatureProvider.Protocol", "key.typeusr": "$SSo17MLFeatureProvider_pmD", "key.usr": "c:objc(pl)MLFeatureProvider"}, {"key.annotated_decl": "<Declaration>class MLFeatureValue : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSCopying\">NSCopying</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}], "key.bodylength": 896, "key.bodyoffset": 1014, "key.doc.column": 12, "key.doc.declaration": "class MLFeatureValue : NSObject, NSCopying", "key.doc.discussion": [{"Para": " MLFeatureValue does not support type conversion in its accessor properties. It can also have a missing or undefined value of a well defined type."}], "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h\" line=\"26\" column=\"12\"><Name>MLFeatureValue</Name><USR>c:objc(cs)MLFeatureValue</USR><Declaration>class MLFeatureValue : NSObject, NSCopying</Declaration><Abstract><Para> An immutable variant holding a data value of a supported MLFeatureType</Para></Abstract><Availability distribution=\"tvOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"watchOS\"><IntroducedInVersion>4.0</IntroducedInVersion></Availability><Availability distribution=\"iOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"macOS\"><IntroducedInVersion>10.13</IntroducedInVersion></Availability><Discussion><Para> MLFeatureValue does not support type conversion in its accessor properties. It can also have a missing or undefined value of a well defined type.</Para></Discussion></Other>", "key.doc.line": 26, "key.doc.name": "MLFeatureValue", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MLFeatureValue</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSCopying\">NSCopying</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 923, "key.modulename": "CoreML.MLFeatureValue", "key.name": "MLFeatureValue", "key.namelength": 14, "key.nameoffset": 998, "key.offset": 988, "key.substructure": [], "key.typename": "MLFeatureValue.Type", "key.typeusr": "$SSo14MLFeatureValueCmD", "key.usr": "c:objc(cs)MLFeatureValue"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDownloader.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3421, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3617, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelTagManager) public class ModelTagManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 568}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 545}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 484}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 484}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 484}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 484}], "key.bodylength": 3007, "key.bodyoffset": 608, "key.doc.column": 14, "key.doc.comment": "Manages interacting with models using tags created in the webapp.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"23\" column=\"14\"><Name>ModelTagManager</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject</Declaration><CommentParts><Abstract><Para>Manages interacting with models using tags created in the webapp.</Para></Abstract></CommentParts></Class>", "key.doc.line": 23, "key.doc.name": "ModelTagManager", "key.doc.type": "Class", "key.doclength": 70, "key.docoffset": 414, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 598}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelTagManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelTagManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3041, "key.name": "ModelTagManager", "key.namelength": 15, "key.nameoffset": 581, "key.offset": 575, "key.parsed_declaration": "public class ModelTagManager: NSObject", "key.parsed_scope.end": 80, "key.parsed_scope.start": 23, "key.runtime_name": "ModelTagManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let tags: [<Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 665}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 659}], "key.doc.column": 22, "key.doc.comment": "Tags applied to models to query for.", "key.doc.declaration": "@objc public let tags: [String]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"26\" column=\"22\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags</USR><Declaration>@objc public let tags: [String]</Declaration><CommentParts><Abstract><Para>Tags applied to models to query for.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 614, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 676, "key.offset": 672, "key.parsed_declaration": "@objc public let tags: [String]", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[String]", "key.typeusr": "$SSaySSGD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithTags:sessionManager:) public init(tags: [<Type usr=\"s:SS\">String</Type>], sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 785}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 745}], "key.bodylength": 138, "key.bodyoffset": 853, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithTags:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 200, "key.name": "init(tags:sessionManager:)", "key.namelength": 59, "key.nameoffset": 792, "key.offset": 792, "key.parsed_declaration": "public init(tags: [String], sessionManager: SessionManager? = nil)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(ModelTagManager.Type) -> ([String], SessionManager?) -> ModelTagManager", "key.typeusr": "$S4tags14sessionManager17FritzManagedModel0f3TagC0CSaySSG_0D4Core07SessionC0CSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)initWithTags:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = default) -&gt; [<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1487}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 1442}], "key.bodylength": 1009, "key.bodyoffset": 1591, "key.doc.column": 17, "key.doc.comment": "Gets managed models matching tags, pulling from data already queries from API.\n\nDoes not query the API, only checks model data stored locally. To update tags with latest known data,\nuse `fetchModelsForTags`.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n- Returns: List of FritzManagedModel matching tags.", "key.doc.declaration": "@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = default) -> [FritzManagedModel]", "key.doc.discussion": [{"Para": "Does not query the API, only checks model data stored locally. To update tags with latest known data, use `fetchModelsForTags`."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"46\" column=\"17\"><Name>getManagedModelsForTags(wifiRequiredForModelDownload:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:</USR><Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = default) -&gt; [FritzManagedModel]</Declaration><CommentParts><Abstract><Para>Gets managed models matching tags, pulling from data already queries from API.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>List of FritzManagedModel matching tags.</Para></ResultDiscussion><Discussion><Para>Does not query the API, only checks model data stored locally. To update tags with latest known data, use <codeVoice>fetchModelsForTags</codeVoice>.</Para></Discussion></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}], "key.doc.result_discussion": [{"Para": "List of FritzManagedModel matching tags."}], "key.doc.type": "Function", "key.doclength": 440, "key.docoffset": 998, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getModelsForTagsWithWifiRequired:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1107, "key.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.namelength": 67, "key.nameoffset": 1499, "key.offset": 1494, "key.parsed_declaration": "public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -> [FritzManagedModel]", "key.parsed_scope.end": 64, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool) -> [FritzManagedModel]", "key.typeusr": "$S28wifiRequiredForModelDownloadSay012FritzManagedD0ABCGSb_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = default, completionHandler: @escaping ([<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3071}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 60, "key.offset": 3006}], "key.bodylength": 390, "key.bodyoffset": 3223, "key.doc.column": 17, "key.doc.comment": "Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it\nwill query local store and return existing models that match models.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n  - completionHandler: Called after models for tags are loaded.", "key.doc.declaration": "@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"73\" column=\"17\"><Name>fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:</USR><Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzManagedModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it will query local store and return existing models that match models.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Called after models for tags are loaded.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Called after models for tags are loaded."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 395, "key.docoffset": 2607, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelsForTagsWithWifiRequired:completionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 536, "key.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 138, "key.nameoffset": 3083, "key.offset": 3078, "key.parsed_declaration": "public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void)", "key.parsed_scope.end": 79, "key.parsed_scope.start": 73, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool, @escaping ([FritzManagedModel]?, Error?) -> ()) -> ()", "key.typeusr": "$S28wifiRequiredForModelDownload17completionHandlerySb_ySay012FritzManagedD0ACCGSg_s5Error_pSgtctcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:"}], "key.typename": "ModelTagManager.Type", "key.typeusr": "$S17FritzManagedModel0C10TagManagerCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Obfuscator.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2429, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/PredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1650, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 28825, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>protocol RNCryptorType</Declaration>", "key.bodylength": 543, "key.bodyoffset": 2376, "key.doc.column": 10, "key.doc.declaration": "protocol RNCryptorType", "key.doc.discussion": [{"CodeListing": ""}, {"Para": "After calling `finalData()`, the cryptor is no longer valid."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"44\" column=\"10\"><Name>RNCryptorType</Name><USR>s:17FritzManagedModel13RNCryptorTypeP</USR><Declaration>protocol RNCryptorType</Declaration><CommentParts><Abstract><Para>The <codeVoice>RNCryptorType</codeVoice> protocol defines generic API to a mutable, incremental, password-based encryptor or decryptor. Its generic usage is as follows:</Para></Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cryptor = Encryptor(password: \"mypassword\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// or Decryptor()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var result = Data()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for data in datas {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    result.appendData(try cryptor.update(data))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[result.appendData(try cryptor.final())]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>After calling <codeVoice>finalData()</codeVoice>, the cryptor is no longer valid.</Para></Discussion></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "RNCryptorType", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>RNCryptorType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 569, "key.name": "RNCryptorType", "key.namelength": 13, "key.nameoffset": 2361, "key.offset": 2351, "key.substructure": [], "key.typename": "RNCryptorType.Protocol", "key.typeusr": "$S17FritzManagedModel13RNCryptorType_pmD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP"}, {"key.annotated_decl": "<Declaration>enum RNCryptor</Declaration>", "key.bodylength": 12131, "key.bodyoffset": 8528, "key.doc.column": 6, "key.doc.declaration": "enum RNCryptor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"81\" column=\"6\"><Name>RNCryptor</Name><USR>s:17FritzManagedModel9RNCryptorO</USR><Declaration>enum RNCryptor</Declaration><CommentParts><Abstract><Para>RNCryptor encryption/decryption interface.</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "RNCryptor", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RNCryptor</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 12153, "key.name": "RNCryptor", "key.namelength": 9, "key.nameoffset": 8517, "key.offset": 8507, "key.substructure": [], "key.typename": "RNCryptor.Type", "key.typeusr": "$S17FritzManagedModel9RNCryptorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ServerModelCache.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2134, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager+FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2460, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Measure", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 305}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 321}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 321}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 321}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 321}], "key.bodylength": 1529, "key.bodyoffset": 408, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1556, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 392, "key.offset": 382, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Install", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1943}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1959}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1959}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1959}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1959}], "key.bodylength": 412, "key.bodyoffset": 2046, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 439, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 2030, "key.offset": 2020, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager+FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11386, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 281}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 281}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 281}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 281}], "key.bodylength": 510, "key.bodyoffset": 368, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 537, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 352, "key.offset": 342, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 885}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 903}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 903}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 903}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 903}], "key.bodylength": 657, "key.bodyoffset": 990, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 684, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 974, "key.offset": 964, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1654}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1673}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1673}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1673}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1673}], "key.bodylength": 1645, "key.bodyoffset": 1760, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1672, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 1744, "key.offset": 1734, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3411}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3430}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3430}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3430}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3430}], "key.bodylength": 1165, "key.bodyoffset": 3517, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1192, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 3501, "key.offset": 3491, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 32, "key.name": "MARK: - Download / Compile Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4690}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4723}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4723}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4723}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4723}], "key.bodylength": 5123, "key.bodyoffset": 4810, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 5150, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 4794, "key.offset": 4784, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.annotated_decl": "<Declaration>final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9937}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9937}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9937}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9937}], "key.bodylength": 1360, "key.bodyoffset": 10024, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1387, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 10008, "key.offset": 9998, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func download(_ modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, completionHandler: @escaping (<Type usr=\"s:10Foundation3URLV\">URL</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10030}], "key.bodylength": 311, "key.bodyoffset": 10137, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager+FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>download</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>modelConfig</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 412, "key.name": "download(_:completionHandler:)", "key.namelength": 93, "key.nameoffset": 10042, "key.offset": 10037, "key.parsed_declaration": "public func download(_ modelConfig: FritzModelConfiguration, completionHandler: @escaping (URL?) -> Void)", "key.parsed_scope.end": 244, "key.parsed_scope.start": 236, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore14SessionManagerC0A12ManagedModelE8download_17completionHandleryAD0aF13ConfigurationC_yAD05LocalF4InfoVSg_s5Error_pSgtctF\">download(_: FritzModelConfiguration, completionHandler: @escaping (LocalModelInfo?, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionManager) -> (FritzModelConfiguration, @escaping (URL?) -> ()) -> ()", "key.typeusr": "$S_17completionHandlery17FritzManagedModel0cE13ConfigurationC_y10Foundation3URLVSgctcD", "key.usr": "s:9FritzCore14SessionManagerC0A12ManagedModelE8download_17completionHandleryAD0aF13ConfigurationC_y10Foundation3URLVSgctF"}], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6843, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 215}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 209}], "key.bodylength": 65, "key.bodyoffset": 257, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 245}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 250}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 101, "key.name": "FritzVisionError", "key.namelength": 16, "key.nameoffset": 227, "key.offset": 222, "key.parsed_declaration": "@objc public enum FritzVisionError: Int, Error", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 262, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case invalidSampleImageBuffer</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidSampleImageBuffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 24, "key.name": "invalidSampleImageBuffer", "key.namelength": 24, "key.nameoffset": 267, "key.offset": 267, "key.parsed_declaration": "case invalidSampleImageBuffer", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$Sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorInvalidSampleImageBuffer"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 296, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case errorProcessingImage</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>errorProcessingImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "errorProcessingImage", "key.namelength": 20, "key.nameoffset": 301, "key.offset": 301, "key.parsed_declaration": "case errorProcessingImage", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$Sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorErrorProcessingImage"}]}], "key.typename": "FritzVisionError.Type", "key.typeusr": "$S11FritzVision0aB5ErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionError"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 598}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 592}], "key.bodylength": 1276, "key.bodyoffset": 640, "key.doc.column": 13, "key.doc.comment": "Describes the orientation of the image. The orientations match the [CGImagePropertyOrientation](https://developer.apple.com/documentation/imageio/cgimagepropertyorientation) Enumeration from Apple. Refer to that documentation for clear descriptions of each case.", "key.doc.declaration": "@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"20\" column=\"13\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.doclength": 267, "key.docoffset": 325, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 633}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int32"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1312, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 610, "key.offset": 605, "key.parsed_declaration": "public enum FritzImageOrientation: Int32", "key.parsed_scope.end": 56, "key.parsed_scope.start": 20, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 646, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case up = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 656}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>up</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "up", "key.namelength": 2, "key.nameoffset": 651, "key.offset": 651, "key.parsed_declaration": "case up = 1", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUp"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 662, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case upMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>upMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "upMirrored", "key.namelength": 10, "key.nameoffset": 667, "key.offset": 667, "key.parsed_declaration": "case upMirrored", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUpMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 682, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case down</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>down</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "down", "key.namelength": 4, "key.nameoffset": 687, "key.offset": 687, "key.parsed_declaration": "case down", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDown"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 696, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case downMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>downMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "downMirrored", "key.namelength": 12, "key.nameoffset": 701, "key.offset": 701, "key.parsed_declaration": "case downMirrored", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDownMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 718, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftMirrored", "key.namelength": 12, "key.nameoffset": 723, "key.offset": 723, "key.parsed_declaration": "case leftMirrored", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeftMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 740, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case right</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>right</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "right", "key.namelength": 5, "key.nameoffset": 745, "key.offset": 745, "key.parsed_declaration": "case right", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRight"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 755, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightMirrored", "key.namelength": 13, "key.nameoffset": 760, "key.offset": 760, "key.parsed_declaration": "case rightMirrored", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRightMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 778, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case left</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>left</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "left", "key.namelength": 4, "key.nameoffset": 783, "key.offset": 783, "key.parsed_declaration": "case left", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeft"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fromAVCaptureConnection(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>) -&gt; <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1185}, {"key.attribute": "source.decl.attribute.available", "key.length": 92, "key.offset": 1088}], "key.bodylength": 622, "key.bodyoffset": 1292, "key.doc.column": 24, "key.doc.comment": "Infer FritzImageOrientation from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.\n\n- Parameter connection: AVCaptureConnection\n- Returns: FritzImageOrientation", "key.doc.declaration": "@available(*, deprecated, message: \"Initialize with FritzImageOrientation(connection) now.\")\npublic static func fromAVCaptureConnection(from connection: AVCaptureConnection) -> FritzImageOrientation", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"36\" column=\"24\"><Name>fromAVCaptureConnection(from:)</Name><USR>s:11FritzVision0A16ImageOrientationO23fromAVCaptureConnection0E0ACSo0fG0C_tFZ</USR><Declaration>@available(*, deprecated, message: &quot;Initialize with FritzImageOrientation(connection) now.&quot;)\npublic static func fromAVCaptureConnection(from connection: AVCaptureConnection) -&gt; FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Infer FritzImageOrientation from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.</Para></Abstract><Parameters><Parameter><Name>connection</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AVCaptureConnection</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzImageOrientation</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 36, "key.doc.name": "fromAVCaptureConnection(from:)", "key.doc.parameters": [{"discussion": [{"Para": "AVCaptureConnection"}], "name": "connection"}], "key.doc.result_discussion": [{"Para": "FritzImageOrientation"}], "key.doc.type": "Function", "key.doclength": 291, "key.docoffset": 793, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromAVCaptureConnection</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 723, "key.name": "fromAVCaptureConnection(from:)", "key.namelength": 61, "key.nameoffset": 1204, "key.offset": 1192, "key.parsed_declaration": "public static func fromAVCaptureConnection(from connection: AVCaptureConnection) -> FritzImageOrientation", "key.parsed_scope.end": 55, "key.parsed_scope.start": 36, "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$S4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO23fromAVCaptureConnection0E0ACSo0fG0C_tFZ"}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$S11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1919}], "key.bodylength": 1250, "key.bodyoffset": 1959, "key.doc.column": 13, "key.doc.declaration": "@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"20\" column=\"13\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1284, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 1936, "key.offset": 1926, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ uiOrientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1965}], "key.bodylength": 370, "key.bodyoffset": 2016, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>uiOrientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 415, "key.name": "init(_:)", "key.namelength": 42, "key.nameoffset": 1972, "key.offset": 1972, "key.parsed_declaration": "public init(_ uiOrientation: UIImage.Orientation)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc\">init(from:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (UIImage.Orientation) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOSo07UIImageD0VcD", "key.usr": "s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2630}], "key.bodylength": 526, "key.bodyoffset": 2681, "key.doc.column": 12, "key.doc.comment": "Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.\n\n- Parameter connection: AVCaptureConnection", "key.doc.declaration": "public init(from connection: AVCaptureConnection)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"76\" column=\"12\"><Name>init(from:)</Name><USR>s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc</USR><Declaration>public init(from connection: AVCaptureConnection)</Declaration><CommentParts><Abstract><Para>Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.</Para></Abstract><Parameters><Parameter><Name>connection</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AVCaptureConnection</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 76, "key.doc.name": "init(from:)", "key.doc.parameters": [{"discussion": [{"Para": "AVCaptureConnection"}], "name": "connection"}], "key.doc.type": "Function", "key.doclength": 233, "key.docoffset": 2393, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 571, "key.name": "init(from:)", "key.namelength": 42, "key.nameoffset": 2637, "key.offset": 2637, "key.parsed_declaration": "public init(from connection: AVCaptureConnection)", "key.parsed_scope.end": 87, "key.parsed_scope.start": 76, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$S4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc"}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$S11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImageMetadata) public class FritzVisionImageMetadata : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3244}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3212}], "key.bodylength": 1090, "key.bodyoffset": 3293, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3283}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImageMetadata)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImageMetadata</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1133, "key.name": "FritzVisionImageMetadata", "key.namelength": 24, "key.nameoffset": 3257, "key.offset": 3251, "key.parsed_declaration": "public class FritzVisionImageMetadata: NSObject", "key.parsed_scope.end": 120, "key.parsed_scope.start": 91, "key.runtime_name": "FritzVisionImageMetadata", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3305}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3298}], "key.bodylength": 14, "key.bodyoffset": 3322, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 23, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 3314, "key.offset": 3314, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.substructure": [], "key.typename": "(FritzVisionImageMetadata.Type) -> () -> FritzVisionImageMetadata", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCycD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var orientation: <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3492}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3486}], "key.doc.column": 22, "key.doc.comment": "Orientation defaults to `FritzImageOrientation.right` which should work for rear facing cameras with a device orientation of Portrait.", "key.doc.declaration": "@objc public var orientation: FritzVision.FritzImageOrientation", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"95\" column=\"22\"><Name>orientation</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation</USR><Declaration>@objc public var orientation: FritzVision.FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Orientation defaults to <codeVoice>FritzImageOrientation.right</codeVoice> which should work for rear facing cameras with a device orientation of Portrait.</Para></Abstract></CommentParts></Other>", "key.doc.line": 95, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 3343, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 3503, "key.offset": 3499, "key.parsed_declaration": "@objc public var orientation: FritzImageOrientation = .right", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOrientation", "key.typeusr": "$S11FritzVision0A16ImageOrientationOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cgOrientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3558}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3552}], "key.bodylength": 768, "key.bodyoffset": 3612, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgOrientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 816, "key.name": "cgOrientation", "key.namelength": 13, "key.nameoffset": 3569, "key.offset": 3565, "key.parsed_declaration": "@objc public var cgOrientation: CGImagePropertyOrientation", "key.parsed_scope.end": 118, "key.parsed_scope.start": 97, "key.typename": "CGImagePropertyOrientation", "key.typeusr": "$SSo26CGImagePropertyOrientationVD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)cgOrientation"}], "key.typename": "FritzVisionImageMetadata.Type", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabel) public class FritzVisionLabel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4508}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4447}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4447}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4447}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4447}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 4423}], "key.bodylength": 512, "key.bodyoffset": 4572, "key.doc.column": 14, "key.doc.comment": "Represents a label for an image.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"125\" column=\"14\"><Name>FritzVisionLabel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult</Declaration><CommentParts><Abstract><Para>Represents a label for an image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 125, "key.doc.name": "FritzVisionLabel", "key.doc.type": "Class", "key.doclength": 37, "key.docoffset": 4386, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 4539}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 4549}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 570, "key.name": "FritzVisionLabel", "key.namelength": 16, "key.nameoffset": 4521, "key.offset": 4515, "key.parsed_declaration": "public class FritzVisionLabel: NSObject, FritzPredictionResult", "key.parsed_scope.end": 145, "key.parsed_scope.start": 125, "key.runtime_name": "FritzVisionLabel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4633}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4627}], "key.doc.column": 22, "key.doc.comment": "Human readable string of detected label.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"128\" column=\"22\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Human readable string of detected label.</Para></Abstract></CommentParts></Other>", "key.doc.line": 128, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 4578, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 4644, "key.offset": 4640, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 128, "key.parsed_scope.start": 128, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let confidence: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4728}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4722}], "key.doc.column": 22, "key.doc.comment": "Prediction confidence for label in range of [0, 1]", "key.doc.declaration": "@objc public let confidence: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"131\" column=\"22\"><Name>confidence</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence</USR><Declaration>@objc public let confidence: Double</Declaration><CommentParts><Abstract><Para>Prediction confidence for label in range of [0, 1]</Para></Abstract></CommentParts></Other>", "key.doc.line": 131, "key.doc.name": "confidence", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 4663, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 4739, "key.offset": 4735, "key.parsed_declaration": "@objc public let confidence: Double", "key.parsed_scope.end": 131, "key.parsed_scope.start": 131, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4770}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4763}], "key.bodylength": 96, "key.bodyoffset": 4804, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 122, "key.name": "description", "key.namelength": 11, "key.nameoffset": 4783, "key.offset": 4779, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 137, "key.parsed_scope.start": 133, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:confidence:) public init(label: <Type usr=\"s:SS\">String</Type>, confidence: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4944}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 4907}], "key.bodylength": 90, "key.bodyoffset": 4992, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:confidence:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>confidence</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 132, "key.name": "init(label:confidence:)", "key.namelength": 39, "key.nameoffset": 4951, "key.offset": 4951, "key.parsed_declaration": "public init(label: String, confidence: Double)", "key.parsed_scope.end": 144, "key.parsed_scope.start": 140, "key.substructure": [], "key.typename": "(FritzVisionLabel.Type) -> (String, Double) -> FritzVisionLabel", "key.typeusr": "$S5label10confidence11FritzVision0cD5LabelCSS_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(im)initWithLabel:confidence:"}], "key.typename": "FritzVisionLabel.Type", "key.typeusr": "$S11FritzVision0aB5LabelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObject) public class FritzVisionObject : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5256}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5113}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 5088}], "key.bodylength": 804, "key.bodyoffset": 5321, "key.doc.comment": "Object identified in object detection model. Contains the label and corresponding BoundingBox of identified model.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5288}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 5298}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObject)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObject</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 863, "key.name": "FritzVisionObject", "key.namelength": 17, "key.nameoffset": 5269, "key.offset": 5263, "key.parsed_declaration": "public class FritzVisionObject: NSObject, FritzPredictionResult", "key.parsed_scope.end": 181, "key.parsed_scope.start": 151, "key.runtime_name": "FritzVisionObject", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let detectedLabel: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5333}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5327}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>detectedLabel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "detectedLabel", "key.namelength": 13, "key.nameoffset": 5344, "key.offset": 5340, "key.parsed_declaration": "@objc public let detectedLabel: FritzVisionLabel", "key.parsed_scope.end": 153, "key.parsed_scope.start": 153, "key.typename": "FritzVisionLabel", "key.typeusr": "$S11FritzVision0aB5LabelCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)detectedLabel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5427}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5421}], "key.doc.column": 22, "key.doc.comment": "BoundingBox of detected object.", "key.doc.declaration": "@objc public let boundingBox: BoundingBox", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"156\" column=\"22\"><Name>boundingBox</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox</USR><Declaration>@objc public let boundingBox: BoundingBox</Declaration><CommentParts><Abstract><Para>BoundingBox of detected object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 156, "key.doc.name": "boundingBox", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 5381, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>boundingBox</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "boundingBox", "key.namelength": 11, "key.nameoffset": 5438, "key.offset": 5434, "key.parsed_declaration": "@objc public let boundingBox: BoundingBox", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "BoundingBox", "key.typeusr": "$S11FritzVision11BoundingBoxCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var label: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5474}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5468}], "key.bodylength": 73, "key.bodyoffset": 5500, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 93, "key.name": "label", "key.namelength": 5, "key.nameoffset": 5485, "key.offset": 5481, "key.parsed_declaration": "@objc public var label: String", "key.parsed_scope.end": 162, "key.parsed_scope.start": 158, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var confidence: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5586}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5580}], "key.bodylength": 78, "key.bodyoffset": 5617, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 103, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 5597, "key.offset": 5593, "key.parsed_declaration": "@objc public var confidence: Double", "key.parsed_scope.end": 168, "key.parsed_scope.start": 164, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 5709}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5702}], "key.bodylength": 192, "key.bodyoffset": 5743, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 218, "key.name": "description", "key.namelength": 11, "key.nameoffset": 5722, "key.offset": 5718, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 174, "key.parsed_scope.start": 170, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:boundingBox:) public init(label: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>, boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5980}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 5942}], "key.bodylength": 79, "key.bodyoffset": 6044, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:boundingBox:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>boundingBox</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 137, "key.name": "init(label:boundingBox:)", "key.namelength": 55, "key.nameoffset": 5987, "key.offset": 5987, "key.parsed_declaration": "public init(label: FritzVisionLabel, boundingBox: BoundingBox)", "key.parsed_scope.end": 180, "key.parsed_scope.start": 177, "key.substructure": [], "key.typename": "(FritzVisionObject.Type) -> (FritzVisionLabel, BoundingBox) -> FritzVisionObject", "key.typeusr": "$S5label11boundingBox11FritzVision0dE6ObjectCAC0dE5LabelC_AC08BoundingC0CtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(im)initWithLabel:boundingBox:"}], "key.typename": "FritzVisionObject.Type", "key.typeusr": "$S11FritzVision0aB6ObjectCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Anchor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6178}], "key.bodylength": 641, "key.bodyoffset": 6200, "key.doc.column": 15, "key.doc.comment": "Anchor box used in object detection models.", "key.doc.declaration": "public struct Anchor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"186\" column=\"15\"><Name>Anchor</Name><USR>s:11FritzVision6AnchorV</USR><Declaration>public struct Anchor</Declaration><CommentParts><Abstract><Para>Anchor box used in object detection models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 186, "key.doc.name": "Anchor", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 6130, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Anchor</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 657, "key.name": "Anchor", "key.namelength": 6, "key.nameoffset": 6192, "key.offset": 6185, "key.parsed_declaration": "public struct Anchor", "key.parsed_scope.end": 215, "key.parsed_scope.start": 186, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6206}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "yCenter", "key.namelength": 7, "key.nameoffset": 6217, "key.offset": 6213, "key.parsed_declaration": "public let yCenter: Double", "key.parsed_scope.end": 188, "key.parsed_scope.start": 188, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV7yCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6237}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "xCenter", "key.namelength": 7, "key.nameoffset": 6248, "key.offset": 6244, "key.parsed_declaration": "public let xCenter: Double", "key.parsed_scope.end": 189, "key.parsed_scope.start": 189, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV7xCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6268}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "height", "key.namelength": 6, "key.nameoffset": 6279, "key.offset": 6275, "key.parsed_declaration": "public let height: Double", "key.parsed_scope.end": 190, "key.parsed_scope.start": 190, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV6heightSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6298}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "width", "key.namelength": 5, "key.nameoffset": 6309, "key.offset": 6305, "key.parsed_declaration": "public let width: Double", "key.parsed_scope.end": 191, "key.parsed_scope.start": 191, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV5widthSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(yCenter: <Type usr=\"s:Sd\">Double</Type>, xCenter: <Type usr=\"s:Sd\">Double</Type>, height: <Type usr=\"s:Sd\">Double</Type>, width: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6328}], "key.bodylength": 123, "key.bodyoffset": 6406, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 195, "key.name": "init(yCenter:xCenter:height:width:)", "key.namelength": 69, "key.nameoffset": 6335, "key.offset": 6335, "key.parsed_declaration": "public init(yCenter: Double, xCenter: Double, height: Double, width: Double)", "key.parsed_scope.end": 198, "key.parsed_scope.start": 193, "key.substructure": [], "key.typename": "(Anchor.Type) -> (Double, Double, Double, Double) -> Anchor", "key.typeusr": "$S7yCenter01xA06height5width11FritzVision6AnchorVSd_S3dtcD", "key.usr": "s:11FritzVision6AnchorV7yCenter01xD06height5widthACSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6540}], "key.bodylength": 44, "key.bodyoffset": 6565, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 63, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 6551, "key.offset": 6547, "key.parsed_declaration": "public var xMin: Double", "key.parsed_scope.end": 202, "key.parsed_scope.start": 200, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6616}], "key.bodylength": 44, "key.bodyoffset": 6641, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 63, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 6627, "key.offset": 6623, "key.parsed_declaration": "public var xMax: Double", "key.parsed_scope.end": 206, "key.parsed_scope.start": 204, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6692}], "key.bodylength": 45, "key.bodyoffset": 6717, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 6703, "key.offset": 6699, "key.parsed_declaration": "public var yMin: Double", "key.parsed_scope.end": 210, "key.parsed_scope.start": 208, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6769}], "key.bodylength": 45, "key.bodyoffset": 6794, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 6780, "key.offset": 6776, "key.parsed_declaration": "public var yMax: Double", "key.parsed_scope.end": 214, "key.parsed_scope.start": 212, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4yMaxSdvp"}], "key.typename": "Anchor.Type", "key.typeusr": "$S11FritzVision6AnchorVmD", "key.usr": "s:11FritzVision6AnchorV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8854, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionCropAndScale) public enum FritzVisionCropAndScale : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 68}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 37}], "key.bodylength": 370, "key.bodyoffset": 110, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 105}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionCropAndScale)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionCropAndScale</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 406, "key.name": "FritzVisionCropAndScale", "key.namelength": 23, "key.nameoffset": 80, "key.offset": 75, "key.parsed_declaration": "public enum FritzVisionCropAndScale: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 7, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 115, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case centerCrop = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 133}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>centerCrop</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 14, "key.name": "centerCrop", "key.namelength": 10, "key.nameoffset": 120, "key.offset": 120, "key.parsed_declaration": "case centerCrop = 1", "key.parsed_scope.end": 8, "key.parsed_scope.start": 8, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$Sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleCenterCrop"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 139, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case scaleFill = 2</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 156}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFill</decl.name> = <syntaxtype.number>2</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "scaleFill", "key.namelength": 9, "key.nameoffset": 144, "key.offset": 144, "key.parsed_declaration": "case scaleFill = 2", "key.parsed_scope.end": 9, "key.parsed_scope.start": 9, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$Sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFill"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 162, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case scaleFit = 3</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 178}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFit</decl.name> = <syntaxtype.number>3</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "scaleFit", "key.namelength": 8, "key.nameoffset": 167, "key.offset": 167, "key.parsed_declaration": "case scaleFit = 3", "key.parsed_scope.end": 10, "key.parsed_scope.start": 10, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$Sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFit"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var visionOption: <Type usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 185}], "key.bodylength": 241, "key.bodyoffset": 237, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>visionOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 287, "key.name": "visionOption", "key.namelength": 12, "key.nameoffset": 196, "key.offset": 192, "key.parsed_declaration": "public var visionOption: VNImageCropAndScaleOption", "key.parsed_scope.end": 18, "key.parsed_scope.start": 12, "key.typename": "VNImageCropAndScaleOption", "key.typeusr": "$SSo25VNImageCropAndScaleOptionVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO12visionOptionSo07VNImagecdeG0Vvp"}], "key.typename": "FritzVisionCropAndScale.Type", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 624}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 563}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 563}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 563}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 563}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 539}], "key.bodylength": 3783, "key.bodyoffset": 665, "key.doc.column": 14, "key.doc.comment": "An image or image buffer used in vision detection.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"25\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 25, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.doclength": 55, "key.docoffset": 484, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 655}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3818, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 637, "key.offset": 631, "key.parsed_declaration": "public class FritzVisionImage: NSObject", "key.parsed_scope.end": 122, "key.parsed_scope.start": 25, "key.runtime_name": "FritzVisionImage", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 703}], "key.doc.column": 16, "key.doc.comment": "CVPixelBuffer of image.", "key.doc.declaration": "public let imageBuffer: CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"28\" column=\"16\"><Name>imageBuffer</Name><USR>s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp</USR><Declaration>public let imageBuffer: CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>CVPixelBuffer of image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "imageBuffer", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 671, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "imageBuffer", "key.namelength": 11, "key.nameoffset": 714, "key.offset": 710, "key.parsed_declaration": "public let imageBuffer: CVPixelBuffer?", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 746}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampleBuffer</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "sampleBuffer", "key.namelength": 12, "key.nameoffset": 757, "key.offset": 753, "key.parsed_declaration": "public let sampleBuffer: CMSampleBuffer?", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "CMSampleBuffer?", "key.typeusr": "$SSo17CMSampleBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBufferSo08CMSampleE3RefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 791}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "image", "key.namelength": 5, "key.nameoffset": 802, "key.offset": 798, "key.parsed_declaration": "public let image: UIImage?", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "UIImage?", "key.typeusr": "$SSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB5ImageC5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 823}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 834, "key.offset": 830, "key.parsed_declaration": "public var metadata: FritzVisionImageMetadata?", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionImageMetadata?", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCSgD", "key.usr": "s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var size: <Type usr=\"c:@S@CGSize\">CGSize</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 914}], "key.bodylength": 1039, "key.bodyoffset": 940, "key.doc.column": 16, "key.doc.comment": "Dimensions of FritzVisionImage", "key.doc.declaration": "public var size: CGSize? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"35\" column=\"16\"><Name>size</Name><USR>s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp</USR><Declaration>public var size: CGSize? { get }</Declaration><CommentParts><Abstract><Para>Dimensions of FritzVisionImage</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "size", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 875, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 1059, "key.name": "size", "key.namelength": 4, "key.nameoffset": 925, "key.offset": 921, "key.parsed_declaration": "public var size: CGSize?", "key.parsed_scope.end": 58, "key.parsed_scope.start": 35, "key.typename": "CGSize?", "key.typeusr": "$SSo6CGSizeVSgD", "key.usr": "s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp"}, {"key.annotated_decl": "<Declaration>var size: <Type usr=\"c:@S@CGSize\">CGSize</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "size", "key.namelength": 4, "key.nameoffset": 971, "key.offset": 967, "key.parsed_declaration": "var size: CGSize?", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp\">size</RelatedName>"}], "key.typename": "CGSize?", "key.typeusr": "$SSo6CGSizeVSgD", "key.usr": "s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvgADL_AGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithBuffer:) public init(buffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2013}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 1986}], "key.bodylength": 96, "key.bodyoffset": 2050, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(buffer:)", "key.namelength": 28, "key.nameoffset": 2020, "key.offset": 2020, "key.parsed_declaration": "public init(buffer: CMSampleBuffer)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer) -> FritzVisionImage", "key.typeusr": "$S6buffer11FritzVision0bC5ImageCSo17CMSampleBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2185}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 2153}], "key.bodylength": 101, "key.bodyoffset": 2226, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 136, "key.name": "init(imageBuffer:)", "key.namelength": 32, "key.nameoffset": 2192, "key.offset": 2192, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer) -> FritzVisionImage", "key.typeusr": "$S11imageBuffer11FritzVision0cD5ImageCSo11CVBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2360}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2334}], "key.bodylength": 95, "key.bodyoffset": 2389, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init(image:)", "key.namelength": 20, "key.nameoffset": 2367, "key.offset": 2367, "key.parsed_declaration": "public init(image: UIImage)", "key.parsed_scope.end": 79, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (UIImage) -> FritzVisionImage", "key.typeusr": "$S5image11FritzVision0bC5ImageCSo7UIImageC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildImageRequestHandler() -&gt; <Type usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2491}], "key.bodylength": 1888, "key.bodyoffset": 2557, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildImageRequestHandler</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1948, "key.name": "buildImageRequestHandler()", "key.namelength": 26, "key.nameoffset": 2503, "key.offset": 2498, "key.parsed_declaration": "public func buildImageRequestHandler() -> VNImageRequestHandler?", "key.parsed_scope.end": 120, "key.parsed_scope.start": 81, "key.substructure": [], "key.typename": "(FritzVisionImage) -> () -> VNImageRequestHandler?", "key.typeusr": "$SSo21VNImageRequestHandlerCSgycD", "key.usr": "s:11FritzVision0aB5ImageC05buildC14RequestHandlerSo07VNImageeF0CSgyF"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$S11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4451}], "key.bodylength": 4258, "key.bodyoffset": 4503, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"25\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 25, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 4287, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 4485, "key.offset": 4475, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func prepare(height: <Type usr=\"s:Si\">Int</Type>, width: <Type usr=\"s:Si\">Int</Type>, scaleCropOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> = default) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5114}], "key.bodylength": 1011, "key.bodyoffset": 5232, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prepare</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleCropOption</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1123, "key.name": "prepare(height:width:scaleCropOption:)", "key.namelength": 86, "key.nameoffset": 5126, "key.offset": 5121, "key.parsed_declaration": "public func prepare(height: Int, width: Int, scaleCropOption: FritzVisionCropAndScale = .scaleFit) -> CVPixelBuffer?", "key.parsed_scope.end": 167, "key.parsed_scope.start": 141, "key.substructure": [{"key.annotated_decl": "<Declaration>var rotated: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rotated</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "rotated", "key.namelength": 7, "key.nameoffset": 5316, "key.offset": 5312, "key.parsed_declaration": "var rotated: CVPixelBuffer? = buffer", "key.parsed_scope.end": 143, "key.parsed_scope.start": 143, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC7prepare6height5width15scaleCropOptionSo11CVBufferRefaSgSi_SiAA0abH8AndScaleOtF7rotatedL_AJvp"}], "key.typename": "(FritzVisionImage) -> (Int, Int, FritzVisionCropAndScale) -> CVBuffer?", "key.typeusr": "$S6height5width15scaleCropOptionSo11CVBufferRefaSgSi_Si11FritzVision0hiD8AndScaleOtcD", "key.usr": "s:11FritzVision0aB5ImageC7prepare6height5width15scaleCropOptionSo11CVBufferRefaSgSi_SiAA0abH8AndScaleOtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(rotate) public func rotate() -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6268}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 13, "key.offset": 6250}], "key.bodylength": 582, "key.bodyoffset": 6308, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(rotate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rotate</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 616, "key.name": "rotate()", "key.namelength": 8, "key.nameoffset": 6280, "key.offset": 6275, "key.parsed_declaration": "public func rotate() -> CVPixelBuffer?", "key.parsed_scope.end": 181, "key.parsed_scope.start": 170, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 65, "key.name": "TODO: flip mirrored images through affine transformation I think?", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6462}], "key.typename": "(FritzVisionImage) -> () -> CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgycD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionImage(im)rotate"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$S11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols+ModelTags.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2543, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzVisionModelTagError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 202}], "key.bodylength": 72, "key.bodyoffset": 247, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 240}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols+ModelTags.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionModelTagError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 111, "key.name": "FritzVisionModelTagError", "key.namelength": 24, "key.nameoffset": 214, "key.offset": 209, "key.parsed_declaration": "public enum FritzVisionModelTagError: Error", "key.parsed_scope.end": 15, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 252, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case loadingModelsFailed(errors: [<Type usr=\"s:s5ErrorP\">Error</Type>])</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingModelsFailed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>errors</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "loadingModelsFailed(errors:)", "key.namelength": 36, "key.nameoffset": 257, "key.offset": 257, "key.parsed_declaration": "case loadingModelsFailed(errors: [Error])", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzVisionModelTagError.Type) -> ([Error]) -> FritzVisionModelTagError", "key.typeusr": "$Sy11FritzVision0aB13ModelTagErrorOSays0E0_pG_tcACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO19loadingModelsFailedyACSays0E0_pG_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 298, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case noModelReturned</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noModelReturned</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "noModelReturned", "key.namelength": 15, "key.nameoffset": 303, "key.offset": 303, "key.parsed_declaration": "case noModelReturned", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(FritzVisionModelTagError.Type) -> FritzVisionModelTagError", "key.typeusr": "$Sy11FritzVision0aB13ModelTagErrorOACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO02noC8ReturnedyA2CmF"}]}], "key.typename": "FritzVisionModelTagError.Type", "key.typeusr": "$S11FritzVision0aB13ModelTagErrorOmD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO"}, {"key.annotated_decl": "<Declaration>protocol FritzInitializableModel : <Type usr=\"s:11FritzVision0A5ModelP\">FritzModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 323}], "key.bodylength": 2158, "key.bodyoffset": 382, "key.doc.column": 10, "key.doc.declaration": "@available(iOS 11.0, *)\nprotocol FritzInitializableModel : FritzModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift\" line=\"60\" column=\"10\"><Name>FritzInitializableModel</Name><USR>s:11FritzVision0A18InitializableModelP</USR><Declaration>@available(iOS 11.0, *)\nprotocol FritzInitializableModel : FritzModel</Declaration><CommentParts><Abstract><Para>Model that can be initialized purely from a FritzMLModel.</Para></Abstract></CommentParts></Class>", "key.doc.line": 60, "key.doc.name": "FritzInitializableModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzInitializableModel</decl.name> : <ref.protocol usr=\"s:11FritzVision0A5ModelP\">FritzModel</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2194, "key.name": "FritzInitializableModel", "key.namelength": 23, "key.nameoffset": 357, "key.offset": 347, "key.substructure": [], "key.typename": "FritzInitializableModel.Protocol", "key.typeusr": "$S11FritzVision0A18InitializableModel_pmD", "key.usr": "s:11FritzVision0A18InitializableModelP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8427, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzImageOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 191}], "key.bodylength": 164, "key.bodyoffset": 226, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzImageOptions</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 193, "key.name": "FritzImageOptions", "key.namelength": 17, "key.nameoffset": 207, "key.offset": 198, "key.parsed_declaration": "public protocol FritzImageOptions", "key.parsed_scope.end": 20, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main17FritzImageOptions_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 272, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 46, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 243, "key.offset": 232, "key.parsed_declaration": "static var defaults: FritzImageOptions", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 338, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 60, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 288, "key.offset": 284, "key.parsed_declaration": "var imageCropAndScaleOption: FritzVisionCropAndScale", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 383, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 354, "key.offset": 350, "key.parsed_declaration": "var forceCoreMLPrediction: Bool", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.typename": "FritzImageOptions.Protocol", "key.typeusr": "$S11FritzVision0A12ImageOptions_pmD", "key.usr": "s:11FritzVision0A12ImageOptionsP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictionResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 393}], "key.bodylength": 0, "key.bodyoffset": 432, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictionResult</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 33, "key.name": "FritzPredictionResult", "key.namelength": 21, "key.nameoffset": 409, "key.offset": 400, "key.parsed_declaration": "public protocol FritzPredictionResult", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.runtime_name": "_TtP4main21FritzPredictionResult_", "key.typename": "FritzPredictionResult.Protocol", "key.typeusr": "$S11FritzVision0A16PredictionResult_pmD", "key.usr": "s:11FritzVision0A16PredictionResultP"}, {"key.annotated_decl": "<Declaration>struct Array&lt;Element&gt; : <Type usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 436}], "key.bodylength": 0, "key.bodyoffset": 537, "key.doc.declaration": "struct Array<Element>", "key.doc.discussion": [{"Para": "Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the `Array` type to hold elements of a single type, the array\u2019s `Element` type. An array can store any kind of elements\u2014from integers to strings to classes."}, {"Para": "Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s `Element` type. For example:"}, {"CodeListing": ""}, {"Para": "You can create an empty array by specifying the `Element` type of your array in the declaration. For example:"}, {"CodeListing": ""}, {"Para": "If you need an array that is preinitialized with a fixed number of default values, use the `Array(repeating:count:)` initializer."}, {"CodeListing": ""}, {"Para": "When you need to perform an operation on all of an array\u2019s elements, use a `for`-`in` loop to iterate through the array\u2019s contents."}, {"CodeListing": ""}, {"Para": "Use the `isEmpty` property to check quickly whether an array has any elements, or use the `count` property to find the number of elements in the array."}, {"CodeListing": ""}, {"Para": "Use the `first` and `last` properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are `nil`."}, {"CodeListing": ""}, {"Para": "You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than `count` triggers a runtime error. For example:"}, {"CodeListing": ""}, {"Para": "Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class."}, {"CodeListing": ""}, {"Para": "To add single elements to the end of an array, use the `append(_:)` method. Add multiple elements at the same time by passing another array or a sequence of any kind to the `append(contentsOf:)` method."}, {"CodeListing": ""}, {"Para": "You can add new elements in the middle of an array by using the `insert(_:at:)` method for single elements and by using `insert(contentsOf:at:)` to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room."}, {"CodeListing": ""}, {"Para": "To remove elements from an array, use the `remove(at:)`, `removeSubrange(_:)`, and `removeLast()` methods."}, {"CodeListing": ""}, {"Para": "You can replace an existing element with a new value by assigning the new value to the subscript."}, {"CodeListing": ""}, {"Para": "Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger."}, {"Para": "If you know approximately how many elements you will need to store, use the `reserveCapacity(_:)` method before appending to the array to avoid intermediate reallocations. Use the `capacity` and `count` properties to determine how many more elements the array can store without allocating larger storage."}, {"Para": "For arrays of most `Element` types, this storage is a contiguous block of memory. For arrays with an `Element` type that is a class or `@objc` protocol type, this storage can be a contiguous block of memory or an instance of `NSArray`. Because any arbitrary subclass of `NSArray` can become an `Array`, there are no guarantees about representation or efficiency in this case."}, {"Para": "Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:"}, {"CodeListing": ""}, {"Para": "If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:"}, {"CodeListing": ""}, {"Para": "Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying."}, {"Para": "This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place."}, {"Para": "In the example below, a `numbers` array is created along with two copies that share the same storage. When the original `numbers` array is modified, it makes a unique copy of its storage before making the modification. Further modifications to `numbers` are made in place, while the two copies continue to share the original storage."}, {"CodeListing": ""}, {"Para": "When you need to access APIs that require data in an `NSArray` instance instead of `Array`, use the type-cast operator (`as`) to bridge your instance. For bridging to be possible, the `Element` type of your array must be a class, an `@objc` protocol (a protocol imported from Objective-C or marked with the `@objc` attribute), or a type that bridges to a Foundation type."}, {"Para": "The following example shows how you can bridge an `Array` instance to `NSArray` to use the `write(to:atomically:)` method. In this example, the `colors` array can be bridged to `NSArray` because the `colors` array\u2019s `String` elements bridge to `NSString`. The compiler prevents bridging the `moreColors` array, on the other hand, because its `Element` type is `Optional<String>`, which does  bridge to a Foundation type."}, {"CodeListing": ""}, {"Para": "Bridging from `Array` to `NSArray` takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an `@objc` protocol; otherwise, it takes O() time and space."}, {"Para": "When the destination array\u2019s element type is a class or an `@objc` protocol, bridging from `NSArray` to `Array` first calls the `copy(with:)` (`- copyWithZone:` in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of `NSArray` that are already immutable, `copy(with:)` usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If `copy(with:)` returns the same array, the instances of `NSArray` and `Array` share storage using the same copy-on-write optimization that is used when two instances of `Array` share storage."}, {"Para": "When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from `NSArray` to `Array` performs a bridging copy of the elements to contiguous storage in O() time. For example, bridging from `NSArray` to `Array<Int>` performs such a copy. No further bridging is required when accessing elements of the `Array` instance."}, {"Note": ""}], "key.doc.full_as_xml": "<Class><Name>Array</Name><USR>s:Sa</USR><Declaration>struct Array&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>An ordered, random-access collection.</Para></Abstract><Discussion><Para>Arrays are one of the most commonly used data types in an app. You use arrays to organize your app\u2019s data. Specifically, you use the <codeVoice>Array</codeVoice> type to hold elements of a single type, the array\u2019s <codeVoice>Element</codeVoice> type. An array can store any kind of elements\u2014from integers to strings to classes.</Para><Para>Swift makes it easy to create arrays in your code using an array literal: simply surround a comma-separated list of values with square brackets. Without any other information, Swift creates an array that includes the specified values, automatically inferring the array\u2019s <codeVoice>Element</codeVoice> type. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An array of 'Int' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let oddNumbers = [1, 3, 5, 7, 9, 11, 13, 15]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// An array of 'String' elements]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let streets = [\"Albemarle\", \"Brandywine\", \"Chesapeake\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can create an empty array by specifying the <codeVoice>Element</codeVoice> type of your array in the declaration. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Shortened forms are preferred]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyDoubles: [Double] = []]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The full type name is also allowed]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var emptyFloats: Array<Float> = Array()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If you need an array that is preinitialized with a fixed number of default values, use the <codeVoice>Array(repeating:count:)</codeVoice> initializer.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var digitCounts = Array(repeating: 0, count: 10)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(digitCounts)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Accessing Array Values<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to perform an operation on all of an array\u2019s elements, use a <codeVoice>for</codeVoice>-<codeVoice>in</codeVoice> loop to iterate through the array\u2019s contents.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[for street in streets {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't live on \\(street).\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Albemarle.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Brandywine.\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I don't live on Chesapeake.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>isEmpty</codeVoice> property to check quickly whether an array has any elements, or use the <codeVoice>count</codeVoice> property to find the number of elements in the array.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if oddNumbers.isEmpty {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I don't know any odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} else {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"I know \\(oddNumbers.count) odd numbers.\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"I know 8 odd numbers.\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Use the <codeVoice>first</codeVoice> and <codeVoice>last</codeVoice> properties for safe access to the value of the array\u2019s first and last elements. If the array is empty, these properties are <codeVoice>nil</codeVoice>.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let firstElement = oddNumbers.first, let lastElement = oddNumbers.last {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(firstElement, lastElement, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 15\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles.first, emptyDoubles.last, separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil, nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can access individual array elements through a subscript. The first element of a nonempty array is always at index zero. You can subscript an array with any integer from zero up to, but not including, the count of the array. Using a negative number or an index equal to or greater than <codeVoice>count</codeVoice> triggers a runtime error. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[print(oddNumbers[0], oddNumbers[3], separator: \", \")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"1, 7\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(emptyDoubles[0])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Triggers runtime error: Index out of range]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Adding and Removing Elements<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Suppose you need to store a list of the names of students that are signed up for a class you\u2019re teaching. During the registration period, you need to add and remove names as students add and drop the class.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var students = [\"Ben\", \"Ivy\", \"Jordell\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To add single elements to the end of an array, use the <codeVoice>append(_:)</codeVoice> method. Add multiple elements at the same time by passing another array or a sequence of any kind to the <codeVoice>append(contentsOf:)</codeVoice> method.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.append(\"Maxime\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.append(contentsOf: [\"Shakia\", \"William\"])]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can add new elements in the middle of an array by using the <codeVoice>insert(_:at:)</codeVoice> method for single elements and by using <codeVoice>insert(contentsOf:at:)</codeVoice> to insert multiple elements from another collection or array literal. The elements at that index and later indices are shifted back to make room.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[students.insert(\"Liam\", at: 3)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ben\", \"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>To remove elements from an array, use the <codeVoice>remove(at:)</codeVoice>, <codeVoice>removeSubrange(_:)</codeVoice>, and <codeVoice>removeLast()</codeVoice> methods.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// Ben's family is moving to another state]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.remove(at: 0)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\", \"William\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// William is signing up for a different class]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[students.removeLast()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Maxime\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>You can replace an existing element with a new value by assigning the new value to the subscript.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[if let i = students.firstIndex(of: \"Maxime\") {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    students[i] = \"Max\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// [\"Ivy\", \"Jordell\", \"Liam\", \"Max\", \"Shakia\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h2>]]></rawHTML>Growing the Size of an Array<rawHTML><![CDATA[</h2>]]></rawHTML><Para>Every array reserves a specific amount of memory to hold its contents. When you add elements to an array and that array begins to exceed its reserved capacity, the array allocates a larger region of memory and copies its elements into the new storage. The new storage is a multiple of the old storage\u2019s size. This exponential growth strategy means that appending an element happens in constant time, averaging the performance of many append operations. Append operations that trigger reallocation have a performance cost, but they occur less and less often as the array grows larger.</Para><Para>If you know approximately how many elements you will need to store, use the <codeVoice>reserveCapacity(_:)</codeVoice> method before appending to the array to avoid intermediate reallocations. Use the <codeVoice>capacity</codeVoice> and <codeVoice>count</codeVoice> properties to determine how many more elements the array can store without allocating larger storage.</Para><Para>For arrays of most <codeVoice>Element</codeVoice> types, this storage is a contiguous block of memory. For arrays with an <codeVoice>Element</codeVoice> type that is a class or <codeVoice>@objc</codeVoice> protocol type, this storage can be a contiguous block of memory or an instance of <codeVoice>NSArray</codeVoice>. Because any arbitrary subclass of <codeVoice>NSArray</codeVoice> can become an <codeVoice>Array</codeVoice>, there are no guarantees about representation or efficiency in this case.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Modifying Copies of Arrays<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Each array has an independent value that includes the values of all of its elements. For simple types such as integers and other structures, this means that when you change a value in one array, the value of that element does not change in any copies of the array. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var numbersCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbers)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[100, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(numbersCopy)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"[1, 2, 3, 4, 5]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>If the elements in an array are instances of a class, the semantics are the same, though they might appear different at first. In this case, the values stored in the array are references to objects that live outside the array. If you change a reference to an object in one array, only that array has a reference to the new object. However, if two arrays contain references to the same object, you can observe changes to that object\u2019s properties from both arrays. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[// An integer type with reference semantics]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[class IntegerReference {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    var value = 10]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstIntegers = [IntegerReference(), IntegerReference()]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondIntegers = firstIntegers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Modifications to an instance are visible from either array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0].value = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Replacements, additions, and removals are still visible]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// only in the modified array]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[firstIntegers[0] = IntegerReference()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(firstIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"10\"]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(secondIntegers[0].value)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"100\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Arrays, like all variable-size collections in the standard library, use copy-on-write optimization. Multiple copies of an array share the same storage until you modify one of the copies. When that happens, the array being modified replaces its storage with a uniquely owned copy of itself, which is then modified in place. Optimizations are sometimes applied that can reduce the amount of copying.</Para><Para>This means that if an array is sharing storage with other copies, the first mutating operation on that array incurs the cost of copying the array. An array that is the sole owner of its storage can perform mutating operations in place.</Para><Para>In the example below, a <codeVoice>numbers</codeVoice> array is created along with two copies that share the same storage. When the original <codeVoice>numbers</codeVoice> array is modified, it makes a unique copy of its storage before making the modification. Further modifications to <codeVoice>numbers</codeVoice> are made in place, while the two copies continue to share the original storage.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[var numbers = [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var firstCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var secondCopy = numbers]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// The storage for 'numbers' is copied here]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[0] = 100]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[1] = 200]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[numbers[2] = 300]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'numbers' is [100, 200, 300, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// 'firstCopy' and 'secondCopy' are [1, 2, 3, 4, 5]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Bridging Between Array and NSArray<rawHTML><![CDATA[</h1>]]></rawHTML><Para>When you need to access APIs that require data in an <codeVoice>NSArray</codeVoice> instance instead of <codeVoice>Array</codeVoice>, use the type-cast operator (<codeVoice>as</codeVoice>) to bridge your instance. For bridging to be possible, the <codeVoice>Element</codeVoice> type of your array must be a class, an <codeVoice>@objc</codeVoice> protocol (a protocol imported from Objective-C or marked with the <codeVoice>@objc</codeVoice> attribute), or a type that bridges to a Foundation type.</Para><Para>The following example shows how you can bridge an <codeVoice>Array</codeVoice> instance to <codeVoice>NSArray</codeVoice> to use the <codeVoice>write(to:atomically:)</codeVoice> method. In this example, the <codeVoice>colors</codeVoice> array can be bridged to <codeVoice>NSArray</codeVoice> because the <codeVoice>colors</codeVoice> array\u2019s <codeVoice>String</codeVoice> elements bridge to <codeVoice>NSString</codeVoice>. The compiler prevents bridging the <codeVoice>moreColors</codeVoice> array, on the other hand, because its <codeVoice>Element</codeVoice> type is <codeVoice>Optional&lt;String&gt;</codeVoice>, which does <emphasis>not</emphasis> bridge to a Foundation type.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let colors = [\"periwinkle\", \"rose\", \"moss\"]]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let moreColors: [String?] = [\"ochre\", \"pine\"]]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[let url = NSURL(fileURLWithPath: \"names.plist\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(colors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// true]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[(moreColors as NSArray).write(to: url, atomically: true)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// error: cannot convert value of type '[String?]' to type 'NSArray']]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Bridging from <codeVoice>Array</codeVoice> to <codeVoice>NSArray</codeVoice> takes O(1) time and O(1) space if the array\u2019s elements are already instances of a class or an <codeVoice>@objc</codeVoice> protocol; otherwise, it takes O(<emphasis>n</emphasis>) time and space.</Para><Para>When the destination array\u2019s element type is a class or an <codeVoice>@objc</codeVoice> protocol, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> first calls the <codeVoice>copy(with:)</codeVoice> (<codeVoice>- copyWithZone:</codeVoice> in Objective-C) method on the array to get an immutable copy and then performs additional Swift bookkeeping work that takes O(1) time. For instances of <codeVoice>NSArray</codeVoice> that are already immutable, <codeVoice>copy(with:)</codeVoice> usually returns the same array in O(1) time; otherwise, the copying performance is unspecified. If <codeVoice>copy(with:)</codeVoice> returns the same array, the instances of <codeVoice>NSArray</codeVoice> and <codeVoice>Array</codeVoice> share storage using the same copy-on-write optimization that is used when two instances of <codeVoice>Array</codeVoice> share storage.</Para><Para>When the destination array\u2019s element type is a nonclass type that bridges to a Foundation type, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array</codeVoice> performs a bridging copy of the elements to contiguous storage in O(<emphasis>n</emphasis>) time. For example, bridging from <codeVoice>NSArray</codeVoice> to <codeVoice>Array&lt;Int&gt;</codeVoice> performs such a copy. No further bridging is required when accessing elements of the <codeVoice>Array</codeVoice> instance.</Para><Note><Para>The <codeVoice>ContiguousArray</codeVoice> and <codeVoice>ArraySlice</codeVoice> types are not bridged; instances of those types always have a contiguous block of memory as their storage.</Para></Note></Discussion></CommentParts></Class>", "key.doc.name": "Array", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 477}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Array</decl.name>&lt;<decl.generic_type_param usr=\"s:Sa7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:s24_DestructorSafeContainerP\">_DestructorSafeContainer</ref.protocol></decl.struct>", "key.groupname": "Collection/Array", "key.inheritedtypes": [{"key.name": "FritzPredictionResult"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 78, "key.modulename": "Swift", "key.name": "Array", "key.namelength": 5, "key.nameoffset": 470, "key.offset": 460, "key.typename": "Array<Element>.Type", "key.typeusr": "$SSayxGmD", "key.usr": "s:Sa"}, {"key.annotated_decl": "<Declaration>typealias CVPixelBuffer = <Type usr=\"c:@T@CVImageBufferRef\">CVImageBuffer</Type></Declaration>", "key.bodylength": 0, "key.bodyoffset": 589, "key.doc.column": 26, "key.doc.declaration": "typealias CVPixelBuffer = CVImageBuffer", "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h", "key.doc.full_as_xml": "<Typedef file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h\" line=\"172\" column=\"26\"><Name>CVPixelBufferRef</Name><USR>c:@T@CVPixelBufferRef</USR><Declaration>typealias CVPixelBuffer = CVImageBuffer</Declaration><Abstract><Para>   Based on the image buffer type. The pixel buffer implements the memory storage for an image buffer.</Para></Abstract></Typedef>", "key.doc.line": 172, "key.doc.name": "CVPixelBufferRef", "key.doc.type": "Typedef", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 566}], "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreVideo.framework/Headers/CVPixelBuffer.h", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>CVPixelBuffer</decl.name> = <ref.typealias usr=\"c:@T@CVImageBufferRef\">CVImageBuffer</ref.typealias></decl.typealias>", "key.inheritedtypes": [{"key.name": "FritzPredictionResult"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 49, "key.modulename": "CoreVideo.CVPixelBuffer", "key.name": "CVPixelBuffer", "key.namelength": 13, "key.nameoffset": 551, "key.offset": 541, "key.typename": "CVBuffer.Type", "key.typeusr": "$SSo11CVBufferRefamD", "key.usr": "c:@T@CVPixelBufferRef"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 897}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 873}], "key.bodylength": 283, "key.bodyoffset": 929, "key.doc.column": 17, "key.doc.comment": "Public protocol exposing main interface for Fritz predictors.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol FritzPredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift\" line=\"48\" column=\"17\"><Name>FritzPredictor</Name><USR>s:11FritzVision0A9PredictorP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol FritzPredictor</Declaration><CommentParts><Abstract><Para>Public protocol exposing main interface for Fritz predictors.</Para></Abstract></CommentParts></Class>", "key.doc.line": 48, "key.doc.name": "FritzPredictor", "key.doc.type": "Class", "key.doclength": 66, "key.docoffset": 807, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictor</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 309, "key.name": "FritzPredictor", "key.namelength": 14, "key.nameoffset": 913, "key.offset": 904, "key.parsed_declaration": "public protocol FritzPredictor", "key.parsed_scope.end": 56, "key.parsed_scope.start": 48, "key.runtime_name": "_TtP4main14FritzPredictor_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype ModelOptions : <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>ModelOptions</decl.name> : <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 46, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 950, "key.offset": 935, "key.parsed_declaration": "associatedtype ModelOptions: FritzImageOptions", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "Self.ModelOptions.Type", "key.typeusr": "$S12ModelOptions11FritzVision0C9PredictorPQzmD", "key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionResult : <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionResult</decl.name> : <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 54, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1001, "key.offset": 986, "key.parsed_declaration": "associatedtype PredictionResult: FritzPredictionResult", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Self.PredictionResult.Type", "key.typeusr": "$S16PredictionResult11FritzVision0C9PredictorPQzmD", "key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1083, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1050, "key.offset": 1046, "key.parsed_declaration": "var managedModel: FritzManagedModel", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"s:11FritzVision0A9PredictorP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A9PredictorP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A9PredictorP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A9PredictorP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 116, "key.name": "predict(_:options:completion:)", "key.namelength": 111, "key.nameoffset": 1100, "key.offset": 1095, "key.parsed_declaration": "func predict(_ fritzImage: FritzVisionImage, options: ModelOptions, completion: (PredictionResult?, Error?) -> Void)", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.substructure": [], "key.typename": "<Self where Self : FritzPredictor> (Self) -> (FritzVisionImage, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.typename": "FritzPredictor.Protocol", "key.typeusr": "$S11FritzVision0A9Predictor_pmD", "key.usr": "s:11FritzVision0A9PredictorP"}, {"key.annotated_decl": "<Declaration>protocol VisionPredictor : <Type usr=\"s:11FritzVision0A14ImagePredictorP\">FritzImagePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2816}], "key.bodylength": 1403, "key.bodyoffset": 2867, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>VisionPredictor</decl.name> : <ref.protocol usr=\"s:11FritzVision0A14ImagePredictorP\">FritzImagePredictor</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1431, "key.name": "VisionPredictor", "key.namelength": 15, "key.nameoffset": 2850, "key.offset": 2840, "key.substructure": [], "key.typename": "VisionPredictor.Protocol", "key.typeusr": "$S11FritzVision0B9Predictor_pmD", "key.usr": "s:11FritzVision0B9PredictorP"}, {"key.annotated_decl": "<Declaration>protocol CoreMLPredictor : <Type usr=\"s:11FritzVision0A14ImagePredictorP\">FritzImagePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4274}], "key.bodylength": 1546, "key.bodyoffset": 4325, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>CoreMLPredictor</decl.name> : <ref.protocol usr=\"s:11FritzVision0A14ImagePredictorP\">FritzImagePredictor</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1574, "key.name": "CoreMLPredictor", "key.namelength": 15, "key.nameoffset": 4308, "key.offset": 4298, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func _predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"s:11FritzVision0A14ImagePredictorP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A14ImagePredictorP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5662}], "key.bodylength": 81, "key.bodyoffset": 5788, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>_predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A14ImagePredictorP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A14ImagePredictorP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 201, "key.name": "_predict(_:options:completion:)", "key.namelength": 112, "key.nameoffset": 5674, "key.offset": 5669, "key.parsed_declaration": "public func _predict(_ fritzImage: FritzVisionImage, options: ModelOptions, completion: (PredictionResult?, Error?) -> Void)", "key.parsed_scope.end": 175, "key.parsed_scope.start": 173, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A14ImagePredictorP8_predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF\">_predict(_: FritzVisionImage, options: ModelOptions, completion: (PredictionResult?, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : CoreMLPredictor> (Self) -> (FritzVisionImage, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision15CoreMLPredictorPAAE8_predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.typename": "CoreMLPredictor.Protocol", "key.typeusr": "$S11FritzVision15CoreMLPredictor_pmD", "key.usr": "s:11FritzVision15CoreMLPredictorP"}, {"key.annotated_decl": "<Declaration>protocol CoreMLOrVisionPredictor : <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5874}], "key.bodylength": 579, "key.bodyoffset": 5933, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>CoreMLOrVisionPredictor</decl.name> : <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 615, "key.name": "CoreMLOrVisionPredictor", "key.namelength": 23, "key.nameoffset": 5908, "key.offset": 5898, "key.substructure": [], "key.typename": "CoreMLOrVisionPredictor.Protocol", "key.typeusr": "$S11FritzVision08CoreMLOrB9Predictor_pmD", "key.usr": "s:11FritzVision08CoreMLOrB9PredictorP"}, {"key.annotated_decl": "<Declaration>protocol DownloadableModel : <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 6942}], "key.bodylength": 829, "key.bodyoffset": 6995, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/FritzPredictorProtocols.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DownloadableModel</decl.name> : <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 859, "key.name": "DownloadableModel", "key.namelength": 17, "key.nameoffset": 6976, "key.offset": 6966, "key.substructure": [], "key.typename": "DownloadableModel.Protocol", "key.typeusr": "$S11FritzVision17DownloadableModel_pmD", "key.usr": "s:11FritzVision17DownloadableModelP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4081, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModelOptions) public class FritzVisionLabelModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 229}], "key.bodylength": 636, "key.bodyoffset": 337, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 308}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 318}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 702, "key.name": "FritzVisionLabelModelOptions", "key.namelength": 28, "key.nameoffset": 278, "key.offset": 272, "key.parsed_declaration": "public class FritzVisionLabelModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 30, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionLabelModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 343}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 361, "key.offset": 350, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionLabelModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17LabelModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 525}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 519}], "key.doc.column": 22, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"20\" column=\"22\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 427, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 536, "key.offset": 532, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 750}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 744}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public let forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"24\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public let forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 565, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 761, "key.offset": 757, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public let forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 858}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 852}], "key.doc.column": 22, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"27\" column=\"22\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 802, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 869, "key.offset": 865, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 901}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 895}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 912, "key.offset": 908, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)imageCropAndScaleOption"}], "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$S11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionLabelError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 983}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 977}], "key.bodylength": 24, "key.bodyoffset": 1030, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 1018}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1023}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionLabelError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 65, "key.name": "FritzVisionLabelError", "key.namelength": 21, "key.nameoffset": 995, "key.offset": 990, "key.parsed_declaration": "@objc public enum FritzVisionLabelError: Int, Error", "key.parsed_scope.end": 35, "key.parsed_scope.start": 33, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1035, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case noVisionModel</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noVisionModel</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "noVisionModel", "key.namelength": 13, "key.nameoffset": 1040, "key.offset": 1040, "key.parsed_declaration": "case noVisionModel", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "(FritzVisionLabelError.Type) -> FritzVisionLabelError", "key.typeusr": "$Sy11FritzVision0aB10LabelErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError@FritzVisionLabelErrorNoVisionModel"}]}], "key.typename": "FritzVisionLabelError.Type", "key.typeusr": "$S11FritzVision0aB10LabelErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) public final class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1154}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1147}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1086}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1086}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1086}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1086}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1057}], "key.bodylength": 2037, "key.bodyoffset": 1251, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1189}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 1199}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1216}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1235}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "VisionPredictor"}, {"key.name": "DownloadableModel"}, {"key.name": "FritzPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2129, "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 1166, "key.offset": 1160, "key.parsed_declaration": "public final class FritzVisionLabelModel: NSObject, VisionPredictor, DownloadableModel, FritzPredictor", "key.parsed_scope.end": 84, "key.parsed_scope.start": 39, "key.runtime_name": "FritzVisionLabelModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</Type>.PredictionResult = [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1257}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</ref.class>.<decl.name>PredictionResult</decl.name> = [<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1274, "key.offset": 1264, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = [FritzVisionLabel]", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "[FritzVisionLabel].Type", "key.typeusr": "$SSay11FritzVision0aB5LabelCGmD", "key.usr": "s:11FritzVision0aB10LabelModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1316}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1333, "key.offset": 1323, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionLabelModelOptions", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$S11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "s:11FritzVision0aB10LabelModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1388}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1382}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 133, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1406, "key.offset": 1395, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(identifier: \"88e28aa99ea94c9a96c5aff175a84b16\", version: 1)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1540}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1534}], "key.bodylength": 52, "key.bodyoffset": 1591, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1558, "key.offset": 1547, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB10LabelModelC07managedD00a7ManagedD0AECvp\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1656}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1650}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1674, "key.offset": 1663, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1844}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1855, "key.offset": 1851, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}, {"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}], "key.parsed_declaration": "public let managedModel: FritzManagedModel", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB10LabelModelC07managedD00a7ManagedD0AECvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1918}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1892}], "key.bodylength": 181, "key.bodyoffset": 1961, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 209, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1934, "key.offset": 1934, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 59, "key.substructure": [], "key.typename": "(FritzVisionLabelModel.Type) -> (FritzMLModel) -> FritzVisionLabelModel", "key.typeusr": "$S5model11FritzVision0bC10LabelModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type> = default, completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3056}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3017}], "key.bodylength": 76, "key.bodyoffset": 3209, "key.doc.column": 17, "key.doc.comment": "Run label prediction requst on a UIImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"80\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, completion: ([FritzVisionLabel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run label prediction requst on a UIImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 80, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 322, "key.docoffset": 2691, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 223, "key.name": "predict(_:options:completion:)", "key.namelength": 139, "key.nameoffset": 3068, "key.offset": 3063, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 80, "key.substructure": [], "key.typename": "(FritzVisionLabelModel) -> (FritzVisionImage, FritzVisionLabelModelOptions, ([FritzVisionLabel]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD17LabelModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)predict:options:completion:"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$S11FritzVision0aB10LabelModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) public final class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3292}], "key.bodylength": 403, "key.bodyoffset": 3349, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 437, "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 3326, "key.offset": 3316, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3584}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3540}], "key.bodylength": 63, "key.bodyoffset": 3686, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLabelModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"94\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLabelModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 94, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 3355, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel\">FritzVisionLabelModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 159, "key.name": "fetchModel(completionHandler:)", "key.namelength": 81, "key.nameoffset": 3603, "key.offset": 3591, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionLabelModel?, Error?) -> Void)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 94, "key.substructure": [], "key.typename": "(FritzVisionLabelModel.Type) -> (@escaping (FritzVisionLabelModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD10LabelModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$S11FritzVision0aB10LabelModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) public final class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3756}], "key.bodylength": 265, "key.bodyoffset": 3813, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 299, "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 3790, "key.offset": 3780, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3862}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3856}], "key.bodylength": 53, "key.bodyoffset": 3899, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"104\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 104, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 3818, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 3873, "key.offset": 3869, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 106, "key.parsed_scope.start": 104, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3999}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3993}], "key.bodylength": 49, "key.bodyoffset": 4027, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift\" line=\"109\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 109, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 3959, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/LabelModel/LabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 4010, "key.offset": 4006, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 111, "key.parsed_scope.start": 109, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionLabelModel(py)tags"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$S11FritzVision0aB10LabelModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6213, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModelOptions) public class FritzVisionObjectModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 266}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 229}], "key.bodylength": 795, "key.bodyoffset": 339, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 310}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 320}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 862, "key.name": "FritzVisionObjectModelOptions", "key.namelength": 29, "key.nameoffset": 279, "key.offset": 273, "key.parsed_declaration": "public class FritzVisionObjectModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 33, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionObjectModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 345}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 72, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 363, "key.offset": 352, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionObjectModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB18ObjectModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 528}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 522}], "key.doc.column": 22, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"20\" column=\"22\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 430, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 539, "key.offset": 535, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var iouThreshold: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 683}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 677}], "key.doc.column": 22, "key.doc.comment": "Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.", "key.doc.declaration": "@objc public var iouThreshold: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"23\" column=\"22\"><Name>iouThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold</USR><Declaration>@objc public var iouThreshold: Float</Declaration><CommentParts><Abstract><Para>Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "iouThreshold", "key.doc.type": "Other", "key.doclength": 105, "key.docoffset": 568, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>iouThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "iouThreshold", "key.namelength": 12, "key.nameoffset": 694, "key.offset": 690, "key.parsed_declaration": "@objc public var iouThreshold: Float = 0.25", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Float", "key.typeusr": "$SSfD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 782}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 776}], "key.doc.column": 22, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"26\" column=\"22\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 726, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 793, "key.offset": 789, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 825}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 819}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 836, "key.offset": 832, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1087}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1081}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public let forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"32\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public let forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 902, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1098, "key.offset": 1094, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public let forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction"}], "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$S11FritzVision0aB18ObjectModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1200}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1193}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1169}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1139}], "key.bodylength": 982, "key.bodyoffset": 1298, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1236}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 1246}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1263}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1282}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "VisionPredictor"}, {"key.name": "DownloadableModel"}, {"key.name": "FritzPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1075, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 1212, "key.offset": 1206, "key.parsed_declaration": "public final class FritzVisionObjectModel: NSObject, VisionPredictor, DownloadableModel, FritzPredictor", "key.parsed_scope.end": 65, "key.parsed_scope.start": 39, "key.runtime_name": "FritzVisionObjectModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1304}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 54, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1321, "key.offset": 1311, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionObjectModelOptions", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$S11FritzVision0aB18ObjectModelOptionsCmD", "key.usr": "s:11FritzVision0aB11ObjectModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>.PredictionResult = [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1370}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>.<decl.name>PredictionResult</decl.name> = [<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 48, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1387, "key.offset": 1377, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = [FritzVisionObject]", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "[FritzVisionObject].Type", "key.typeusr": "$SSay11FritzVision0aB6ObjectCGmD", "key.usr": "s:11FritzVision0aB11ObjectModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1437}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1431}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1455, "key.offset": 1444, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"6421558a820640b68dc004104ea6b6a1\", version: 1)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1564}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1558}], "key.bodylength": 52, "key.bodyoffset": 1615, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1582, "key.offset": 1571, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1680}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1674}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1698, "key.offset": 1687, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1874}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1868}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1885, "key.offset": 1881, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}, {"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2061}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2054}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2028}], "key.bodylength": 181, "key.bodyoffset": 2097, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 209, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2070, "key.offset": 2070, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 61, "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (FritzMLModel) -> FritzVisionObjectModel", "key.typeusr": "$S5model11FritzVision0bC11ObjectModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2284}], "key.bodylength": 265, "key.bodyoffset": 2342, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 300, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 2318, "key.offset": 2308, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2391}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2385}], "key.bodylength": 53, "key.bodyoffset": 2428, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"71\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 71, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 2347, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2402, "key.offset": 2398, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 73, "key.parsed_scope.start": 71, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2528}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2522}], "key.bodylength": 49, "key.bodyoffset": 2556, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"76\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 76, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 2488, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 2539, "key.offset": 2535, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 78, "key.parsed_scope.start": 76, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(py)tags"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2634}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2610}], "key.bodylength": 1414, "key.bodyoffset": 2675, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1449, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 2651, "key.offset": 2641, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func processRequest(for request: <Type usr=\"c:objc(cs)VNRequest\">VNRequest</Type>, fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type>) -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?</Declaration>", "key.bodylength": 707, "key.bodyoffset": 2820, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>processRequest</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>request</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)VNRequest\">VNRequest</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fritzImage</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 847, "key.name": "processRequest(for:fritzImage:options:)", "key.namelength": 108, "key.nameoffset": 2686, "key.offset": 2681, "key.overrides": [{"key.usr": "s:11FritzVision0B9PredictorP14processRequest3for10fritzImage7options16PredictionResultQzSgSo9VNRequestC_AA0abH0C12ModelOptionsQztF"}], "key.parsed_declaration": "func processRequest(for request: VNRequest, fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions) -> [FritzVisionObject]?", "key.parsed_scope.end": 98, "key.parsed_scope.start": 84, "key.substructure": [{"key.annotated_decl": "<Declaration>let results: [<Type usr=\"c:objc(cs)VNCoreMLFeatureValueObservation\">VNCoreMLFeatureValueObservation</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>results</decl.name>: <decl.var.type>[<ref.class usr=\"c:objc(cs)VNCoreMLFeatureValueObservation\">VNCoreMLFeatureValueObservation</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "results", "key.namelength": 7, "key.nameoffset": 2833, "key.offset": 2829, "key.parsed_declaration": "let results = request.results as! [VNCoreMLFeatureValueObservation]", "key.parsed_scope.end": 85, "key.parsed_scope.start": 85, "key.typename": "[VNCoreMLFeatureValueObservation]", "key.typeusr": "$SSaySo31VNCoreMLFeatureValueObservationCGD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for10fritzImage7optionsSayAA0abC0CGSgSo9VNRequestC_AA0abI0CAA0abcD7OptionsCtF7resultsL_SaySo31VNCoreMLFeatureValueObservationCGvp"}, {"key.annotated_decl": "<Declaration>let predictions: [<Type usr=\"s:11FritzVision10PredictionV\">Prediction</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictions</decl.name>: <decl.var.type>[<ref.struct usr=\"s:11FritzVision10PredictionV\">Prediction</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 132, "key.name": "predictions", "key.namelength": 11, "key.nameoffset": 3155, "key.offset": 3151, "key.parsed_declaration": "let predictions = ssdPostProcessor.postprocess(boxPredictions: boxPredictions, classPredictions: classPredictions, options: options)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "[Prediction]", "key.typeusr": "$SSay11FritzVision10PredictionVGD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for10fritzImage7optionsSayAA0abC0CGSgSo9VNRequestC_AA0abI0CAA0abcD7OptionsCtF11predictionsL_SayAA10PredictionVGvp"}], "key.typename": "(FritzVisionObjectModel) -> (VNRequest, FritzVisionImage, FritzVisionObjectModelOptions) -> [FritzVisionObject]?", "key.typeusr": "$S3for10fritzImage7optionsSay11FritzVision0eF6ObjectCGSgSo9VNRequestC_AD0efC0CAD0efG12ModelOptionsCtcD", "key.usr": "s:11FritzVision0aB11ObjectModelC14processRequest3for10fritzImage7optionsSayAA0abC0CGSgSo9VNRequestC_AA0abI0CAA0abcD7OptionsCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = default, completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3856}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3817}], "key.bodylength": 76, "key.bodyoffset": 4011, "key.doc.column": 17, "key.doc.comment": "Run prediction for vision object model.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, completion: ([FritzVisionObject]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"107\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, completion: ([FritzVisionObject]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction for vision object model.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 107, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 279, "key.docoffset": 3534, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 225, "key.name": "predict(_:options:completion:)", "key.namelength": 141, "key.nameoffset": 3868, "key.offset": 3863, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -> Void)", "key.parsed_scope.end": 109, "key.parsed_scope.start": 107, "key.substructure": [], "key.typename": "(FritzVisionObjectModel) -> (FritzVisionImage, FritzVisionObjectModelOptions, ([FritzVisionObject]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD18ObjectModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(im)predict:options:completion:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4116}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4092}], "key.bodylength": 404, "key.bodyoffset": 4157, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 439, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 4133, "key.offset": 4123, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4392}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 4348}], "key.bodylength": 63, "key.bodyoffset": 4495, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"119\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 119, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 4163, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel\">FritzVisionObjectModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 160, "key.name": "fetchModel(completionHandler:)", "key.namelength": 82, "key.nameoffset": 4411, "key.offset": 4399, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionObjectModel?, Error?) -> Void)", "key.parsed_scope.end": 121, "key.parsed_scope.start": 119, "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (@escaping (FritzVisionObjectModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD11ObjectModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionObjectModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBox) public class BoundingBox : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4917}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 4898}], "key.bodylength": 1258, "key.bodyoffset": 4953, "key.doc.column": 14, "key.doc.comment": "BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.", "key.doc.declaration": "@objc(BoundingBox) public class BoundingBox : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift\" line=\"128\" column=\"14\"><Name>BoundingBox</Name><USR>c:@M@FritzVision@objc(cs)BoundingBox</USR><Declaration>@objc(BoundingBox) public class BoundingBox : NSObject</Declaration><CommentParts><Abstract><Para>BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 128, "key.doc.name": "BoundingBox", "key.doc.type": "Class", "key.doclength": 333, "key.docoffset": 4565, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 4943}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBox)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBox</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1288, "key.name": "BoundingBox", "key.namelength": 11, "key.nameoffset": 4930, "key.offset": 4924, "key.parsed_declaration": "public class BoundingBox: NSObject", "key.parsed_scope.end": 166, "key.parsed_scope.start": 128, "key.runtime_name": "BoundingBox", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithYMin:xMin:yMax:xMax:) public init(yMin: <Type usr=\"s:Sd\">Double</Type>, xMin: <Type usr=\"s:Sd\">Double</Type>, yMax: <Type usr=\"s:Sd\">Double</Type>, xMax: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5083}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 5043}], "key.bodylength": 105, "key.bodyoffset": 5152, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithYMin:xMin:yMax:xMax:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "init(yMin:xMin:yMax:xMax:)", "key.namelength": 60, "key.nameoffset": 5090, "key.offset": 5090, "key.parsed_declaration": "public init(yMin: Double, xMin: Double, yMax: Double, xMax: Double)", "key.parsed_scope.end": 140, "key.parsed_scope.start": 135, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc\">init(fromAnchor:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Double, Double, Double, Double) -> BoundingBox", "key.typeusr": "$S4yMin01xA04yMax01xB011FritzVision11BoundingBoxCSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fromAnchor anchor: <Type usr=\"s:11FritzVision6AnchorV\">Anchor</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5264}], "key.bodylength": 133, "key.bodyoffset": 5304, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fromAnchor</decl.var.parameter.argument_label> <decl.var.parameter.name>anchor</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision6AnchorV\">Anchor</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 167, "key.name": "init(fromAnchor:)", "key.namelength": 31, "key.nameoffset": 5271, "key.offset": 5271, "key.parsed_declaration": "public init(fromAnchor anchor: Anchor)", "key.parsed_scope.end": 147, "key.parsed_scope.start": 142, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:\">init(yMin:xMin:yMax:xMax:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Anchor) -> BoundingBox", "key.typeusr": "$S10fromAnchor11FritzVision11BoundingBoxCAB0B0V_tcD", "key.usr": "s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5519}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 5488}], "key.bodylength": 191, "key.bodyoffset": 5588, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 254, "key.name": "toCGRect(imgHeight:imgWidth:)", "key.namelength": 45, "key.nameoffset": 5531, "key.offset": 5526, "key.parsed_declaration": "public func toCGRect(imgHeight: Double, imgWidth: Double) -> CGRect", "key.parsed_scope.end": 156, "key.parsed_scope.start": 151, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:\">toCGRect(imgHeight:imgWidth:xOffset:yOffset:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 5601, "key.offset": 5597, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 152, "key.parsed_scope.start": 152, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 5648, "key.offset": 5644, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 153, "key.parsed_scope.start": 153, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double) -> CGRect", "key.typeusr": "$S9imgHeight0A5WidthSo6CGRectVSd_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:xOffset:yOffset:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>, xOffset: <Type usr=\"s:Sd\">Double</Type>, yOffset: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5899}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 5852}], "key.bodylength": 211, "key.bodyoffset": 5998, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:xOffset:yOffset:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 304, "key.name": "toCGRect(imgHeight:imgWidth:xOffset:yOffset:)", "key.namelength": 75, "key.nameoffset": 5911, "key.offset": 5906, "key.parsed_declaration": "public func toCGRect(imgHeight:Double, imgWidth:Double, xOffset:Double, yOffset:Double) -> CGRect", "key.parsed_scope.end": 165, "key.parsed_scope.start": 160, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:\">toCGRect(imgHeight:imgWidth:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 6011, "key.offset": 6007, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 161, "key.parsed_scope.start": 161, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 6058, "key.offset": 6054, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double, Double, Double) -> CGRect", "key.typeusr": "$S9imgHeight0A5Width7xOffset01yD0So6CGRectVSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:"}], "key.typename": "BoundingBox.Type", "key.typeusr": "$S11FritzVision11BoundingBoxCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/Anchors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2832, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2466, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBoxOutline) public class BoundingBoxOutline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 192}], "key.bodylength": 2203, "key.bodyoffset": 261, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 251}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBoxOutline)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBoxOutline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2240, "key.name": "BoundingBoxOutline", "key.namelength": 18, "key.nameoffset": 231, "key.offset": 225, "key.parsed_declaration": "public class BoundingBoxOutline: NSObject", "key.parsed_scope.end": 77, "key.parsed_scope.start": 12, "key.runtime_name": "BoundingBoxOutline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fontSize: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 331}], "key.bodylength": 436, "key.bodyoffset": 370, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fontSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 469, "key.name": "init(fontSize:)", "key.namelength": 30, "key.nameoffset": 338, "key.offset": 338, "key.parsed_declaration": "public init(fontSize: CGFloat = 14.0)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(BoundingBoxOutline.Type) -> (CGFloat) -> BoundingBoxOutline", "key.typeusr": "$S8fontSize11FritzVision18BoundingBoxOutlineC12CoreGraphics7CGFloatV_tcD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC8fontSizeAC12CoreGraphics7CGFloatV_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(parent:) public func addToLayer(_ parent: <Type usr=\"c:objc(cs)CALayer\">CALayer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 926}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 14, "key.offset": 907}], "key.bodylength": 82, "key.bodyoffset": 969, "key.doc.column": 17, "key.doc.comment": "Add shape and text to parent layer\n\n- Parameter parent: parent CALayer", "key.doc.declaration": "@objc(parent:) public func addToLayer(_ parent: CALayer)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"34\" column=\"17\"><Name>addToLayer(_:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:</USR><Declaration>@objc(parent:) public func addToLayer(_ parent: CALayer)</Declaration><CommentParts><Abstract><Para>Add shape and text to parent layer</Para></Abstract><Parameters><Parameter><Name>parent</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>parent CALayer</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "addToLayer(_:)", "key.doc.parameters": [{"discussion": [{"Para": "parent CALayer"}], "name": "parent"}], "key.doc.type": "Function", "key.doclength": 90, "key.docoffset": 813, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(parent:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToLayer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>parent</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CALayer\">CALayer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "addToLayer(_:)", "key.namelength": 29, "key.nameoffset": 938, "key.offset": 933, "key.parsed_declaration": "public func addToLayer(_ parent: CALayer)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(BoundingBoxOutline) -> (CALayer) -> ()", "key.typeusr": "$SyySo7CALayerCcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(frame:label:color:textColor:) public func show(frame: <Type usr=\"c:@S@CGRect\">CGRect</Type>, label: <Type usr=\"s:SS\">String</Type>, color: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type>, textColor: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1338}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1298}], "key.bodylength": 870, "key.bodyoffset": 1431, "key.doc.column": 17, "key.doc.comment": "Show Bounding box.\n\n- Parameters:\n  - frame: CGRect of coordinates to draw box\n  - label: Classified label\n  - color: Color of bounding box outline\n  - textColor: Classified label text", "key.doc.declaration": "@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = default)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"47\" column=\"17\"><Name>show(frame:label:color:textColor:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:</USR><Declaration>@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = default)</Declaration><CommentParts><Abstract><Para>Show Bounding box.</Para></Abstract><Parameters><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CGRect of coordinates to draw box</Para></Discussion></Parameter><Parameter><Name>label</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label</Para></Discussion></Parameter><Parameter><Name>color</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Color of bounding box outline</Para></Discussion></Parameter><Parameter><Name>textColor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label text</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "show(frame:label:color:textColor:)", "key.doc.parameters": [{"discussion": [{"Para": "CGRect of coordinates to draw box"}], "name": "frame"}, {"discussion": [{"Para": "Classified label"}], "name": "label"}, {"discussion": [{"Para": "Color of bounding box outline"}], "name": "color"}, {"discussion": [{"Para": "Classified label text"}], "name": "textColor"}], "key.doc.type": "Function", "key.doclength": 236, "key.docoffset": 1058, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(frame:label:color:textColor:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>show</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>textColor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 957, "key.name": "show(frame:label:color:textColor:)", "key.namelength": 79, "key.nameoffset": 1350, "key.offset": 1345, "key.parsed_declaration": "public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "path", "key.namelength": 4, "key.nameoffset": 1491, "key.offset": 1487, "key.parsed_declaration": "let path = UIBezierPath(rect: frame)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "UIBezierPath", "key.typeusr": "$SSo12UIBezierPathCD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF4pathL_So12UIBezierPathCvp"}, {"key.annotated_decl": "<Declaration>let textRect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 224, "key.name": "textRect", "key.namelength": 8, "key.nameoffset": 1831, "key.offset": 1827, "key.parsed_declaration": "let textRect = label.boundingRect(", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "CGRect", "key.typeusr": "$SSo6CGRectVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4RectL_AJvp"}, {"key.annotated_decl": "<Declaration>let textSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 74, "key.name": "textSize", "key.namelength": 8, "key.nameoffset": 2064, "key.offset": 2060, "key.parsed_declaration": "let textSize = CGSize(width: textRect.width + 12, height: textRect.height)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "CGSize", "key.typeusr": "$SSo6CGSizeVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4SizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let textOrigin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textOrigin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "textOrigin", "key.namelength": 10, "key.nameoffset": 2147, "key.offset": 2143, "key.parsed_declaration": "let textOrigin = CGPoint(x: frame.origin.x - 2, y: frame.origin.y - textSize.height)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "CGPoint", "key.typeusr": "$SSo7CGPointVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J6OriginL_So7CGPointVvp"}], "key.typename": "(BoundingBoxOutline) -> (CGRect, String, UIColor, UIColor) -> ()", "key.typeusr": "$S5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCAHtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public func hide()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2368}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.bodylength": 74, "key.bodyoffset": 2388, "key.doc.column": 17, "key.doc.comment": "Hide bounding box from appearing in view.", "key.doc.declaration": "@objc public func hide()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"73\" column=\"17\"><Name>hide()</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide</USR><Declaration>@objc public func hide()</Declaration><CommentParts><Abstract><Para>Hide bounding box from appearing in view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "hide()", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2308, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hide</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "hide()", "key.namelength": 6, "key.nameoffset": 2380, "key.offset": 2375, "key.parsed_declaration": "public func hide()", "key.parsed_scope.end": 76, "key.parsed_scope.start": 73, "key.typename": "(BoundingBoxOutline) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide"}], "key.typename": "BoundingBoxOutline.Type", "key.typeusr": "$S11FritzVision18BoundingBoxOutlineCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 876, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/ObjectModel/Helpers/SSDPostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7924, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9552, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>public struct HeatmapPoint</Declaration>", "key.bodylength": 303, "key.bodyoffset": 328, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HeatmapPoint</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 328, "key.name": "HeatmapPoint", "key.namelength": 12, "key.nameoffset": 314, "key.offset": 304, "key.substructure": [], "key.typename": "HeatmapPoint.Type", "key.typeusr": "$S11FritzVision12HeatmapPointVmD", "key.usr": "s:11FritzVision12HeatmapPointV"}, {"key.annotated_decl": "<Declaration>@objc(FritzPosePoint) public class Point : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.bodylength": 126, "key.bodyoffset": 651, "key.doc.column": 14, "key.doc.declaration": "@objc(FritzPosePoint) public class Point : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"159\" column=\"14\"><Name>Point</Name><USR>c:@M@FritzVision@objc(cs)FritzPosePoint</USR><Declaration>@objc(FritzPosePoint) public class Point : NSObject</Declaration><CommentParts><Abstract><Para>Predicted point on model input coordinates.</Para></Abstract></CommentParts></Class>", "key.doc.line": 159, "key.doc.name": "Point", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPosePoint)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 144, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 644, "key.offset": 634, "key.substructure": [], "key.typename": "Point.Type", "key.typeusr": "$S11FritzVision5PointCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class DecodePose</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1760}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1736}], "key.bodylength": 7765, "key.bodyoffset": 1785, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DecodePose</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 7784, "key.name": "DecodePose", "key.namelength": 10, "key.nameoffset": 1773, "key.offset": 1767, "key.parsed_declaration": "public class DecodePose", "key.parsed_scope.end": 227, "key.parsed_scope.start": 68, "key.runtime_name": "_TtC4main10DecodePose", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decodeMultiplePoses(maxPoseDetections: <Type usr=\"s:Si\">Int</Type>, partThreshold: <Type usr=\"s:Sd\">Double</Type> = default, nmsRadius: <Type usr=\"s:Si\">Int</Type> = default) -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2571}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2543}], "key.bodylength": 896, "key.bodyoffset": 2688, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decodeMultiplePoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>maxPoseDetections</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>nmsRadius</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1007, "key.name": "decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)", "key.namelength": 93, "key.nameoffset": 2583, "key.offset": 2578, "key.parsed_declaration": "public func decodeMultiplePoses(maxPoseDetections: Int, partThreshold: Double = 0.5, nmsRadius: Int = 20) -> [Pose]", "key.parsed_scope.end": 109, "key.parsed_scope.start": 86, "key.substructure": [{"key.annotated_decl": "<Declaration>var poses: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 22, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 2701, "key.offset": 2697, "key.parsed_declaration": "var poses: [Pose] = []", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "[Pose]", "key.typeusr": "$SSay11FritzVision4PoseCGD", "key.usr": "s:11FritzVision10DecodePoseC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CGSi_SdSitF5posesL_AJvp"}, {"key.annotated_decl": "<Declaration>var queue: <Type usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</Type>&lt;<Type usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</Type>&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>queue</decl.name>: <decl.var.type><ref.struct usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</ref.struct>&lt;<ref.typealias usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</ref.typealias>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "queue", "key.namelength": 5, "key.nameoffset": 2733, "key.offset": 2729, "key.parsed_declaration": "var queue = buildPartWithScoreQueue(partThreshold: partThreshold, localMaxRadius: 1)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.typename": "PriorityQueue<(score: Double, part: Part)>", "key.typeusr": "$S11FritzVision13PriorityQueueVySd5score_AA4PartV4parttGD", "key.usr": "s:11FritzVision10DecodePoseC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CGSi_SdSitF5queueL_AA13PriorityQueueVySd5score_AA4PartV0J0tGvp"}, {"key.annotated_decl": "<Declaration>let squaredNMSRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>squaredNMSRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 44, "key.name": "squaredNMSRadius", "key.namelength": 16, "key.nameoffset": 2826, "key.offset": 2822, "key.parsed_declaration": "let squaredNMSRadius = nmsRadius * nmsRadius", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:11FritzVision10DecodePoseC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CGSi_SdSitF16squaredNMSRadiusL_Sivp"}], "key.typename": "(DecodePose) -> (Int, Double, Int) -> [Pose]", "key.typeusr": "$S17maxPoseDetections13partThreshold9nmsRadiusSay11FritzVision0B0CGSi_SdSitcD", "key.usr": "s:11FritzVision10DecodePoseC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CGSi_SdSitF"}], "key.typename": "DecodePose.Type", "key.typeusr": "$S11FritzVision10DecodePoseCmD", "key.usr": "s:11FritzVision10DecodePoseC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4004, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModelOptions) public class FritzVisionPoseModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 253}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 218}], "key.bodylength": 807, "key.bodyoffset": 324, "key.doc.column": 14, "key.doc.comment": "Options for Pose Model.", "key.doc.declaration": "@objc(FritzVisionPoseModelOptions) public class FritzVisionPoseModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"14\" column=\"14\"><Name>FritzVisionPoseModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions</USR><Declaration>@objc(FritzVisionPoseModelOptions) public class FritzVisionPoseModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for Pose Model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPoseModelOptions", "key.doc.type": "Class", "key.doclength": 28, "key.docoffset": 190, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 295}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 305}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 872, "key.name": "FritzVisionPoseModelOptions", "key.namelength": 27, "key.nameoffset": 266, "key.offset": 260, "key.parsed_declaration": "public class FritzVisionPoseModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 34, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPoseModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 366}], "key.doc.column": 23, "key.doc.comment": "Default Pose model options.", "key.doc.declaration": "public static let defaults: FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"17\" column=\"23\"><Name>defaults</Name><USR>s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ</USR><Declaration>public static let defaults: FritzImageOptions</Declaration><CommentParts><Abstract><Para>Default Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "defaults", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 330, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 70, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 384, "key.offset": 373, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static let defaults: FritzImageOptions = FritzVisionPoseModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 513}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 507}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"20\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 449, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 524, "key.offset": 520, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 775}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 769}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"24\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 590, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 786, "key.offset": 782, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPartThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 898}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 892}], "key.doc.column": 22, "key.doc.comment": "Minimum score a part must have to be included in a pose.", "key.doc.declaration": "@objc public var minPartThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"27\" column=\"22\"><Name>minPartThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold</USR><Declaration>@objc public var minPartThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a part must have to be included in a pose.</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "minPartThreshold", "key.doc.type": "Other", "key.doclength": 61, "key.docoffset": 827, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPartThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPartThreshold", "key.namelength": 16, "key.nameoffset": 909, "key.offset": 905, "key.parsed_declaration": "@objc public var minPartThreshold: Double = 0.50", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPoseThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1018}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1012}], "key.doc.column": 22, "key.doc.comment": "Minimum score a pose must have to be included in results.", "key.doc.declaration": "@objc public var minPoseThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"30\" column=\"22\"><Name>minPoseThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold</USR><Declaration>@objc public var minPoseThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a pose must have to be included in results.</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "minPoseThreshold", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 946, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPoseThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPoseThreshold", "key.namelength": 16, "key.nameoffset": 1029, "key.offset": 1025, "key.parsed_declaration": "@objc public var minPoseThreshold: Double = 0.50", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var nmsRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1100}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1094}], "key.doc.column": 22, "key.doc.comment": "NMS radius for pose", "key.doc.declaration": "@objc public var nmsRadius: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"33\" column=\"22\"><Name>nmsRadius</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius</USR><Declaration>@objc public var nmsRadius: Int</Declaration><CommentParts><Abstract><Para>NMS radius for pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "nmsRadius", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1066, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>nmsRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "nmsRadius", "key.namelength": 9, "key.nameoffset": 1111, "key.offset": 1107, "key.parsed_declaration": "@objc public var nmsRadius: Int = 20", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius"}], "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$S11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1252}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1245}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1217}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1193}], "key.bodylength": 1862, "key.bodyoffset": 1348, "key.doc.column": 20, "key.doc.comment": "A model used to predict the poses of people in images.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"39\" column=\"20\"><Name>FritzVisionPoseModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.line": 39, "key.doc.name": "FritzVisionPoseModel", "key.doc.type": "Class", "key.doclength": 59, "key.docoffset": 1134, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1286}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 1296}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1313}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1332}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLPredictor"}, {"key.name": "DownloadableModel"}, {"key.name": "FritzPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1953, "key.name": "FritzVisionPoseModel", "key.namelength": 20, "key.nameoffset": 1264, "key.offset": 1258, "key.parsed_declaration": "public final class FritzVisionPoseModel: NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor", "key.parsed_scope.end": 83, "key.parsed_scope.start": 39, "key.runtime_name": "FritzVisionPoseModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1354}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 52, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1371, "key.offset": 1361, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionPoseModelOptions", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$S11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "s:11FritzVision0aB9PoseModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</Type>.PredictionResult = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult\">FritzVisionPoseResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1419}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult\">FritzVisionPoseResult</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 50, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1436, "key.offset": 1426, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = FritzVisionPoseResult", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "FritzVisionPoseResult.Type", "key.typeusr": "$S11FritzVision0aB10PoseResultCmD", "key.usr": "s:11FritzVision0aB9PoseModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1488}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1482}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1499, "key.offset": 1495, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}, {"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1595}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1589}], "key.doc.column": 29, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"48\" column=\"29\"><Name>modelConfig</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)modelConfig</USR><Declaration>@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 48, "key.doc.name": "modelConfig", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 1536, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 133, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1613, "key.offset": 1602, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(identifier: \"c0cb92344bba4fa48e4d17673e2280c2\", version: 1)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1747}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1741}], "key.bodylength": 52, "key.bodyoffset": 1798, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1765, "key.offset": 1754, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 52, "key.parsed_scope.start": 50, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1925}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1919}], "key.doc.column": 29, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"55\" column=\"29\"><Name>wifiRequiredForModelDownload</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)wifiRequiredForModelDownload</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 1857, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1943, "key.offset": 1932, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2168}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2161}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2135}], "key.bodylength": 181, "key.bodyoffset": 2204, "key.doc.column": 21, "key.doc.comment": "Initialize model with FritzMLModel\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:) public required init(model: FritzMLModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"63\" column=\"21\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public required init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 63, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 87, "key.docoffset": 2044, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 209, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2177, "key.offset": 2177, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public required init(model: FritzMLModel)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 63, "key.substructure": [], "key.typename": "(FritzVisionPoseModel.Type) -> (FritzMLModel) -> FritzVisionPoseModel", "key.typeusr": "$S5model11FritzVision0bC9PoseModelC0b7ManagedE00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictWithImage:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type> = default, completion: (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult\">FritzVisionPoseResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2977}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 2929}], "key.bodylength": 76, "key.bodyoffset": 3132, "key.doc.column": 17, "key.doc.comment": "Predict poses from a FritzImage.\n\n- Parameters:\n  - fritzImage: The image to use to dectect poses.\n  - options: The options used to configure the pose results.\n  - completion: Handler to call back on the main thread with poses or error.", "key.doc.declaration": "@objc(predictWithImage:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionPoseModelOptions = default, completion: (FritzVisionPoseResult?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"80\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel(im)predictWithImage:options:completion:</USR><Declaration>@objc(predictWithImage:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionPoseModelOptions = default, completion: (FritzVisionPoseResult?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Predict poses from a FritzImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The image to use to dectect poses.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The options used to configure the pose results.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Handler to call back on the main thread with poses or error.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 80, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "The image to use to dectect poses."}], "name": "fritzImage"}, {"discussion": [{"Para": "The options used to configure the pose results."}], "name": "options"}, {"discussion": [{"Para": "Handler to call back on the main thread with poses or error."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 280, "key.docoffset": 2645, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictWithImage:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult\">FritzVisionPoseResult</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 225, "key.name": "predict(_:options:completion:)", "key.namelength": 141, "key.nameoffset": 2989, "key.offset": 2984, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionPoseModelOptions = .init(), completion: (FritzVisionPoseResult?, Error?) -> Void)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 80, "key.substructure": [], "key.typename": "(FritzVisionPoseModel) -> (FritzVisionImage, FritzVisionPoseModelOptions, (FritzVisionPoseResult?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD16PoseModelOptionsCyAC0cdF6ResultCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel(im)predictWithImage:options:completion:"}], "key.typename": "FritzVisionPoseModel.Type", "key.typeusr": "$S11FritzVision0aB9PoseModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3213}], "key.bodylength": 401, "key.bodyoffset": 3269, "key.doc.column": 20, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"39\" column=\"20\"><Name>FritzVisionPoseModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.line": 39, "key.doc.name": "FritzVisionPoseModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 434, "key.name": "FritzVisionPoseModel", "key.namelength": 20, "key.nameoffset": 3247, "key.offset": 3237, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3504}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3460}], "key.bodylength": 63, "key.bodyoffset": 3605, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPoseModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"92\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPoseModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 92, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 3275, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel\">FritzVisionPoseModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 158, "key.name": "fetchModel(completionHandler:)", "key.namelength": 80, "key.nameoffset": 3523, "key.offset": 3511, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPoseModel?, Error?) -> Void)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 92, "key.substructure": [], "key.typename": "(FritzVisionPoseModel.Type) -> (@escaping (FritzVisionPoseModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD9PoseModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPoseModel.Type", "key.typeusr": "$S11FritzVision0aB9PoseModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3698}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3674}], "key.bodylength": 265, "key.bodyoffset": 3737, "key.doc.column": 20, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"39\" column=\"20\"><Name>FritzVisionPoseModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) public final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.line": 39, "key.doc.name": "FritzVisionPoseModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 298, "key.name": "FritzVisionPoseModel", "key.namelength": 20, "key.nameoffset": 3715, "key.offset": 3705, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3786}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3780}], "key.bodylength": 53, "key.bodyoffset": 3823, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"101\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 101, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 3742, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 3797, "key.offset": 3793, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 103, "key.parsed_scope.start": 101, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3923}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3917}], "key.bodylength": 49, "key.bodyoffset": 3951, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift\" line=\"106\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 106, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 3883, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 3934, "key.offset": 3930, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 108, "key.parsed_scope.start": 106, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseModel(py)tags"}], "key.typename": "FritzVisionPoseModel.Type", "key.typeusr": "$S11FritzVision0aB9PoseModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3615, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseResult) public class FritzVisionPoseResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 73}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 44}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 20}], "key.bodylength": 809, "key.bodyoffset": 119, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 109}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 849, "key.name": "FritzVisionPoseResult", "key.namelength": 21, "key.nameoffset": 86, "key.offset": 80, "key.parsed_declaration": "public class FritzVisionPoseResult: NSObject", "key.parsed_scope.end": 30, "key.parsed_scope.start": 6, "key.runtime_name": "FritzVisionPoseResult", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelInputWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 157}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 151}], "key.doc.column": 29, "key.doc.comment": "Model image width", "key.doc.declaration": "@objc public static let modelInputWidth: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"9\" column=\"29\"><Name>modelInputWidth</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseResult(cpy)modelInputWidth</USR><Declaration>@objc public static let modelInputWidth: Int</Declaration><CommentParts><Abstract><Para>Model image width</Para></Abstract></CommentParts></Other>", "key.doc.line": 9, "key.doc.name": "modelInputWidth", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 125, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 32, "key.name": "modelInputWidth", "key.namelength": 15, "key.nameoffset": 175, "key.offset": 164, "key.parsed_declaration": "@objc public static let modelInputWidth = 257", "key.parsed_scope.end": 9, "key.parsed_scope.start": 9, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult(cpy)modelInputWidth"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelInputHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 235}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 229}], "key.doc.column": 29, "key.doc.comment": "Model image height", "key.doc.declaration": "@objc public static let modelInputHeight: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"12\" column=\"29\"><Name>modelInputHeight</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseResult(cpy)modelInputHeight</USR><Declaration>@objc public static let modelInputHeight: Int</Declaration><CommentParts><Abstract><Para>Model image height</Para></Abstract></CommentParts></Other>", "key.doc.line": 12, "key.doc.name": "modelInputHeight", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 202, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 33, "key.name": "modelInputHeight", "key.namelength": 16, "key.nameoffset": 253, "key.offset": 242, "key.parsed_declaration": "@objc public static let modelInputHeight = 353", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult(cpy)modelInputHeight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 339}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 333}], "key.doc.column": 22, "key.doc.comment": "Original input image before it was rescaled", "key.doc.declaration": "@objc public let image: FritzVisionImage", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"15\" column=\"22\"><Name>image</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)image</USR><Declaration>@objc public let image: FritzVisionImage</Declaration><CommentParts><Abstract><Para>Original input image before it was rescaled</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "image", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "image", "key.namelength": 5, "key.nameoffset": 350, "key.offset": 346, "key.parsed_declaration": "@objc public let image: FritzVisionImage", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FritzVisionImage", "key.typeusr": "$S11FritzVision0aB5ImageCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)image"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let poseDecoder: <Type usr=\"s:11FritzVision10DecodePoseC\">DecodePose</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 437}], "key.doc.column": 16, "key.doc.comment": "Contains logic to decode pose from model results.", "key.doc.declaration": "public let poseDecoder: DecodePose", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"18\" column=\"16\"><Name>poseDecoder</Name><USR>s:11FritzVision0aB10PoseResultC11poseDecoderAA06DecodeC0Cvp</USR><Declaration>public let poseDecoder: DecodePose</Declaration><CommentParts><Abstract><Para>Contains logic to decode pose from model results.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "poseDecoder", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 379, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseDecoder</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision10DecodePoseC\">DecodePose</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "poseDecoder", "key.namelength": 11, "key.nameoffset": 448, "key.offset": 444, "key.parsed_declaration": "public let poseDecoder: DecodePose", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "DecodePose", "key.typeusr": "$S11FritzVision10DecodePoseCD", "key.usr": "s:11FritzVision0aB10PoseResultC11poseDecoderAA06DecodeC0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 511}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 505}], "key.doc.column": 22, "key.doc.comment": "Pose model options.", "key.doc.declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"21\" column=\"22\"><Name>options</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)options</USR><Declaration>@objc public let options: FritzVisionPoseModelOptions</Declaration><CommentParts><Abstract><Para>Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "options", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 477, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "options", "key.namelength": 7, "key.nameoffset": 522, "key.offset": 518, "key.parsed_declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$S11FritzVision0aB16PoseModelOptionsCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)options"}], "key.typename": "FritzVisionPoseResult.Type", "key.typeusr": "$S11FritzVision0aB10PoseResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionPoseResult) public class FritzVisionPoseResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 932}], "key.bodylength": 2448, "key.bodyoffset": 1012, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 989}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.extension", "key.length": 2505, "key.name": "FritzVisionPoseResult", "key.namelength": 21, "key.nameoffset": 966, "key.offset": 956, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(decodePose) public func decodePose() -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1107}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 17, "key.offset": 1085}], "key.bodylength": 324, "key.bodyoffset": 1142, "key.doc.column": 17, "key.doc.comment": "Decode single pose result\n\n- Returns: Pose", "key.doc.declaration": "@objc(decodePose) public func decodePose() -> Pose?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"41\" column=\"17\"><Name>decodePose()</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)decodePose</USR><Declaration>@objc(decodePose) public func decodePose() -&gt; Pose?</Declaration><CommentParts><Abstract><Para>Decode single pose result</Para></Abstract><ResultDiscussion><Para>Pose</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 41, "key.doc.name": "decodePose()", "key.doc.result_discussion": [{"Para": "Pose"}], "key.doc.type": "Function", "key.doclength": 62, "key.docoffset": 1019, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(decodePose)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decodePose</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 353, "key.name": "decodePose()", "key.namelength": 12, "key.nameoffset": 1119, "key.offset": 1114, "key.parsed_declaration": "public func decodePose() -> Pose?", "key.parsed_scope.end": 49, "key.parsed_scope.start": 41, "key.substructure": [{"key.annotated_decl": "<Declaration>let poses: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 284, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 1155, "key.offset": 1151, "key.parsed_declaration": "let poses = self.poseDecoder.decodeMultiplePoses(", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "[Pose]", "key.typeusr": "$SSay11FritzVision4PoseCGD", "key.usr": "s:11FritzVision0aB10PoseResultC06decodeC0AA0C0CSgyF5posesL_SayAFGvp"}], "key.typename": "(FritzVisionPoseResult) -> () -> Pose?", "key.typeusr": "$S11FritzVision4PoseCSgycD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)decodePose"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(drawPose) public func drawPose() -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1587}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 15, "key.offset": 1567}], "key.bodylength": 113, "key.bodyoffset": 1623, "key.doc.column": 17, "key.doc.comment": "Draw single pose on input image.\n\n- Returns: UIImage if pose detected.", "key.doc.declaration": "@objc(drawPose) public func drawPose() -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"55\" column=\"17\"><Name>drawPose()</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose</USR><Declaration>@objc(drawPose) public func drawPose() -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Draw single pose on input image.</Para></Abstract><ResultDiscussion><Para>UIImage if pose detected.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "drawPose()", "key.doc.result_discussion": [{"Para": "UIImage if pose detected."}], "key.doc.type": "Function", "key.doclength": 90, "key.docoffset": 1473, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(drawPose)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>drawPose</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 143, "key.name": "drawPose()", "key.namelength": 10, "key.nameoffset": 1599, "key.offset": 1594, "key.parsed_declaration": "public func drawPose() -> UIImage?", "key.parsed_scope.end": 60, "key.parsed_scope.start": 55, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose:\">drawPose(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPoseResult) -> () -> UIImage?", "key.typeusr": "$SSo7UIImageCSgycD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(drawPose:) public func drawPose(_ pose: <Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1925}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 1904}], "key.bodylength": 1485, "key.bodyoffset": 1973, "key.doc.column": 17, "key.doc.comment": "Draw detected poses on input image.\n\n- Parameter pose: List of poses to draw\n- Returns: Original image with poses drawn on image.", "key.doc.declaration": "@objc(drawPose:) public func drawPose(_ pose: Pose) -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift\" line=\"67\" column=\"17\"><Name>drawPose(_:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose:</USR><Declaration>@objc(drawPose:) public func drawPose(_ pose: Pose) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Draw detected poses on input image.</Para></Abstract><Parameters><Parameter><Name>pose</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of poses to draw</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Original image with poses drawn on image.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 67, "key.doc.name": "drawPose(_:)", "key.doc.parameters": [{"discussion": [{"Para": "List of poses to draw"}], "name": "pose"}], "key.doc.result_discussion": [{"Para": "Original image with poses drawn on image."}], "key.doc.type": "Function", "key.doclength": 157, "key.docoffset": 1743, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(drawPose:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>drawPose</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1527, "key.name": "drawPose(_:)", "key.namelength": 22, "key.nameoffset": 1937, "key.offset": 1932, "key.parsed_declaration": "public func drawPose(_ pose: Pose) -> UIImage?", "key.parsed_scope.end": 102, "key.parsed_scope.start": 67, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose\">drawPose()</RelatedName>"}], "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "TODO: Fix up center crop detection.", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2246}, {"key.annotated_decl": "<Declaration>let areaSize: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 89, "key.name": "areaSize", "key.namelength": 8, "key.nameoffset": 2294, "key.offset": 2290, "key.parsed_declaration": "let areaSize = CGRect(x: 0, y: 0, width: originalSize.width, height: originalSize.height)", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "CGRect", "key.typeusr": "$SSo6CGRectVD", "key.usr": "s:11FritzVision0aB10PoseResultC04drawC0ySo7UIImageCSgAA0C0CF8areaSizeL_So6CGRectVvp"}, {"key.annotated_decl": "<Declaration>let scaledPose: <Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaledPose</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "scaledPose", "key.namelength": 10, "key.nameoffset": 2393, "key.offset": 2389, "key.parsed_declaration": "let scaledPose = pose.inRect(areaSize)", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "Pose", "key.typeusr": "$S11FritzVision4PoseCD", "key.usr": "s:11FritzVision0aB10PoseResultC04drawC0ySo7UIImageCSgAA0C0CF06scaledC0L_AIvp"}, {"key.annotated_decl": "<Declaration>var segments: [<Type usr=\"c:@S@CGPoint\">CGPoint</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>segments</decl.name>: <decl.var.type>[<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "segments", "key.namelength": 8, "key.nameoffset": 2606, "key.offset": 2602, "key.parsed_declaration": "var segments: [CGPoint] = []", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "[CGPoint]", "key.typeusr": "$SSaySo7CGPointVGD", "key.usr": "s:11FritzVision0aB10PoseResultC04drawC0ySo7UIImageCSgAA0C0CF8segmentsL_SaySo7CGPointVGvp"}, {"key.annotated_decl": "<Declaration>let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "image", "key.namelength": 5, "key.nameoffset": 3345, "key.offset": 3341, "key.parsed_declaration": "let image = UIGraphicsGetImageFromCurrentImageContext()", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)image\">image</RelatedName>"}], "key.typename": "UIImage?", "key.typeusr": "$SSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB10PoseResultC04drawC0ySo7UIImageCSgAA0C0CF5imageL_AGvp"}], "key.typename": "(FritzVisionPoseResult) -> (Pose) -> UIImage?", "key.typeusr": "$SySo7UIImageCSg11FritzVision4PoseCcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPose:"}], "key.typename": "FritzVisionPoseResult.Type", "key.typeusr": "$S11FritzVision0aB10PoseResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult"}, {"key.annotated_decl": "<Declaration>@objc(FritzPosePoint) public class Point : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.bodylength": 131, "key.bodyoffset": 3481, "key.doc.column": 14, "key.doc.declaration": "@objc(FritzPosePoint) public class Point : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"159\" column=\"14\"><Name>Point</Name><USR>c:@M@FritzVision@objc(cs)FritzPosePoint</USR><Declaration>@objc(FritzPosePoint) public class Point : NSObject</Declaration><CommentParts><Abstract><Para>Predicted point on model input coordinates.</Para></Abstract></CommentParts></Class>", "key.doc.line": 159, "key.doc.name": "Point", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPosePoint)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 149, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 3474, "key.offset": 3464, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var cgPoint: <Type usr=\"c:@S@CGPoint\">CGPoint</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3486}], "key.bodylength": 94, "key.bodyoffset": 3516, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgPoint</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 118, "key.name": "cgPoint", "key.namelength": 7, "key.nameoffset": 3497, "key.offset": 3493, "key.parsed_declaration": "public var cgPoint: CGPoint", "key.parsed_scope.end": 111, "key.parsed_scope.start": 107, "key.typename": "CGPoint", "key.typeusr": "$SSo7CGPointVD", "key.usr": "s:11FritzVision5PointC02cgC0So7CGPointVvp"}], "key.typename": "Point.Type", "key.typeusr": "$S11FritzVision5PointCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11805, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ConnectedPart = (<Type usr=\"c:@M@FritzVision@E@PosePart\">PosePart</Type>, <Type usr=\"c:@M@FritzVision@E@PosePart\">PosePart</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 176}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ConnectedPart</decl.name> = <tuple>(<tuple.element><tuple.element.type><ref.enum usr=\"c:@M@FritzVision@E@PosePart\">PosePart</ref.enum></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.enum usr=\"c:@M@FritzVision@E@PosePart\">PosePart</ref.enum></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 46, "key.name": "ConnectedPart", "key.namelength": 13, "key.nameoffset": 193, "key.offset": 183, "key.parsed_declaration": "public typealias ConnectedPart = (PosePart, PosePart)", "key.parsed_scope.end": 10, "key.parsed_scope.start": 10, "key.typename": "(PosePart, PosePart).Type", "key.typeusr": "$S11FritzVision8PosePartO_ACtmD", "key.usr": "s:11FritzVision13ConnectedParta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum PosePart : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 237}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 231}], "key.bodylength": 4168, "key.bodyoffset": 264, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 259}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>PosePart</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 4189, "key.name": "PosePart", "key.namelength": 8, "key.nameoffset": 249, "key.offset": 244, "key.parsed_declaration": "@objc public enum PosePart: Int", "key.parsed_scope.end": 137, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 270, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case nose</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>nose</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "nose", "key.namelength": 4, "key.nameoffset": 275, "key.offset": 275, "key.parsed_declaration": "case nose", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartNose"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 284, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftEye</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEye", "key.namelength": 7, "key.nameoffset": 289, "key.offset": 289, "key.parsed_declaration": "case leftEye", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 301, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightEye</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEye", "key.namelength": 8, "key.nameoffset": 306, "key.offset": 306, "key.parsed_declaration": "case rightEye", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 319, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftEar</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEar", "key.namelength": 7, "key.nameoffset": 324, "key.offset": 324, "key.parsed_declaration": "case leftEar", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 336, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightEar</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEar", "key.namelength": 8, "key.nameoffset": 341, "key.offset": 341, "key.parsed_declaration": "case rightEar", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 354, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftShoulder</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftShoulder", "key.namelength": 12, "key.nameoffset": 359, "key.offset": 359, "key.parsed_declaration": "case leftShoulder", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 376, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightShoulder</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightShoulder", "key.namelength": 13, "key.nameoffset": 381, "key.offset": 381, "key.parsed_declaration": "case rightShoulder", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 399, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftElbow</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftElbow", "key.namelength": 9, "key.nameoffset": 404, "key.offset": 404, "key.parsed_declaration": "case leftElbow", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 418, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightElbow</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightElbow", "key.namelength": 10, "key.nameoffset": 423, "key.offset": 423, "key.parsed_declaration": "case rightElbow", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 438, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftWrist</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftWrist", "key.namelength": 9, "key.nameoffset": 443, "key.offset": 443, "key.parsed_declaration": "case leftWrist", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 457, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightWrist</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightWrist", "key.namelength": 10, "key.nameoffset": 462, "key.offset": 462, "key.parsed_declaration": "case rightWrist", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 477, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftHip</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftHip", "key.namelength": 7, "key.nameoffset": 482, "key.offset": 482, "key.parsed_declaration": "case leftHip", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 494, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightHip</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightHip", "key.namelength": 8, "key.nameoffset": 499, "key.offset": 499, "key.parsed_declaration": "case rightHip", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 512, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftKnee</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "leftKnee", "key.namelength": 8, "key.nameoffset": 517, "key.offset": 517, "key.parsed_declaration": "case leftKnee", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 530, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightKnee</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "rightKnee", "key.namelength": 9, "key.nameoffset": 535, "key.offset": 535, "key.parsed_declaration": "case rightKnee", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 549, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case leftAnkle</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftAnkle", "key.namelength": 9, "key.nameoffset": 554, "key.offset": 554, "key.parsed_declaration": "case leftAnkle", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartLeftAnkle"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 568, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case rightAnkle</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightAnkle", "key.namelength": 10, "key.nameoffset": 573, "key.offset": 573, "key.parsed_declaration": "case rightAnkle", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "(PosePart.Type) -> PosePart", "key.typeusr": "$Sy11FritzVision8PosePartOACmcD", "key.usr": "c:@M@FritzVision@E@PosePart@PosePartRightAnkle"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toString() -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 589}], "key.bodylength": 776, "key.bodyoffset": 623, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toString</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 804, "key.name": "toString()", "key.namelength": 10, "key.nameoffset": 601, "key.offset": 596, "key.parsed_declaration": "public func toString() -> String", "key.parsed_scope.end": 53, "key.parsed_scope.start": 32, "key.substructure": [], "key.typename": "(PosePart) -> () -> String", "key.typeusr": "$SSSycD", "key.usr": "s:11FritzVision8PosePartO8toStringSSyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let partNames: [<Type usr=\"c:@M@FritzVision@E@PosePart\">PosePart</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1406}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>partNames</decl.name>: <decl.var.type>[<ref.enum usr=\"c:@M@FritzVision@E@PosePart\">PosePart</ref.enum>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 265, "key.name": "partNames", "key.namelength": 9, "key.nameoffset": 1424, "key.offset": 1413, "key.parsed_declaration": "public static let partNames: [PosePart] = [", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "[PosePart]", "key.typeusr": "$SSay11FritzVision8PosePartOGD", "key.usr": "s:11FritzVision8PosePartO9partNamesSayACGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let partIDs: [<Type usr=\"c:@M@FritzVision@E@PosePart\">PosePart</Type> : <Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1684}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>partIDs</decl.name>: <decl.var.type>[<ref.enum usr=\"c:@M@FritzVision@E@PosePart\">PosePart</ref.enum> : <ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 208, "key.name": "partIDs", "key.namelength": 7, "key.nameoffset": 1702, "key.offset": 1691, "key.parsed_declaration": "public static let partIDs: [PosePart: Int] =", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "[PosePart : Int]", "key.typeusr": "$SSDy11FritzVision8PosePartOSiGD", "key.usr": "s:11FritzVision8PosePartO7partIDsSDyACSiGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let connectedPartNames: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1905}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>connectedPartNames</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 429, "key.name": "connectedPartNames", "key.namelength": 18, "key.nameoffset": 1923, "key.offset": 1912, "key.parsed_declaration": "public static let connectedPartNames: [ConnectedPart] = [", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "[(PosePart, PosePart)]", "key.typeusr": "$SSay11FritzVision8PosePartO_ACtGD", "key.usr": "s:11FritzVision8PosePartO09connectedD5NamesSayAC_ACtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let poseChain: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2347}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseChain</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 513, "key.name": "poseChain", "key.namelength": 9, "key.nameoffset": 2365, "key.offset": 2354, "key.parsed_declaration": "public static let poseChain: [ConnectedPart] = [", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.typename": "[(PosePart, PosePart)]", "key.typeusr": "$SSay11FritzVision8PosePartO_ACtGD", "key.usr": "s:11FritzVision8PosePartO9poseChainSayAC_ACtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let connectedPartIndices: [(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2873}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>connectedPartIndices</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "connectedPartIndices", "key.namelength": 20, "key.nameoffset": 2891, "key.offset": 2880, "key.parsed_declaration": "public static let connectedPartIndices = connectedPartNames.map { (jointA, jointB) in", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "[(Int, Int)]", "key.typeusr": "$SSaySi_SitGD", "key.usr": "s:11FritzVision8PosePartO09connectedD7IndicesSaySi_SitGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let parentChildTuples: [(<Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:Si\">Int</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3739}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parentChildTuples</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 117, "key.name": "parentChildTuples", "key.namelength": 17, "key.nameoffset": 3757, "key.offset": 3746, "key.parsed_declaration": "public static let parentChildTuples = poseChain.map { (jointA, jointB) in", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "[(Int, Int)]", "key.typeusr": "$SSaySi_SitGD", "key.usr": "s:11FritzVision8PosePartO17parentChildTuplesSaySi_SitGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let parentToChildEdges: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3869}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>parentToChildEdges</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 89, "key.name": "parentToChildEdges", "key.namelength": 18, "key.nameoffset": 3887, "key.offset": 3876, "key.parsed_declaration": "public static let parentToChildEdges = parentChildTuples.map { (_, part1) in", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:11FritzVision8PosePartO18parentToChildEdgesSaySiGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let childToParentEdges: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3971}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>childToParentEdges</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 89, "key.name": "childToParentEdges", "key.namelength": 18, "key.nameoffset": 3989, "key.offset": 3978, "key.parsed_declaration": "public static let childToParentEdges = parentChildTuples.map { (part0, _) in", "key.parsed_scope.end": 127, "key.parsed_scope.start": 127, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:11FritzVision8PosePartO18childToParentEdgesSaySiGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getConnectedKeypoints(keypoints: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</Type>], minConfidence: <Type usr=\"s:Sd\">Double</Type>) -&gt; [(left: <Type usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</Type>, right: <Type usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4074}], "key.bodylength": 229, "key.bodyoffset": 4201, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getConnectedKeypoints</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minConfidence</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.argument_label>left</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</ref.class></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>right</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</ref.class></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 350, "key.name": "getConnectedKeypoints(keypoints:minConfidence:)", "key.namelength": 67, "key.nameoffset": 4093, "key.offset": 4081, "key.parsed_declaration": "public static func getConnectedKeypoints(keypoints: [Keypoint], minConfidence: Double) -> [(left: Keypoint, right: Keypoint)]", "key.parsed_scope.end": 136, "key.parsed_scope.start": 132, "key.substructure": [], "key.typename": "(PosePart.Type) -> ([Keypoint], Double) -> [(left: Keypoint, right: Keypoint)]", "key.typeusr": "$S9keypoints13minConfidenceSay11FritzVision8KeypointC4left_AE5righttGSayAEG_SdtcD", "key.usr": "s:11FritzVision8PosePartO21getConnectedKeypoints9keypoints13minConfidenceSayAA8KeypointC4left_AH5righttGSayAHG_SdtFZ"}], "key.typename": "PosePart.Type", "key.typeusr": "$S11FritzVision8PosePartOmD", "key.usr": "c:@M@FritzVision@E@PosePart"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct HeatmapPoint</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4435}], "key.bodylength": 31, "key.bodyoffset": 4463, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HeatmapPoint</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 53, "key.name": "HeatmapPoint", "key.namelength": 12, "key.nameoffset": 4449, "key.offset": 4442, "key.parsed_declaration": "public struct HeatmapPoint", "key.parsed_scope.end": 142, "key.parsed_scope.start": 139, "key.substructure": [], "key.typename": "HeatmapPoint.Type", "key.typeusr": "$S11FritzVision12HeatmapPointVmD", "key.usr": "s:11FritzVision12HeatmapPointV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzPosePoint) public class Point : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4779}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 4757}], "key.bodylength": 324, "key.bodyoffset": 4809, "key.doc.column": 14, "key.doc.comment": "Predicted point on model input coordinates.", "key.doc.declaration": "@objc(FritzPosePoint) public class Point : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"159\" column=\"14\"><Name>Point</Name><USR>c:@M@FritzVision@objc(cs)FritzPosePoint</USR><Declaration>@objc(FritzPosePoint) public class Point : NSObject</Declaration><CommentParts><Abstract><Para>Predicted point on model input coordinates.</Para></Abstract></CommentParts></Class>", "key.doc.line": 159, "key.doc.name": "Point", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 4709, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 4799}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPosePoint)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 348, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 4792, "key.offset": 4786, "key.parsed_declaration": "public class Point: NSObject", "key.parsed_scope.end": 173, "key.parsed_scope.start": 159, "key.runtime_name": "FritzPosePoint", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let x: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4820}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4814}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 13, "key.name": "x", "key.namelength": 1, "key.nameoffset": 4831, "key.offset": 4827, "key.parsed_declaration": "@objc public let x: Double", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint(py)x"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let y: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4851}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4845}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 13, "key.name": "y", "key.namelength": 1, "key.nameoffset": 4862, "key.offset": 4858, "key.parsed_declaration": "@objc public let y: Double", "key.parsed_scope.end": 161, "key.parsed_scope.start": 161, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint(py)y"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4962}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4955}], "key.bodylength": 135, "key.bodyoffset": 4996, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 161, "key.name": "description", "key.namelength": 11, "key.nameoffset": 4975, "key.offset": 4971, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 172, "key.parsed_scope.start": 168, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint(py)description"}, {"key.annotated_decl": "<Declaration>let x: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "x", "key.namelength": 1, "key.nameoffset": 5009, "key.offset": 5005, "key.parsed_declaration": "let x = String(format: \"%.1f\", self.x)", "key.parsed_scope.end": 169, "key.parsed_scope.start": 169, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzPosePoint(py)x\">x</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:11FritzVision5PointC11descriptionSSvg1xL_SSvp"}, {"key.annotated_decl": "<Declaration>let y: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "y", "key.namelength": 1, "key.nameoffset": 5056, "key.offset": 5052, "key.parsed_declaration": "let y = String(format: \"%.1f\", self.y)", "key.parsed_scope.end": 170, "key.parsed_scope.start": 170, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzPosePoint(py)y\">y</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:11FritzVision5PointC11descriptionSSvg1yL_SSvp"}], "key.typename": "Point.Type", "key.typeusr": "$S11FritzVision5PointCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzPoseKeypoint) public class Keypoint : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5234}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 5209}], "key.bodylength": 533, "key.bodyoffset": 5267, "key.doc.column": 14, "key.doc.comment": "Predicted keypoint containing part, score, and position identified.", "key.doc.declaration": "@objc(FritzPoseKeypoint) public class Keypoint : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"178\" column=\"14\"><Name>Keypoint</Name><USR>c:@M@FritzVision@objc(cs)FritzPoseKeypoint</USR><Declaration>@objc(FritzPoseKeypoint) public class Keypoint : NSObject</Declaration><CommentParts><Abstract><Para>Predicted keypoint containing part, score, and position identified.</Para></Abstract></CommentParts></Class>", "key.doc.line": 178, "key.doc.name": "Keypoint", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 5137, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5257}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPoseKeypoint)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Keypoint</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 560, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 5247, "key.offset": 5241, "key.parsed_declaration": "public class Keypoint: NSObject", "key.parsed_scope.end": 196, "key.parsed_scope.start": 178, "key.runtime_name": "FritzPoseKeypoint", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let id: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5278}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5272}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 11, "key.name": "id", "key.namelength": 2, "key.nameoffset": 5289, "key.offset": 5285, "key.parsed_declaration": "@objc public let id: Int", "key.parsed_scope.end": 179, "key.parsed_scope.start": 179, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint(py)id"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let position: <Type usr=\"c:@M@FritzVision@objc(cs)FritzPosePoint\">Point</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5307}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5301}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPosePoint\">Point</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "position", "key.namelength": 8, "key.nameoffset": 5318, "key.offset": 5314, "key.parsed_declaration": "@objc public let position: Point", "key.parsed_scope.end": 180, "key.parsed_scope.start": 180, "key.typename": "Point", "key.typeusr": "$S11FritzVision5PointCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint(py)position"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5344}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5338}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 5355, "key.offset": 5351, "key.parsed_declaration": "@objc public let score: Double", "key.parsed_scope.end": 181, "key.parsed_scope.start": 181, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint(py)score"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let part: <Type usr=\"c:@M@FritzVision@E@PosePart\">PosePart</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5379}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5373}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>part</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@PosePart\">PosePart</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "part", "key.namelength": 4, "key.nameoffset": 5390, "key.offset": 5386, "key.parsed_declaration": "@objc public let part: PosePart", "key.parsed_scope.end": 182, "key.parsed_scope.start": 182, "key.typename": "PosePart", "key.typeusr": "$S11FritzVision8PosePartOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint(py)part"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 5598}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5591}], "key.bodylength": 165, "key.bodyoffset": 5632, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 191, "key.name": "description", "key.namelength": 11, "key.nameoffset": 5611, "key.offset": 5607, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 194, "key.parsed_scope.start": 191, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint(py)description"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 5645, "key.offset": 5641, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 192, "key.parsed_scope.start": 192, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:11FritzVision8KeypointC11descriptionSSvg14formattedScoreL_SSvp"}], "key.typename": "Keypoint.Type", "key.typeusr": "$S11FritzVision8KeypointCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPoseKeypoint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzPose) public class Pose : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5903}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 5886}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5862}], "key.bodylength": 1306, "key.bodyoffset": 5932, "key.doc.column": 14, "key.doc.comment": "Detected pose with Keypoints and corresponding score.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzPose) public class Pose : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"202\" column=\"14\"><Name>Pose</Name><USR>c:@M@FritzVision@objc(cs)FritzPose</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzPose) public class Pose : NSObject</Declaration><CommentParts><Abstract><Para>Detected pose with Keypoints and corresponding score.</Para></Abstract></CommentParts></Class>", "key.doc.line": 202, "key.doc.name": "Pose", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 5804, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5922}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPose)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1329, "key.name": "Pose", "key.namelength": 4, "key.nameoffset": 5916, "key.offset": 5910, "key.parsed_declaration": "public class Pose: NSObject", "key.parsed_scope.end": 235, "key.parsed_scope.start": 202, "key.runtime_name": "FritzPose", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let keypoints: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5944}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5938}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 5955, "key.offset": 5951, "key.parsed_declaration": "@objc public let keypoints: [Keypoint]", "key.parsed_scope.end": 204, "key.parsed_scope.start": 204, "key.typename": "[Keypoint]", "key.typeusr": "$SSay11FritzVision8KeypointCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPose(py)keypoints"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5987}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5981}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 5998, "key.offset": 5994, "key.parsed_declaration": "@objc public let score: Double", "key.parsed_scope.end": 205, "key.parsed_scope.start": 205, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPose(py)score"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(inRect:) public func inRect(_ rect: <Type usr=\"c:@S@CGRect\">CGRect</Type>) -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6347}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 14, "key.offset": 6328}], "key.bodylength": 844, "key.bodyoffset": 6391, "key.doc.column": 17, "key.doc.comment": "Create new Pose with keypoint positions scaled to be inside of rect.\n\n- Parameter rect: Rect coordinates\n- Returns: New Pose with position inset in provided rect", "key.doc.declaration": "@objc(inRect:) public func inRect(_ rect: CGRect) -> Pose", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"217\" column=\"17\"><Name>inRect(_:)</Name><USR>c:@M@FritzVision@objc(cs)FritzPose(im)inRect:</USR><Declaration>@objc(inRect:) public func inRect(_ rect: CGRect) -&gt; Pose</Declaration><CommentParts><Abstract><Para>Create new Pose with keypoint positions scaled to be inside of rect.</Para></Abstract><Parameters><Parameter><Name>rect</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Rect coordinates</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>New Pose with position inset in provided rect</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 217, "key.doc.name": "inRect(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Rect coordinates"}], "name": "rect"}], "key.doc.result_discussion": [{"Para": "New Pose with position inset in provided rect"}], "key.doc.type": "Function", "key.doclength": 189, "key.docoffset": 6135, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(inRect:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>inRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rect</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 882, "key.name": "inRect(_:)", "key.namelength": 22, "key.nameoffset": 6359, "key.offset": 6354, "key.parsed_declaration": "public func inRect(_ rect: CGRect) -> Pose", "key.parsed_scope.end": 233, "key.parsed_scope.start": 217, "key.substructure": [{"key.annotated_decl": "<Declaration>var keypoints: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPoseKeypoint\">Keypoint</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 6404, "key.offset": 6400, "key.parsed_declaration": "var keypoints: [Keypoint] = []", "key.parsed_scope.end": 218, "key.parsed_scope.start": 218, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzPose(py)keypoints\">keypoints</RelatedName>"}], "key.typename": "[Keypoint]", "key.typeusr": "$SSay11FritzVision8KeypointCGD", "key.usr": "s:11FritzVision4PoseC6inRectyACSo6CGRectVF9keypointsL_SayAA8KeypointCGvp"}, {"key.annotated_decl": "<Declaration>let originalWidth: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>originalWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "originalWidth", "key.namelength": 13, "key.nameoffset": 6443, "key.offset": 6439, "key.parsed_declaration": "let originalWidth = Double(FritzVisionPoseResult.modelInputWidth)", "key.parsed_scope.end": 219, "key.parsed_scope.start": 219, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision4PoseC6inRectyACSo6CGRectVF13originalWidthL_Sdvp"}, {"key.annotated_decl": "<Declaration>let originalHeight: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>originalHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "originalHeight", "key.namelength": 14, "key.nameoffset": 6517, "key.offset": 6513, "key.parsed_declaration": "let originalHeight = Double(FritzVisionPoseResult.modelInputHeight)", "key.parsed_scope.end": 220, "key.parsed_scope.start": 220, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision4PoseC6inRectyACSo6CGRectVF14originalHeightL_Sdvp"}], "key.typename": "(Pose) -> (CGRect) -> Pose", "key.typeusr": "$Sy11FritzVision4PoseCSo6CGRectVcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPose(im)inRect:"}], "key.typename": "Pose.Type", "key.typeusr": "$S11FritzVision4PoseCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPose"}, {"key.annotated_decl": "<Declaration>public struct HeatmapPoint</Declaration>", "key.bodylength": 165, "key.bodyoffset": 7266, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HeatmapPoint</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 190, "key.name": "HeatmapPoint", "key.namelength": 12, "key.nameoffset": 7252, "key.offset": 7242, "key.substructure": [], "key.typename": "HeatmapPoint.Type", "key.typeusr": "$S11FritzVision12HeatmapPointVmD", "key.usr": "s:11FritzVision12HeatmapPointV"}, {"key.annotated_decl": "<Declaration>@objc(FritzPosePoint) public class Point : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.bodylength": 163, "key.bodyoffset": 7451, "key.doc.column": 14, "key.doc.declaration": "@objc(FritzPosePoint) public class Point : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"159\" column=\"14\"><Name>Point</Name><USR>c:@M@FritzVision@objc(cs)FritzPosePoint</USR><Declaration>@objc(FritzPosePoint) public class Point : NSObject</Declaration><CommentParts><Abstract><Para>Predicted point on model input coordinates.</Para></Abstract></CommentParts></Class>", "key.doc.line": 159, "key.doc.name": "Point", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPosePoint)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 181, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 7444, "key.offset": 7434, "key.substructure": [], "key.typename": "Point.Type", "key.typeusr": "$S11FritzVision5PointCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzPosePoint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Displacements</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7878}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 7854}], "key.bodylength": 866, "key.bodyoffset": 7906, "key.doc.column": 14, "key.doc.comment": "`[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\nnumber of edges (parent-child pairs) in the tree. It contains the forward\ndisplacements between consecutive part from the root towards the leaves.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Displacements", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift\" line=\"260\" column=\"14\"><Name>Displacements</Name><USR>s:11FritzVision13DisplacementsC</USR><Declaration>@available(iOS 11.0, *)\npublic class Displacements</Declaration><CommentParts><Abstract><Para><codeVoice>[height, width, 2 * num_edges]</codeVoice>, where <codeVoice>num_edges = num_parts - 1</codeVoice> is the number of edges (parent-child pairs) in the tree. It contains the forward displacements between consecutive part from the root towards the leaves.</Para></Abstract></CommentParts></Class>", "key.doc.line": 260, "key.doc.name": "Displacements", "key.doc.type": "Class", "key.doclength": 237, "key.docoffset": 7617, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Displacements</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 888, "key.name": "Displacements", "key.namelength": 13, "key.nameoffset": 7891, "key.offset": 7885, "key.parsed_declaration": "public class Displacements", "key.parsed_scope.end": 294, "key.parsed_scope.start": 260, "key.runtime_name": "_TtC4main13Displacements", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8164}], "key.bodylength": 63, "key.bodyoffset": 8205, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 98, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 8171, "key.offset": 8171, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 276, "key.parsed_scope.start": 274, "key.substructure": [], "key.typename": "(Displacements.Type) -> (MLMultiArray?) -> Displacements", "key.typeusr": "$S3for11FritzVision13DisplacementsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13DisplacementsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, edgeID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8275}], "key.bodylength": 218, "key.bodyoffset": 8357, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>edgeID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>offset</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 294, "key.name": "subscript(_:_:_:)", "key.namelength": 63, "key.nameoffset": 8282, "key.offset": 8282, "key.parsed_declaration": "public subscript(point: HeatmapPoint, edgeID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 285, "key.parsed_scope.start": 278, "key.substructure": [], "key.typename": "(HeatmapPoint, Int, OffsetType) -> Double", "key.typeusr": "$SySd11FritzVision12HeatmapPointV_SiAA10OffsetTypeOtcD", "key.usr": "s:11FritzVision13DisplacementsCySdAA12HeatmapPointV_SiAA10OffsetTypeOtcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8582}], "key.bodylength": 159, "key.bodyoffset": 8611, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 182, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 8594, "key.offset": 8589, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 293, "key.parsed_scope.start": 287, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 8624, "key.offset": 8620, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 288, "key.parsed_scope.start": 288, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Displacements) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF"}], "key.typename": "Displacements.Type", "key.typeusr": "$S11FritzVision13DisplacementsCmD", "key.usr": "s:11FritzVision13DisplacementsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class HeatmapScores</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8992}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 8968}], "key.bodylength": 755, "key.bodyoffset": 9020, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>HeatmapScores</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 777, "key.name": "HeatmapScores", "key.namelength": 13, "key.nameoffset": 9005, "key.offset": 8999, "key.parsed_declaration": "public class HeatmapScores", "key.parsed_scope.end": 335, "key.parsed_scope.start": 302, "key.runtime_name": "_TtC4main13HeatmapScores", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9245}], "key.bodylength": 56, "key.bodyoffset": 9286, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 9252, "key.offset": 9252, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 318, "key.parsed_scope.start": 316, "key.substructure": [], "key.typename": "(HeatmapScores.Type) -> (MLMultiArray?) -> HeatmapScores", "key.typeusr": "$S3for11FritzVision13HeatmapScoresCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13HeatmapScoresC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, partID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9349}], "key.bodylength": 60, "key.bodyoffset": 9411, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>partID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 116, "key.name": "subscript(_:_:)", "key.namelength": 43, "key.nameoffset": 9356, "key.offset": 9356, "key.parsed_declaration": "public subscript(point: HeatmapPoint, partID: Int) -> Double", "key.parsed_scope.end": 322, "key.parsed_scope.start": 320, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint, Int) -> Double", "key.typeusr": "$SySd11FritzVision12HeatmapPointV_SitcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, keypointID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9478}], "key.bodylength": 53, "key.bodyoffset": 9539, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>keypointID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 108, "key.name": "subscript(_:_:_:)", "key.namelength": 42, "key.nameoffset": 9485, "key.offset": 9485, "key.parsed_declaration": "public subscript(y: Int, x: Int, keypointID: Int) -> Double", "key.parsed_scope.end": 326, "key.parsed_scope.start": 324, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int, Int) -> Double", "key.typeusr": "$SySdSi_S2itcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9599}], "key.bodylength": 145, "key.bodyoffset": 9628, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 9611, "key.offset": 9606, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 334, "key.parsed_scope.start": 328, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 9641, "key.offset": 9637, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 329, "key.parsed_scope.start": 329, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF5totalL_Sdvp"}], "key.typename": "(HeatmapScores) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF"}], "key.typename": "HeatmapScores.Type", "key.typeusr": "$S11FritzVision13HeatmapScoresCmD", "key.usr": "s:11FritzVision13HeatmapScoresC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum OffsetType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9778}], "key.bodylength": 23, "key.bodyoffset": 9802, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>OffsetType</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 41, "key.name": "OffsetType", "key.namelength": 10, "key.nameoffset": 9790, "key.offset": 9785, "key.parsed_declaration": "public enum OffsetType", "key.parsed_scope.end": 340, "key.parsed_scope.start": 337, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9807, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case x</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>x</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "x", "key.namelength": 1, "key.nameoffset": 9812, "key.offset": 9812, "key.parsed_declaration": "case x", "key.parsed_scope.end": 338, "key.parsed_scope.start": 338, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$Sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1xyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9818, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case y</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>y</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "y", "key.namelength": 1, "key.nameoffset": 9823, "key.offset": 9823, "key.parsed_declaration": "case y", "key.parsed_scope.end": 339, "key.parsed_scope.start": 339, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$Sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1yyA2CmF"}]}], "key.typename": "OffsetType.Type", "key.typeusr": "$S11FritzVision10OffsetTypeOmD", "key.usr": "s:11FritzVision10OffsetTypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Offsets</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10089}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 10065}], "key.bodylength": 742, "key.bodyoffset": 10111, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Offsets</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 758, "key.name": "Offsets", "key.namelength": 7, "key.nameoffset": 10102, "key.offset": 10096, "key.parsed_declaration": "public class Offsets", "key.parsed_scope.end": 383, "key.parsed_scope.start": 349, "key.runtime_name": "_TtC4main7Offsets", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10343}], "key.bodylength": 57, "key.bodyoffset": 10384, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 10350, "key.offset": 10350, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 367, "key.parsed_scope.start": 365, "key.substructure": [], "key.typename": "(Offsets.Type) -> (MLMultiArray?) -> Offsets", "key.typeusr": "$S3for11FritzVision7OffsetsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision7OffsetsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func get(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, partID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10448}], "key.bodylength": 144, "key.bodyoffset": 10524, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>get</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partID</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 214, "key.name": "get(y:x:partID:offset:)", "key.namelength": 52, "key.nameoffset": 10460, "key.offset": 10455, "key.parsed_declaration": "public func get(y: Int, x: Int, partID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 374, "key.parsed_scope.start": 369, "key.substructure": [], "key.typename": "(Offsets) -> (Int, Int, Int, OffsetType) -> Double", "key.typeusr": "$S1y1x6partID6offsetSdSi_S2i11FritzVision10OffsetTypeOtcD", "key.usr": "s:11FritzVision7OffsetsC3get1y1x6partID6offsetSdSi_S2iAA10OffsetTypeOtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10675}], "key.bodylength": 147, "key.bodyoffset": 10704, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 170, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 10687, "key.offset": 10682, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 382, "key.parsed_scope.start": 376, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 10717, "key.offset": 10713, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 377, "key.parsed_scope.start": 377, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Offsets) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF"}], "key.typename": "Offsets.Type", "key.typeusr": "$S11FritzVision7OffsetsCmD", "key.usr": "s:11FritzVision7OffsetsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Segments</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11122}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 11098}], "key.bodylength": 658, "key.bodyoffset": 11145, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Segments</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 675, "key.name": "Segments", "key.namelength": 8, "key.nameoffset": 11135, "key.offset": 11129, "key.parsed_declaration": "public class Segments", "key.parsed_scope.end": 423, "key.parsed_scope.start": 393, "key.runtime_name": "_TtC4main8Segments", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11312}], "key.bodylength": 57, "key.bodyoffset": 11353, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 11319, "key.offset": 11319, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 406, "key.parsed_scope.start": 404, "key.substructure": [], "key.typename": "(Segments.Type) -> (MLMultiArray?) -> Segments", "key.typeusr": "$S3for11FritzVision8SegmentsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision8SegmentsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11417}], "key.bodylength": 56, "key.bodyoffset": 11466, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 99, "key.name": "subscript(_:)", "key.namelength": 30, "key.nameoffset": 11424, "key.offset": 11424, "key.parsed_declaration": "public subscript(point: HeatmapPoint) -> Double", "key.parsed_scope.end": 410, "key.parsed_scope.start": 408, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdSi_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint) -> Double", "key.typeusr": "$SySd11FritzVision12HeatmapPointVcD", "key.usr": "s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11529}], "key.bodylength": 45, "key.bodyoffset": 11573, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 83, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 11536, "key.offset": 11536, "key.parsed_declaration": "public subscript(y: Int, x: Int) -> Double", "key.parsed_scope.end": 414, "key.parsed_scope.start": 412, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip\">subscript(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int) -> Double", "key.typeusr": "$SySdSi_SitcD", "key.usr": "s:11FritzVision8SegmentsCySdSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 11625}], "key.bodylength": 147, "key.bodyoffset": 11654, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 170, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 11637, "key.offset": 11632, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 422, "key.parsed_scope.start": 416, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PoseTypes.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 11667, "key.offset": 11663, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 417, "key.parsed_scope.start": 417, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Segments) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF"}], "key.typename": "Segments.Type", "key.typeusr": "$S11FritzVision8SegmentsCmD", "key.usr": "s:11FritzVision8SegmentsC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9168, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Heap&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 689}], "key.bodylength": 6460, "key.bodyoffset": 712, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Heap</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 6477, "key.name": "Heap", "key.namelength": 4, "key.nameoffset": 703, "key.offset": 696, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 218, "key.parsed_scope.start": 20, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 708, "key.offset": 708, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:11FritzVision4HeapV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1264}], "key.bodylength": 39, "key.bodyoffset": 1309, "key.doc.column": 12, "key.doc.comment": "Creates an empty heap.\nThe sort function determines whether this is a min-heap or max-heap.\nFor comparable data types, > makes a max-heap, < makes a min-heap.", "key.doc.declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"38\" column=\"12\"><Name>init(sort:)</Name><USR>s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc</USR><Declaration>public init(sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates an empty heap. The sort function determines whether this is a min-heap or max-heap. For comparable data types, &gt; makes a max-heap, &lt; makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 38, "key.doc.name": "init(sort:)", "key.doc.type": "Function", "key.doclength": 191, "key.docoffset": 1068, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 78, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 1271, "key.offset": 1271, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc\">init(array:sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> (@escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$S4sort11FritzVision4HeapVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(array: [<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>], sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1626}], "key.bodylength": 74, "key.bodyoffset": 1683, "key.doc.column": 12, "key.doc.comment": "Creates a heap from an array. The order of the array does not matter;\nthe elements are inserted into the heap in the order determined by the\nsort function. For comparable data types, '>' makes a max-heap,\n'<' makes a min-heap.", "key.doc.declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"48\" column=\"12\"><Name>init(array:sort:)</Name><USR>s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc</USR><Declaration>public init(array: [T], sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates a heap from an array. The order of the array does not matter; the elements are inserted into the heap in the order determined by the sort function. For comparable data types, \u2018&gt;\u2019 makes a max-heap, \u2018&lt;\u2019 makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 48, "key.doc.name": "init(array:sort:)", "key.doc.type": "Function", "key.doclength": 266, "key.docoffset": 1355, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>array</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 125, "key.name": "init(array:sort:)", "key.namelength": 48, "key.nameoffset": 1633, "key.offset": 1633, "key.parsed_declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc\">init(sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> ([T], @escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$S5array4sort11FritzVision4HeapVyxGSayxG_Sbx_xtctcD", "key.usr": "s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2106}], "key.bodylength": 34, "key.bodyoffset": 2132, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 54, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 2117, "key.offset": 2113, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 66, "key.parsed_scope.start": 64, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:11FritzVision4HeapV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2173}], "key.bodylength": 32, "key.bodyoffset": 2196, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 49, "key.name": "count", "key.namelength": 5, "key.nameoffset": 2184, "key.offset": 2180, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 70, "key.parsed_scope.start": 68, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:11FritzVision4HeapV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3224}], "key.bodylength": 32, "key.bodyoffset": 3250, "key.doc.column": 17, "key.doc.comment": "Returns the maximum value in the heap (for a max-heap) or the minimum\nvalue (for a min-heap).", "key.doc.declaration": "public func peek() -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"102\" column=\"17\"><Name>peek()</Name><USR>s:11FritzVision4HeapV4peekxSgyF</USR><Declaration>public func peek() -&gt; T?</Declaration><CommentParts><Abstract><Para>Returns the maximum value in the heap (for a max-heap) or the minimum value (for a min-heap).</Para></Abstract></CommentParts></Function>", "key.doc.line": 102, "key.doc.name": "peek()", "key.doc.type": "Function", "key.doclength": 119, "key.docoffset": 3100, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 52, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 3236, "key.offset": 3231, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 104, "key.parsed_scope.start": 102, "key.typename": "<T> (Heap<T>) -> () -> T?", "key.typeusr": "$SxSgycD", "key.usr": "s:11FritzVision4HeapV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert(_ value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3457}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3450}], "key.bodylength": 66, "key.bodyoffset": 3491, "key.doc.column": 26, "key.doc.comment": "Adds a new value to the heap. This reorders the heap so that the max-heap\nor min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert(_ value: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"110\" column=\"26\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyxF</USR><Declaration>public mutating func insert(_ value: T)</Declaration><CommentParts><Abstract><Para>Adds a new value to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 110, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 156, "key.docoffset": 3289, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "insert(_:)", "key.namelength": 18, "key.nameoffset": 3471, "key.offset": 3466, "key.parsed_declaration": "public mutating func insert(_ value: T)", "key.parsed_scope.end": 113, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF\">insert&lt;S&gt;(_: S) where T == S.Element, S : Sequence</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (T) -> ()", "key.typeusr": "$SyyxcD", "key.usr": "s:11FritzVision4HeapV6insertyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert&lt;S&gt;(_ sequence: <Type usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</Type>) where T == S.Element, S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3741}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3734}], "key.bodylength": 73, "key.bodyoffset": 3821, "key.doc.column": 26, "key.doc.comment": "Adds a sequence of values to the heap. This reorders the heap so that\nthe max-heap or min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert<S>(_ sequence: S) where T == S.Element, S : Sequence", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"119\" column=\"26\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF</USR><Declaration>public mutating func insert&lt;S&gt;(_ sequence: S) where T == S.Element, S : Sequence</Declaration><CommentParts><Abstract><Para>Adds a sequence of values to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 119, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 165, "key.docoffset": 3564, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T == S.Element</decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 145, "key.name": "insert(_:)", "key.namelength": 34, "key.nameoffset": 3755, "key.offset": 3750, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 123, "key.parsed_scope.start": 119, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyxF\">insert(_: T)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3765}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Sequence"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 11, "key.name": "S", "key.namelength": 1, "key.nameoffset": 3762, "key.offset": 3762, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "S.Type", "key.typeusr": "$Sqd__mD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp"}], "key.typename": "<T, S where T == S.Element, S : Sequence> (inout Heap<T>) -> (S) -> ()", "key.typeusr": "$Syyqd__c7ElementQyd__RszSTRd__luD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func replace(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4049}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4042}], "key.bodylength": 96, "key.bodyoffset": 4096, "key.doc.column": 26, "key.doc.comment": "Allows you to change an element. This reorders the heap so that\nthe max-heap or min-heap property still holds.", "key.doc.declaration": "public mutating func replace(index i: Int, value: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"129\" column=\"26\"><Name>replace(index:value:)</Name><USR>s:11FritzVision4HeapV7replace5index5valueySi_xtF</USR><Declaration>public mutating func replace(index i: Int, value: T)</Declaration><CommentParts><Abstract><Para>Allows you to change an element. This reorders the heap so that the max-heap or min-heap property still holds.</Para></Abstract></CommentParts></Function>", "key.doc.line": 129, "key.doc.name": "replace(index:value:)", "key.doc.type": "Function", "key.doclength": 136, "key.docoffset": 3901, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>replace</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 135, "key.name": "replace(index:value:)", "key.namelength": 31, "key.nameoffset": 4063, "key.offset": 4058, "key.parsed_declaration": "public mutating func replace(index i: Int, value: T)", "key.parsed_scope.end": 134, "key.parsed_scope.start": 129, "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (Int, T) -> ()", "key.typeusr": "$S5index5valueySi_xtcD", "key.usr": "s:11FritzVision4HeapV7replace5index5valueySi_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4398}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4391}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4372}], "key.bodylength": 425, "key.bodyoffset": 4428, "key.doc.column": 45, "key.doc.comment": "Removes the root node from the heap. For a max-heap, this is the maximum\nvalue; for a min-heap it is the minimum value. Performance: O(log n).", "key.doc.declaration": "public mutating func remove() -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"140\" column=\"45\"><Name>remove()</Name><USR>s:11FritzVision4HeapV6removexSgyF</USR><Declaration>public mutating func remove() -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes the root node from the heap. For a max-heap, this is the maximum value; for a min-heap it is the minimum value. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 140, "key.doc.name": "remove()", "key.doc.type": "Function", "key.doclength": 168, "key.docoffset": 4199, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 447, "key.name": "remove()", "key.namelength": 8, "key.nameoffset": 4412, "key.offset": 4407, "key.parsed_declaration": "@discardableResult public mutating func remove() -> T?", "key.parsed_scope.end": 153, "key.parsed_scope.start": 140, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6remove2atxSgSi_tF\">remove(at:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> () -> T?", "key.typeusr": "$SxSgycD", "key.usr": "s:11FritzVision4HeapV6removexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove(at index: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 5025}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5018}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4999}], "key.bodylength": 279, "key.bodyoffset": 5068, "key.doc.column": 45, "key.doc.comment": "Removes an arbitrary node from the heap. Performance: O(log n).\nNote that you need to know the node's index.", "key.doc.declaration": "public mutating func remove(at index: Int) -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"159\" column=\"45\"><Name>remove(at:)</Name><USR>s:11FritzVision4HeapV6remove2atxSgSi_tF</USR><Declaration>public mutating func remove(at index: Int) -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes an arbitrary node from the heap. Performance: O(log n). Note that you need to know the node\u2019s index.</Para></Abstract></CommentParts></Function>", "key.doc.line": 159, "key.doc.name": "remove(at:)", "key.doc.type": "Function", "key.doclength": 134, "key.docoffset": 4860, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at</decl.var.parameter.argument_label> <decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 314, "key.name": "remove(at:)", "key.namelength": 21, "key.nameoffset": 5039, "key.offset": 5034, "key.parsed_declaration": "@discardableResult public mutating func remove(at index: Int) -> T?", "key.parsed_scope.end": 169, "key.parsed_scope.start": 159, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6removexSgyF\">remove()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 26, "key.name": "size", "key.namelength": 4, "key.nameoffset": 5136, "key.offset": 5132, "key.parsed_declaration": "let size = nodes.count - 1", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF4sizeL_Sivp"}], "key.typename": "<T> (inout Heap<T>) -> (Int) -> T?", "key.typeusr": "$S2atxSgSi_tcD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF"}], "key.typename": "Heap<T>.Type", "key.typeusr": "$S11FritzVision4HeapVyxGmD", "key.usr": "s:11FritzVision4HeapV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Searching", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 7178}, {"key.annotated_decl": "<Declaration>public struct Heap&lt;T&gt;</Declaration>", "key.bodylength": 442, "key.bodyoffset": 7231, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Heap</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 478, "key.name": "Heap", "key.namelength": 4, "key.nameoffset": 7206, "key.offset": 7196, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func index(of node: <Type usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Si\">Int</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7304}], "key.bodylength": 55, "key.bodyoffset": 7343, "key.doc.column": 17, "key.doc.comment": "Get the index of a node in the heap. Performance: O(n).", "key.doc.declaration": "public func index(of node: T) -> Int?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"224\" column=\"17\"><Name>index(of:)</Name><USR>s:11FritzVision4HeapVAASQRzlE5index2ofSiSgx_tF</USR><Declaration>public func index(of node: T) -&gt; Int?</Declaration><CommentParts><Abstract><Para>Get the index of a node in the heap. Performance: O(n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 224, "key.doc.name": "index(of:)", "key.doc.type": "Function", "key.doclength": 62, "key.docoffset": 7237, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>index</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>node</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "index(of:)", "key.namelength": 17, "key.nameoffset": 7316, "key.offset": 7311, "key.parsed_declaration": "public func index(of node: T) -> Int?", "key.parsed_scope.end": 226, "key.parsed_scope.start": 224, "key.substructure": [], "key.typename": "<T where T : Equatable> (Heap<T>) -> (T) -> Int?", "key.typeusr": "$S2ofSiSgx_tcD", "key.usr": "s:11FritzVision4HeapVAASQRzlE5index2ofSiSgx_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove(node: <Type usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</Type>) -&gt; <Type usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 7521}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7514}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 7495}], "key.bodylength": 112, "key.bodyoffset": 7558, "key.doc.column": 45, "key.doc.comment": "Removes the first occurrence of a node from the heap. Performance: O(n log n).", "key.doc.declaration": "public mutating func remove(node: T) -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift\" line=\"229\" column=\"45\"><Name>remove(node:)</Name><USR>s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF</USR><Declaration>public mutating func remove(node: T) -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes the first occurrence of a node from the heap. Performance: O(n log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 229, "key.doc.name": "remove(node:)", "key.doc.type": "Function", "key.doclength": 85, "key.docoffset": 7405, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>node</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapVAASQRzlE1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 141, "key.name": "remove(node:)", "key.namelength": 15, "key.nameoffset": 7535, "key.offset": 7530, "key.parsed_declaration": "@discardableResult public mutating func remove(node: T) -> T?", "key.parsed_scope.end": 234, "key.parsed_scope.start": 229, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6removexSgyF\">remove()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6remove2atxSgSi_tF\">remove(at:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : Equatable> (inout Heap<T>) -> (T) -> T?", "key.typeusr": "$S4nodexSgx_tcD", "key.usr": "s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF"}], "key.typename": "Heap<T>.Type", "key.typeusr": "$S11FritzVision4HeapVyxGmD", "key.usr": "s:11FritzVision4HeapV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct PriorityQueue&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8071}], "key.bodylength": 923, "key.bodyoffset": 8103, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>PriorityQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 949, "key.name": "PriorityQueue", "key.namelength": 13, "key.nameoffset": 8085, "key.offset": 8078, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 287, "key.parsed_scope.start": 248, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 8099, "key.offset": 8099, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 248, "key.parsed_scope.start": 248, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:11FritzVision13PriorityQueueV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8259}], "key.bodylength": 37, "key.bodyoffset": 8304, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 76, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 8266, "key.offset": 8266, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 257, "key.parsed_scope.start": 255, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>.Type) -> (@escaping (T, T) -> Bool) -> PriorityQueue<T>", "key.typeusr": "$S4sort11FritzVision13PriorityQueueVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision13PriorityQueueV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8348}], "key.bodylength": 33, "key.bodyoffset": 8374, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 53, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 8359, "key.offset": 8355, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 261, "key.parsed_scope.start": 259, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:11FritzVision13PriorityQueueV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8414}], "key.bodylength": 31, "key.bodyoffset": 8437, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 48, "key.name": "count", "key.namelength": 5, "key.nameoffset": 8425, "key.offset": 8421, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 265, "key.parsed_scope.start": 263, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:11FritzVision13PriorityQueueV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8475}], "key.bodylength": 32, "key.bodyoffset": 8501, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 52, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 8487, "key.offset": 8482, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 269, "key.parsed_scope.start": 267, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>) -> () -> T?", "key.typeusr": "$SxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func enqueue(_ element: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8547}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8540}], "key.bodylength": 34, "key.bodyoffset": 8584, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>enqueue</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>element</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "enqueue(_:)", "key.namelength": 21, "key.nameoffset": 8561, "key.offset": 8556, "key.parsed_declaration": "public mutating func enqueue(_ element: T)", "key.parsed_scope.end": 273, "key.parsed_scope.start": 271, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (T) -> ()", "key.typeusr": "$SyyxcD", "key.usr": "s:11FritzVision13PriorityQueueV7enqueueyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func dequeue() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8632}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8625}], "key.bodylength": 34, "key.bodyoffset": 8663, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>dequeue</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 57, "key.name": "dequeue()", "key.namelength": 9, "key.nameoffset": 8646, "key.offset": 8641, "key.parsed_declaration": "public mutating func dequeue() -> T?", "key.parsed_scope.end": 277, "key.parsed_scope.start": 275, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> () -> T?", "key.typeusr": "$SxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV7dequeuexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func changePriority(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8913}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8906}], "key.bodylength": 57, "key.bodyoffset": 8967, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>changePriority</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 103, "key.name": "changePriority(index:value:)", "key.namelength": 38, "key.nameoffset": 8927, "key.offset": 8922, "key.parsed_declaration": "public mutating func changePriority(index i: Int, value: T)", "key.parsed_scope.end": 286, "key.parsed_scope.start": 284, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (Int, T) -> ()", "key.typeusr": "$S5index5valueySi_xtcD", "key.usr": "s:11FritzVision13PriorityQueueV06changeC05index5valueySi_xtF"}], "key.typename": "PriorityQueue<T>.Type", "key.typeusr": "$S11FritzVision13PriorityQueueVyxGmD", "key.usr": "s:11FritzVision13PriorityQueueV"}, {"key.annotated_decl": "<Declaration>public struct PriorityQueue&lt;T&gt;</Declaration>", "key.bodylength": 93, "key.bodyoffset": 9073, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>PriorityQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 138, "key.name": "PriorityQueue", "key.namelength": 13, "key.nameoffset": 9039, "key.offset": 9029, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func index(of element: <Type usr=\"s:11FritzVision13PriorityQueueVAASQRzlE1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Si\">Int</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9078}], "key.bodylength": 44, "key.bodyoffset": 9120, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/PoseModel/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>index</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>element</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueVAASQRzlE1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 80, "key.name": "index(of:)", "key.namelength": 20, "key.nameoffset": 9090, "key.offset": 9085, "key.parsed_declaration": "public func index(of element: T) -> Int?", "key.parsed_scope.end": 292, "key.parsed_scope.start": 290, "key.substructure": [], "key.typename": "<T where T : Equatable> (PriorityQueue<T>) -> (T) -> Int?", "key.typeusr": "$S2ofSiSgx_tcD", "key.usr": "s:11FritzVision13PriorityQueueVAASQRzlE5index2ofSiSgx_tF"}], "key.typename": "PriorityQueue<T>.Type", "key.typeusr": "$S11FritzVision13PriorityQueueVyxGmD", "key.usr": "s:11FritzVision13PriorityQueueV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3381, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomClass) public class FritzVisionLivingRoomClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 268}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 234}], "key.bodylength": 1847, "key.bodyoffset": 319, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 309}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1892, "key.name": "FritzVisionLivingRoomClass", "key.namelength": 26, "key.nameoffset": 281, "key.offset": 275, "key.parsed_declaration": "public class FritzVisionLivingRoomClass: NSObject", "key.parsed_scope.end": 38, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionLivingRoomClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 330}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 324}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 348, "key.offset": 337, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let chair: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 434}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 428}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>chair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 94, "key.name": "chair", "key.namelength": 5, "key.nameoffset": 452, "key.offset": 441, "key.parsed_declaration": "@objc public static let chair = ModelSegmentationClass(label: \"Chair\", index: 1, color: (0, 128, 128, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)chair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let wall: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 546}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 540}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wall</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "wall", "key.namelength": 4, "key.nameoffset": 564, "key.offset": 553, "key.parsed_declaration": "@objc public static let wall = ModelSegmentationClass(label: \"Wall\", index: 2, color: (0, 0, 128, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)wall"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let coffeeTable: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 654}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 648}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>coffeeTable</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "coffeeTable", "key.namelength": 11, "key.nameoffset": 672, "key.offset": 661, "key.parsed_declaration": "@objc public static let coffeeTable = ModelSegmentationClass(label: \"Coffee Table\", index: 3, color: (230, 25, 75, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)coffeeTable"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ceiling: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 779}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 773}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ceiling</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "ceiling", "key.namelength": 7, "key.nameoffset": 797, "key.offset": 786, "key.parsed_declaration": "@objc public static let ceiling = ModelSegmentationClass(label: \"Ceiling\", index: 4, color: (255, 215, 180, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)ceiling"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let floor: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 897}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 891}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>floor</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "floor", "key.namelength": 5, "key.nameoffset": 915, "key.offset": 904, "key.parsed_declaration": "@objc public static let floor = ModelSegmentationClass(label: \"Floor\", index: 5, color: (245, 130, 48, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)floor"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bed: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1010}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1004}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bed</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "bed", "key.namelength": 3, "key.nameoffset": 1028, "key.offset": 1017, "key.parsed_declaration": "@objc public static let bed = ModelSegmentationClass(label: \"Bed\", index: 6, color: (255, 255, 25, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)bed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let lamp: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1119}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1113}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lamp</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "lamp", "key.namelength": 4, "key.nameoffset": 1137, "key.offset": 1126, "key.parsed_declaration": "@objc public static let lamp = ModelSegmentationClass(label: \"Lamp\", index: 7, color: (210, 245, 60, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)lamp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sofa: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1230}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1224}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sofa</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "sofa", "key.namelength": 4, "key.nameoffset": 1248, "key.offset": 1237, "key.parsed_declaration": "@objc public static let sofa = ModelSegmentationClass(label: \"Sofa, couch, lounge\", index: 8, color: (70, 240, 240, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)sofa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let windowpane: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1356}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1350}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>windowpane</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 104, "key.name": "windowpane", "key.namelength": 10, "key.nameoffset": 1374, "key.offset": 1363, "key.parsed_declaration": "@objc public static let windowpane = ModelSegmentationClass(label: \"Windowpane\", index: 9, color: (0, 130, 200, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)windowpane"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pillow: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1478}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1472}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pillow</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "pillow", "key.namelength": 6, "key.nameoffset": 1496, "key.offset": 1485, "key.parsed_declaration": "@objc public static let pillow = ModelSegmentationClass(label: \"Pillow\", index: 10, color: (145, 30, 180, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)pillow"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1595}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1589}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 563, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 1613, "key.offset": 1602, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)allClasses"}], "key.typename": "FritzVisionLivingRoomClass.Type", "key.typeusr": "$S11FritzVision0aB15LivingRoomClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2314}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2307}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 2261}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2237}], "key.bodylength": 964, "key.bodyoffset": 2415, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common living room objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift\" line=\"44\" column=\"20\"><Name>FritzVisionLivingRoomSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) public final class FritzVisionLivingRoomSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "FritzVisionLivingRoomSegmentationModel", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 2170, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 2366}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 2396}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1060, "key.name": "FritzVisionLivingRoomSegmentationModel", "key.namelength": 38, "key.nameoffset": 2326, "key.offset": 2320, "key.parsed_declaration": "public final class FritzVisionLivingRoomSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 67, "key.parsed_scope.start": 44, "key.runtime_name": "FritzVisionLivingRoomSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2427}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2421}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 2445, "key.offset": 2434, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"409c9c87ae6b47eb9f861ee0c6f85753\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2575}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2569}], "key.bodylength": 52, "key.bodyoffset": 2626, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2593, "key.offset": 2582, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 50, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2718}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2711}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2685}], "key.bodylength": 105, "key.bodyoffset": 2757, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 133, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2730, "key.offset": 2730, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 55, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionLivingRoomSegmentationModel", "key.typeusr": "$S5model11FritzVision0bC27LivingRoomSegmentationModelC0b7ManagedG00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2875}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2869}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 2893, "key.offset": 2882, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel\">FritzVisionLivingRoomSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3194}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3150}], "key.bodylength": 63, "key.bodyoffset": 3313, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift\" line=\"63\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 63, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 2965, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/LivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel\">FritzVisionLivingRoomSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 176, "key.name": "fetchModel(completionHandler:)", "key.namelength": 98, "key.nameoffset": 3213, "key.offset": 3201, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> (@escaping (FritzVisionLivingRoomSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD27LivingRoomSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLivingRoomSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB27LivingRoomSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4858, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorClass) public class FritzVisionOutdoorClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 229}], "key.bodylength": 3354, "key.bodyoffset": 308, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 298}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3396, "key.name": "FritzVisionOutdoorClass", "key.namelength": 23, "key.nameoffset": 273, "key.offset": 267, "key.parsed_declaration": "public class FritzVisionOutdoorClass: NSObject", "key.parsed_scope.end": 59, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionOutdoorClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 319}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 313}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 337, "key.offset": 326, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let building: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 423}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 417}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>building</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "building", "key.namelength": 8, "key.nameoffset": 441, "key.offset": 430, "key.parsed_declaration": "@objc public static let building = ModelSegmentationClass(label: \"Building\", index: 1, color: (60, 180, 75, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)building"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 535}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 559, "key.offset": 548, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(label: \"Sky\", index: 2, color: (255, 225, 25, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let tree: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 650}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 644}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tree</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "tree", "key.namelength": 4, "key.nameoffset": 668, "key.offset": 657, "key.parsed_declaration": "@objc public static let tree = ModelSegmentationClass(label: \"Tree\", index: 3, color: (0, 130, 200, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)tree"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sidewalk: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 754}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sidewalk</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 101, "key.name": "sidewalk", "key.namelength": 8, "key.nameoffset": 778, "key.offset": 767, "key.parsed_declaration": "@objc public static let sidewalk = ModelSegmentationClass(label: \"Sidewalk\", index: 4, color: (245, 130, 48, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sidewalk"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ground: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 879}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 873}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ground</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "ground", "key.namelength": 6, "key.nameoffset": 897, "key.offset": 886, "key.parsed_declaration": "@objc public static let ground = ModelSegmentationClass(label: \"Ground\", index: 5, color: (145, 30, 180, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)ground"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let car: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 994}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 988}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>car</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "car", "key.namelength": 3, "key.nameoffset": 1012, "key.offset": 1001, "key.parsed_declaration": "@objc public static let car = ModelSegmentationClass(label: \"Car\", index: 6, color: (70, 240, 240, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)car"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let water: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1103}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1097}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>water</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "water", "key.namelength": 5, "key.nameoffset": 1121, "key.offset": 1110, "key.parsed_declaration": "@objc public static let water = ModelSegmentationClass(label: \"Water\", index: 7, color: (240, 50, 230, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)water"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let house: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1216}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1210}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>house</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "house", "key.namelength": 5, "key.nameoffset": 1234, "key.offset": 1223, "key.parsed_declaration": "@objc public static let house = ModelSegmentationClass(label: \"House\", index: 8, color: (210, 245, 60, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)house"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let fence: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1329}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1323}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fence</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 96, "key.name": "fence", "key.namelength": 5, "key.nameoffset": 1347, "key.offset": 1336, "key.parsed_declaration": "@objc public static let fence = ModelSegmentationClass(label: \"Fence\", index: 9, color: (250, 190, 190, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)fence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sign: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1443}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1437}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sign</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "sign", "key.namelength": 4, "key.nameoffset": 1461, "key.offset": 1450, "key.parsed_declaration": "@objc public static let sign = ModelSegmentationClass(label: \"Sign\", index: 10, color: (0, 128, 128, 255))", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sign"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let skyscraper: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1554}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1548}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>skyscraper</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "skyscraper", "key.namelength": 10, "key.nameoffset": 1572, "key.offset": 1561, "key.parsed_declaration": "@objc public static let skyscraper = ModelSegmentationClass(label: \"Skyscraper\", index: 11, color: (230, 190, 255, 255))", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)skyscraper"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bridge: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1679}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1673}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bridge</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "bridge", "key.namelength": 6, "key.nameoffset": 1697, "key.offset": 1686, "key.parsed_declaration": "@objc public static let bridge = ModelSegmentationClass(label: \"Bridge\", index: 12, color: (170, 110, 40, 255))", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bridge"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let river: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1795}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1789}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>river</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "river", "key.namelength": 5, "key.nameoffset": 1813, "key.offset": 1802, "key.parsed_declaration": "@objc public static let river = ModelSegmentationClass(label: \"River\", index: 13, color: (255, 250, 200, 255))", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)river"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bus: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1910}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1904}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 89, "key.name": "bus", "key.namelength": 3, "key.nameoffset": 1928, "key.offset": 1917, "key.parsed_declaration": "@objc public static let bus = ModelSegmentationClass(label: \"Bus\", index: 14, color: (128, 0, 0, 255))", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let truck: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2017}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2011}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>truck</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "truck", "key.namelength": 5, "key.nameoffset": 2035, "key.offset": 2024, "key.parsed_declaration": "@objc public static let truck = ModelSegmentationClass(label: \"Truck\", index: 15, color: (170, 255, 195, 255))", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)truck"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let van: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2132}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2126}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>van</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "van", "key.namelength": 3, "key.nameoffset": 2150, "key.offset": 2139, "key.parsed_declaration": "@objc public static let van = ModelSegmentationClass(label: \"Van\", index: 16, color: (128, 128, 0, 255))", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)van"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let motorbike: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2241}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2235}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>motorbike</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 105, "key.name": "motorbike", "key.namelength": 9, "key.nameoffset": 2259, "key.offset": 2248, "key.parsed_declaration": "@objc public static let motorbike = ModelSegmentationClass(label: \"Motorbike\", index: 17, color: (255, 215, 180, 255))", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)motorbike"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bicycle: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2364}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicycle</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "bicycle", "key.namelength": 7, "key.nameoffset": 2382, "key.offset": 2371, "key.parsed_declaration": "@objc public static let bicycle = ModelSegmentationClass(label: \"Bicycle\", index: 18, color: (0, 0, 128, 255))", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bicycle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let trafficLight: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2479}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2473}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trafficLight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 112, "key.name": "trafficLight", "key.namelength": 12, "key.nameoffset": 2497, "key.offset": 2486, "key.parsed_declaration": "@objc public static let trafficLight = ModelSegmentationClass(label: \"Traffic light\", index: 19, color: (128, 128, 128, 255))", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)trafficLight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2609}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2603}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 99, "key.name": "person", "key.namelength": 6, "key.nameoffset": 2627, "key.offset": 2616, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 20, color: (255, 255, 255, 255))", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2727}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2721}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 927, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 2745, "key.offset": 2734, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)allClasses"}], "key.typename": "FritzVisionOutdoorClass.Type", "key.typeusr": "$S11FritzVision0aB12OutdoorClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 3803}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3796}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 3753}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3729}], "key.bodylength": 955, "key.bodyoffset": 3901, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift\" line=\"65\" column=\"20\"><Name>FritzVisionOutdoorSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) public final class FritzVisionOutdoorSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 65, "key.doc.name": "FritzVisionOutdoorSegmentationModel", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 3666, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 3852}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 3882}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1048, "key.name": "FritzVisionOutdoorSegmentationModel", "key.namelength": 35, "key.nameoffset": 3815, "key.offset": 3809, "key.parsed_declaration": "public final class FritzVisionOutdoorSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 88, "key.parsed_scope.start": 65, "key.runtime_name": "FritzVisionOutdoorSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3913}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3907}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 3931, "key.offset": 3920, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"409c9c87ae6b47eb9f861ee0c6f85753\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4061}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4055}], "key.bodylength": 52, "key.bodyoffset": 4112, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 4079, "key.offset": 4068, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 71, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4204}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4197}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 4171}], "key.bodylength": 99, "key.bodyoffset": 4243, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4216, "key.offset": 4216, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 76, "key.parsed_scope.start": 74, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionOutdoorSegmentationModel", "key.typeusr": "$S5model11FritzVision0bC24OutdoorSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4355}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4349}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 4373, "key.offset": 4362, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel\">FritzVisionOutdoorSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4674}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 4630}], "key.bodylength": 63, "key.bodyoffset": 4790, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift\" line=\"84\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 84, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 4445, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/OutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel\">FritzVisionOutdoorSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 173, "key.name": "fetchModel(completionHandler:)", "key.namelength": 95, "key.nameoffset": 4693, "key.offset": 4681, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 86, "key.parsed_scope.start": 84, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (@escaping (FritzVisionOutdoorSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD24OutdoorSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionOutdoorSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB24OutdoorSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1970, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationMediumClass) public class FritzVisionPeopleSegmentationMediumClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 294}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 246}], "key.bodylength": 402, "key.bodyoffset": 359, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 349}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationMediumClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationMediumClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 461, "key.name": "FritzVisionPeopleSegmentationMediumClass", "key.namelength": 40, "key.nameoffset": 307, "key.offset": 301, "key.parsed_declaration": "public class FritzVisionPeopleSegmentationMediumClass: NSObject", "key.parsed_scope.end": 20, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionPeopleSegmentationMediumClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 370}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 364}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 388, "key.offset": 377, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 474}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 468}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "person", "key.namelength": 6, "key.nameoffset": 492, "key.offset": 481, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 585}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 579}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 168, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 603, "key.offset": 592, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleSegmentationMediumClass.Type", "key.typeusr": "$S11FritzVision0aB29PeopleSegmentationMediumClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 890}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 883}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 835}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 811}], "key.bodylength": 975, "key.bodyoffset": 993, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift\" line=\"25\" column=\"20\"><Name>FritzVisionPeopleSegmentationMediumModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) public final class FritzVisionPeopleSegmentationMediumModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 25, "key.doc.name": "FritzVisionPeopleSegmentationMediumModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 764, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 944}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 974}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationMediumModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationMediumModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1073, "key.name": "FritzVisionPeopleSegmentationMediumModel", "key.namelength": 40, "key.nameoffset": 902, "key.offset": 896, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationMediumModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 47, "key.parsed_scope.start": 25, "key.runtime_name": "FritzVisionPeopleSegmentationMediumModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1005}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 999}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1023, "key.offset": 1012, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"d470196ca5a04457ae0644a50fc654b7\", version: 2, cpuAndGPUOnly: true)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1153}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1147}], "key.bodylength": 52, "key.bodyoffset": 1204, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1171, "key.offset": 1160, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1269}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1263}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1287, "key.offset": 1276, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1392}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1385}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1359}], "key.bodylength": 115, "key.bodyoffset": 1431, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 143, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1404, "key.offset": 1404, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> (FritzMLModel) -> FritzVisionPeopleSegmentationMediumModel", "key.typeusr": "$S5model11FritzVision0bC29PeopleSegmentationMediumModelC0b7ManagedG00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel\">FritzVisionPeopleSegmentationMediumModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1782}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1738}], "key.bodylength": 63, "key.bodyoffset": 1903, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift\" line=\"44\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 44, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 1553, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel\">FritzVisionPeopleSegmentationMediumModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 178, "key.name": "fetchModel(completionHandler:)", "key.namelength": 100, "key.nameoffset": 1801, "key.offset": 1789, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> Void)", "key.parsed_scope.end": 46, "key.parsed_scope.start": 44, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> (@escaping (FritzVisionPeopleSegmentationMediumModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD29PeopleSegmentationMediumModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationMediumModel.Type", "key.typeusr": "$S11FritzVision0aB29PeopleSegmentationMediumModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1907, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 320}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 290}], "key.bodylength": 366, "key.bodyoffset": 367, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionPeopleSegmentationModel", "key.doc.declaration": "@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift\" line=\"13\" column=\"14\"><Name>FritzVisionPeopleClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleClass</USR><Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionPeopleSegmentationModel</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionPeopleClass", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 234, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 357}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 407, "key.name": "FritzVisionPeopleClass", "key.namelength": 22, "key.nameoffset": 333, "key.offset": 327, "key.parsed_declaration": "public class FritzVisionPeopleClass: NSObject", "key.parsed_scope.end": 21, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPeopleClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 378}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 372}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 396, "key.offset": 385, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 482}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 476}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "person", "key.namelength": 6, "key.nameoffset": 500, "key.offset": 489, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 593}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 587}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 132, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 611, "key.offset": 600, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleClass.Type", "key.typeusr": "$S11FritzVision0aB11PeopleClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 857}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 850}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 808}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 784}], "key.bodylength": 951, "key.bodyoffset": 954, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : FritzVisionSegmentationModel, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift\" line=\"27\" column=\"20\"><Name>FritzVisionPeopleSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) public final class FritzVisionPeopleSegmentationModel : FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 27, "key.doc.name": "FritzVisionPeopleSegmentationModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 737, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 905}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 935}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1043, "key.name": "FritzVisionPeopleSegmentationModel", "key.namelength": 34, "key.nameoffset": 869, "key.offset": 863, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationModel: FritzVisionSegmentationModel, DownloadableModel", "key.parsed_scope.end": 49, "key.parsed_scope.start": 27, "key.runtime_name": "FritzVisionPeopleSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 966}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 960}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 129, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 984, "key.offset": 973, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(identifier: \"438a0e2c1c1c4a449b1a708dbb309e06\", version: 1, cpuAndGPUOnly: true)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "FritzModelConfiguration", "key.typeusr": "$S17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1114}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1108}], "key.bodylength": 52, "key.bodyoffset": 1165, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1132, "key.offset": 1121, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1230}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1224}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1248, "key.offset": 1237, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1353}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1346}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1320}], "key.bodylength": 97, "key.bodyoffset": 1392, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 125, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1365, "key.offset": 1365, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> (FritzMLModel) -> FritzVisionPeopleSegmentationModel", "key.typeusr": "$S5model11FritzVision0bC23PeopleSegmentationModelC0b7ManagedF00B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel\">FritzVisionPeopleSegmentationModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1725}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1681}], "key.bodylength": 63, "key.bodyoffset": 1840, "key.doc.column": 24, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift\" line=\"46\" column=\"24\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 181, "key.docoffset": 1496, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/PeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel\">FritzVisionPeopleSegmentationModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 172, "key.name": "fetchModel(completionHandler:)", "key.namelength": 94, "key.nameoffset": 1744, "key.offset": 1732, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModel?, Error?) -> Void)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> (@escaping (FritzVisionPeopleSegmentationModel?, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy11FritzVision0cD23PeopleSegmentationModelCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB23PeopleSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4453, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModelOptions) public class FritzVisionSegmentationModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 288}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 245}], "key.bodylength": 470, "key.bodyoffset": 367, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 338}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 348}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 543, "key.name": "FritzVisionSegmentationModelOptions", "key.namelength": 35, "key.nameoffset": 301, "key.offset": 295, "key.parsed_declaration": "public class FritzVisionSegmentationModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 26, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionSegmentationModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 373}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 391, "key.offset": 380, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionSegmentationModelOptions()", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB24SegmentationModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 528}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 522}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"21\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 464, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 539, "key.offset": 535, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 790}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 784}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"25\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 605, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 801, "key.offset": 797, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction"}], "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$S11FritzVision0aB24SegmentationModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelSegmentationClass) public class ModelSegmentationClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 870}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 840}], "key.bodylength": 345, "key.bodyoffset": 917, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 907}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelSegmentationClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelSegmentationClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 386, "key.name": "ModelSegmentationClass", "key.namelength": 22, "key.nameoffset": 883, "key.offset": 877, "key.parsed_declaration": "public class ModelSegmentationClass: NSObject", "key.parsed_scope.end": 44, "key.parsed_scope.start": 29, "key.runtime_name": "ModelSegmentationClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 971}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 965}], "key.doc.column": 22, "key.doc.comment": "Index in output array from model.", "key.doc.declaration": "@objc public let index: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"32\" column=\"22\"><Name>index</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index</USR><Declaration>@objc public let index: Int</Declaration><CommentParts><Abstract><Para>Index in output array from model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "index", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 923, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 982, "key.offset": 978, "key.parsed_declaration": "@objc public let index: Int", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1053}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1047}], "key.doc.column": 22, "key.doc.comment": "Label name for Model Segmentation Class.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"35\" column=\"22\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Label name for Model Segmentation Class.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 998, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 1064, "key.offset": 1060, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1083}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 1094, "key.offset": 1090, "key.parsed_declaration": "public let color: rgbaValue", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.typeusr": "$Ss5UInt8V1r_AB1gAB1bAB1atD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5colors5UInt8V1r_AF1gAF1bAF1atvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"s:SS\">String</Type>, index: <Type usr=\"s:Si\">Int</Type>, color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1116}], "key.bodylength": 86, "key.bodyoffset": 1174, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 138, "key.name": "init(label:index:color:)", "key.namelength": 49, "key.nameoffset": 1123, "key.offset": 1123, "key.parsed_declaration": "public init(label: String, index: Int, color: rgbaValue)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 39, "key.substructure": [], "key.typename": "(ModelSegmentationClass.Type) -> (String, Int, (r: UInt8, g: UInt8, b: UInt8, a: UInt8)) -> ModelSegmentationClass", "key.typeusr": "$S5label5index5color11FritzVision22ModelSegmentationClassCSS_Sis5UInt8V1r_AH1gAH1bAH1attcD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5label5index5colorACSS_Sis5UInt8V1r_AH1gAH1bAH1attcfc"}], "key.typename": "ModelSegmentationClass.Type", "key.typeusr": "$S11FritzVision22ModelSegmentationClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModel) open class FritzVisionSegmentationModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 1363}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1302}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1302}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1302}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1302}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1266}], "key.bodylength": 2591, "key.bodyoffset": 1455, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1404}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1414}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1439}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "FritzPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2679, "key.name": "FritzVisionSegmentationModel", "key.namelength": 28, "key.nameoffset": 1374, "key.offset": 1368, "key.parsed_declaration": "open class FritzVisionSegmentationModel: NSObject, CoreMLOrVisionPredictor, FritzPredictor", "key.parsed_scope.end": 100, "key.parsed_scope.start": 49, "key.runtime_name": "FritzVisionSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1461}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 60, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1478, "key.offset": 1468, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionSegmentationModelOptions", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$S11FritzVision0aB24SegmentationModelOptionsCmD", "key.usr": "s:11FritzVision0aB17SegmentationModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>.PredictionResult = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1534}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 58, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1551, "key.offset": 1541, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = FritzVisionSegmentationResult", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$S11FritzVision0aB18SegmentationResultCmD", "key.usr": "s:11FritzVision0aB17SegmentationModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1649}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1643}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1660, "key.offset": 1656, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}, {"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1703}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1697}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 1714, "key.offset": 1710, "key.parsed_declaration": "@objc public let name: String", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)name"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1738}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1732}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 1749, "key.offset": 1745, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:name:classes:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1887}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1848}], "key.bodylength": 237, "key.bodyoffset": 1970, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 314, "key.name": "init(model:name:classes:)", "key.namelength": 74, "key.nameoffset": 1894, "key.offset": 1894, "key.parsed_declaration": "public init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 71, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (FritzMLModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$S5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG00D7MLModelC_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:name:classes:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2270}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2263}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 2214}], "key.bodylength": 138, "key.bodyoffset": 2366, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 223, "key.name": "init(model:name:classes:)", "key.namelength": 82, "key.nameoffset": 2282, "key.offset": 2282, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 77, "key.parsed_scope.start": 74, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzMLModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzMLModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "fritzMLModel", "key.namelength": 12, "key.nameoffset": 2379, "key.offset": 2375, "key.parsed_declaration": "let fritzMLModel = model.fritz().model as! FritzMLModel", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB17SegmentationModelC5model4name7classesAC0a7ManagedD0015SwiftIdentifiedD0_p_SSSayAA0dC5ClassCGtcfc12fritzMLModelL_AG0aM0Cvp"}], "key.typename": "(FritzVisionSegmentationModel.Type) -> (SwiftIdentifiedModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$S5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG0015SwiftIdentifiedG0_p_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type> = default, completion: (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3797}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3758}], "key.bodylength": 76, "key.bodyoffset": 3968, "key.doc.column": 17, "key.doc.comment": "Run image segmentation on a FritzVisionImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = default, completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"97\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = default, completion: (FritzVisionSegmentationResult?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 97, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 321, "key.docoffset": 3433, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 241, "key.name": "predict(_:options:completion:)", "key.namelength": 157, "key.nameoffset": 3809, "key.offset": 3804, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.parsed_scope.end": 99, "key.parsed_scope.start": 97, "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel) -> (FritzVisionImage, FritzVisionSegmentationModelOptions, (FritzVisionSegmentationResult?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD24SegmentationModelOptionsCyAC0cdF6ResultCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:"}], "key.typename": "FritzVisionSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB17SegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModel) open class FritzVisionSegmentationModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4050}], "key.bodylength": 266, "key.bodyoffset": 4114, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 307, "key.name": "FritzVisionSegmentationModel", "key.namelength": 28, "key.nameoffset": 4084, "key.offset": 4074, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4164}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4158}], "key.bodylength": 53, "key.bodyoffset": 4201, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"107\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionSegmentationModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 107, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 4120, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 4175, "key.offset": 4171, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 109, "key.parsed_scope.start": 107, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionSegmentationModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4301}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 4295}], "key.bodylength": 49, "key.bodyoffset": 4329, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift\" line=\"112\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionSegmentationModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 112, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 4261, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 4312, "key.offset": 4308, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 114, "key.parsed_scope.start": 112, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionSegmentationModel(py)tags"}], "key.typename": "FritzVisionSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB17SegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias rgbaValue = (r: <Type usr=\"s:s5UInt8V\">UInt8</Type>, g: <Type usr=\"s:s5UInt8V\">UInt8</Type>, b: <Type usr=\"s:s5UInt8V\">UInt8</Type>, a: <Type usr=\"s:s5UInt8V\">UInt8</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4383}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>rgbaValue</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>r</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>g</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>b</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>a</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 62, "key.name": "rgbaValue", "key.namelength": 9, "key.nameoffset": 4400, "key.offset": 4390, "key.parsed_declaration": "public typealias rgbaValue = (r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8).Type", "key.typeusr": "$Ss5UInt8V1r_AB1gAB1bAB1atmD", "key.usr": "s:11FritzVision9rgbaValuea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9034, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationResult) public class FritzVisionSegmentationResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 352}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 315}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}], "key.bodylength": 8138, "key.bodyoffset": 429, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 396}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 406}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 8209, "key.name": "FritzVisionSegmentationResult", "key.namelength": 29, "key.nameoffset": 365, "key.offset": 359, "key.parsed_declaration": "public class FritzVisionSegmentationResult: NSObject, FritzPredictionResult", "key.parsed_scope.end": 180, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionSegmentationResult", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 479}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 473}], "key.doc.column": 22, "key.doc.comment": "Height of model output array.", "key.doc.declaration": "@objc public let height: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"19\" column=\"22\"><Name>height</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height</USR><Declaration>@objc public let height: Int</Declaration><CommentParts><Abstract><Para>Height of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "height", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 435, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 15, "key.name": "height", "key.namelength": 6, "key.nameoffset": 490, "key.offset": 486, "key.parsed_declaration": "@objc public let height: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 550}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 544}], "key.doc.column": 22, "key.doc.comment": "Width of model output array.", "key.doc.declaration": "@objc public let width: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"22\" column=\"22\"><Name>width</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width</USR><Declaration>@objc public let width: Int</Declaration><CommentParts><Abstract><Para>Width of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "width", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 507, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "width", "key.namelength": 5, "key.nameoffset": 561, "key.offset": 557, "key.parsed_declaration": "@objc public let width: Int", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 606}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 600}], "key.doc.column": 22, "key.doc.comment": "Model classes.", "key.doc.declaration": "@objc public let classes: [ModelSegmentationClass]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"25\" column=\"22\"><Name>classes</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes</USR><Declaration>@objc public let classes: [ModelSegmentationClass]</Declaration><CommentParts><Abstract><Para>Model classes.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "classes", "key.doc.type": "Other", "key.doclength": 19, "key.docoffset": 577, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 617, "key.offset": 613, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let predictionResult: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 711}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 705}], "key.doc.column": 22, "key.doc.comment": "Raw MLMultiArray result from prediction.", "key.doc.declaration": "@objc public let predictionResult: MLMultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"28\" column=\"22\"><Name>predictionResult</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult</USR><Declaration>@objc public let predictionResult: MLMultiArray</Declaration><CommentParts><Abstract><Para>Raw MLMultiArray result from prediction.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "predictionResult", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 656, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictionResult</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "predictionResult", "key.namelength": 16, "key.nameoffset": 722, "key.offset": 718, "key.parsed_declaration": "@objc public let predictionResult: MLMultiArray", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getMaxIndices:) public func getMaxIndices(minThreshold: <Type usr=\"s:Sd\">Double</Type> = default) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3141}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 3115}], "key.bodylength": 394, "key.bodyoffset": 3207, "key.doc.column": 17, "key.doc.comment": "Create 2D-Array same size as the model output with each point representing most likely class.\n\n- Parameters:\n  - minThreshold: Only include classes that have a probability greater than the minThreshold.", "key.doc.declaration": "@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = default) -> [Int32]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"89\" column=\"17\"><Name>getMaxIndices(minThreshold:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:</USR><Declaration>@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = default) -&gt; [Int32]</Declaration><CommentParts><Abstract><Para>Create 2D-Array same size as the model output with each point representing most likely class.</Para></Abstract><Parameters><Parameter><Name>minThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Only include classes that have a probability greater than the minThreshold.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "getMaxIndices(minThreshold:)", "key.doc.parameters": [{"discussion": [{"Para": "Only include classes that have a probability greater than the minThreshold."}], "name": "minThreshold"}], "key.doc.type": "Function", "key.doclength": 230, "key.docoffset": 2881, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getMaxIndices:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getMaxIndices</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 454, "key.name": "getMaxIndices(minThreshold:)", "key.namelength": 41, "key.nameoffset": 3153, "key.offset": 3148, "key.parsed_declaration": "public func getMaxIndices(minThreshold: Double = 0.0) -> [Int32]", "key.parsed_scope.end": 96, "key.parsed_scope.start": 89, "key.substructure": [{"key.annotated_decl": "<Declaration>let pixelCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelCount", "key.namelength": 10, "key.nameoffset": 3220, "key.offset": 3216, "key.parsed_declaration": "let pixelCount = height * width", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:11FritzVision0aB18SegmentationResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF10pixelCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 3260, "key.offset": 3256, "key.parsed_declaration": "var bytes = [Float](repeating: 0, count: pixelCount * classes.count)", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "[Float]", "key.typeusr": "$SSaySfGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF5bytesL_SaySfGvp"}, {"key.annotated_decl": "<Declaration>var reducedMask: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>reducedMask</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "reducedMask", "key.namelength": 11, "key.nameoffset": 3337, "key.offset": 3333, "key.parsed_declaration": "var reducedMask = [Int32](repeating: 0, count: pixelCount)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "[Int32]", "key.typeusr": "$SSays5Int32VGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF11reducedMaskL_AHvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double) -> [Int32]", "key.typeusr": "$S12minThresholdSays5Int32VGSd_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(toImageMask:alpha:) public func toImageMask(minThreshold: <Type usr=\"s:Sd\">Double</Type> = default, alpha: <Type usr=\"s:s5UInt8V\">UInt8</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4235}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 4205}], "key.bodylength": 121, "key.bodyoffset": 4320, "key.doc.column": 17, "key.doc.comment": "Generate UIImage mask from most likely class at each pixel.\n\nThe generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.\n\n- Parameters:\n  - minThreshold: Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability.\n  - alpha: Alpha value of the color (0-255) for detected classes. By default completely opaque.", "key.doc.declaration": "@objc(toImageMask:alpha:) public func toImageMask(minThreshold: Double = default, alpha: UInt8 = default) -> UIImage?", "key.doc.discussion": [{"Para": "The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"106\" column=\"17\"><Name>toImageMask(minThreshold:alpha:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:</USR><Declaration>@objc(toImageMask:alpha:) public func toImageMask(minThreshold: Double = default, alpha: UInt8 = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Generate UIImage mask from most likely class at each pixel.</Para></Abstract><Parameters><Parameter><Name>minThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability.</Para></Discussion></Parameter><Parameter><Name>alpha</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Alpha value of the color (0-255) for detected classes. By default completely opaque.</Para></Discussion></Parameter></Parameters><Discussion><Para>The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.</Para></Discussion></CommentParts></Function>", "key.doc.line": 106, "key.doc.name": "toImageMask(minThreshold:alpha:)", "key.doc.parameters": [{"discussion": [{"Para": "Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability."}], "name": "minThreshold"}, {"discussion": [{"Para": "Alpha value of the color (0-255) for detected classes. By default completely opaque."}], "name": "alpha"}], "key.doc.type": "Function", "key.doclength": 593, "key.docoffset": 3608, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(toImageMask:alpha:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageMask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alpha</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 200, "key.name": "toImageMask(minThreshold:alpha:)", "key.namelength": 59, "key.nameoffset": 4247, "key.offset": 4242, "key.parsed_declaration": "public func toImageMask(minThreshold: Double = 0.0, alpha: UInt8 = 255) -> UIImage?", "key.parsed_scope.end": 110, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB18SegmentationResultC11toImageMask33_BD380EA76352FF2C71F7EC03CF43554CLL3for5color5alphaSo7UIImageCSgSaySfG_s5UInt8V1r_AN1gAN1bAN1atANtF\">toImageMask(for:color:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB18SegmentationResultC11toImageMask33_BD380EA76352FF2C71F7EC03CF43554CLL3for5alphaSo7UIImageCSgSays5Int32VG_s5UInt8VtF\">toImageMask(for:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:\">toImageMask(of:threshold:alpha:minThresholdAccepted:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let array: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 53, "key.name": "array", "key.namelength": 5, "key.nameoffset": 4333, "key.offset": 4329, "key.parsed_declaration": "let array = getMaxIndices(minThreshold: minThreshold)", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.typename": "[Int32]", "key.typeusr": "$SSays5Int32VGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC11toImageMask12minThreshold5alphaSo7UIImageCSgSd_s5UInt8VtF5arrayL_Says5Int32VGvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double, UInt8) -> UIImage?", "key.typeusr": "$S12minThreshold5alphaSo7UIImageCSgSd_s5UInt8VtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>, threshold: <Type usr=\"s:Sd\">Double</Type> = default, alpha: <Type usr=\"s:s5UInt8V\">UInt8</Type> = default, minThresholdAccepted: <Type usr=\"s:Sd\">Double</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8211}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 56, "key.offset": 8150}], "key.bodylength": 195, "key.bodyoffset": 8370, "key.doc.column": 17, "key.doc.comment": "Generate UIImage mask of given class, filtering out values below threshold.\n\nThe generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.\n\n- Parameters:\n  - segmentClass: Class to mask.\n  - threshold: Probability to filter.  Any probabilities below this value will be filtered out.\n  - alpha: Alpha value of the color (0-255) for detected classes.\n  - minThresholdAccepted: Any confidence score below this value will have an alpha of 0. Class confidence scores between `minThresholdAccepted` and `threshold` will retain their original value.", "key.doc.declaration": "@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = default, alpha: UInt8 = default, minThresholdAccepted: Double = default) -> UIImage?", "key.doc.discussion": [{"Para": "The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift\" line=\"176\" column=\"17\"><Name>toImageMask(of:threshold:alpha:minThresholdAccepted:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:</USR><Declaration>@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = default, alpha: UInt8 = default, minThresholdAccepted: Double = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Generate UIImage mask of given class, filtering out values below threshold.</Para></Abstract><Parameters><Parameter><Name>segmentClass</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Class to mask.</Para></Discussion></Parameter><Parameter><Name>threshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Probability to filter.  Any probabilities below this value will be filtered out.</Para></Discussion></Parameter><Parameter><Name>alpha</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Alpha value of the color (0-255) for detected classes.</Para></Discussion></Parameter><Parameter><Name>minThresholdAccepted</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Any confidence score below this value will have an alpha of 0. Class confidence scores between <codeVoice>minThresholdAccepted</codeVoice> and <codeVoice>threshold</codeVoice> will retain their original value.</Para></Discussion></Parameter></Parameters><Discussion><Para>The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.</Para></Discussion></CommentParts></Function>", "key.doc.line": 176, "key.doc.name": "toImageMask(of:threshold:alpha:minThresholdAccepted:)", "key.doc.parameters": [{"discussion": [{"Para": "Class to mask."}], "name": "segmentClass"}, {"discussion": [{"Para": "Probability to filter.  Any probabilities below this value will be filtered out."}], "name": "threshold"}, {"discussion": [{"Para": "Alpha value of the color (0-255) for detected classes."}], "name": "alpha"}, {"discussion": [{"Para": "Any confidence score below this value will have an alpha of 0. Class confidence scores between `minThresholdAccepted` and `threshold` will retain their original value."}], "name": "minThresholdAccepted"}], "key.doc.type": "Function", "key.doclength": 729, "key.docoffset": 7417, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(toImageMask:threshold:alpha:minThresholdAccepted:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageMask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>segmentClass</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>threshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alpha</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minThresholdAccepted</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 348, "key.name": "toImageMask(of:threshold:alpha:minThresholdAccepted:)", "key.namelength": 133, "key.nameoffset": 8223, "key.offset": 8218, "key.parsed_declaration": "public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = 0.5, alpha: UInt8 = 255, minThresholdAccepted: Double = 0.5) -> UIImage?", "key.parsed_scope.end": 179, "key.parsed_scope.start": 176, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:\">toImageMask(minThreshold:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB18SegmentationResultC11toImageMask33_BD380EA76352FF2C71F7EC03CF43554CLL3for5color5alphaSo7UIImageCSgSaySfG_s5UInt8V1r_AN1gAN1bAN1atANtF\">toImageMask(for:color:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB18SegmentationResultC11toImageMask33_BD380EA76352FF2C71F7EC03CF43554CLL3for5alphaSo7UIImageCSgSays5Int32VG_s5UInt8VtF\">toImageMask(for:alpha:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let array: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/SegmentationModel/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 101, "key.name": "array", "key.namelength": 5, "key.nameoffset": 8383, "key.offset": 8379, "key.parsed_declaration": "let array = thresholdClass(of: segmentClass, threshold: threshold, minAccepted: minThresholdAccepted)", "key.parsed_scope.end": 177, "key.parsed_scope.start": 177, "key.typename": "[Float]", "key.typeusr": "$SSaySfGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC11toImageMask2of9threshold5alpha20minThresholdAcceptedSo7UIImageCSgAA05ModelC5ClassC_Sds5UInt8VSdtF5arrayL_SaySfGvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (ModelSegmentationClass, Double, UInt8, Double) -> UIImage?", "key.typeusr": "$S2of9threshold5alpha20minThresholdAcceptedSo7UIImageCSg11FritzVision22ModelSegmentationClassC_Sds5UInt8VSdtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:"}], "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$S11FritzVision0aB18SegmentationResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult"}, {"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 443, "key.bodyoffset": 8589, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 463, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 8580, "key.offset": 8570, "key.substructure": [], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10255, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FlexibleModelDimensions) public class FlexibleModelDimensions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 389}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 220}], "key.bodylength": 361, "key.bodyoffset": 437, "key.doc.comment": "Specify dimensions for how to run flexible model. Calling `init` with no arguments will cause the model to run on original file size.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 427}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FlexibleModelDimensions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FlexibleModelDimensions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 403, "key.name": "FlexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 402, "key.offset": 396, "key.parsed_declaration": "public class FlexibleModelDimensions: NSObject", "key.parsed_scope.end": 35, "key.parsed_scope.start": 16, "key.runtime_name": "FlexibleModelDimensions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let size: <Type usr=\"c:@S@CGSize\">CGSize</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 443}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "size", "key.namelength": 4, "key.nameoffset": 454, "key.offset": 450, "key.parsed_declaration": "public let size: CGSize?", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "CGSize?", "key.typeusr": "$SSo6CGSizeVSgD", "key.usr": "s:11FritzVision23FlexibleModelDimensionsC4sizeSo6CGSizeVSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) override public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 498}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 489}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 473}], "key.bodylength": 50, "key.bodyoffset": 513, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 59, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 505, "key.offset": 505, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "override public init()", "key.parsed_scope.end": 24, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> () -> FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCycD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSize:) public init(size: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 595}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 570}], "key.bodylength": 30, "key.bodyoffset": 622, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSize:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "init(size:)", "key.namelength": 18, "key.nameoffset": 602, "key.offset": 602, "key.parsed_declaration": "public init(size: CGSize)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (CGSize) -> FlexibleModelDimensions", "key.typeusr": "$S4size11FritzVision23FlexibleModelDimensionsCSo6CGSizeV_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithWidth:withHeight:) public init(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 696}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 659}], "key.bodylength": 62, "key.bodyoffset": 734, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithWidth:withHeight:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "init(width:height:)", "key.namelength": 29, "key.nameoffset": 703, "key.offset": 703, "key.parsed_declaration": "public init(width: Int, height: Int)", "key.parsed_scope.end": 34, "key.parsed_scope.start": 32, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (Int, Int) -> FlexibleModelDimensions", "key.typeusr": "$S5width6height11FritzVision23FlexibleModelDimensionsCSi_SitcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:"}], "key.typename": "FlexibleModelDimensions.Type", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions"}, {"key.annotated_decl": "<Declaration>@objc(FlexibleModelDimensions) public class FlexibleModelDimensions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.bodylength": 486, "key.bodyoffset": 836, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FlexibleModelDimensions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FlexibleModelDimensions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 522, "key.name": "FlexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 811, "key.offset": 801, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let original: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 981}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 975}], "key.doc.column": 29, "key.doc.comment": "Use original image dimensions.  Model will throw an error if image dimensions are not within range of acceptable input sizes.", "key.doc.declaration": "@objc public static let original: FritzVision.FlexibleModelDimensions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"39\" column=\"29\"><Name>original</Name><USR>c:@CM@FritzVision@objc(cs)FlexibleModelDimensions(cpy)original</USR><Declaration>@objc public static let original: FritzVision.FlexibleModelDimensions</Declaration><CommentParts><Abstract><Para>Use original image dimensions.  Model will throw an error if image dimensions are not within range of acceptable input sizes.</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "original", "key.doc.type": "Other", "key.doclength": 130, "key.docoffset": 841, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>original</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "original", "key.namelength": 8, "key.nameoffset": 999, "key.offset": 988, "key.parsed_declaration": "@objc public static let original = FlexibleModelDimensions()", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@CM@FritzVision@objc(cs)FlexibleModelDimensions(cpy)original"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let lowResolution: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1046}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1040}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lowResolution</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 75, "key.name": "lowResolution", "key.namelength": 13, "key.nameoffset": 1064, "key.offset": 1053, "key.parsed_declaration": "@objc public static let lowResolution = FlexibleModelDimensions(width: 480, height: 640)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@CM@FritzVision@objc(cs)FlexibleModelDimensions(cpy)lowResolution"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let mediumResolution: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1139}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1133}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>mediumResolution</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 79, "key.name": "mediumResolution", "key.namelength": 16, "key.nameoffset": 1157, "key.offset": 1146, "key.parsed_declaration": "@objc public static let mediumResolution = FlexibleModelDimensions(width: 720, height: 1280)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@CM@FritzVision@objc(cs)FlexibleModelDimensions(cpy)mediumResolution"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let highResolution: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1236}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1230}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>highResolution</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "highResolution", "key.namelength": 14, "key.nameoffset": 1254, "key.offset": 1243, "key.parsed_declaration": "@objc public static let highResolution = FlexibleModelDimensions(width: 1280, height: 1920)", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@CM@FritzVision@objc(cs)FlexibleModelDimensions(cpy)highResolution"}], "key.typename": "FlexibleModelDimensions.Type", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModelOptions) public class FritzVisionFlexibleStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1428}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 1384}], "key.bodylength": 624, "key.bodyoffset": 1508, "key.doc.column": 14, "key.doc.comment": "Options for how to run flexible style transfer model.", "key.doc.declaration": "@objc(FritzVisionFlexibleStyleModelOptions) public class FritzVisionFlexibleStyleModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"48\" column=\"14\"><Name>FritzVisionFlexibleStyleModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions</USR><Declaration>@objc(FritzVisionFlexibleStyleModelOptions) public class FritzVisionFlexibleStyleModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for how to run flexible style transfer model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 48, "key.doc.name": "FritzVisionFlexibleStyleModelOptions", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 1326, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1479}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1489}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 698, "key.name": "FritzVisionFlexibleStyleModelOptions", "key.namelength": 36, "key.nameoffset": 1441, "key.offset": 1435, "key.parsed_declaration": "public class FritzVisionFlexibleStyleModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 61, "key.parsed_scope.start": 48, "key.runtime_name": "FritzVisionFlexibleStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1580}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1574}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option. Default option is .scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"51\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default option is .scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 51, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 1514, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 1591, "key.offset": 1587, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1842}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1836}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"55\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 1657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1853, "key.offset": 1849, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var flexibleModelDimensions: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1960}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1954}], "key.doc.column": 22, "key.doc.comment": "Set dimensions for output result of flexible model.", "key.doc.declaration": "@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"58\" column=\"22\"><Name>flexibleModelDimensions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)flexibleModelDimensions</USR><Declaration>@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions</Declaration><CommentParts><Abstract><Para>Set dimensions for output result of flexible model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 58, "key.doc.name": "flexibleModelDimensions", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 1894, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flexibleModelDimensions</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 72, "key.name": "flexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 1971, "key.offset": 1967, "key.parsed_declaration": "@objc public var flexibleModelDimensions: FlexibleModelDimensions = .mediumResolution", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FlexibleModelDimensions", "key.typeusr": "$S11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions(py)flexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2045}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 79, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 2063, "key.offset": 2052, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionFlexibleStyleModelOptions()", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB25FlexibleStyleModelOptionsC8defaultsAA0a5ImageF0_pvpZ"}], "key.typename": "FritzVisionFlexibleStyleModelOptions.Type", "key.typeusr": "$S11FritzVision0aB25FlexibleStyleModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2387}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 2350}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2326}], "key.bodylength": 6240, "key.bodyoffset": 2504, "key.doc.column": 14, "key.doc.comment": "Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over `FritzVisionStyleTransferModel` to produce stylized images with customizable output sizes.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"67\" column=\"14\"><Name>FritzVisionFlexibleStyleModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over <codeVoice>FritzVisionStyleTransferModel</codeVoice> to produce stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 67, "key.doc.name": "FritzVisionFlexibleStyleModel", "key.doc.type": "Class", "key.doclength": 190, "key.docoffset": 2136, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2431}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 2441}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2458}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 2483}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLPredictor"}, {"key.name": "FritzInitializableModel"}, {"key.name": "FritzStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 6351, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 2400, "key.offset": 2394, "key.parsed_declaration": "public class FritzVisionFlexibleStyleModel: NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor", "key.parsed_scope.end": 198, "key.parsed_scope.start": 67, "key.runtime_name": "FritzVisionFlexibleStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2510}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 61, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2527, "key.offset": 2517, "key.overrides": [{"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionFlexibleStyleModelOptions", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "FritzVisionFlexibleStyleModelOptions.Type", "key.typeusr": "$S11FritzVision0aB25FlexibleStyleModelOptionsCmD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC0E7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>.PredictionResult = <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2583}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2600, "key.offset": 2590, "key.overrides": [{"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = CVPixelBuffer", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "CVBuffer.Type", "key.typeusr": "$SSo11CVBufferRefamD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2682}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2676}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2693, "key.offset": 2689, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}, {"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3736}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3729}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3693}], "key.bodylength": 257, "key.bodyoffset": 3783, "key.doc.column": 24, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"96\" column=\"24\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 96, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 143, "key.docoffset": 3546, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 293, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 3748, "key.offset": 3748, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 104, "key.parsed_scope.start": 96, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3888, "key.offset": 3888, "key.parsed_declaration": "} catch let error as FritzModelSpecificationError", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "FritzModelSpecificationError", "key.typeusr": "$S11FritzVision0A23ModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB18FlexibleStyleModelC5modelAC0a7ManagedE0015SwiftIdentifiedE0_p_tcfc5errorL_AA0aE18SpecificationErrorOvp"}], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionFlexibleStyleModel", "key.typeusr": "$S5model11FritzVision0bC18FlexibleStyleModelC0b7ManagedF0015SwiftIdentifiedF0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4248}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 4239}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4200}], "key.bodylength": 243, "key.bodyoffset": 4289, "key.doc.column": 21, "key.doc.comment": "Initialize FritzVisionFlexibleStyleModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"111\" column=\"21\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:</USR><Declaration>@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzVisionFlexibleStyleModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 111, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 149, "key.docoffset": 4047, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 278, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4255, "key.offset": 4255, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel) throws", "key.parsed_scope.end": 115, "key.parsed_scope.start": 111, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> (FritzMLModel) throws -> FritzVisionFlexibleStyleModel", "key.typeusr": "$S5model11FritzVision0bC18FlexibleStyleModelC0b7ManagedF00B7MLModelC_tKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)initWithFritzMLModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</Type> = default, completion: (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5141}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 5102}], "key.bodylength": 174, "key.bodyoffset": 5297, "key.doc.column": 17, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = default, completion: (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"128\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = default, completion: (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 128, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 317, "key.docoffset": 4781, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModelOptions\">FritzVisionFlexibleStyleModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 324, "key.name": "predict(_:options:completion:)", "key.namelength": 142, "key.nameoffset": 5153, "key.offset": 5148, "key.overrides": [{"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionFlexibleStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 131, "key.parsed_scope.start": 128, "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel) -> (FritzVisionImage, FritzVisionFlexibleStyleModelOptions, (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD25FlexibleStyleModelOptionsCySo11CVBufferRefaSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(im)predict:options:completion:"}], "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$S11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 8747}], "key.bodylength": 265, "key.bodyoffset": 8812, "key.doc.column": 14, "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"67\" column=\"14\"><Name>FritzVisionFlexibleStyleModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over <codeVoice>FritzVisionStyleTransferModel</codeVoice> to produce stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 67, "key.doc.name": "FritzVisionFlexibleStyleModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 307, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 8781, "key.offset": 8771, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8861}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8855}], "key.bodylength": 53, "key.bodyoffset": 8898, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"203\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 203, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 8817, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 8872, "key.offset": 8868, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 205, "key.parsed_scope.start": 203, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8998}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8992}], "key.bodylength": 49, "key.bodyoffset": 9026, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"208\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 208, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 8958, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 9009, "key.offset": 9005, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 210, "key.parsed_scope.start": 208, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(py)tags"}], "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$S11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9104}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 9080}], "key.bodylength": 1101, "key.bodyoffset": 9152, "key.doc.column": 14, "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"67\" column=\"14\"><Name>FritzVisionFlexibleStyleModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionFlexibleStyleModel) public class FritzVisionFlexibleStyleModel : NSObject, CoreMLPredictor, FritzInitializableModel, FritzStylePredictor</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Use this class over <codeVoice>FritzVisionStyleTransferModel</codeVoice> to produce stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 67, "key.doc.name": "FritzVisionFlexibleStyleModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionFlexibleStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1143, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 9121, "key.offset": 9111, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [<Type usr=\"s:SS\">String</Type>], wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = default, completionHandler: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9847}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 82, "key.offset": 9760}], "key.bodylength": 218, "key.bodyoffset": 10032, "key.doc.column": 24, "key.doc.comment": "Fetch and load Style Models for the given tags.\n\nNote that this instantiates all models which could cause memory pressure if you are loading many models.\nIf you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.\n\n- Parameters:\n  - tags: List of tags to load models for.\n  - wifiRequiredForModelDownload: If true, client must be connected to a wifi network to download a model. Default is false.\n  - completionHandler: Completion handler with instantiated FritzVisionStyleModels", "key.doc.declaration": "@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> Void)", "key.doc.discussion": [{"Para": "Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift\" line=\"226\" column=\"24\"><Name>fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:</USR><Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch and load Style Models for the given tags.</Para></Abstract><Parameters><Parameter><Name>tags</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of tags to load models for.</Para></Discussion></Parameter><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true, client must be connected to a wifi network to download a model. Default is false.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler with instantiated FritzVisionStyleModels</Para></Discussion></Parameter></Parameters><Discussion><Para>Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.</Para></Discussion></CommentParts></Function>", "key.doc.line": 226, "key.doc.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "List of tags to load models for."}], "name": "tags"}, {"discussion": [{"Para": "If true, client must be connected to a wifi network to download a model. Default is false."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Completion handler with instantiated FritzVisionStyleModels"}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 598, "key.docoffset": 9158, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionFlexibleStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchStyleModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel\">FritzVisionFlexibleStyleModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 397, "key.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 164, "key.nameoffset": 9866, "key.offset": 9854, "key.parsed_declaration": "public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> Void)", "key.parsed_scope.end": 230, "key.parsed_scope.start": 226, "key.substructure": [], "key.typename": "(FritzVisionFlexibleStyleModel.Type) -> ([String], Bool, @escaping ([FritzVisionFlexibleStyleModel]?, Error?) -> ()) -> ()", "key.typeusr": "$S4tags28wifiRequiredForModelDownload17completionHandlerySaySSG_SbySay11FritzVision0ij13FlexibleStyleE0CGSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionFlexibleStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:"}], "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$S11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6891, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModelOptions) public class FritzVisionStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 238}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 202}], "key.bodylength": 436, "key.bodyoffset": 310, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 291}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 502, "key.name": "FritzVisionStyleModelOptions", "key.namelength": 28, "key.nameoffset": 251, "key.offset": 245, "key.parsed_declaration": "public class FritzVisionStyleModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 25, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 353}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 347}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"18\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 316, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 364, "key.offset": 360, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 615}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 609}], "key.doc.column": 22, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"22\" column=\"22\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 430, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 626, "key.offset": 622, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = false", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 667}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 685, "key.offset": 674, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionStyleModelOptions()", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$S11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17StyleModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}], "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$S11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzStylePredictor : <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1910}], "key.bodylength": 0, "key.bodyoffset": 1963, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1947}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzStylePredictor</decl.name> : <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictor"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 47, "key.name": "FritzStylePredictor", "key.namelength": 19, "key.nameoffset": 1926, "key.offset": 1917, "key.parsed_declaration": "public protocol FritzStylePredictor: FritzPredictor", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.runtime_name": "_TtP4main19FritzStylePredictor_", "key.typename": "FritzStylePredictor.Protocol", "key.typeusr": "$S11FritzVision0A14StylePredictor_pmD", "key.usr": "s:11FritzVision0A14StylePredictorP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2019}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1990}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1966}], "key.bodylength": 3275, "key.bodyoffset": 2136, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2055}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2065}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2090}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 2115}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "FritzInitializableModel"}, {"key.name": "FritzStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3386, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 2032, "key.offset": 2026, "key.parsed_declaration": "public class FritzVisionStyleModel: NSObject, CoreMLOrVisionPredictor, FritzInitializableModel, FritzStylePredictor", "key.parsed_scope.end": 135, "key.parsed_scope.start": 62, "key.runtime_name": "FritzVisionStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2142}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2159, "key.offset": 2149, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP12ModelOptionsQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionStyleModelOptions", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$S11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "s:11FritzVision0aB10StyleModelC0D7Optionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>.PredictionResult = <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2207}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2224, "key.offset": 2214, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP16PredictionResultQa"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = CVPixelBuffer", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "CVBuffer.Type", "key.typeusr": "$SSo11CVBufferRefamD", "key.usr": "s:11FritzVision0aB10StyleModelC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2322}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "model", "key.namelength": 5, "key.nameoffset": 2333, "key.offset": 2329, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP5model0a7ManagedC00A7MLModelCvp"}], "key.parsed_declaration": "public let model: FritzMLModel", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB10StyleModelC5model0a7ManagedD00A7MLModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2364}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 2375, "key.offset": 2371, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP07managedC00a7ManagedC0AECvp"}, {"key.usr": "s:11FritzVision0A9PredictorP12managedModel0a7ManagedE0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "FritzManagedModel", "key.typeusr": "$S17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 3410}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3403}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3367}], "key.bodylength": 297, "key.bodyoffset": 3457, "key.doc.column": 24, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"93\" column=\"24\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 143, "key.docoffset": 3220, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 333, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 3422, "key.offset": 3422, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 102, "key.parsed_scope.start": 93, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A23ModelSpecificationErrorO\">FritzModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3602, "key.offset": 3602, "key.parsed_declaration": "} catch let error as FritzModelSpecificationError", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "FritzModelSpecificationError", "key.typeusr": "$S11FritzVision0A23ModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB10StyleModelC5modelAC0a7ManagedD0015SwiftIdentifiedD0_p_tcfc5errorL_AA0aD18SpecificationErrorOvp"}], "key.typename": "(FritzVisionStyleModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionStyleModel", "key.typeusr": "$S5model11FritzVision0bC10StyleModelC0b7ManagedE0015SwiftIdentifiedE0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3956}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 3947}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3908}], "key.bodylength": 243, "key.bodyoffset": 3997, "key.doc.column": 21, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"109\" column=\"21\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:</USR><Declaration>@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 109, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 143, "key.docoffset": 3761, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 278, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 3963, "key.offset": 3963, "key.overrides": [{"key.usr": "s:11FritzVision0A18InitializableModelP5modelx0a7ManagedD00A7MLModelC_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel) throws", "key.parsed_scope.end": 113, "key.parsed_scope.start": 109, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> (FritzMLModel) throws -> FritzVisionStyleModel", "key.typeusr": "$S5model11FritzVision0bC10StyleModelC0b7ManagedE00B7MLModelC_tKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)initWithFritzMLModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = default, completion: (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5092}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 5053}], "key.bodylength": 169, "key.bodyoffset": 5240, "key.doc.column": 17, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, completion: (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"131\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, completion: (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 131, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 317, "key.docoffset": 4732, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 311, "key.name": "predict(_:options:completion:)", "key.namelength": 134, "key.nameoffset": 5104, "key.offset": 5099, "key.overrides": [{"key.usr": "s:11FritzVision0A9PredictorP7predict_7options10completionyAA0aB5ImageC_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A14ImagePredictorP7predict_7options10completionyAA0abC0C_12ModelOptionsQzy16PredictionResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 134, "key.parsed_scope.start": 131, "key.substructure": [], "key.typename": "(FritzVisionStyleModel) -> (FritzVisionImage, FritzVisionStyleModelOptions, (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_AC0cD17StyleModelOptionsCySo11CVBufferRefaSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel(im)predict:options:completion:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5415}], "key.bodylength": 266, "key.bodyoffset": 5472, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 300, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 5449, "key.offset": 5439, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5522}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5516}], "key.bodylength": 53, "key.bodyoffset": 5559, "key.doc.column": 22, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"142\" column=\"22\"><Name>metadata</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 142, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 5478, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 84, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 5533, "key.offset": 5529, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 144, "key.parsed_scope.start": 142, "key.typename": "[String : String]?", "key.typeusr": "$SSDyS2SGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5659}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 5653}], "key.bodylength": 49, "key.bodyoffset": 5687, "key.doc.column": 22, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"147\" column=\"22\"><Name>tags</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 147, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 5619, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 71, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 5670, "key.offset": 5666, "key.overrides": [{"key.usr": "s:11FritzVision0A5ModelP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 149, "key.parsed_scope.start": 147, "key.typename": "[String]?", "key.typeusr": "$SSaySSGSgD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(py)tags"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5765}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5741}], "key.bodylength": 1084, "key.bodyoffset": 5805, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1118, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 5782, "key.offset": 5772, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [<Type usr=\"s:SS\">String</Type>], wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = default, completionHandler: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6500}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 82, "key.offset": 6413}], "key.bodylength": 210, "key.bodyoffset": 6677, "key.doc.column": 24, "key.doc.comment": "Fetch and load Style Models for the given tags.\n\nNote that this instantiates all models which could cause memory pressure if you are loading many models.\nIf you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.\n\n- Parameters:\n  - tags: List of tags to load models for.\n  - wifiRequiredForModelDownload: If true, client must be connected to a wifi network to download a model. Default is false.\n  - completionHandler: Completion handler with instantiated FritzVisionStyleModels", "key.doc.declaration": "@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -> Void)", "key.doc.discussion": [{"Para": "Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift\" line=\"165\" column=\"24\"><Name>fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:</USR><Declaration>@objc(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:) public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = default, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch and load Style Models for the given tags.</Para></Abstract><Parameters><Parameter><Name>tags</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of tags to load models for.</Para></Discussion></Parameter><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true, client must be connected to a wifi network to download a model. Default is false.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Completion handler with instantiated FritzVisionStyleModels</Para></Discussion></Parameter></Parameters><Discussion><Para>Note that this instantiates all models which could cause memory pressure if you are loading many models. If you do not want to immediately instantiate the models, create a ModelTagManager and manage loading yourself.</Para></Discussion></CommentParts></Function>", "key.doc.line": 165, "key.doc.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "List of tags to load models for."}], "name": "tags"}, {"discussion": [{"Para": "If true, client must be connected to a wifi network to download a model. Default is false."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Completion handler with instantiated FritzVisionStyleModels"}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 598, "key.docoffset": 5811, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Models/StyleModel/FritzVisionStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchStyleModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 381, "key.name": "fetchStyleModelsForTags(tags:wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 156, "key.nameoffset": 6519, "key.offset": 6507, "key.parsed_declaration": "public static func fetchStyleModelsForTags(tags: [String], wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzVisionStyleModel]?, Error?) -> Void)", "key.parsed_scope.end": 169, "key.parsed_scope.start": 165, "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> ([String], Bool, @escaping ([FritzVisionStyleModel]?, Error?) -> ()) -> ()", "key.typeusr": "$S4tags28wifiRequiredForModelDownload17completionHandlerySaySSG_SbySay11FritzVision0ij5StyleE0CGSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionStyleModel(cm)fetchStyleModelsForTags:wifiRequiredForModelDownload:withCompletionHandler:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/UIImage+Vision.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1652, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 1458, "key.bodyoffset": 192, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 1478, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 183, "key.offset": 173, "key.substructure": [], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1113, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) final class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 866}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 805}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 805}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 805}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 805}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 776}], "key.bodylength": 205, "key.bodyoffset": 906, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 239, "key.modulename": "FritzVision", "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 883, "key.offset": 873, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithOptionalModel:) public convenience init(with model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 953}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 946}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 912}], "key.bodylength": 105, "key.bodyoffset": 1004, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithOptionalModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 145, "key.name": "init(with:)", "key.namelength": 37, "key.nameoffset": 965, "key.offset": 965, "key.parsed_declaration": "public convenience init(with model: FritzMLModel? = nil)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithModel:\">init(model:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLabelModel.Type) -> (FritzMLModel?) -> FritzVisionLabelModel", "key.typeusr": "$S4with11FritzVision0bC10LabelModelC0b7ManagedE00B7MLModelCSg_tcD", "key.usr": "c:@CM@FritzVisionLabelModel@FritzVision@objc(cs)FritzVisionLabelModel(im)initWithOptionalModel:"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$S11FritzVision0aB10LabelModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 963, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) final class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 723}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 699}], "key.bodylength": 197, "key.bodyoffset": 764, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0B9PredictorP\">VisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 232, "key.modulename": "FritzVision", "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 740, "key.offset": 730, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithOptionalModel:) public convenience init(with model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 811}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 804}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 770}], "key.bodylength": 96, "key.bodyoffset": 862, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithOptionalModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 136, "key.name": "init(with:)", "key.namelength": 37, "key.nameoffset": 823, "key.offset": 823, "key.parsed_declaration": "public convenience init(with model: FritzMLModel? = nil)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithModel:\">init(model:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel.Type) -> (FritzMLModel?) -> FritzVisionObjectModel", "key.typeusr": "$S4with11FritzVision0bC11ObjectModelC0b7ManagedE00B7MLModelCSg_tcD", "key.usr": "c:@CM@FritzVisionObjectModel@FritzVision@objc(cs)FritzVisionObjectModel(im)initWithOptionalModel:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S11FritzVision0aB11ObjectModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10813, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzPaintingStyle) public class PaintingStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5046}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5022}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 4996}], "key.bodylength": 3424, "key.bodyoffset": 5089, "key.doc.column": 14, "key.doc.comment": "Enumeration of all Painting Styles available.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzPaintingStyle) public class PaintingStyleModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"104\" column=\"14\"><Name>PaintingStyleModel</Name><USR>c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzPaintingStyle) public class PaintingStyleModel : NSObject</Declaration><CommentParts><Abstract><Para>Enumeration of all Painting Styles available.</Para></Abstract></CommentParts></Class>", "key.doc.line": 104, "key.doc.name": "PaintingStyleModel", "key.doc.type": "Class", "key.doclength": 50, "key.docoffset": 4946, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5079}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzPaintingStyle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PaintingStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3461, "key.name": "PaintingStyleModel", "key.namelength": 18, "key.nameoffset": 5059, "key.offset": 5053, "key.parsed_declaration": "public class PaintingStyleModel: NSObject", "key.parsed_scope.end": 216, "key.parsed_scope.start": 104, "key.runtime_name": "FritzPaintingStyle", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPaintingStyleModel) public enum <Type usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle\">PaintingStyleModel</Type>.Style : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5171}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 5130}], "key.bodylength": 3096, "key.bodyoffset": 5209, "key.doc.column": 17, "key.doc.comment": "Available Painting Styles.", "key.doc.declaration": "@objc(FritzVisionPaintingStyleModel) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"108\" column=\"17\"><Name>Style</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O</USR><Declaration>@objc(FritzVisionPaintingStyleModel) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable</Declaration><CommentParts><Abstract><Para>Available Painting Styles.</Para></Abstract></CommentParts></Other>", "key.doc.line": 108, "key.doc.name": "Style", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 5095, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 5190}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 5195}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPaintingStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle\">PaintingStyleModel</ref.class>.<decl.name>Style</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "CaseIterable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 3128, "key.name": "Style", "key.namelength": 5, "key.nameoffset": 5183, "key.offset": 5178, "key.parsed_declaration": "public enum Style: Int, CaseIterable", "key.parsed_scope.end": 209, "key.parsed_scope.start": 108, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5218, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case starryNight</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>starryNight</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "starryNight", "key.namelength": 11, "key.nameoffset": 5223, "key.offset": 5223, "key.parsed_declaration": "case starryNight", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11starryNightyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5243, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case pinkBlueRhombus</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>pinkBlueRhombus</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "pinkBlueRhombus", "key.namelength": 15, "key.nameoffset": 5248, "key.offset": 5248, "key.parsed_declaration": "case pinkBlueRhombus", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O15pinkBlueRhombusyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5272, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case theScream</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theScream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "theScream", "key.namelength": 9, "key.nameoffset": 5277, "key.offset": 5277, "key.parsed_declaration": "case theScream", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O9theScreamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5295, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case bicentennialPrint</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bicentennialPrint</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "bicentennialPrint", "key.namelength": 17, "key.nameoffset": 5300, "key.offset": 5300, "key.parsed_declaration": "case bicentennialPrint", "key.parsed_scope.end": 112, "key.parsed_scope.start": 112, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O17bicentennialPrintyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5326, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case poppyField</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poppyField</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "poppyField", "key.namelength": 10, "key.nameoffset": 5331, "key.offset": 5331, "key.parsed_declaration": "case poppyField", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O10poppyFieldyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5350, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case kaleidoscope</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>kaleidoscope</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "kaleidoscope", "key.namelength": 12, "key.nameoffset": 5355, "key.offset": 5355, "key.parsed_declaration": "case kaleidoscope", "key.parsed_scope.end": 114, "key.parsed_scope.start": 114, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O12kaleidoscopeyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5376, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case femmes</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>femmes</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "femmes", "key.namelength": 6, "key.nameoffset": 5381, "key.offset": 5381, "key.parsed_declaration": "case femmes", "key.parsed_scope.end": 115, "key.parsed_scope.start": 115, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O6femmesyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5396, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case headOfClown</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>headOfClown</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "headOfClown", "key.namelength": 11, "key.nameoffset": 5401, "key.offset": 5401, "key.parsed_declaration": "case headOfClown", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11headOfClownyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5421, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case horsesOnSeashore</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>horsesOnSeashore</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "horsesOnSeashore", "key.namelength": 16, "key.nameoffset": 5426, "key.offset": 5426, "key.parsed_declaration": "case horsesOnSeashore", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O16horsesOnSeashoreyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5451, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case theTrial</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theTrial</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "theTrial", "key.namelength": 8, "key.nameoffset": 5456, "key.offset": 5456, "key.parsed_declaration": "case theTrial", "key.parsed_scope.end": 118, "key.parsed_scope.start": 118, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O8theTrialyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5473, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.internal", "key.annotated_decl": "<Declaration>case ritmoPlastico</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>ritmoPlastico</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "ritmoPlastico", "key.namelength": 13, "key.nameoffset": 5478, "key.offset": 5478, "key.parsed_declaration": "case ritmoPlastico", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O13ritmoPlasticoyA2EmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var name: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5501}], "key.bodylength": 811, "key.bodyoffset": 5526, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 830, "key.name": "name", "key.namelength": 4, "key.nameoffset": 5512, "key.offset": 5508, "key.parsed_declaration": "public var name: String", "key.parsed_scope.end": 146, "key.parsed_scope.start": 121, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getFromName(_ name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6348}], "key.bodylength": 859, "key.bodyoffset": 6406, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getFromName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</ref.enum>?</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 911, "key.name": "getFromName(_:)", "key.namelength": 27, "key.nameoffset": 6367, "key.offset": 6355, "key.parsed_declaration": "public static func getFromName(_ name: String) -> Style?", "key.parsed_scope.end": 175, "key.parsed_scope.start": 148, "key.substructure": [], "key.typename": "(PaintingStyleModel.Style.Type) -> (String) -> PaintingStyleModel.Style?", "key.typeusr": "$Sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OSgSScD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11getFromNameyAESgSSFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func build() -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7328}], "key.bodylength": 924, "key.bodyoffset": 7374, "key.doc.column": 21, "key.doc.comment": "Build FritzVisionStyleModel from style.", "key.doc.declaration": "public func build() -> FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"178\" column=\"21\"><Name>build()</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF</USR><Declaration>public func build() -&gt; FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Build FritzVisionStyleModel from style.</Para></Abstract></CommentParts></Function>", "key.doc.line": 178, "key.doc.name": "build()", "key.doc.type": "Function", "key.doclength": 44, "key.docoffset": 7276, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>build</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 964, "key.name": "build()", "key.namelength": 7, "key.nameoffset": 7340, "key.offset": 7335, "key.parsed_declaration": "public func build() -> FritzVisionStyleModel", "key.parsed_scope.end": 207, "key.parsed_scope.start": 178, "key.substructure": [{"key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>!</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol>!</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "model", "key.namelength": 5, "key.nameoffset": 7391, "key.offset": 7387, "key.parsed_declaration": "var model: SwiftIdentifiedModel!", "key.parsed_scope.end": 179, "key.parsed_scope.start": 179, "key.typename": "SwiftIdentifiedModel?", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pSgD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF5modelL_0a7ManagedD0015SwiftIdentifiedD0_pSgvp"}], "key.typename": "(PaintingStyleModel.Style) -> () -> FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCycD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abcD0CyF"}], "key.typename": "PaintingStyleModel.Style.Type", "key.typeusr": "$S30FritzVisionStyleModelPaintings08PaintingcD0C0C0OmD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O"}], "key.typename": "PaintingStyleModel.Type", "key.typeusr": "$S30FritzVisionStyleModelPaintings08PaintingcD0CmD", "key.usr": "c:@M@FritzVisionStyleModelPaintings@objc(cs)FritzPaintingStyle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</Type>, <Type usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8541}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 8517}], "key.bodylength": 2230, "key.bodyoffset": 8581, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A18InitializableModelP\">FritzInitializableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A14StylePredictorP\">FritzStylePredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2264, "key.modulename": "FritzVision", "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 8558, "key.offset": 8548, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let starryNight: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8663}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8657}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Vincent Van Gogh's Starry Night painting", "key.doc.declaration": "@objc public static let starryNight: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"223\" column=\"29\"><Name>starryNight</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)starryNight</USR><Declaration>@objc public static let starryNight: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Vincent Van Gogh\u2019s Starry Night painting</Para></Abstract></CommentParts></Other>", "key.doc.line": 223, "key.doc.name": "starryNight", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 8587, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>starryNight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "starryNight", "key.namelength": 11, "key.nameoffset": 8681, "key.offset": 8670, "key.parsed_declaration": "@objc public static let starryNight = PaintingStyleModel.Style.starryNight.build()", "key.parsed_scope.end": 223, "key.parsed_scope.start": 223, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)starryNight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pinkBlueRhombus: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8811}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8805}], "key.doc.column": 29, "key.doc.comment": "Style Model with shapes of pink and blue rhombuses.", "key.doc.declaration": "@objc public static let pinkBlueRhombus: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"226\" column=\"29\"><Name>pinkBlueRhombus</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)pinkBlueRhombus</USR><Declaration>@objc public static let pinkBlueRhombus: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model with shapes of pink and blue rhombuses.</Para></Abstract></CommentParts></Other>", "key.doc.line": 226, "key.doc.name": "pinkBlueRhombus", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 8745, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pinkBlueRhombus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "pinkBlueRhombus", "key.namelength": 15, "key.nameoffset": 8829, "key.offset": 8818, "key.parsed_declaration": "@objc public static let pinkBlueRhombus = PaintingStyleModel.Style.pinkBlueRhombus.build()", "key.parsed_scope.end": 226, "key.parsed_scope.start": 226, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)pinkBlueRhombus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let theScream: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8972}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 8966}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Edvard Munch's The Scream painting.", "key.doc.declaration": "@objc public static let theScream: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"229\" column=\"29\"><Name>theScream</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theScream</USR><Declaration>@objc public static let theScream: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Edvard Munch\u2019s The Scream painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 229, "key.doc.name": "theScream", "key.doc.type": "Other", "key.doclength": 61, "key.docoffset": 8901, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>theScream</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "theScream", "key.namelength": 9, "key.nameoffset": 8990, "key.offset": 8979, "key.parsed_declaration": "@objc public static let theScream = PaintingStyleModel.Style.theScream.build()", "key.parsed_scope.end": 229, "key.parsed_scope.start": 229, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theScream"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bicentennialPrint: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9155}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9149}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Roy Lichtenstein's Bicentennial Print from America: The Third Century", "key.doc.declaration": "@objc public static let bicentennialPrint: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"232\" column=\"29\"><Name>bicentennialPrint</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)bicentennialPrint</USR><Declaration>@objc public static let bicentennialPrint: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Roy Lichtenstein\u2019s Bicentennial Print from America: The Third Century</Para></Abstract></CommentParts></Other>", "key.doc.line": 232, "key.doc.name": "bicentennialPrint", "key.doc.type": "Other", "key.doclength": 95, "key.docoffset": 9050, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicentennialPrint</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 81, "key.name": "bicentennialPrint", "key.namelength": 17, "key.nameoffset": 9173, "key.offset": 9162, "key.parsed_declaration": "@objc public static let bicentennialPrint = PaintingStyleModel.Style.bicentennialPrint.build()", "key.parsed_scope.end": 232, "key.parsed_scope.start": 232, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)bicentennialPrint"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let poppyField: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9325}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9319}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Claude Monet's The Poppy Field painting.", "key.doc.declaration": "@objc public static let poppyField: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"235\" column=\"29\"><Name>poppyField</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)poppyField</USR><Declaration>@objc public static let poppyField: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Claude Monet\u2019s The Poppy Field painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 235, "key.doc.name": "poppyField", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 9249, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poppyField</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 67, "key.name": "poppyField", "key.namelength": 10, "key.nameoffset": 9343, "key.offset": 9332, "key.parsed_declaration": "@objc public static let poppyField = PaintingStyleModel.Style.poppyField.build()", "key.parsed_scope.end": 235, "key.parsed_scope.start": 235, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)poppyField"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let kaleidoscope: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9492}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9486}], "key.doc.column": 29, "key.doc.comment": "Style Model based on an image depicting the view through a kaleidoscope.", "key.doc.declaration": "@objc public static let kaleidoscope: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"238\" column=\"29\"><Name>kaleidoscope</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)kaleidoscope</USR><Declaration>@objc public static let kaleidoscope: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on an image depicting the view through a kaleidoscope.</Para></Abstract></CommentParts></Other>", "key.doc.line": 238, "key.doc.name": "kaleidoscope", "key.doc.type": "Other", "key.doclength": 77, "key.docoffset": 9405, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kaleidoscope</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "kaleidoscope", "key.namelength": 12, "key.nameoffset": 9510, "key.offset": 9499, "key.parsed_declaration": "@objc public static let kaleidoscope = PaintingStyleModel.Style.kaleidoscope.build()", "key.parsed_scope.end": 238, "key.parsed_scope.start": 238, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)kaleidoscope"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let femmes: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9650}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9644}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Picasso's Les Femmes d'Alger painting.", "key.doc.declaration": "@objc public static let femmes: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"241\" column=\"29\"><Name>femmes</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)femmes</USR><Declaration>@objc public static let femmes: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Picasso\u2019s Les Femmes d\u2019Alger painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 241, "key.doc.name": "femmes", "key.doc.type": "Other", "key.doclength": 64, "key.docoffset": 9576, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>femmes</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "femmes", "key.namelength": 6, "key.nameoffset": 9668, "key.offset": 9657, "key.parsed_declaration": "@objc public static let femmes = PaintingStyleModel.Style.femmes.build()", "key.parsed_scope.end": 241, "key.parsed_scope.start": 241, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)femmes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let headOfClown: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9799}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9793}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Joseph Kutter's Head of a Clown painting.", "key.doc.declaration": "@objc public static let headOfClown: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"244\" column=\"29\"><Name>headOfClown</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)headOfClown</USR><Declaration>@objc public static let headOfClown: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Joseph Kutter\u2019s Head of a Clown painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 244, "key.doc.name": "headOfClown", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 9722, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>headOfClown</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "headOfClown", "key.namelength": 11, "key.nameoffset": 9817, "key.offset": 9806, "key.parsed_declaration": "@objc public static let headOfClown = PaintingStyleModel.Style.headOfClown.build()", "key.parsed_scope.end": 244, "key.parsed_scope.start": 244, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)headOfClown"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let horsesOnSeashore: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9969}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 9963}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Giorgio de Chirico's Horses on the Seashore painting", "key.doc.declaration": "@objc public static let horsesOnSeashore: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"247\" column=\"29\"><Name>horsesOnSeashore</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)horsesOnSeashore</USR><Declaration>@objc public static let horsesOnSeashore: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Giorgio de Chirico\u2019s Horses on the Seashore painting</Para></Abstract></CommentParts></Other>", "key.doc.line": 247, "key.doc.name": "horsesOnSeashore", "key.doc.type": "Other", "key.doclength": 78, "key.docoffset": 9881, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>horsesOnSeashore</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 79, "key.name": "horsesOnSeashore", "key.namelength": 16, "key.nameoffset": 9987, "key.offset": 9976, "key.parsed_declaration": "@objc public static let horsesOnSeashore = PaintingStyleModel.Style.horsesOnSeashore.build()", "key.parsed_scope.end": 247, "key.parsed_scope.start": 247, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)horsesOnSeashore"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let theTrial: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10131}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 10125}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Sidney Nolan's The Trial painting.", "key.doc.declaration": "@objc public static let theTrial: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"250\" column=\"29\"><Name>theTrial</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theTrial</USR><Declaration>@objc public static let theTrial: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Sidney Nolan\u2019s The Trial painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 250, "key.doc.name": "theTrial", "key.doc.type": "Other", "key.doclength": 60, "key.docoffset": 10061, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>theTrial</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 63, "key.name": "theTrial", "key.namelength": 8, "key.nameoffset": 10149, "key.offset": 10138, "key.parsed_declaration": "@objc public static let theTrial = PaintingStyleModel.Style.theTrial.build()", "key.parsed_scope.end": 250, "key.parsed_scope.start": 250, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)theTrial"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ritmoPlastico: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10283}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 10277}], "key.doc.column": 29, "key.doc.comment": "Style Model based on Gino Severini's Ritmo Plastico painting.", "key.doc.declaration": "@objc public static let ritmoPlastico: FritzVision.FritzVisionStyleModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"253\" column=\"29\"><Name>ritmoPlastico</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)ritmoPlastico</USR><Declaration>@objc public static let ritmoPlastico: FritzVision.FritzVisionStyleModel</Declaration><CommentParts><Abstract><Para>Style Model based on Gino Severini\u2019s Ritmo Plastico painting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 253, "key.doc.name": "ritmoPlastico", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 10207, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ritmoPlastico</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 73, "key.name": "ritmoPlastico", "key.namelength": 13, "key.nameoffset": 10301, "key.offset": 10290, "key.parsed_declaration": "@objc public static let ritmoPlastico = PaintingStyleModel.Style.ritmoPlastico.build()", "key.parsed_scope.end": 253, "key.parsed_scope.start": 253, "key.typename": "FritzVisionStyleModel", "key.typeusr": "$S11FritzVision0aB10StyleModelCD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cpy)ritmoPlastico"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(allModels) public static func allModels() -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10426}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 10405}], "key.bodylength": 324, "key.bodyoffset": 10485, "key.doc.column": 24, "key.doc.comment": "A list of all Style Models.", "key.doc.declaration": "@objc(allModels) public static func allModels() -> [FritzVisionStyleModel]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift\" line=\"257\" column=\"24\"><Name>allModels()</Name><USR>c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cm)allModels</USR><Declaration>@objc(allModels) public static func allModels() -&gt; [FritzVisionStyleModel]</Declaration><CommentParts><Abstract><Para>A list of all Style Models.</Para></Abstract></CommentParts></Function>", "key.doc.line": 257, "key.doc.name": "allModels()", "key.doc.type": "Function", "key.doclength": 32, "key.docoffset": 10369, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/FritzVisionStyleModelInstances.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(allModels)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>allModels</decl.name>() -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModel\">FritzVisionStyleModel</ref.class>]</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 377, "key.name": "allModels()", "key.namelength": 11, "key.nameoffset": 10445, "key.offset": 10433, "key.parsed_declaration": "public static func allModels() -> [FritzVisionStyleModel]", "key.parsed_scope.end": 271, "key.parsed_scope.start": 257, "key.substructure": [], "key.typename": "(FritzVisionStyleModel.Type) -> () -> [FritzVisionStyleModel]", "key.typeusr": "$SSay11FritzVision0aB10StyleModelCGycD", "key.usr": "c:@CM@FritzVisionStyleModelPaintings@FritzVision@objc(cs)FritzVisionStyleModel(cm)allModels"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivinngRoomSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1639, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModel) final class FritzVisionLivingRoomSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1328}], "key.bodylength": 235, "key.bodyoffset": 1402, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) final class FritzVisionLivingRoomSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel", "key.doc.full_as_xml": "<Class><Name>FritzVisionLivingRoomSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModel) final class FritzVisionLivingRoomSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.name": "FritzVisionLivingRoomSegmentationModel", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 286, "key.modulename": "FritzVision", "key.name": "FritzVisionLivingRoomSegmentationModel", "key.namelength": 38, "key.nameoffset": 1362, "key.offset": 1352, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) public convenience init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1431}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1424}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 1408}], "key.bodylength": 184, "key.bodyoffset": 1451, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivinngRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 193, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1443, "key.offset": 1443, "key.parsed_declaration": "public convenience init()", "key.parsed_scope.end": 38, "key.parsed_scope.start": 35, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzMLModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivinngRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzMLModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "fritzMLModel", "key.namelength": 12, "key.nameoffset": 1464, "key.offset": 1460, "key.parsed_declaration": "let fritzMLModel = LivingRoomModel().fritz().model as! FritzMLModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB27LivingRoomSegmentationModelCABEACycfc12fritzMLModelL_0a7ManagedF00aH0Cvp"}], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> () -> FritzVisionLivingRoomSegmentationModel", "key.typeusr": "$S11FritzVision0aB27LivingRoomSegmentationModelCycD", "key.usr": "c:@CM@FritzVisionLivingRoomSegmentationModel@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel(im)init"}], "key.typename": "FritzVisionLivingRoomSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB27LivingRoomSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1764, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModel) final class FritzVisionPeopleSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1447}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1423}], "key.bodylength": 227, "key.bodyoffset": 1535, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) final class FritzVisionPeopleSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel", "key.doc.full_as_xml": "<Class><Name>FritzVisionPeopleSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModel) final class FritzVisionPeopleSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.name": "FritzVisionPeopleSegmentationModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 1376, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 274, "key.modulename": "FritzVision", "key.name": "FritzVisionPeopleSegmentationModel", "key.namelength": 34, "key.nameoffset": 1499, "key.offset": 1489, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) public convenience init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1568}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1561}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 1545}], "key.bodylength": 172, "key.bodyoffset": 1588, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 181, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1580, "key.offset": 1580, "key.parsed_declaration": "public convenience init()", "key.parsed_scope.end": 41, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "fritzModel", "key.namelength": 10, "key.nameoffset": 1601, "key.offset": 1597, "key.parsed_declaration": "let fritzModel = PeopleModel().fritz().model as! FritzMLModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB23PeopleSegmentationModelCABEACycfc05fritzE0L_0a7ManagedE00A7MLModelCvp"}], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> () -> FritzVisionPeopleSegmentationModel", "key.typeusr": "$S11FritzVision0aB23PeopleSegmentationModelCycD", "key.usr": "c:@CM@FritzVisionPeopleSegmentationModel@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel(im)init"}], "key.typename": "FritzVisionPeopleSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB23PeopleSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1565, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModel) final class FritzVisionOutdoorSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1328}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1304}], "key.bodylength": 181, "key.bodyoffset": 1382, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) final class FritzVisionOutdoorSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel", "key.doc.full_as_xml": "<Class><Name>FritzVisionOutdoorSegmentationModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModel) final class FritzVisionOutdoorSegmentationModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.name": "FritzVisionOutdoorSegmentationModel", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 229, "key.modulename": "FritzVision", "key.name": "FritzVisionOutdoorSegmentationModel", "key.namelength": 35, "key.nameoffset": 1345, "key.offset": 1335, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithOptionalModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1429}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1422}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1388}], "key.bodylength": 86, "key.bodyoffset": 1475, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithOptionalModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "init(model:)", "key.namelength": 32, "key.nameoffset": 1441, "key.offset": 1441, "key.parsed_declaration": "public convenience init(model: FritzMLModel? = nil)", "key.parsed_scope.end": 36, "key.parsed_scope.start": 34, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:\">convenience init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> (FritzMLModel?) -> FritzVisionOutdoorSegmentationModel", "key.typeusr": "$S5model11FritzVision0bC24OutdoorSegmentationModelC0b7ManagedF00B7MLModelCSg_tcD", "key.usr": "c:@CM@FritzVisionOutdoorSegmentationModel@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel(im)initWithOptionalModel:"}], "key.typename": "FritzVisionOutdoorSegmentationModel.Type", "key.typeusr": "$S11FritzVision0aB24OutdoorSegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationMediumModel/FritzVisionPeopleSegmentationMediumModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1861, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationMediumModel) final class FritzVisionPeopleSegmentationMediumModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1532}], "key.bodylength": 251, "key.bodyoffset": 1608, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) final class FritzVisionPeopleSegmentationMediumModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel", "key.doc.full_as_xml": "<Class><Name>FritzVisionPeopleSegmentationMediumModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationMediumModel) final class FritzVisionPeopleSegmentationMediumModel : FritzVision.FritzVisionSegmentationModel, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.name": "FritzVisionPeopleSegmentationMediumModel", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 1485, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationMediumModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationMediumModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 304, "key.modulename": "FritzVision", "key.name": "FritzVisionPeopleSegmentationMediumModel", "key.namelength": 40, "key.nameoffset": 1566, "key.offset": 1556, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) public convenience init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1637}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1630}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 1614}], "key.bodylength": 200, "key.bodyoffset": 1657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationMediumModel/FritzVisionPeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 209, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1649, "key.offset": 1649, "key.parsed_declaration": "public convenience init()", "key.parsed_scope.end": 41, "key.parsed_scope.start": 38, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:\">init(model:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">convenience init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let fritzMLModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationMediumModel/FritzVisionPeopleSegmentationMediumModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzMLModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 69, "key.name": "fritzMLModel", "key.namelength": 12, "key.nameoffset": 1670, "key.offset": 1666, "key.parsed_declaration": "let fritzMLModel = PeopleMediumModel().fritz().model as! FritzMLModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB29PeopleSegmentationMediumModelCABEACycfc12fritzMLModelL_0a7ManagedF00aH0Cvp"}], "key.typename": "(FritzVisionPeopleSegmentationMediumModel.Type) -> () -> FritzVisionPeopleSegmentationMediumModel", "key.typeusr": "$S11FritzVision0aB29PeopleSegmentationMediumModelCycD", "key.usr": "c:@CM@FritzVisionPeopleSegmentationMediumModel@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel(im)init"}], "key.typename": "FritzVisionPeopleSegmentationMediumModel.Type", "key.typeusr": "$S11FritzVision0aB29PeopleSegmentationMediumModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationMediumModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPoseModel/FritzVisionPoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1008, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModel) final class FritzVisionPoseModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type>, <Type usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 695}], "key.bodylength": 255, "key.bodyoffset": 751, "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor", "key.doc.full_as_xml": "<Class><Name>FritzVisionPoseModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPoseModel) final class FritzVisionPoseModel : NSObject, CoreMLPredictor, DownloadableModel, FritzPredictor</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.name": "FritzVisionPoseModel", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A9PredictorP\">FritzPredictor</ref.protocol></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 288, "key.modulename": "FritzVision", "key.name": "FritzVisionPoseModel", "key.namelength": 20, "key.nameoffset": 729, "key.offset": 719, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithOptionalModel:) public convenience init(with model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>? = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 798}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 791}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 757}], "key.bodylength": 155, "key.bodyoffset": 849, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPoseModel/FritzVisionPoseModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithOptionalModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>model</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 195, "key.name": "init(with:)", "key.namelength": 37, "key.nameoffset": 810, "key.offset": 810, "key.parsed_declaration": "public convenience init(with model: FritzMLModel? = nil)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModel(im)initWithModel:\">init(model:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPoseModel/FritzVisionPoseModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 104, "key.name": "model", "key.namelength": 5, "key.nameoffset": 862, "key.offset": 858, "key.parsed_declaration": "let model: FritzMLModel = model ??  multi_person_mobilenet_v1_075_float().fritz().model as! FritzMLModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "FritzMLModel", "key.typeusr": "$S17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision0aB9PoseModelCABE4withAC0a7ManagedD00A7MLModelCSg_tcfc5modelL0_AGvp"}], "key.typename": "(FritzVisionPoseModel.Type) -> (FritzMLModel?) -> FritzVisionPoseModel", "key.typeusr": "$S4with11FritzVision0bC9PoseModelC0b7ManagedE00B7MLModelCSg_tcD", "key.usr": "c:@CM@FritzVisionPoseModel@FritzVision@objc(cs)FritzVisionPoseModel(im)initWithOptionalModel:"}], "key.typename": "FritzVisionPoseModel.Type", "key.typeusr": "$S11FritzVision0aB9PoseModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2902, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseResult) class FritzVisionPoseResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 212}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 188}], "key.bodylength": 2648, "key.bodyoffset": 252, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2682, "key.modulename": "FritzVision", "key.name": "FritzVisionPoseResult", "key.namelength": 21, "key.nameoffset": 229, "key.offset": 219, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(decodePoses:) public func decodeMultiplePoses(numPoses: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 415}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 391}], "key.bodylength": 205, "key.bodyoffset": 473, "key.doc.column": 17, "key.doc.comment": "Decodes all poses above pose threshold.\n\n- Returns: Pose list of poses above mininimum pose threshold option.", "key.doc.declaration": "@objc(decodePoses:) public func decodeMultiplePoses(numPoses: Int) -> [Pose]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift\" line=\"16\" column=\"17\"><Name>decodeMultiplePoses(numPoses:)</Name><USR>c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)decodePoses:</USR><Declaration>@objc(decodePoses:) public func decodeMultiplePoses(numPoses: Int) -&gt; [Pose]</Declaration><CommentParts><Abstract><Para>Decodes all poses above pose threshold.</Para></Abstract><ResultDiscussion><Para>Pose list of poses above mininimum pose threshold option.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 16, "key.doc.name": "decodeMultiplePoses(numPoses:)", "key.doc.result_discussion": [{"Para": "Pose list of poses above mininimum pose threshold option."}], "key.doc.type": "Function", "key.doclength": 129, "key.docoffset": 258, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(decodePoses:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decodeMultiplePoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>numPoses</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 257, "key.name": "decodeMultiplePoses(numPoses:)", "key.namelength": 34, "key.nameoffset": 427, "key.offset": 422, "key.parsed_declaration": "public func decodeMultiplePoses(numPoses: Int) -> [Pose]", "key.parsed_scope.end": 18, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(FritzVisionPoseResult) -> (Int) -> [Pose]", "key.typeusr": "$S8numPosesSay11FritzVision4PoseCGSi_tcD", "key.usr": "c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)decodePoses:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(drawNumPoses:) public func drawPoses(numPoses: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 880}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 855}], "key.bodylength": 97, "key.bodyoffset": 930, "key.doc.column": 17, "key.doc.comment": " Decode poses and draws on original UIImage.\n\n- Parameter numPoses: Maximum number of poses to find.\n- Returns: UIImage if poses detected.", "key.doc.declaration": "@objc(drawNumPoses:) public func drawPoses(numPoses: Int) -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift\" line=\"25\" column=\"17\"><Name>drawPoses(numPoses:)</Name><USR>c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawNumPoses:</USR><Declaration>@objc(drawNumPoses:) public func drawPoses(numPoses: Int) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Decode poses and draws on original UIImage.</Para></Abstract><Parameters><Parameter><Name>numPoses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Maximum number of poses to find.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>UIImage if poses detected.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 25, "key.doc.name": "drawPoses(numPoses:)", "key.doc.parameters": [{"discussion": [{"Para": "Maximum number of poses to find."}], "name": "numPoses"}], "key.doc.result_discussion": [{"Para": "UIImage if poses detected."}], "key.doc.type": "Function", "key.doclength": 166, "key.docoffset": 685, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(drawNumPoses:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>drawPoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>numPoses</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 141, "key.name": "drawPoses(numPoses:)", "key.namelength": 24, "key.nameoffset": 892, "key.offset": 887, "key.parsed_declaration": "public func drawPoses(numPoses: Int) -> UIImage?", "key.parsed_scope.end": 28, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPosesFor:\">drawPoses(_:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let poses: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 51, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 943, "key.offset": 939, "key.parsed_declaration": "let poses = decodeMultiplePoses(numPoses: numPoses)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[Pose]", "key.typeusr": "$SSay11FritzVision4PoseCGD", "key.usr": "s:11FritzVision0aB10PoseResultC0ab5MultiC5ModelE9drawPoses03numH0So7UIImageCSgSi_tF5posesL_SayAA0C0CGvp"}], "key.typename": "(FritzVisionPoseResult) -> (Int) -> UIImage?", "key.typeusr": "$S8numPosesSo7UIImageCSgSi_tcD", "key.usr": "c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawNumPoses:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(drawPosesFor:) public func drawPoses(_ poses: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</Type>]) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1221}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 1196}], "key.bodylength": 1625, "key.bodyoffset": 1273, "key.doc.column": 17, "key.doc.comment": "Draw detected poses on input image.\n\n- Parameter poses: List of poses to draw\n- Returns: Original image with poses drawn on image.", "key.doc.declaration": "@objc(drawPosesFor:) public func drawPoses(_ poses: [Pose]) -> UIImage?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift\" line=\"35\" column=\"17\"><Name>drawPoses(_:)</Name><USR>c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPosesFor:</USR><Declaration>@objc(drawPosesFor:) public func drawPoses(_ poses: [Pose]) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Draw detected poses on input image.</Para></Abstract><Parameters><Parameter><Name>poses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of poses to draw</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Original image with poses drawn on image.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 35, "key.doc.name": "drawPoses(_:)", "key.doc.parameters": [{"discussion": [{"Para": "List of poses to draw"}], "name": "poses"}], "key.doc.result_discussion": [{"Para": "Original image with poses drawn on image."}], "key.doc.type": "Function", "key.doclength": 158, "key.docoffset": 1034, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(drawPosesFor:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>drawPoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>poses</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzPose\">Pose</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1671, "key.name": "drawPoses(_:)", "key.namelength": 26, "key.nameoffset": 1233, "key.offset": 1228, "key.parsed_declaration": "public func drawPoses(_ poses: [Pose]) -> UIImage?", "key.parsed_scope.end": 73, "key.parsed_scope.start": 35, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawNumPoses:\">drawPoses(numPoses:)</RelatedName>"}], "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "TODO: Fix up center crop detection.", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1547}, {"key.annotated_decl": "<Declaration>let areaSize: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 89, "key.name": "areaSize", "key.namelength": 8, "key.nameoffset": 1595, "key.offset": 1591, "key.parsed_declaration": "let areaSize = CGRect(x: 0, y: 0, width: originalSize.width, height: originalSize.height)", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "CGRect", "key.typeusr": "$SSo6CGRectVD", "key.usr": "s:11FritzVision0aB10PoseResultC0ab5MultiC5ModelE9drawPosesySo7UIImageCSgSayAA0C0CGF8areaSizeL_So6CGRectVvp"}, {"key.annotated_decl": "<Declaration>let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionMultiPoseModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "image", "key.namelength": 5, "key.nameoffset": 2785, "key.offset": 2781, "key.parsed_declaration": "let image = UIGraphicsGetImageFromCurrentImageContext()", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseResult(py)image\">image</RelatedName>"}], "key.typename": "UIImage?", "key.typeusr": "$SSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB10PoseResultC0ab5MultiC5ModelE9drawPosesySo7UIImageCSgSayAA0C0CGF5imageL_AHvp"}], "key.typename": "(FritzVisionPoseResult) -> ([Pose]) -> UIImage?", "key.typeusr": "$SySo7UIImageCSgSay11FritzVision4PoseCGcD", "key.usr": "c:@CM@FritzVisionMultiPoseModel@FritzVision@objc(cs)FritzVisionPoseResult(im)drawPosesFor:"}], "key.typename": "FritzVisionPoseResult.Type", "key.typeusr": "$S11FritzVision0aB10PoseResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseResult"}]}}]