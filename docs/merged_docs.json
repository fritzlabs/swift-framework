[{"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8236, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum Response</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 288}], "key.bodylength": 87, "key.bodyoffset": 310, "key.doc.column": 13, "key.doc.comment": "Represents an HTTP response", "key.doc.declaration": "public enum Response", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"15\" column=\"13\"><Name>Response</Name><USR>s:9FritzCore8ResponseO</USR><Declaration>public enum Response</Declaration><CommentParts><Abstract><Para>Represents an HTTP response</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "Response", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 256, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Response</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 103, "key.name": "Response", "key.namelength": 8, "key.nameoffset": 300, "key.offset": 295, "key.parsed_declaration": "public enum Response", "key.parsed_scope.end": 18, "key.parsed_scope.start": 15, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 315, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 52, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 344, "key.substructure": []}], "key.typename": "Response.Type", "key.typeusr": "$S9FritzCore8ResponseOmD", "key.usr": "s:9FritzCore8ResponseO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RequestError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.bodylength": 87, "key.bodyoffset": 478, "key.doc.column": 13, "key.doc.comment": "Represents an internal HTTP client error", "key.doc.declaration": "public enum RequestError : Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"21\" column=\"13\"><Name>RequestError</Name><USR>s:9FritzCore12RequestErrorO</USR><Declaration>public enum RequestError : Error</Declaration><CommentParts><Abstract><Para>Represents an internal HTTP client error</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "RequestError", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 400, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 471}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RequestError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 114, "key.name": "RequestError", "key.namelength": 12, "key.nameoffset": 457, "key.offset": 452, "key.parsed_declaration": "public enum RequestError: Error", "key.parsed_scope.end": 26, "key.parsed_scope.start": 21, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 483, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 504, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 529, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 549, "key.substructure": []}], "key.typename": "RequestError.Type", "key.typeusr": "$S9FritzCore12RequestErrorOmD", "key.usr": "s:9FritzCore12RequestErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestCompletionHandler = (<Type usr=\"s:9FritzCore8ResponseO\">Response</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.doc.column": 18, "key.doc.comment": "Type to handle network request completion", "key.doc.declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"29\" column=\"18\"><Name>RequestCompletionHandler</Name><USR>s:9FritzCore24RequestCompletionHandlera</USR><Declaration>public typealias RequestCompletionHandler = (Response) -&gt; Void</Declaration><CommentParts><Abstract><Para>Type to handle network request completion</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "RequestCompletionHandler", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 568, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestCompletionHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore8ResponseO\">Response</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 55, "key.name": "RequestCompletionHandler", "key.namelength": 24, "key.nameoffset": 631, "key.offset": 621, "key.parsed_declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(Response) -> ().Type", "key.typeusr": "$Sy9FritzCore8ResponseOcmD", "key.usr": "s:9FritzCore24RequestCompletionHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestOptions = [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}], "key.doc.column": 18, "key.doc.comment": "Type to represent request body/url options", "key.doc.declaration": "public typealias RequestOptions = [String : Any]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"32\" column=\"18\"><Name>RequestOptions</Name><USR>s:9FritzCore14RequestOptionsa</USR><Declaration>public typealias RequestOptions = [String : Any]</Declaration><CommentParts><Abstract><Para>Type to represent request body/url options</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "RequestOptions", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 678, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestOptions</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 40, "key.name": "RequestOptions", "key.namelength": 14, "key.nameoffset": 742, "key.offset": 732, "key.parsed_declaration": "public typealias RequestOptions = [String: Any]", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[String : Any].Type", "key.typeusr": "$SSDySSypGmD", "key.usr": "s:9FritzCore14RequestOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestHeaders = [<Type usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 812}], "key.doc.column": 18, "key.doc.comment": "Type to represent request headers", "key.doc.declaration": "public typealias RequestHeaders = [HTTPHeader : String]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"35\" column=\"18\"><Name>RequestHeaders</Name><USR>s:9FritzCore14RequestHeadersa</USR><Declaration>public typealias RequestHeaders = [HTTPHeader : String]</Declaration><CommentParts><Abstract><Para>Type to represent request headers</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "RequestHeaders", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 774, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestHeaders</decl.name> = [<ref.enum usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</ref.enum> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "RequestHeaders", "key.namelength": 14, "key.nameoffset": 829, "key.offset": 819, "key.parsed_declaration": "public typealias RequestHeaders = [HTTPHeader: String]", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "[HTTPHeader : String].Type", "key.typeusr": "$SSDy9FritzCore10HTTPHeaderOSSGmD", "key.usr": "s:9FritzCore14RequestHeadersa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPMethod : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 892}], "key.bodylength": 93, "key.bodyoffset": 924, "key.doc.column": 13, "key.doc.comment": "HTTP methods we use", "key.doc.declaration": "public enum HTTPMethod : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"38\" column=\"13\"><Name>HTTPMethod</Name><USR>s:9FritzCore10HTTPMethodO</USR><Declaration>public enum HTTPMethod : String</Declaration><CommentParts><Abstract><Para>HTTP methods we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "HTTPMethod", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 868, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 916}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPMethod</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 119, "key.name": "HTTPMethod", "key.namelength": 10, "key.nameoffset": 904, "key.offset": 899, "key.parsed_declaration": "public enum HTTPMethod: String", "key.parsed_scope.end": 43, "key.parsed_scope.start": 38, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 929, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 950, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 973, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 994, "key.substructure": []}], "key.typename": "HTTPMethod.Type", "key.typeusr": "$S9FritzCore10HTTPMethodOmD", "key.usr": "s:9FritzCore10HTTPMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPHeader : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1044}], "key.bodylength": 299, "key.bodyoffset": 1076, "key.doc.column": 13, "key.doc.comment": "HTTP headers we use", "key.doc.declaration": "public enum HTTPHeader : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"46\" column=\"13\"><Name>HTTPHeader</Name><USR>s:9FritzCore10HTTPHeaderO</USR><Declaration>public enum HTTPHeader : String</Declaration><CommentParts><Abstract><Para>HTTP headers we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "HTTPHeader", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1020, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1068}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPHeader</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 325, "key.name": "HTTPHeader", "key.namelength": 10, "key.nameoffset": 1056, "key.offset": 1051, "key.parsed_declaration": "public enum HTTPHeader: String", "key.parsed_scope.end": 54, "key.parsed_scope.start": 46, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 31, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1081, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 33, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1117, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 47, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1155, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 45, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1207, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1257, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1291, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 37, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1337, "key.substructure": []}], "key.typename": "HTTPHeader.Type", "key.typeusr": "$S9FritzCore10HTTPHeaderOmD", "key.usr": "s:9FritzCore10HTTPHeaderO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1493}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1486}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1425}], "key.bodylength": 414, "key.bodyoffset": 1516, "key.doc.column": 20, "key.doc.comment": "Class for communicating with the Fritz API", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 1378, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 432, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 1505, "key.offset": 1499, "key.parsed_declaration": "public final class APIClient", "key.parsed_scope.end": 73, "key.parsed_scope.start": 58, "key.runtime_name": "_TtC4main9APIClient", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1642}], "key.doc.column": 16, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"64\" column=\"16\"><Name>session</Name><USR>s:9FritzCore9APIClientC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 64, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1606, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 1653, "key.offset": 1649, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore9APIClientC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1711}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1704}], "key.bodylength": 36, "key.bodyoffset": 1744, "key.doc.column": 21, "key.doc.comment": "Required initializer", "key.doc.declaration": "public required init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"67\" column=\"21\"><Name>init(session:)</Name><USR>s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc</USR><Declaration>public required init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 67, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1675, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 61, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 1720, "key.offset": 1720, "key.parsed_declaration": "public required init(session: Session)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 67, "key.substructure": [], "key.typename": "(APIClient.Type) -> (Session) -> APIClient", "key.typeusr": "$S7session9FritzCore9APIClientCAB7SessionC_tcD", "key.usr": "s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc"}], "key.typename": "APIClient.Type", "key.typeusr": "$S9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}, {"key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1933}], "key.bodylength": 6219, "key.bodyoffset": 2015, "key.doc.column": 20, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 6241, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 2004, "key.offset": 1994, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func dataTask(_ request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type>, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2076}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 2053}], "key.bodylength": 360, "key.bodyoffset": 2195, "key.doc.column": 17, "key.doc.comment": "Create a json data task", "key.doc.declaration": "public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = default) -> URLSessionDataTask", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"80\" column=\"17\"><Name>dataTask(_:completionHandler:)</Name><USR>s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF</USR><Declaration>public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = default) -&gt; URLSessionDataTask</Declaration><CommentParts><Abstract><Para>Create a json data task</Para></Abstract></CommentParts></Function>", "key.doc.line": 80, "key.doc.name": "dataTask(_:completionHandler:)", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 2021, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>dataTask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>request</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 473, "key.name": "dataTask(_:completionHandler:)", "key.namelength": 83, "key.nameoffset": 2088, "key.offset": 2083, "key.parsed_declaration": "public func dataTask(_ request: URLRequest, completionHandler: RequestCompletionHandler? = nil) -> URLSessionDataTask", "key.parsed_scope.end": 88, "key.parsed_scope.start": 80, "key.substructure": [{"key.annotated_decl": "<Declaration>let task: <Type usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>task</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSURLSessionDataTask\">URLSessionDataTask</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 304, "key.name": "task", "key.namelength": 4, "key.nameoffset": 2208, "key.offset": 2204, "key.parsed_declaration": "let task = ephemeralURLSession.dataTask(with: request) { data, response, error in", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "URLSessionDataTask", "key.typeusr": "$SSo20NSURLSessionDataTaskCD", "key.usr": "s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF4taskL_AGvp"}], "key.typename": "(APIClient) -> (URLRequest, (Response) -> ()?) -> URLSessionDataTask", "key.typeusr": "$S_17completionHandlerSo20NSURLSessionDataTaskC10Foundation10URLRequestV_y9FritzCore8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC8dataTask_17completionHandlerSo016NSURLSessionDataE0C10Foundation10URLRequestV_yAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func get(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2626}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 2603}], "key.bodylength": 179, "key.bodyoffset": 2787, "key.doc.column": 17, "key.doc.comment": "Perform GET request to Fritz API", "key.doc.declaration": "public func get(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"92\" column=\"17\"><Name>get(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func get(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform GET request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 92, "key.doc.name": "get(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 37, "key.docoffset": 2562, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>get</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 334, "key.name": "get(path:options:headers:completionHandler:)", "key.namelength": 133, "key.nameoffset": 2638, "key.offset": 2633, "key.parsed_declaration": "public func get(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 96, "key.parsed_scope.start": 92, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 78, "key.name": "request", "key.namelength": 7, "key.nameoffset": 2800, "key.offset": 2796, "key.parsed_declaration": "let request = urlRequest(.get, path: path, options: options, headers: headers)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC3get4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func post(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3038}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3015}], "key.bodylength": 180, "key.bodyoffset": 3200, "key.doc.column": 17, "key.doc.comment": "Perform POST request to Fritz API", "key.doc.declaration": "public func post(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"100\" column=\"17\"><Name>post(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func post(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform POST request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "post(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 38, "key.docoffset": 2973, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 336, "key.name": "post(path:options:headers:completionHandler:)", "key.namelength": 134, "key.nameoffset": 3050, "key.offset": 3045, "key.parsed_declaration": "public func post(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 104, "key.parsed_scope.start": 100, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 79, "key.name": "request", "key.namelength": 7, "key.nameoffset": 3213, "key.offset": 3209, "key.parsed_declaration": "let request = urlRequest(.post, path: path, options: options, headers: headers)", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC4post4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func put(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3451}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3428}], "key.bodylength": 179, "key.bodyoffset": 3612, "key.doc.column": 17, "key.doc.comment": "Perform PUT request to Fritz API", "key.doc.declaration": "public func put(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"108\" column=\"17\"><Name>put(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func put(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform PUT request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 108, "key.doc.name": "put(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 37, "key.docoffset": 3387, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>put</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 334, "key.name": "put(path:options:headers:completionHandler:)", "key.namelength": 133, "key.nameoffset": 3463, "key.offset": 3458, "key.parsed_declaration": "public func put(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 112, "key.parsed_scope.start": 108, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 78, "key.name": "request", "key.namelength": 7, "key.nameoffset": 3625, "key.offset": 3621, "key.parsed_declaration": "let request = urlRequest(.put, path: path, options: options, headers: headers)", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC3put4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public func delete(path: <Type usr=\"s:SS\">String</Type>, options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>? = default, headers: <Type usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</Type>? = default, completionHandler: <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>? = default) -&gt; <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3865}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3842}], "key.bodylength": 182, "key.bodyoffset": 4029, "key.doc.column": 17, "key.doc.comment": "Perform DELETE request to Fritz API", "key.doc.declaration": "public func delete(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -> URLRequest", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"116\" column=\"17\"><Name>delete(path:options:headers:completionHandler:)</Name><USR>s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF</USR><Declaration>public func delete(path: String, options: RequestOptions? = default, headers: RequestHeaders? = default, completionHandler: RequestCompletionHandler? = default) -&gt; URLRequest</Declaration><CommentParts><Abstract><Para>Perform DELETE request to Fritz API</Para></Abstract></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "delete(path:options:headers:completionHandler:)", "key.doc.type": "Function", "key.doclength": 40, "key.docoffset": 3798, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>delete</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>headers</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestHeadersa\">RequestHeaders</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias>?</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 340, "key.name": "delete(path:options:headers:completionHandler:)", "key.namelength": 136, "key.nameoffset": 3877, "key.offset": 3872, "key.parsed_declaration": "public func delete(path: String, options: RequestOptions? = nil, headers: RequestHeaders? = nil, completionHandler: RequestCompletionHandler? = nil) -> URLRequest", "key.parsed_scope.end": 120, "key.parsed_scope.start": 116, "key.substructure": [{"key.annotated_decl": "<Declaration>let request: <Type usr=\"s:10Foundation10URLRequestV\">URLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>request</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation10URLRequestV\">URLRequest</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 81, "key.name": "request", "key.namelength": 7, "key.nameoffset": 4042, "key.offset": 4038, "key.parsed_declaration": "let request = urlRequest(.delete, path: path, options: options, headers: headers)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "URLRequest", "key.typeusr": "$S10Foundation10URLRequestVD", "key.usr": "s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF7requestL_AKvp"}], "key.typename": "(APIClient) -> (String, [String : Any]?, [HTTPHeader : String]?, (Response) -> ()?) -> URLRequest", "key.typeusr": "$S4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDy9FritzCore10HTTPHeaderOSSGSgyAJ8ResponseOcSgtcD", "key.usr": "s:9FritzCore9APIClientC6delete4path7options7headers17completionHandler10Foundation10URLRequestVSS_SDySSypGSgSDyAA10HTTPHeaderOSSGSgyAA8ResponseOcSgtF"}], "key.typename": "APIClient.Type", "key.typeusr": "$S9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8402, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultMaxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 271}], "key.doc.column": 12, "key.doc.comment": "Default to 10 retries, last retry is ~1 hour", "key.doc.declaration": "public let kDefaultMaxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"13\" column=\"12\"><Name>kDefaultMaxRetries</Name><USR>s:9FritzCore18kDefaultMaxRetriesSuvp</USR><Declaration>public let kDefaultMaxRetries: UInt</Declaration><CommentParts><Abstract><Para>Default to 10 retries, last retry is ~1 hour</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "kDefaultMaxRetries", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 222, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultMaxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 33, "key.name": "kDefaultMaxRetries", "key.namelength": 18, "key.nameoffset": 282, "key.offset": 278, "key.parsed_declaration": "public let kDefaultMaxRetries: UInt = 12", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore18kDefaultMaxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 351}], "key.doc.column": 12, "key.doc.comment": "Status codes to retry if received", "key.doc.declaration": "public let kDefaultRetryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"16\" column=\"12\"><Name>kDefaultRetryStatusCodes</Name><USR>s:9FritzCore24kDefaultRetryStatusCodesShySiGvp</USR><Declaration>public let kDefaultRetryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry if received</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "kDefaultRetryStatusCodes", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 313, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 51, "key.name": "kDefaultRetryStatusCodes", "key.namelength": 24, "key.nameoffset": 362, "key.offset": 358, "key.parsed_declaration": "public let kDefaultRetryStatusCodes: Set<Int> = [502, 503]", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore24kDefaultRetryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultRetryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 436}], "key.doc.column": 12, "key.doc.comment": "Error codes to retry", "key.doc.declaration": "public let kDefaultRetryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"19\" column=\"12\"><Name>kDefaultRetryErrorCodes</Name><USR>s:9FritzCore23kDefaultRetryErrorCodesShySiGvp</USR><Declaration>public let kDefaultRetryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "kDefaultRetryErrorCodes", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 411, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultRetryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 127, "key.name": "kDefaultRetryErrorCodes", "key.namelength": 23, "key.nameoffset": 447, "key.offset": 443, "key.parsed_declaration": "public let kDefaultRetryErrorCodes: Set<Int> = [", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore23kDefaultRetryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kDefaultExponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 620}], "key.doc.column": 12, "key.doc.comment": "1 second multiplier for exponential backoff", "key.doc.declaration": "public let kDefaultExponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"26\" column=\"12\"><Name>kDefaultExponentialMultiplier</Name><USR>s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp</USR><Declaration>public let kDefaultExponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>1 second multiplier for exponential backoff</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "kDefaultExponentialMultiplier", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 572, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kDefaultExponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 48, "key.name": "kDefaultExponentialMultiplier", "key.namelength": 29, "key.nameoffset": 631, "key.offset": 627, "key.parsed_declaration": "public let kDefaultExponentialMultiplier: UInt32 = 1000", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore29kDefaultExponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class BatchedRequestQueue&lt;Element&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1500}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1493}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1432}], "key.bodylength": 6858, "key.bodyoffset": 1542, "key.doc.column": 20, "key.doc.comment": "This class attemmpts to strategically batch send requests and batch retry requests on failures.\nThe main flow of this class looks like:\n\nSUCCESS:\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush was successful\n\nFAILURE\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush failed\n4. Add items back into items array\n5. Stop processing queue (maintenance mode)\n5. If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck\n\nHEALTHCHECK SUCCESS\n1. We received a successful healthcheck\n2. Start processing items again (disable maintenance mode)\n\nHEALTHCHECK FAILURE\n1. We received a failed healthcheck, exponential backoff and retry health check", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue<Element>", "key.doc.discussion": [{"Para": "SUCCESS:"}, {"List-Number": ""}, {"Para": "FAILURE"}, {"List-Number": ""}, {"Para": "HEALTHCHECK SUCCESS"}, {"List-Number": ""}, {"Para": "HEALTHCHECK FAILURE"}, {"List-Number": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"53\" column=\"20\"><Name>BatchedRequestQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>This class attemmpts to strategically batch send requests and batch retry requests on failures. The main flow of this class looks like:</Para></Abstract><Discussion><Para>SUCCESS:</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush was successful</Para></Item></List-Number><Para>FAILURE</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush failed</Para></Item><Item><Para>Add items back into items array</Para></Item><Item><Para>Stop processing queue (maintenance mode)</Para></Item><Item><Para>If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck</Para></Item></List-Number><Para>HEALTHCHECK SUCCESS</Para><List-Number><Item><Para>We received a successful healthcheck</Para></Item><Item><Para>Start processing items again (disable maintenance mode)</Para></Item></List-Number><Para>HEALTHCHECK FAILURE</Para><List-Number><Item><Para>We received a failed healthcheck, exponential backoff and retry health check</Para></Item></List-Number></Discussion></CommentParts></Class>", "key.doc.line": 53, "key.doc.name": "BatchedRequestQueue", "key.doc.type": "Class", "key.doclength": 754, "key.docoffset": 677, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BatchedRequestQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 6895, "key.name": "BatchedRequestQueue", "key.namelength": 19, "key.nameoffset": 1512, "key.offset": 1506, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 264, "key.parsed_scope.start": 53, "key.substructure": [{"key.annotated_decl": "<Declaration>Element</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 7, "key.name": "Element", "key.namelength": 7, "key.nameoffset": 1532, "key.offset": 1532, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "Element.Type", "key.typeusr": "$SxmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7Elementxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.FlushHandler = ([<Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1548}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>FlushHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 80, "key.name": "FlushHandler", "key.namelength": 12, "key.nameoffset": 1565, "key.offset": 1555, "key.parsed_declaration": "public typealias FlushHandler = ([Element], @escaping RequestCompletionHandler) -> Void", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "(([Element], @escaping (Response) -> ()) -> ()).Type", "key.typeusr": "$SySayxG_y9FritzCore8ResponseOctcmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12FlushHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.HealthcheckHandler = (@escaping (<Type usr=\"s:Sb\">Bool</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1641}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>HealthcheckHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 65, "key.name": "HealthcheckHandler", "key.namelength": 18, "key.nameoffset": 1658, "key.offset": 1648, "key.parsed_declaration": "public typealias HealthcheckHandler = (@escaping (Bool) -> Void) -> Void", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "((@escaping (Bool) -> ()) -> ()).Type", "key.typeusr": "$SyySbccmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var batchThreshold: <Type usr=\"s:Su\">UInt</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1809}], "key.bodylength": 87, "key.bodyoffset": 1842, "key.doc.column": 16, "key.doc.comment": "Number of events to store before flushing queue", "key.doc.declaration": "public var batchThreshold: UInt { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"62\" column=\"16\"><Name>batchThreshold</Name><USR>s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp</USR><Declaration>public var batchThreshold: UInt { get }</Declaration><CommentParts><Abstract><Para>Number of events to store before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 62, "key.doc.name": "batchThreshold", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 1753, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>batchThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 114, "key.name": "batchThreshold", "key.namelength": 14, "key.nameoffset": 1820, "key.offset": 1816, "key.parsed_declaration": "public var batchThreshold: UInt", "key.parsed_scope.end": 64, "key.parsed_scope.start": 62, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14batchThresholdSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var flushInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1984}], "key.bodylength": 78, "key.bodyoffset": 2024, "key.doc.column": 16, "key.doc.comment": "Number of seconds before flushing queue", "key.doc.declaration": "public var flushInterval: TimeInterval { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"67\" column=\"16\"><Name>flushInterval</Name><USR>s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp</USR><Declaration>public var flushInterval: TimeInterval { get }</Declaration><CommentParts><Abstract><Para>Number of seconds before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 67, "key.doc.name": "flushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 1936, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flushInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 112, "key.name": "flushInterval", "key.namelength": 13, "key.nameoffset": 1995, "key.offset": 1991, "key.parsed_declaration": "public var flushInterval: TimeInterval", "key.parsed_scope.end": 69, "key.parsed_scope.start": 67, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2151}], "key.doc.column": 16, "key.doc.comment": "Queue to call delegate methods on", "key.doc.declaration": "public let flushQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"72\" column=\"16\"><Name>flushQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp</USR><Declaration>public let flushQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to call delegate methods on</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "flushQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 2109, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flushQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "flushQueue", "key.namelength": 10, "key.nameoffset": 2162, "key.offset": 2158, "key.parsed_declaration": "public let flushQueue: DispatchQueue", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "DispatchQueue", "key.typeusr": "$SSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2244}], "key.doc.column": 16, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"75\" column=\"16\"><Name>maxRetries</Name><USR>s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 75, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2193, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 2255, "key.offset": 2251, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2317}], "key.doc.column": 16, "key.doc.comment": "Status codes to retry a request", "key.doc.declaration": "public let retryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"78\" column=\"16\"><Name>retryStatusCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp</USR><Declaration>public let retryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 78, "key.doc.name": "retryStatusCodes", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 2277, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "retryStatusCodes", "key.namelength": 16, "key.nameoffset": 2328, "key.offset": 2324, "key.parsed_declaration": "public let retryStatusCodes: Set<Int>", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2399}], "key.doc.column": 16, "key.doc.comment": "Error codes to retry a request", "key.doc.declaration": "public let retryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"81\" column=\"16\"><Name>retryErrorCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp</USR><Declaration>public let retryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "retryErrorCodes", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 2360, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryErrorCodes", "key.namelength": 15, "key.nameoffset": 2410, "key.offset": 2406, "key.parsed_declaration": "public let retryErrorCodes: Set<Int>", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "Set<Int>", "key.typeusr": "$SShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2482}], "key.doc.column": 16, "key.doc.comment": "Pass through to OperationRetrier", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"84\" column=\"16\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Pass through to OperationRetrier</Para></Abstract></CommentParts></Other>", "key.doc.line": 84, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 2441, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 2493, "key.offset": 2489, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var onFlush: (([Element], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2564}], "key.doc.column": 16, "key.doc.comment": "Block to be called on flush", "key.doc.declaration": "public var onFlush: (([Element], @escaping RequestCompletionHandler) -> Void)?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"87\" column=\"16\"><Name>onFlush</Name><USR>s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp</USR><Declaration>public var onFlush: (([Element], @escaping RequestCompletionHandler) -&gt; Void)?</Declaration><CommentParts><Abstract><Para>Block to be called on flush</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "onFlush", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2528, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>onFlush</decl.name>: <decl.var.type>((<decl.var.parameter><decl.var.parameter.type>[Element]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter>@escaping <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype>)?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "onFlush", "key.namelength": 7, "key.nameoffset": 2575, "key.offset": 2571, "key.parsed_declaration": "public var onFlush: FlushHandler?", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(([Element], @escaping (Response) -> ()) -> ())?", "key.typeusr": "$SySayxG_y9FritzCore8ResponseOctcSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var apiHealthcheck: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.<Type usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2660}], "key.doc.column": 16, "key.doc.comment": "Block to be called when asking for a healthcheck", "key.doc.declaration": "public var apiHealthcheck: FritzCore.BatchedRequestQueue<Element>.HealthcheckHandler?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"90\" column=\"16\"><Name>apiHealthcheck</Name><USR>s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp</USR><Declaration>public var apiHealthcheck: FritzCore.BatchedRequestQueue&lt;Element&gt;.HealthcheckHandler?</Declaration><CommentParts><Abstract><Para>Block to be called when asking for a healthcheck</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "apiHealthcheck", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 2603, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>apiHealthcheck</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<ref.typealias usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "apiHealthcheck", "key.namelength": 14, "key.nameoffset": 2671, "key.offset": 2667, "key.parsed_declaration": "public var apiHealthcheck: HealthcheckHandler?", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(@escaping (Bool) -> ()) -> ()?", "key.typeusr": "$SyySbccSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var items: [Element]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2750}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2743}], "key.doc.column": 29, "key.doc.comment": "Current items in queue", "key.doc.declaration": "public private(set) var items: [Element]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"93\" column=\"29\"><Name>items</Name><USR>s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp</USR><Declaration>public private(set) var items: [Element]</Declaration><CommentParts><Abstract><Para>Current items in queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 93, "key.doc.name": "items", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 2712, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>items</decl.name>: <decl.var.type>[Element]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "items", "key.namelength": 5, "key.nameoffset": 2767, "key.offset": 2763, "key.parsed_declaration": "public private(set) var items: [Element] = []", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Element]", "key.typeusr": "$SSayxGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isApiHealthy: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2896}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2889}], "key.doc.column": 29, "key.doc.comment": "If true, we are processing available items, if false we are waiting for API to recover", "key.doc.declaration": "public private(set) var isApiHealthy: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"96\" column=\"29\"><Name>isApiHealthy</Name><USR>s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp</USR><Declaration>public private(set) var isApiHealthy: Bool</Declaration><CommentParts><Abstract><Para>If true, we are processing available items, if false we are waiting for API to recover</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "isApiHealthy", "key.doc.type": "Other", "key.doclength": 91, "key.docoffset": 2794, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isApiHealthy</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "isApiHealthy", "key.namelength": 12, "key.nameoffset": 2913, "key.offset": 2909, "key.parsed_declaration": "public private(set) var isApiHealthy = true", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type> = default, retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = default, retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = default, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3288}], "key.bodylength": 431, "key.bodyoffset": 3556, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flushQueue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryStatusCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryErrorCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 693, "key.name": "init(session:flushQueue:maxRetries:retryStatusCodes:retryErrorCodes:exponentialMultiplier:)", "key.namelength": 259, "key.nameoffset": 3295, "key.offset": 3295, "key.parsed_declaration": "public init(session: Session, flushQueue: DispatchQueue, maxRetries: UInt = kDefaultMaxRetries, retryStatusCodes: Set<Int> = kDefaultRetryStatusCodes, retryErrorCodes: Set<Int> = kDefaultRetryErrorCodes, exponentialMultiplier: UInt32 = kDefaultExponentialMultiplier)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 107, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>.Type) -> (Session, DispatchQueue, UInt, Set<Int>, Set<Int>, UInt32) -> BatchedRequestQueue<Element>", "key.typeusr": "$S7session10flushQueue10maxRetries16retryStatusCodes0f5ErrorH021exponentialMultiplier9FritzCore014BatchedRequestC0CyxGAG7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32VtcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7session05flushE010maxRetries16retryStatusCodes0j5ErrorL021exponentialMultiplierACyxGAA7SessionC_So17OS_dispatch_queueCSuShySiGAOs6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func add(_ item: <Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4173}], "key.bodylength": 325, "key.bodyoffset": 4207, "key.doc.column": 17, "key.doc.comment": "Add an item to the queue", "key.doc.declaration": "public func add(_ item: Element)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"127\" column=\"17\"><Name>add(_:)</Name><USR>s:9FritzCore19BatchedRequestQueueC3addyyxF</USR><Declaration>public func add(_ item: Element)</Declaration><CommentParts><Abstract><Para>Add an item to the queue</Para></Abstract></CommentParts></Function>", "key.doc.line": 127, "key.doc.name": "add(_:)", "key.doc.type": "Function", "key.doclength": 29, "key.docoffset": 4140, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>item</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 353, "key.name": "add(_:)", "key.namelength": 20, "key.nameoffset": 4185, "key.offset": 4180, "key.parsed_declaration": "public func add(_ item: Element)", "key.parsed_scope.end": 138, "key.parsed_scope.start": 127, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Element) -> ()", "key.typeusr": "$SyyxcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC3addyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func flush(force: <Type usr=\"s:Sb\">Bool</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4623}], "key.bodylength": 199, "key.bodyoffset": 4663, "key.doc.column": 17, "key.doc.comment": "Flush all items, if force is true then will flush regardless of healthy api", "key.doc.declaration": "public func flush(force: Bool = default)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"141\" column=\"17\"><Name>flush(force:)</Name><USR>s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF</USR><Declaration>public func flush(force: Bool = default)</Declaration><CommentParts><Abstract><Para>Flush all items, if force is true then will flush regardless of healthy api</Para></Abstract></CommentParts></Function>", "key.doc.line": 141, "key.doc.name": "flush(force:)", "key.doc.type": "Function", "key.doclength": 80, "key.docoffset": 4539, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>flush</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>force</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 233, "key.name": "flush(force:)", "key.namelength": 26, "key.nameoffset": 4635, "key.offset": 4630, "key.parsed_declaration": "public func flush(force: Bool = false)", "key.parsed_scope.end": 149, "key.parsed_scope.start": 141, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19BatchedRequestQueueC5flush33_3CCE68730D8FEA873DE9CED2E1F8F915LL5itemsySayxG_tF\">flush(items:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Bool) -> ()", "key.typeusr": "$S5forceySb_tcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clear()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4924}], "key.bodylength": 64, "key.bodyoffset": 4945, "key.doc.column": 17, "key.doc.comment": "Clears all items in the queue WITHOUT flushing", "key.doc.declaration": "public func clear()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"152\" column=\"17\"><Name>clear()</Name><USR>s:9FritzCore19BatchedRequestQueueC5clearyyF</USR><Declaration>public func clear()</Declaration><CommentParts><Abstract><Para>Clears all items in the queue WITHOUT flushing</Para></Abstract></CommentParts></Function>", "key.doc.line": 152, "key.doc.name": "clear()", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 4869, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clear</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 79, "key.name": "clear()", "key.namelength": 7, "key.nameoffset": 4936, "key.offset": 4931, "key.parsed_declaration": "public func clear()", "key.parsed_scope.end": 156, "key.parsed_scope.start": 152, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5clearyyF"}], "key.typename": "BatchedRequestQueue<Element>.Type", "key.typeusr": "$S9FritzCore19BatchedRequestQueueCyxGmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 637, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzConfiguration) public class Configuration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 262}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 201}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 175}], "key.bodylength": 335, "key.bodyoffset": 300, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 290}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Configuration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 367, "key.name": "Configuration", "key.namelength": 13, "key.nameoffset": 275, "key.offset": 269, "key.parsed_declaration": "public class Configuration: NSObject", "key.parsed_scope.end": 27, "key.parsed_scope.start": 13, "key.runtime_name": "FritzConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 306}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "default", "key.namelength": 7, "key.nameoffset": 324, "key.offset": 313, "key.parsed_declaration": "public static let `default` = Configuration(session: .default)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "s:9FritzCore13ConfigurationC7defaultACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 374}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 385, "key.offset": 381, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore13ConfigurationC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sessionManager: <Type usr=\"s:9FritzCore14SessionManagerC\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 407}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore14SessionManagerC\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 418, "key.offset": 414, "key.parsed_declaration": "public let sessionManager: SessionManager", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "SessionManager", "key.typeusr": "$S9FritzCore14SessionManagerCD", "key.usr": "s:9FritzCore13ConfigurationC14sessionManagerAA07SessionE0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSession:) public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 482}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 454}], "key.bodylength": 120, "key.bodyoffset": 513, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSession:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 145, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 489, "key.offset": 489, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 22, "key.substructure": [], "key.typename": "(Configuration.Type) -> (Session) -> Configuration", "key.typeusr": "$S7session9FritzCore13ConfigurationCAB7SessionC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(im)initWithSession:"}], "key.typename": "Configuration.Type", "key.typeusr": "$S9FritzCore13ConfigurationCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8557, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct CompressionLevel : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1243}], "key.bodylength": 583, "key.bodyoffset": 1293, "key.doc.column": 15, "key.doc.comment": "Compression level whose rawValue is based on the zlib's constants.", "key.doc.declaration": "public struct CompressionLevel : RawRepresentable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"36\" column=\"15\"><Name>CompressionLevel</Name><USR>s:9FritzCore16CompressionLevelV</USR><Declaration>public struct CompressionLevel : RawRepresentable</Declaration><CommentParts><Abstract><Para>Compression level whose rawValue is based on the zlib\u2019s constants.</Para></Abstract></CommentParts></Class>", "key.doc.line": 36, "key.doc.name": "CompressionLevel", "key.doc.type": "Class", "key.doclength": 75, "key.docoffset": 1167, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 1275}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CompressionLevel</decl.name> : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 627, "key.name": "CompressionLevel", "key.namelength": 16, "key.nameoffset": 1257, "key.offset": 1250, "key.parsed_declaration": "public struct CompressionLevel: RawRepresentable", "key.parsed_scope.end": 59, "key.parsed_scope.start": 36, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rawValue: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1392}], "key.doc.column": 16, "key.doc.comment": "Compression level in the range of `0` (no compression) to `9` (maximum compression).", "key.doc.declaration": "public let rawValue: Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"39\" column=\"16\"><Name>rawValue</Name><USR>s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp</USR><Declaration>public let rawValue: Int32</Declaration><CommentParts><Abstract><Para>Compression level in the range of <codeVoice>0</codeVoice> (no compression) to <codeVoice>9</codeVoice> (maximum compression).</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "rawValue", "key.doc.type": "Other", "key.doclength": 89, "key.docoffset": 1299, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 1403, "key.offset": 1399, "key.overrides": [{"key.usr": "s:SY8rawValue03RawB0Qzvp"}], "key.parsed_declaration": "public let rawValue: Int32", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let noCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1424}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 61, "key.name": "noCompression", "key.namelength": 13, "key.nameoffset": 1442, "key.offset": 1431, "key.parsed_declaration": "public static let noCompression = CompressionLevel(Z_NO_COMPRESSION)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV02noC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestSpeed: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1497}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestSpeed</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 53, "key.name": "bestSpeed", "key.namelength": 9, "key.nameoffset": 1515, "key.offset": 1504, "key.parsed_declaration": "public static let bestSpeed = CompressionLevel(Z_BEST_SPEED)", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV9bestSpeedACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1562}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "bestCompression", "key.namelength": 15, "key.nameoffset": 1580, "key.offset": 1569, "key.parsed_declaration": "public static let bestCompression = CompressionLevel(Z_BEST_COMPRESSION)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV04bestC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaultCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1640}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaultCompression", "key.namelength": 18, "key.nameoffset": 1658, "key.offset": 1647, "key.parsed_declaration": "public static let defaultCompression = CompressionLevel(Z_DEFAULT_COMPRESSION)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "CompressionLevel", "key.typeusr": "$S9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV07defaultC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1725}], "key.bodylength": 39, "key.bodyoffset": 1755, "key.doc.declaration": "init?(rawValue: Self.RawValue)", "key.doc.discussion": [{"Para": "If there is no value of the type that corresponds with the specified raw value, this initializer returns `nil`. For example:"}, {"CodeListing": ""}], "key.doc.full_as_xml": "<Function><Name>init(rawValue:)</Name><USR>s:SY8rawValuexSg03RawB0Qz_tcfc</USR><Declaration>init?(rawValue: Self.RawValue)</Declaration><CommentParts><Abstract><Para>Creates a new instance with the specified raw value.</Para></Abstract><Parameters><Parameter><Name>rawValue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The raw value to use for the new instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>If there is no value of the type that corresponds with the specified raw value, this initializer returns <codeVoice>nil</codeVoice>. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Legal\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"PaperSize.Legal\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Tabloid\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Function>", "key.doc.name": "init(rawValue:)", "key.doc.parameters": [{"discussion": [{"Para": "The raw value to use for the new instance."}], "name": "rawValue"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "init(rawValue:)", "key.namelength": 21, "key.nameoffset": 1732, "key.offset": 1732, "key.overrides": [{"key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}], "key.parsed_declaration": "public init(rawValue: Int32)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelVyACs5Int32Vcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$S8rawValue9FritzCore16CompressionLevelVs5Int32V_tcD", "key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1802}], "key.bodylength": 39, "key.bodyoffset": 1834, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init(_:)", "key.namelength": 23, "key.nameoffset": 1809, "key.offset": 1809, "key.parsed_declaration": "public init(_ rawValue: Int32)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 54, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelV8rawValueACs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$Sy9FritzCore16CompressionLevelVs5Int32VcD", "key.usr": "s:9FritzCore16CompressionLevelVyACs5Int32Vcfc"}], "key.typename": "CompressionLevel.Type", "key.typeusr": "$S9FritzCore16CompressionLevelVmD", "key.usr": "s:9FritzCore16CompressionLevelV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct GzipError : Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1950}], "key.bodylength": 2018, "key.bodyoffset": 1988, "key.doc.column": 15, "key.doc.comment": "Errors on gzipping/gunzipping based on the zlib error codes.", "key.doc.declaration": "public struct GzipError : Swift.Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"65\" column=\"15\"><Name>GzipError</Name><USR>s:9FritzCore9GzipErrorV</USR><Declaration>public struct GzipError : Swift.Error</Declaration><CommentParts><Abstract><Para>Errors on gzipping/gunzipping based on the zlib error codes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 65, "key.doc.name": "GzipError", "key.doc.type": "Class", "key.doclength": 69, "key.docoffset": 1880, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 1975}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>GzipError</decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2050, "key.name": "GzipError", "key.namelength": 9, "key.nameoffset": 1964, "key.offset": 1957, "key.parsed_declaration": "public struct GzipError: Swift.Error", "key.parsed_scope.end": 152, "key.parsed_scope.start": 65, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore9GzipErrorV\">GzipError</Type>.Kind</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2037}], "key.bodylength": 1021, "key.bodyoffset": 2055, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore9GzipErrorV\">GzipError</ref.struct>.<decl.name>Kind</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 1033, "key.name": "Kind", "key.namelength": 4, "key.nameoffset": 2049, "key.offset": 2044, "key.parsed_declaration": "public enum Kind", "key.parsed_scope.end": 110, "key.parsed_scope.start": 68, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2193, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2406, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2541, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2724, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2917, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3048, "key.substructure": []}], "key.typename": "GzipError.Kind.Type", "key.typeusr": "$S9FritzCore9GzipErrorV4KindOmD", "key.usr": "s:9FritzCore9GzipErrorV4KindO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kind: <Type usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3103}], "key.doc.column": 16, "key.doc.comment": "Error kind.", "key.doc.declaration": "public let kind: Kind", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"113\" column=\"16\"><Name>kind</Name><USR>s:9FritzCore9GzipErrorV4kindAC4KindOvp</USR><Declaration>public let kind: Kind</Declaration><CommentParts><Abstract><Para>Error kind.</Para></Abstract></CommentParts></Other>", "key.doc.line": 113, "key.doc.name": "kind", "key.doc.type": "Other", "key.doclength": 16, "key.docoffset": 3083, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kind</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "kind", "key.namelength": 4, "key.nameoffset": 3114, "key.offset": 3110, "key.parsed_declaration": "public let kind: Kind", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "GzipError.Kind", "key.typeusr": "$S9FritzCore9GzipErrorV4KindOD", "key.usr": "s:9FritzCore9GzipErrorV4kindAC4KindOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let message: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3164}], "key.doc.column": 16, "key.doc.comment": "Returned message by zlib.", "key.doc.declaration": "public let message: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"116\" column=\"16\"><Name>message</Name><USR>s:9FritzCore9GzipErrorV7messageSSvp</USR><Declaration>public let message: String</Declaration><CommentParts><Abstract><Para>Returned message by zlib.</Para></Abstract></CommentParts></Other>", "key.doc.line": 116, "key.doc.name": "message", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 3130, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>message</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "message", "key.namelength": 7, "key.nameoffset": 3175, "key.offset": 3171, "key.parsed_declaration": "public let message: String", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore9GzipErrorV7messageSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var localizedDescription: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3928}], "key.bodylength": 34, "key.bodyoffset": 3969, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>localizedDescription</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 69, "key.name": "localizedDescription", "key.namelength": 20, "key.nameoffset": 3939, "key.offset": 3935, "key.parsed_declaration": "public var localizedDescription: String", "key.parsed_scope.end": 150, "key.parsed_scope.start": 147, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore9GzipErrorV20localizedDescriptionSSvp"}], "key.typename": "GzipError.Type", "key.typeusr": "$S9FritzCore9GzipErrorVmD", "key.usr": "s:9FritzCore9GzipErrorV"}, {"key.annotated_decl": "<Declaration>struct Data : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</Type>, <Type usr=\"s:SQ\">Equatable</Type>, <Type usr=\"s:SH\">Hashable</Type>, <Type usr=\"s:Sk\">RandomAccessCollection</Type>, <Type usr=\"s:SM\">MutableCollection</Type>, <Type usr=\"s:Sm\">RangeReplaceableCollection</Type></Declaration>", "key.bodylength": 4392, "key.bodyoffset": 4026, "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Data</decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SH\">Hashable</ref.protocol>, <ref.protocol usr=\"s:Sk\">RandomAccessCollection</ref.protocol>, <ref.protocol usr=\"s:SM\">MutableCollection</ref.protocol>, <ref.protocol usr=\"s:Sm\">RangeReplaceableCollection</ref.protocol></decl.struct>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 4409, "key.modulename": "Foundation", "key.name": "Data", "key.namelength": 4, "key.nameoffset": 4020, "key.offset": 4010, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isGzipped: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4100}], "key.bodylength": 76, "key.bodyoffset": 4128, "key.doc.column": 16, "key.doc.comment": "Whether the data is compressed in gzip format.", "key.doc.declaration": "public var isGzipped: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"160\" column=\"16\"><Name>isGzipped</Name><USR>s:10Foundation4DataV9FritzCoreE9isGzippedSbvp</USR><Declaration>public var isGzipped: Bool { get }</Declaration><CommentParts><Abstract><Para>Whether the data is compressed in gzip format.</Para></Abstract></CommentParts></Other>", "key.doc.line": 160, "key.doc.name": "isGzipped", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 4032, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isGzipped</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 98, "key.name": "isGzipped", "key.namelength": 9, "key.nameoffset": 4111, "key.offset": 4107, "key.parsed_declaration": "public var isGzipped: Bool", "key.parsed_scope.end": 163, "key.parsed_scope.start": 160, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:10Foundation4DataV9FritzCoreE9isGzippedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func gzipped(level: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type> = default) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4472}], "key.bodylength": 1367, "key.bodyoffset": 4555, "key.doc.column": 17, "key.doc.comment": "Create a new `Data` object by compressing the receiver using zlib.\nThrows an error if compression failed.\n\n- parameters:\n- level: Compression level.\n\n- throws: `GzipError`\n- returns: Gzip-compressed `Data` object.", "key.doc.declaration": "public func gzipped(level: CompressionLevel = default) throws -> Data", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"176\" column=\"17\"><Name>gzipped(level:)</Name><USR>s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF</USR><Declaration>public func gzipped(level: CompressionLevel = default) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Data</codeVoice> object by compressing the receiver using zlib. Throws an error if compression failed.</Para></Abstract><ResultDiscussion><Para>Gzip-compressed <codeVoice>Data</codeVoice> object.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>GzipError</codeVoice></Para></ThrowsDiscussion><Discussion><List-Bullet><Item><Para>parameters:</Para></Item><Item><Para>level: Compression level.</Para></Item></List-Bullet></Discussion></CommentParts></Function>", "key.doc.line": 176, "key.doc.name": "gzipped(level:)", "key.doc.result_discussion": [{"Para": "Gzip-compressed `Data` object."}], "key.doc.type": "Function", "key.doclength": 255, "key.docoffset": 4212, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gzipped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1444, "key.name": "gzipped(level:)", "key.namelength": 54, "key.nameoffset": 4484, "key.offset": 4479, "key.parsed_declaration": "public func gzipped(level: CompressionLevel = .defaultCompression) throws -> Data", "key.parsed_scope.end": 215, "key.parsed_scope.start": 176, "key.substructure": [{"key.annotated_decl": "<Declaration>let contiguousData: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contiguousData</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "contiguousData", "key.namelength": 14, "key.nameoffset": 4641, "key.offset": 4637, "key.parsed_declaration": "let contiguousData = self.withUnsafeBytes { Data(bytes: $0, count: self.count) }", "key.parsed_scope.end": 182, "key.parsed_scope.start": 182, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF010contiguousB0L_ACvp"}, {"key.annotated_decl": "<Declaration>var stream: <Type usr=\"c:@T@z_stream\">z_stream</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>stream</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@z_stream\">z_stream</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 4730, "key.offset": 4726, "key.parsed_declaration": "var stream = contiguousData.createZStream()", "key.parsed_scope.end": 183, "key.parsed_scope.start": 183, "key.typename": "z_stream_s", "key.typeusr": "$SSo10z_stream_sVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF6streamL_So02z_I2_sVvp"}, {"key.annotated_decl": "<Declaration>var status: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "status", "key.namelength": 6, "key.nameoffset": 4782, "key.offset": 4778, "key.parsed_declaration": "var status: Int32", "key.parsed_scope.end": 184, "key.parsed_scope.start": 184, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "data", "key.namelength": 4, "key.nameoffset": 5341, "key.offset": 5337, "key.parsed_declaration": "var data = Data(capacity: DataSize.chunk)", "key.parsed_scope.end": 197, "key.parsed_scope.start": 197, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF4dataL_ACvp"}], "key.typename": "(Data) -> (CompressionLevel) throws -> Data", "key.typeusr": "$S5level10Foundation4DataV9FritzCore16CompressionLevelV_tKcD", "key.usr": "s:10Foundation4DataV9FritzCoreE7gzipped5levelAcD16CompressionLevelV_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func gunzipped() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6143}], "key.bodylength": 1929, "key.bodyoffset": 6183, "key.doc.column": 17, "key.doc.comment": "Create a new `Data` object by decompressing the receiver using zlib.\nThrows an error if decompression failed.\n\n- throws: `GzipError`\n- returns: Gzip-decompressed `Data` object.", "key.doc.declaration": "public func gunzipped() throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"225\" column=\"17\"><Name>gunzipped()</Name><USR>s:10Foundation4DataV9FritzCoreE9gunzippedACyKF</USR><Declaration>public func gunzipped() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Create a new <codeVoice>Data</codeVoice> object by decompressing the receiver using zlib. Throws an error if decompression failed.</Para></Abstract><ResultDiscussion><Para>Gzip-decompressed <codeVoice>Data</codeVoice> object.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>GzipError</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 225, "key.doc.name": "gunzipped()", "key.doc.result_discussion": [{"Para": "Gzip-decompressed `Data` object."}], "key.doc.type": "Function", "key.doclength": 208, "key.docoffset": 5930, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>gunzipped</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1963, "key.name": "gunzipped()", "key.namelength": 11, "key.nameoffset": 6155, "key.offset": 6150, "key.parsed_declaration": "public func gunzipped() throws -> Data", "key.parsed_scope.end": 275, "key.parsed_scope.start": 225, "key.substructure": [{"key.annotated_decl": "<Declaration>let contiguousData: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>contiguousData</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "contiguousData", "key.namelength": 14, "key.nameoffset": 6269, "key.offset": 6265, "key.parsed_declaration": "let contiguousData = self.withUnsafeBytes { Data(bytes: $0, count: self.count) }", "key.parsed_scope.end": 231, "key.parsed_scope.start": 231, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF010contiguousB0L_ACvp"}, {"key.annotated_decl": "<Declaration>var stream: <Type usr=\"c:@T@z_stream\">z_stream</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>stream</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@z_stream\">z_stream</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 6358, "key.offset": 6354, "key.parsed_declaration": "var stream = contiguousData.createZStream()", "key.parsed_scope.end": 232, "key.parsed_scope.start": 232, "key.typename": "z_stream_s", "key.typeusr": "$SSo10z_stream_sVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF6streamL_So02z_F2_sVvp"}, {"key.annotated_decl": "<Declaration>var status: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "status", "key.namelength": 6, "key.nameoffset": 6410, "key.offset": 6406, "key.parsed_declaration": "var status: Int32", "key.parsed_scope.end": 233, "key.parsed_scope.start": 233, "key.typename": "Int32", "key.typeusr": "$Ss5Int32VD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 51, "key.name": "data", "key.namelength": 4, "key.nameoffset": 6911, "key.offset": 6907, "key.parsed_declaration": "var data = Data(capacity: contiguousData.count * 2)", "key.parsed_scope.end": 246, "key.parsed_scope.start": 246, "key.typename": "Data", "key.typeusr": "$S10Foundation4DataVD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF4dataL_ACvp"}], "key.typename": "(Data) -> () throws -> Data", "key.typeusr": "$S10Foundation4DataVyKcD", "key.usr": "s:10Foundation4DataV9FritzCoreE9gunzippedACyKF"}], "key.typename": "Data.Type", "key.typeusr": "$S10Foundation4DataVmD", "key.usr": "s:10Foundation4DataV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2794, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorCode) public enum ErrorCode : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 220}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 198}], "key.bodylength": 129, "key.bodyoffset": 248, "key.doc.column": 13, "key.doc.comment": "The type of error encountered", "key.doc.declaration": "@objc(FritzErrorCode) public enum ErrorCode : Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"13\" column=\"13\"><Name>ErrorCode</Name><USR>c:@M@FritzCore@E@FritzErrorCode</USR><Declaration>@objc(FritzErrorCode) public enum ErrorCode : Int</Declaration><CommentParts><Abstract><Para>The type of error encountered</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "ErrorCode", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 164, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 243}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorCode)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ErrorCode</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 151, "key.name": "ErrorCode", "key.namelength": 9, "key.nameoffset": 232, "key.offset": 227, "key.parsed_declaration": "public enum ErrorCode: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 253, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 279, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 304, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 327, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 352, "key.substructure": []}], "key.typename": "ErrorCode.Type", "key.typeusr": "$S9FritzCore9ErrorCodeOmD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzError) public final class FritzError : <Type usr=\"c:objc(cs)NSError\">NSError</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 661}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 654}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 593}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 17, "key.offset": 575}], "key.bodylength": 1221, "key.bodyoffset": 694, "key.doc.column": 20, "key.doc.comment": "Class representing a Fritz-related error\n\n- Note: You subscribe to a notification to be notified anytime an error is encountered in the SDK.\n\n- SeeAlso: `Notification.Name.fritzError`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError", "key.doc.discussion": [{"Note": ""}, {"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"30\" column=\"20\"><Name>FritzError</Name><USR>c:@M@FritzCore@objc(cs)FritzError</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError</Declaration><CommentParts><Abstract><Para>Class representing a Fritz-related error</Para></Abstract><Discussion><Note><Para>You subscribe to a notification to be notified anytime an error is encountered in the SDK.</Para></Note><See><Para><codeVoice>Notification.Name.fritzError</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 30, "key.doc.name": "FritzError", "key.doc.type": "Class", "key.doclength": 194, "key.docoffset": 380, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 685}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzError)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzError</decl.name> : <ref.class usr=\"c:objc(cs)NSError\">NSError</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSError"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1249, "key.name": "FritzError", "key.namelength": 10, "key.nameoffset": 673, "key.offset": 667, "key.parsed_declaration": "public final class FritzError: NSError", "key.parsed_scope.end": 64, "key.parsed_scope.start": 30, "key.runtime_name": "FritzError", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 733}], "key.doc.column": 16, "key.doc.comment": "Session error ocurred in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"33\" column=\"16\"><Name>session</Name><USR>s:9FritzCore0A5ErrorC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session error ocurred in</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 700, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 744, "key.offset": 740, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore0A5ErrorC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 808}], "key.doc.column": 16, "key.doc.comment": "Model identifier related to error", "key.doc.declaration": "public let modelIdentifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"36\" column=\"16\"><Name>modelIdentifier</Name><USR>s:9FritzCore0A5ErrorC15modelIdentifierSSvp</USR><Declaration>public let modelIdentifier: String</Declaration><CommentParts><Abstract><Para>Model identifier related to error</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 766, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 819, "key.offset": 815, "key.parsed_declaration": "public let modelIdentifier: String", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore0A5ErrorC15modelIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 876}], "key.doc.column": 16, "key.doc.comment": "Actual thrown error", "key.doc.declaration": "public let error: Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"39\" column=\"16\"><Name>error</Name><USR>s:9FritzCore0A5ErrorC5errors0C0_pvp</USR><Declaration>public let error: Error</Declaration><CommentParts><Abstract><Para>Actual thrown error</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "error", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "error", "key.namelength": 5, "key.nameoffset": 887, "key.offset": 883, "key.parsed_declaration": "public let error: Error", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "Error", "key.typeusr": "$Ss5Error_pD", "key.usr": "s:9FritzCore0A5ErrorC5errors0C0_pvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func post(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1163}], "key.bodylength": 141, "key.bodyoffset": 1262, "key.doc.column": 24, "key.doc.comment": "Posts a Fritz error to the default notification center", "key.doc.declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"47\" column=\"24\"><Name>post(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ</USR><Declaration>public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Posts a Fritz error to the default notification center</Para></Abstract></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "post(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1100, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 234, "key.name": "post(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1182, "key.offset": 1170, "key.parsed_declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC4post5erroryAC_tFZ\">post(error:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 100, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1275, "key.offset": 1271, "key.parsed_declaration": "let error = FritzError(session: session, modelIdentifier: modelIdentifier, code: code, error: error)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC5errors0C0_pvp\">error</RelatedName>"}], "key.typename": "FritzError", "key.typeusr": "$S9FritzCore0A5ErrorCD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZAHL0_ACvp"}], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> ()", "key.typeusr": "$S7session15modelIdentifier4code5errory9FritzCore7SessionC_SSAE9ErrorCodeOs0I0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1449}], "key.bodylength": 200, "key.bodyoffset": 1536, "key.doc.column": 12, "key.doc.comment": "Create an internal Fritz error", "key.doc.declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"53\" column=\"12\"><Name>init(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc</USR><Declaration>public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Create an internal Fritz error</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "init(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 35, "key.docoffset": 1410, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 281, "key.name": "init(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1456, "key.offset": 1456, "key.parsed_declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:\">init(coder:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> FritzError", "key.typeusr": "$S7session15modelIdentifier4code5error9FritzCore0F5ErrorCAE7SessionC_SSAE0H4CodeOs0H0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init?(coder aDecoder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1809}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1800}], "key.bodylength": 65, "key.bodyoffset": 1848, "key.doc.column": 21, "key.doc.comment": "Do not create an instance of this class directly", "key.doc.declaration": "required public init?(coder aDecoder: NSCoder)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"61\" column=\"21\"><Name>init(coder:)</Name><USR>c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:</USR><Declaration>required public init?(coder aDecoder: NSCoder)</Declaration><CommentParts><Abstract><Para>Do not create an instance of this class directly</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "init(coder:)", "key.doc.type": "Function", "key.doclength": 53, "key.docoffset": 1743, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder</decl.var.parameter.argument_label> <decl.var.parameter.name>aDecoder</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 98, "key.name": "init(coder:)", "key.namelength": 30, "key.nameoffset": 1816, "key.offset": 1816, "key.overrides": [{"key.usr": "c:objc(pl)NSCoding(im)initWithCoder:"}], "key.parsed_declaration": "required public init?(coder aDecoder: NSCoder)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc\">init(session:modelIdentifier:code:error:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (NSCoder) -> FritzError?", "key.typeusr": "$S5coder9FritzCore0B5ErrorCSgSo7NSCoderC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:"}], "key.typename": "FritzError.Type", "key.typeusr": "$S9FritzCore0A5ErrorCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - JSON", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1921}, {"key.annotated_decl": "<Declaration>protocol Error</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1935}], "key.bodylength": 779, "key.bodyoffset": 2013, "key.doc.declaration": "protocol Error", "key.doc.discussion": [{"Para": "Any type that declares conformance to the `Error` protocol can be used to represent an error in Swift\u2019s error handling system. Because the `Error` protocol has no requirements of its own, you can declare conformance on any custom type you create."}, {"Para": "Swift\u2019s enumerations are well suited to represent simple errors. Create an enumeration that conforms to the `Error` protocol with a case for each possible error. If there are additional details about the error that could be helpful for recovery, use associated values to include that information."}, {"Para": "The following example shows an `IntParsingError` enumeration that captures two different kinds of errors that can occur when parsing an integer from a string: overflow, where the value represented by the string is too large for the integer data type, and invalid input, where nonnumeric characters are found within the input."}, {"CodeListing": ""}, {"Para": "The `invalidInput` case includes the invalid character as an associated value."}, {"Para": "The next code sample shows a possible extension to the `Int` type that parses the integer value of a `String` instance, throwing an error when there is a problem during parsing."}, {"CodeListing": ""}, {"Para": "When calling the new `Int` initializer within a `do` statement, you can use pattern matching to match specific cases of your custom error type and access their associated values, as in the example below."}, {"CodeListing": ""}, {"Para": "Sometimes you may want different error states to include the same common data, such as the position in a file or some of your application\u2019s state. When you do, use a structure to represent errors. The following example uses a structure to represent an error when parsing an XML document, including the line and column numbers where the error occurred:"}, {"CodeListing": ""}, {"Para": "Once again, use pattern matching to conditionally catch errors. Here\u2019s how you can catch any `XMLParsingError` errors thrown by the `parse(_:)` function:"}, {"CodeListing": ""}], "key.doc.full_as_xml": "<Class><Name>Error</Name><USR>s:s5ErrorP</USR><Declaration>protocol Error</Declaration><CommentParts><Abstract><Para>A type representing an error value that can be thrown.</Para></Abstract><Discussion><Para>Any type that declares conformance to the <codeVoice>Error</codeVoice> protocol can be used to represent an error in Swift\u2019s error handling system. Because the <codeVoice>Error</codeVoice> protocol has no requirements of its own, you can declare conformance on any custom type you create.</Para><rawHTML><![CDATA[<h1>]]></rawHTML>Using Enumerations as Errors<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Swift\u2019s enumerations are well suited to represent simple errors. Create an enumeration that conforms to the <codeVoice>Error</codeVoice> protocol with a case for each possible error. If there are additional details about the error that could be helpful for recovery, use associated values to include that information.</Para><Para>The following example shows an <codeVoice>IntParsingError</codeVoice> enumeration that captures two different kinds of errors that can occur when parsing an integer from a string: overflow, where the value represented by the string is too large for the integer data type, and invalid input, where nonnumeric characters are found within the input.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum IntParsingError: Error {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case overflow]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case invalidInput(String)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>The <codeVoice>invalidInput</codeVoice> case includes the invalid character as an associated value.</Para><Para>The next code sample shows a possible extension to the <codeVoice>Int</codeVoice> type that parses the integer value of a <codeVoice>String</codeVoice> instance, throwing an error when there is a problem during parsing.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[extension Int {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    init(validating input: String) throws {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        if !_isValid(s) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[            throw IntParsingError.invalidInput(s)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>When calling the new <codeVoice>Int</codeVoice> initializer within a <codeVoice>do</codeVoice> statement, you can use pattern matching to match specific cases of your custom error type and access their associated values, as in the example below.</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[do {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let price = try Int(validating: \"$100\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch IntParsingError.invalidInput(let invalid) {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Invalid character: '\\(invalid)'\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch IntParsingError.overflow {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Overflow error\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Other error\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Invalid character: '$'\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><rawHTML><![CDATA[<h1>]]></rawHTML>Including More Data in Errors<rawHTML><![CDATA[</h1>]]></rawHTML><Para>Sometimes you may want different error states to include the same common data, such as the position in a file or some of your application\u2019s state. When you do, use a structure to represent errors. The following example uses a structure to represent an error when parsing an XML document, including the line and column numbers where the error occurred:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[struct XMLParsingError: Error {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    enum ErrorKind {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case invalidCharacter]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case mismatchedTag]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[        case internalError]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    }]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let line: Int]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let column: Int]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let kind: ErrorKind]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[func parse(_ source: String) throws -> XMLDoc {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    throw XMLParsingError(line: 19, column: 5, kind: .mismatchedTag)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    // ...]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>Once again, use pattern matching to conditionally catch errors. Here\u2019s how you can catch any <codeVoice>XMLParsingError</codeVoice> errors thrown by the <codeVoice>parse(_:)</codeVoice> function:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[do {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    let xmlDoc = try parse(myXMLData)]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch let e as XMLParsingError {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Parsing error: \\(e.kind) [\\(e.line):\\(e.column)]\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[} catch {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    print(\"Other error: \\(error)\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Parsing error: mismatchedTag [19:5]\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing></Discussion></CommentParts></Class>", "key.doc.name": "Error", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Error</decl.name></decl.protocol>", "key.groupname": "Misc", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 797, "key.modulename": "Swift", "key.name": "Error", "key.namelength": 5, "key.nameoffset": 2006, "key.offset": 1996, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toJSON() -&gt; [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2078}], "key.bodylength": 673, "key.bodyoffset": 2117, "key.doc.column": 17, "key.doc.comment": "Converts an error to json to send over the network", "key.doc.declaration": "public func toJSON() -> [String : Any]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"72\" column=\"17\"><Name>toJSON()</Name><USR>s:s5ErrorP9FritzCoreE6toJSONSDySSypGyF</USR><Declaration>public func toJSON() -&gt; [String : Any]</Declaration><CommentParts><Abstract><Para>Converts an error to json to send over the network</Para></Abstract></CommentParts></Function>", "key.doc.line": 72, "key.doc.name": "toJSON()", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 2019, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toJSON</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.function.returntype></decl.function.method.instance>", "key.groupname": "Misc", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 706, "key.name": "toJSON()", "key.namelength": 8, "key.nameoffset": 2090, "key.offset": 2085, "key.parsed_declaration": "public func toJSON() -> [String: Any]", "key.parsed_scope.end": 94, "key.parsed_scope.start": 72, "key.substructure": [], "key.typename": "<Self where Self : Error> (Self) -> () -> [String : Any]", "key.typeusr": "$SSDySSypGycD", "key.usr": "s:s5ErrorP9FritzCoreE6toJSONSDySSypGyF"}], "key.typename": "Error.Protocol", "key.typeusr": "$Ss5Error_pmD", "key.usr": "s:s5ErrorP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7357, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 699}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 682}], "key.bodylength": 1098, "key.bodyoffset": 794, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 784}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1126, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 773, "key.offset": 767, "key.parsed_declaration": "public class FritzCore: NSObject", "key.parsed_scope.end": 64, "key.parsed_scope.start": 25, "key.runtime_name": "FritzCore", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configuration) public static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 909}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 884}], "key.bodylength": 274, "key.bodyoffset": 957, "key.doc.column": 23, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(configuration) public static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"31\" column=\"23\"><Name>configuration</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration</USR><Declaration>@objc(configuration) public static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 855, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configuration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 316, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 927, "key.offset": 916, "key.parsed_declaration": "public static var configuration: Configuration", "key.parsed_scope.end": 36, "key.parsed_scope.start": 31, "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configure) public static func configure()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1291}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 1270}], "key.bodylength": 44, "key.bodyoffset": 1323, "key.doc.column": 24, "key.doc.comment": "Configure the Fritz SDK", "key.doc.declaration": "@objc(configure) public static func configure()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"40\" column=\"24\"><Name>configure()</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configure</USR><Declaration>@objc(configure) public static func configure()</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "configure()", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 1238, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configure)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 70, "key.name": "configure()", "key.namelength": 11, "key.nameoffset": 1310, "key.offset": 1298, "key.parsed_declaration": "public static func configure()", "key.parsed_scope.end": 42, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:\">configure(with:)</RelatedName>"}], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configure"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configureWith:) public static func configure(with configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1460}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1434}], "key.bodylength": 49, "key.bodyoffset": 1525, "key.doc.column": 24, "key.doc.comment": "Configure the Fritz SDK with a custom configuration", "key.doc.declaration": "@objc(configureWith:) public static func configure(with configuration: Configuration)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"46\" column=\"24\"><Name>configure(with:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:</USR><Declaration>@objc(configureWith:) public static func configure(with configuration: Configuration)</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK with a custom configuration</Para></Abstract></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "configure(with:)", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 1374, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configureWith:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>configuration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 108, "key.name": "configure(with:)", "key.namelength": 44, "key.nameoffset": 1479, "key.offset": 1467, "key.parsed_declaration": "public static func configure(with configuration: Configuration)", "key.parsed_scope.end": 48, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configure\">configure()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> (Configuration) -> ()", "key.typeusr": "$S4withy9FritzCore13ConfigurationC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1802}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 1778}], "key.bodylength": 37, "key.bodyoffset": 1853, "key.doc.column": 24, "key.doc.comment": "Enables Fritz SDK logging\n\n- Parameter level:\n-- 0: Debug logging\n-- 1: Info logging\n-- 2: Warn logging\n-- 3: Error logging\n-- 4: Disable logging", "key.doc.declaration": "@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"61\" column=\"24\"><Name>setLogLevel(_:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:</USR><Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)</Declaration><CommentParts><Abstract><Para>Enables Fritz SDK logging</Para></Abstract><Parameters><Parameter><Name>level</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para> \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "setLogLevel(_:)", "key.doc.parameters": [{"discussion": [{"Para": " \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging"}], "name": "level"}], "key.doc.type": "Function", "key.doclength": 192, "key.docoffset": 1581, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(setLogLevel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setLogLevel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>level</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 82, "key.name": "setLogLevel(_:)", "key.namelength": 30, "key.nameoffset": 1821, "key.offset": 1809, "key.parsed_declaration": "public static func setLogLevel(_ level: LogLevel)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.substructure": [], "key.typename": "(FritzCore.Type) -> (LogLevel) -> ()", "key.typeusr": "$Syy9FritzCore8LogLevelOcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Instance Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1898}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1927}], "key.bodylength": 415, "key.bodyoffset": 2009, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 437, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 1998, "key.offset": 1988, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let instanceIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2066}], "key.doc.column": 23, "key.doc.comment": "Instance identifier, persisted to defaults", "key.doc.declaration": "public static let instanceIdentifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"72\" column=\"23\"><Name>instanceIdentifier</Name><USR>s:9FritzCoreAAC18instanceIdentifierSSvpZ</USR><Declaration>public static let instanceIdentifier: String</Declaration><CommentParts><Abstract><Para>Instance identifier, persisted to defaults</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "instanceIdentifier", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2015, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>instanceIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 350, "key.name": "instanceIdentifier", "key.namelength": 18, "key.nameoffset": 2084, "key.offset": 2073, "key.parsed_declaration": "public static let instanceIdentifier: String =", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCoreAAC18instanceIdentifierSSvpZ"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Session Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2430}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2458}], "key.bodylength": 2056, "key.bodyoffset": 2540, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2078, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 2529, "key.offset": 2519, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var sessionIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2596}], "key.bodylength": 80, "key.bodyoffset": 2641, "key.doc.column": 23, "key.doc.comment": "Session identifier, persisted to defaults", "key.doc.declaration": "public static var sessionIdentifier: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"88\" column=\"23\"><Name>sessionIdentifier</Name><USR>s:9FritzCoreAAC17sessionIdentifierSSvpZ</USR><Declaration>public static var sessionIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>Session identifier, persisted to defaults</Para></Abstract></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "sessionIdentifier", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 2546, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 119, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 2614, "key.offset": 2603, "key.parsed_declaration": "public static var sessionIdentifier: String", "key.parsed_scope.end": 90, "key.parsed_scope.start": 88, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCoreAAC17sessionIdentifierSSvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func extendSessionIdentifier()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2779}], "key.bodylength": 50, "key.bodyoffset": 2825, "key.doc.column": 24, "key.doc.comment": "Extends the lifetime of session identifier", "key.doc.declaration": "public static func extendSessionIdentifier()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"93\" column=\"24\"><Name>extendSessionIdentifier()</Name><USR>s:9FritzCoreAAC23extendSessionIdentifieryyFZ</USR><Declaration>public static func extendSessionIdentifier()</Declaration><CommentParts><Abstract><Para>Extends the lifetime of session identifier</Para></Abstract></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "extendSessionIdentifier()", "key.doc.type": "Function", "key.doclength": 47, "key.docoffset": 2728, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>extendSessionIdentifier</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 90, "key.name": "extendSessionIdentifier()", "key.namelength": 25, "key.nameoffset": 2798, "key.offset": 2786, "key.parsed_declaration": "public static func extendSessionIdentifier()", "key.parsed_scope.end": 95, "key.parsed_scope.start": 93, "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCoreAAC23extendSessionIdentifieryyFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public static func resetSessionIdentifierIfNeeded() -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3051}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 3028}], "key.bodylength": 313, "key.bodyoffset": 3114, "key.doc.column": 24, "key.doc.comment": "Resets the session identifier if last access was more than the default expiration interval\nReturns the current session identifier", "key.doc.declaration": "public static func resetSessionIdentifierIfNeeded() -> String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"100\" column=\"24\"><Name>resetSessionIdentifierIfNeeded()</Name><USR>s:9FritzCoreAAC30resetSessionIdentifierIfNeededSSyFZ</USR><Declaration>public static func resetSessionIdentifierIfNeeded() -&gt; String</Declaration><CommentParts><Abstract><Para>Resets the session identifier if last access was more than the default expiration interval Returns the current session identifier</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "resetSessionIdentifierIfNeeded()", "key.doc.type": "Function", "key.doclength": 142, "key.docoffset": 2882, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resetSessionIdentifierIfNeeded</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 370, "key.name": "resetSessionIdentifierIfNeeded()", "key.namelength": 32, "key.nameoffset": 3070, "key.offset": 3058, "key.parsed_declaration": "public static func resetSessionIdentifierIfNeeded() -> String", "key.parsed_scope.end": 108, "key.parsed_scope.start": 100, "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> String", "key.typeusr": "$SSSycD", "key.usr": "s:9FritzCoreAAC30resetSessionIdentifierIfNeededSSyFZ"}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - User Agent", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4602}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4622}], "key.bodylength": 2540, "key.bodyoffset": 4704, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2562, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 4693, "key.offset": 4683, "key.substructure": [], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>struct Date : <Type usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</Type>, <Type usr=\"s:SL\">Comparable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7247}], "key.bodylength": 84, "key.bodyoffset": 7270, "key.doc.declaration": "struct Date : ReferenceConvertible, Comparable, Equatable", "key.doc.discussion": [{"Para": "A `Date` is independent of a particular calendar or time zone. To represent a `Date` to a user, you must interpret it in the context of a `Calendar`."}], "key.doc.full_as_xml": "<Class><Name>Date</Name><USR>s:10Foundation4DateV</USR><Declaration>struct Date : ReferenceConvertible, Comparable, Equatable</Declaration><CommentParts><Abstract><Para><codeVoice>Date</codeVoice> represents a single point in time.</Para></Abstract><Discussion><Para>A <codeVoice>Date</codeVoice> is independent of a particular calendar or time zone. To represent a <codeVoice>Date</codeVoice> to a user, you must interpret it in the context of a <codeVoice>Calendar</codeVoice>.</Para></Discussion></CommentParts></Class>", "key.doc.name": "Date", "key.doc.type": "Class", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Date</decl.name> : <ref.protocol usr=\"s:10Foundation20ReferenceConvertibleP\">ReferenceConvertible</ref.protocol>, <ref.protocol usr=\"s:SL\">Comparable</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 101, "key.modulename": "Foundation", "key.name": "Date", "key.namelength": 4, "key.nameoffset": 7264, "key.offset": 7254, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func elapsed() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.bodylength": 51, "key.bodyoffset": 7301, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>elapsed</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 78, "key.name": "elapsed()", "key.namelength": 9, "key.nameoffset": 7280, "key.offset": 7275, "key.parsed_declaration": "func elapsed() -> Double", "key.parsed_scope.end": 203, "key.parsed_scope.start": 201, "key.substructure": [], "key.typename": "(Date) -> () -> Double", "key.typeusr": "$SSdycD", "key.usr": "s:10Foundation4DateV9FritzCoreE7elapsedSdyF"}], "key.typename": "Date.Type", "key.typeusr": "$S10Foundation4DateVmD", "key.usr": "s:10Foundation4DateV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2242, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum LogLevel : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 367}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 361}], "key.bodylength": 126, "key.bodyoffset": 394, "key.doc.column": 13, "key.doc.comment": "Logging level for the SDK\n\n- debug: log all logs\n- info: log info logs or higher\n- warn: log warning logs or higher\n- error: log error logs only\n- none: disable logging", "key.doc.declaration": "@objc public enum LogLevel : Int", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"19\" column=\"13\"><Name>LogLevel</Name><USR>c:@M@FritzCore@E@LogLevel</USR><Declaration>@objc public enum LogLevel : Int</Declaration><CommentParts><Abstract><Para>Logging level for the SDK</Para></Abstract><Discussion><List-Bullet><Item><Para>debug: log all logs</Para></Item><Item><Para>info: log info logs or higher</Para></Item><Item><Para>warn: log warning logs or higher</Para></Item><Item><Para>error: log error logs only</Para></Item><Item><Para>none: disable logging</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "LogLevel", "key.doc.type": "Other", "key.doclength": 196, "key.docoffset": 165, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 389}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>LogLevel</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 147, "key.name": "LogLevel", "key.namelength": 8, "key.nameoffset": 379, "key.offset": 374, "key.parsed_declaration": "public enum LogLevel: Int", "key.parsed_scope.end": 27, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 399, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 418, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 432, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 446, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 461, "key.substructure": []}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var shared: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 476}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shared</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 36, "key.name": "shared", "key.namelength": 6, "key.nameoffset": 494, "key.offset": 483, "key.parsed_declaration": "public static var shared: LogLevel = .error", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "LogLevel", "key.typeusr": "$S9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore8LogLevelO6sharedACvpZ"}], "key.typename": "LogLevel.Type", "key.typeusr": "$S9FritzCore8LogLevelOmD", "key.usr": "c:@M@FritzCore@E@LogLevel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Logger</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 523}], "key.bodylength": 1695, "key.bodyoffset": 545, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Logger</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1711, "key.name": "Logger", "key.namelength": 6, "key.nameoffset": 537, "key.offset": 530, "key.parsed_declaration": "public struct Logger", "key.parsed_scope.end": 78, "key.parsed_scope.start": 29, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 551}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>level</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "level", "key.namelength": 5, "key.nameoffset": 562, "key.offset": 558, "key.parsed_declaration": "public let level: LogLevel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "LogLevel", "key.typeusr": "$S9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore6LoggerV5levelAA8LogLevelOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 583}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 594, "key.offset": 590, "key.parsed_declaration": "public let name: String", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type>, level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 612}], "key.bodylength": 57, "key.bodyoffset": 666, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 105, "key.name": "init(name:level:)", "key.namelength": 45, "key.nameoffset": 619, "key.offset": 619, "key.parsed_declaration": "public init(name: String, level: LogLevel = .shared)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 35, "key.substructure": [], "key.typename": "(Logger.Type) -> (String, LogLevel) -> Logger", "key.typeusr": "$S4name5level9FritzCore6LoggerVSS_AC8LogLevelOtcD", "key.usr": "s:9FritzCore6LoggerV4name5levelACSS_AA8LogLevelOtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func debug(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 777}], "key.bodylength": 185, "key.bodyoffset": 813, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `debug`", "key.doc.declaration": "public func debug(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"41\" column=\"17\"><Name>debug(_:)</Name><USR>s:9FritzCore6LoggerV5debugyyypd_tF</USR><Declaration>public func debug(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>debug</codeVoice></Para></Abstract></CommentParts></Function>", "key.doc.line": 41, "key.doc.name": "debug(_:)", "key.doc.type": "Function", "key.doclength": 43, "key.docoffset": 730, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>debug</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 215, "key.name": "debug(_:)", "key.namelength": 22, "key.nameoffset": 789, "key.offset": 784, "key.parsed_declaration": "public func debug(_ items: Any...)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 41, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 879, "key.offset": 875, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func info(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1060}], "key.bodylength": 183, "key.bodyoffset": 1095, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `info` or lower", "key.doc.declaration": "public func info(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"48\" column=\"17\"><Name>info(_:)</Name><USR>s:9FritzCore6LoggerV4infoyyypd_tF</USR><Declaration>public func info(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>info</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 48, "key.doc.name": "info(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1005, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>info</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "info(_:)", "key.namelength": 21, "key.nameoffset": 1072, "key.offset": 1067, "key.parsed_declaration": "public func info(_ items: Any...)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1160, "key.offset": 1156, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func warn(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1340}], "key.bodylength": 183, "key.bodyoffset": 1375, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `warn` or lower", "key.doc.declaration": "public func warn(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"55\" column=\"17\"><Name>warn(_:)</Name><USR>s:9FritzCore6LoggerV4warnyyypd_tF</USR><Declaration>public func warn(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>warn</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "warn(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1285, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>warn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "warn(_:)", "key.namelength": 21, "key.nameoffset": 1352, "key.offset": 1347, "key.parsed_declaration": "public func warn(_ items: Any...)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1440, "key.offset": 1436, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func error(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1621}], "key.bodylength": 185, "key.bodyoffset": 1657, "key.doc.column": 17, "key.doc.comment": "Prints to stdout when level is `error` or lower", "key.doc.declaration": "public func error(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"62\" column=\"17\"><Name>error(_:)</Name><USR>s:9FritzCore6LoggerV5erroryyypd_tF</USR><Declaration>public func error(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>error</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "error(_:)", "key.doc.type": "Function", "key.doclength": 52, "key.docoffset": 1565, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 215, "key.name": "error(_:)", "key.namelength": 22, "key.nameoffset": 1633, "key.offset": 1628, "key.parsed_declaration": "public func error(_ items: Any...)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 62, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1723, "key.offset": 1719, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func log(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1961}], "key.bodylength": 125, "key.bodyoffset": 1995, "key.doc.column": 17, "key.doc.comment": "Prints to stdout\n- Note: Should use one of the functions above that are controlled by log level", "key.doc.declaration": "public func log(_ items: Any...)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"70\" column=\"17\"><Name>log(_:)</Name><USR>s:9FritzCore6LoggerV3logyyypd_tF</USR><Declaration>public func log(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout</Para></Abstract><Discussion><Note><Para>Should use one of the functions above that are controlled by log level</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 70, "key.doc.name": "log(_:)", "key.doc.type": "Function", "key.doclength": 108, "key.docoffset": 1849, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>log</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 153, "key.name": "log(_:)", "key.namelength": 20, "key.nameoffset": 1973, "key.offset": 1968, "key.parsed_declaration": "public func log(_ items: Any...)", "key.parsed_scope.end": 73, "key.parsed_scope.start": 70, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 2008, "key.offset": 2004, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$Syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF"}], "key.typename": "Logger.Type", "key.typeusr": "$S9FritzCore6LoggerVmD", "key.usr": "s:9FritzCore6LoggerV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 934, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>class NSNotification : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSCopying\">NSCopying</Type>, <Type usr=\"c:objc(pl)NSCoding\">NSCoding</Type></Declaration>", "key.bodylength": 415, "key.bodyoffset": 198, "key.doc.column": 12, "key.doc.declaration": "class NSNotification : NSObject, NSCopying, NSCoding", "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h\" line=\"15\" column=\"12\"><Name>NSNotification</Name><USR>c:objc(cs)NSNotification</USR><Declaration>class NSNotification : NSObject, NSCopying, NSCoding</Declaration><Abstract><Para>**************\tNotifications\t***************</Para></Abstract></Other>", "key.doc.line": 15, "key.doc.name": "NSNotification", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/Foundation.framework/Headers/NSNotification.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>NSNotification</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSCopying\">NSCopying</ref.protocol>, <ref.protocol usr=\"c:objc(pl)NSCoding\">NSCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 442, "key.modulename": "Foundation.NSNotification", "key.name": "NSNotification", "key.namelength": 14, "key.nameoffset": 182, "key.offset": 172, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorNotificationKey) public static let errorNotificationKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 312}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 275}], "key.doc.column": 23, "key.doc.comment": "Subscribe to this notification to receive Fritz-related errors", "key.doc.declaration": "@objc(FritzErrorNotificationKey) public static let errorNotificationKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"15\" column=\"23\"><Name>errorNotificationKey</Name><USR>c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzErrorNotificationKey</USR><Declaration>@objc(FritzErrorNotificationKey) public static let errorNotificationKey: String</Declaration><CommentParts><Abstract><Para>Subscribe to this notification to receive Fritz-related errors</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "errorNotificationKey", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 204, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorNotificationKey)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>errorNotificationKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "errorNotificationKey", "key.namelength": 20, "key.nameoffset": 330, "key.offset": 319, "key.parsed_declaration": "public static let errorNotificationKey = \"com.fritz.sdk.notifications.error\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzErrorNotificationKey"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 521}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 477}], "key.doc.column": 23, "key.doc.comment": "Subscribe to this notification to know when a Fritz model has been updated", "key.doc.declaration": "@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"19\" column=\"23\"><Name>modelUpdatedNotificationKey</Name><USR>c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelUpdatedNotificationKey</USR><Declaration>@objc(FritzModelUpdatedNotificationKey) public static let modelUpdatedNotificationKey: String</Declaration><CommentParts><Abstract><Para>Subscribe to this notification to know when a Fritz model has been updated</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "modelUpdatedNotificationKey", "key.doc.type": "Other", "key.doclength": 79, "key.docoffset": 394, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelUpdatedNotificationKey)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelUpdatedNotificationKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 84, "key.name": "modelUpdatedNotificationKey", "key.namelength": 27, "key.nameoffset": 539, "key.offset": 528, "key.parsed_declaration": "public static let modelUpdatedNotificationKey = \"com.fritz.sdk.notifications.model-updated\"", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@CM@FritzCore@@objc(cs)NSNotification(cpy)FritzModelUpdatedNotificationKey"}], "key.typename": "NSNotification.Type", "key.typeusr": "$SSo14NSNotificationCmD", "key.usr": "c:objc(cs)NSNotification"}, {"key.annotated_decl": "<Declaration>typealias <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.Name = <Type usr=\"c:objc(cs)NSNotification\">NSNotification</Type>.<Type usr=\"c:@T@NSNotificationName\">Name</Type></Declaration>", "key.bodylength": 287, "key.bodyoffset": 645, "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<decl.name>Name</decl.name> = <ref.class usr=\"c:objc(cs)NSNotification\">NSNotification</ref.class>.<ref.struct usr=\"c:@T@NSNotificationName\">Name</ref.struct></decl.typealias>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 317, "key.modulename": "Foundation", "key.name": "Notification.Name", "key.namelength": 17, "key.nameoffset": 626, "key.offset": 616, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let fritzError: <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.<Type usr=\"s:10Foundation12NotificationV4Namea\">Name</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 703}], "key.doc.column": 23, "key.doc.comment": "All Fritz errors are posted under this name", "key.doc.declaration": "public static let fritzError: Notification.Name", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"25\" column=\"23\"><Name>fritzError</Name><USR>s:So18NSNotificationNamea9FritzCoreE10fritzErrorABvpZ</USR><Declaration>public static let fritzError: Notification.Name</Declaration><CommentParts><Abstract><Para>All Fritz errors are posted under this name</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "fritzError", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 651, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fritzError</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<ref.typealias usr=\"s:10Foundation12NotificationV4Namea\">Name</ref.typealias></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "fritzError", "key.namelength": 10, "key.nameoffset": 721, "key.offset": 710, "key.parsed_declaration": "public static let fritzError = Notification.Name(NSNotification.errorNotificationKey)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "NSNotification.Name", "key.typeusr": "$SSo18NSNotificationNameaD", "key.usr": "s:So18NSNotificationNamea9FritzCoreE10fritzErrorABvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let modelUpdated: <Type usr=\"s:10Foundation12NotificationV\">Notification</Type>.<Type usr=\"s:10Foundation12NotificationV4Namea\">Name</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 837}], "key.doc.column": 23, "key.doc.comment": "Posted when a model is updated OTA", "key.doc.declaration": "public static let modelUpdated: Notification.Name", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift\" line=\"28\" column=\"23\"><Name>modelUpdated</Name><USR>s:So18NSNotificationNamea9FritzCoreE12modelUpdatedABvpZ</USR><Declaration>public static let modelUpdated: Notification.Name</Declaration><CommentParts><Abstract><Para>Posted when a model is updated OTA</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "modelUpdated", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 794, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelUpdated</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation12NotificationV\">Notification</ref.struct>.<ref.typealias usr=\"s:10Foundation12NotificationV4Namea\">Name</ref.typealias></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 87, "key.name": "modelUpdated", "key.namelength": 12, "key.nameoffset": 855, "key.offset": 844, "key.parsed_declaration": "public static let modelUpdated = Notification.Name(NSNotification.modelUpdatedNotificationKey)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "NSNotification.Name", "key.typeusr": "$SSo18NSNotificationNameaD", "key.usr": "s:So18NSNotificationNamea9FritzCoreE12modelUpdatedABvpZ"}], "key.typename": "NSNotification.Name.Type", "key.typeusr": "$SSo18NSNotificationNameamD", "key.usr": "s:10Foundation12NotificationV4Namea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2809, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RetryResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 174}], "key.bodylength": 33, "key.bodyoffset": 199, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RetryResult</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 52, "key.name": "RetryResult", "key.namelength": 11, "key.nameoffset": 186, "key.offset": 181, "key.parsed_declaration": "public enum RetryResult", "key.parsed_scope.end": 14, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 204, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 221, "key.substructure": []}], "key.typename": "RetryResult.Type", "key.typeusr": "$S9FritzCore11RetryResultOmD", "key.usr": "s:9FritzCore11RetryResultO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct OperationRetryHandler</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 235}], "key.bodylength": 446, "key.bodyoffset": 272, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>OperationRetryHandler</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 477, "key.name": "OperationRetryHandler", "key.namelength": 21, "key.nameoffset": 249, "key.offset": 242, "key.parsed_declaration": "public struct OperationRetryHandler", "key.parsed_scope.end": 29, "key.parsed_scope.start": 16, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 323}], "key.doc.column": 16, "key.doc.comment": "Queue to dispatch retry operation on", "key.doc.declaration": "public let retryQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"19\" column=\"16\"><Name>retryQueue</Name><USR>s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp</USR><Declaration>public let retryQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to dispatch retry operation on</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "retryQueue", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 278, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryQueue", "key.namelength": 10, "key.nameoffset": 334, "key.offset": 330, "key.parsed_declaration": "public let retryQueue: DispatchQueue", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "DispatchQueue", "key.typeusr": "$SSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retry: (@escaping (<Type usr=\"s:9FritzCore11RetryResultO\">RetryResult</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 438}], "key.doc.column": 16, "key.doc.comment": "Perform a retry and call completion handler with result of retry", "key.doc.declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"22\" column=\"16\"><Name>retry</Name><USR>s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp</USR><Declaration>public let retry: (@escaping (RetryResult) -&gt; Void) -&gt; Void</Declaration><CommentParts><Abstract><Para>Perform a retry and call completion handler with result of retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "retry", "key.doc.type": "Other", "key.doclength": 69, "key.docoffset": 365, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retry</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore11RetryResultO\">RetryResult</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "retry", "key.namelength": 5, "key.nameoffset": 449, "key.offset": 445, "key.parsed_declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(@escaping (RetryResult) -> ()) -> ()", "key.typeusr": "$Syyy9FritzCore11RetryResultOccD", "key.usr": "s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onSuccess: () -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 569}], "key.doc.column": 16, "key.doc.comment": "Retrier received a successful retry, will not retry again", "key.doc.declaration": "public let onSuccess: () -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"25\" column=\"16\"><Name>onSuccess</Name><USR>s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp</USR><Declaration>public let onSuccess: () -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier received a successful retry, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "onSuccess", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 503, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onSuccess</decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "onSuccess", "key.namelength": 9, "key.nameoffset": 580, "key.offset": 576, "key.parsed_declaration": "public let onSuccess: () -> Void", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "() -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onFailure: (<Type usr=\"s:Su\">UInt</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 681}], "key.doc.column": 16, "key.doc.comment": "Retrier retried the maximum number of times, will not retry again", "key.doc.declaration": "public let onFailure: (UInt) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"28\" column=\"16\"><Name>onFailure</Name><USR>s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp</USR><Declaration>public let onFailure: (UInt) -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier retried the maximum number of times, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "onFailure", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 607, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onFailure</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "onFailure", "key.namelength": 9, "key.nameoffset": 692, "key.offset": 688, "key.parsed_declaration": "public let onFailure: (UInt) -> Void", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(UInt) -> ()", "key.typeusr": "$SyySucD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp"}], "key.typename": "OperationRetryHandler.Type", "key.typeusr": "$S9FritzCore21OperationRetryHandlerVmD", "key.usr": "s:9FritzCore21OperationRetryHandlerV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class OperationRetrier</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 728}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 721}], "key.bodylength": 2049, "key.bodyoffset": 758, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OperationRetrier</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 2074, "key.name": "OperationRetrier", "key.namelength": 16, "key.nameoffset": 740, "key.offset": 734, "key.parsed_declaration": "public final class OperationRetrier", "key.parsed_scope.end": 100, "key.parsed_scope.start": 31, "key.runtime_name": "_TtC4main16OperationRetrier", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 803}], "key.doc.column": 16, "key.doc.comment": "Delegate to handle retry cases", "key.doc.declaration": "public let handler: OperationRetryHandler", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"34\" column=\"16\"><Name>handler</Name><USR>s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp</USR><Declaration>public let handler: OperationRetryHandler</Declaration><CommentParts><Abstract><Para>Delegate to handle retry cases</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "handler", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 764, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>handler</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "handler", "key.namelength": 7, "key.nameoffset": 814, "key.offset": 810, "key.parsed_declaration": "public let handler: OperationRetryHandler", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "OperationRetryHandler", "key.typeusr": "$S9FritzCore21OperationRetryHandlerVD", "key.usr": "s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 901}], "key.doc.column": 16, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"37\" column=\"16\"><Name>maxRetries</Name><USR>s:9FritzCore16OperationRetrierC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 850, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 912, "key.offset": 908, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore16OperationRetrierC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 993}], "key.doc.column": 16, "key.doc.comment": "Millisecond multiplier to adjust exponential curve", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"40\" column=\"16\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Millisecond multiplier to adjust exponential curve</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 934, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 1004, "key.offset": 1000, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isPaused: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1089}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1082}], "key.doc.column": 29, "key.doc.comment": "Is the retry loop currently paused", "key.doc.declaration": "public private(set) var isPaused: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"43\" column=\"29\"><Name>isPaused</Name><USR>s:9FritzCore16OperationRetrierC8isPausedSbvp</USR><Declaration>public private(set) var isPaused: Bool</Declaration><CommentParts><Abstract><Para>Is the retry loop currently paused</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "isPaused", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 1039, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isPaused</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "isPaused", "key.namelength": 8, "key.nameoffset": 1106, "key.offset": 1102, "key.parsed_declaration": "public private(set) var isPaused: Bool = true", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore16OperationRetrierC8isPausedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var attemptedRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1176}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1169}], "key.doc.column": 29, "key.doc.comment": "Number of attempted retries", "key.doc.declaration": "public private(set) var attemptedRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"46\" column=\"29\"><Name>attemptedRetries</Name><USR>s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp</USR><Declaration>public private(set) var attemptedRetries: UInt</Declaration><CommentParts><Abstract><Para>Number of attempted retries</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "attemptedRetries", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1133, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>attemptedRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "attemptedRetries", "key.namelength": 16, "key.nameoffset": 1193, "key.offset": 1189, "key.parsed_declaration": "public private(set) var attemptedRetries: UInt = 0", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UInt", "key.typeusr": "$SSuD", "key.usr": "s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type>, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1225}], "key.bodylength": 132, "key.bodyoffset": 1319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>handler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 220, "key.name": "init(handler:maxRetries:exponentialMultiplier:)", "key.namelength": 85, "key.nameoffset": 1232, "key.offset": 1232, "key.parsed_declaration": "public init(handler: OperationRetryHandler, maxRetries: UInt, exponentialMultiplier: UInt32)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 48, "key.substructure": [], "key.typename": "(OperationRetrier.Type) -> (OperationRetryHandler, UInt, UInt32) -> OperationRetrier", "key.typeusr": "$S7handler10maxRetries21exponentialMultiplier9FritzCore16OperationRetrierCAD0H12RetryHandlerV_Sus6UInt32VtcD", "key.usr": "s:9FritzCore16OperationRetrierC7handler10maxRetries21exponentialMultiplierAcA0C12RetryHandlerV_Sus6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func start()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1487}], "key.bodylength": 102, "key.bodyoffset": 1508, "key.doc.column": 17, "key.doc.comment": "Start the retry loop", "key.doc.declaration": "public func start()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"55\" column=\"17\"><Name>start()</Name><USR>s:9FritzCore16OperationRetrierC5startyyF</USR><Declaration>public func start()</Declaration><CommentParts><Abstract><Para>Start the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "start()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1458, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>start</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 117, "key.name": "start()", "key.namelength": 7, "key.nameoffset": 1499, "key.offset": 1494, "key.parsed_declaration": "public func start()", "key.parsed_scope.end": 59, "key.parsed_scope.start": 55, "key.substructure": [], "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore16OperationRetrierC5startyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stop()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1646}], "key.bodylength": 29, "key.bodyoffset": 1666, "key.doc.column": 17, "key.doc.comment": "Stops the retry loop", "key.doc.declaration": "public func stop()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"62\" column=\"17\"><Name>stop()</Name><USR>s:9FritzCore16OperationRetrierC4stopyyF</USR><Declaration>public func stop()</Declaration><CommentParts><Abstract><Para>Stops the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "stop()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1617, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stop</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 43, "key.name": "stop()", "key.namelength": 6, "key.nameoffset": 1658, "key.offset": 1653, "key.parsed_declaration": "public func stop()", "key.parsed_scope.end": 64, "key.parsed_scope.start": 62, "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore16OperationRetrierC4stopyyF"}, {"key.annotated_decl": "<Declaration>let base: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>base</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "base", "key.namelength": 4, "key.nameoffset": 2464, "key.offset": 2460, "key.parsed_declaration": "let base = Double(2)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg4baseL_Sdvp"}, {"key.annotated_decl": "<Declaration>let exponent: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponent</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "exponent", "key.namelength": 8, "key.nameoffset": 2493, "key.offset": 2489, "key.parsed_declaration": "let exponent = Double(attemptedRetries)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg8exponentL_Sdvp"}, {"key.annotated_decl": "<Declaration>let milliseconds: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>milliseconds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "milliseconds", "key.namelength": 12, "key.nameoffset": 2541, "key.offset": 2537, "key.parsed_declaration": "let milliseconds = pow(base, exponent) * Double(exponentialMultiplier)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg12millisecondsL_Sdvp"}, {"key.annotated_decl": "<Declaration>let millisecondJitter: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>millisecondJitter</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "millisecondJitter", "key.namelength": 17, "key.nameoffset": 2620, "key.offset": 2616, "key.parsed_declaration": "let millisecondJitter = arc4random_uniform(exponentialMultiplier * 10)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg17millisecondJitterL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let waitTime: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>waitTime</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "waitTime", "key.namelength": 8, "key.nameoffset": 2699, "key.offset": 2695, "key.parsed_declaration": "let waitTime = Int(milliseconds) + Int(millisecondJitter)", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg04waitP0L_Sivp"}], "key.typename": "OperationRetrier.Type", "key.typeusr": "$S9FritzCore16OperationRetrierCmD", "key.usr": "s:9FritzCore16OperationRetrierC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2310, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSession) public final class Session : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 798}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 791}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 730}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 710}], "key.bodylength": 1479, "key.bodyoffset": 829, "key.doc.column": 20, "key.doc.comment": "Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.\n\n- Note: By default the SDK will read your App Token from the `FritzToken` line in your apps Info.plist. However, by providing a `Session` when conforming to `BaseIdentifiedModel` you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"18\" column=\"20\"><Name>Session</Name><USR>c:@M@FritzCore@objc(cs)FritzSession</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject</Declaration><CommentParts><Abstract><Para>Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract><Discussion><Note><Para>By default the SDK will read your App Token from the <codeVoice>FritzToken</codeVoice> line in your apps Info.plist. However, by providing a <codeVoice>Session</codeVoice> when conforming to <codeVoice>BaseIdentifiedModel</codeVoice> you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 18, "key.doc.name": "Session", "key.doc.type": "Class", "key.doclength": 548, "key.docoffset": 161, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 819}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Session</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1505, "key.name": "Session", "key.namelength": 7, "key.nameoffset": 810, "key.offset": 804, "key.parsed_declaration": "public final class Session: NSObject", "key.parsed_scope.end": 64, "key.parsed_scope.start": 18, "key.runtime_name": "FritzSession", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>.Info : <Type usr=\"s:Se\">Decodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 835}], "key.bodylength": 110, "key.bodyoffset": 866, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 855}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class>.<decl.name>Info</decl.name> : <ref.protocol usr=\"s:Se\">Decodable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Decodable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 135, "key.name": "Info", "key.namelength": 4, "key.nameoffset": 849, "key.offset": 842, "key.parsed_declaration": "public struct Info: Decodable", "key.parsed_scope.end": 24, "key.parsed_scope.start": 20, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 875}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 886, "key.offset": 882, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 909}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 920, "key.offset": 916, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 954, "key.offset": 950, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC4InfoV9namespaceSSvp"}], "key.typename": "Session.Info.Type", "key.typeusr": "$S9FritzCore7SessionC4InfoVmD", "key.usr": "s:9FritzCore7SessionC4InfoV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(defaultSession) public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1055}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1029}], "key.doc.column": 23, "key.doc.comment": "Default session to use throughout SDK", "key.doc.declaration": "@objc(defaultSession) public static let `default`: FritzCore.Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"28\" column=\"23\"><Name>default</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession</USR><Declaration>@objc(defaultSession) public static let `default`: FritzCore.Session</Declaration><CommentParts><Abstract><Para>Default session to use throughout SDK</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "default", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 983, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(defaultSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 440, "key.name": "default", "key.namelength": 7, "key.nameoffset": 1073, "key.offset": 1062, "key.parsed_declaration": "public static let `default`: Session =", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1547}], "key.doc.column": 16, "key.doc.comment": "App token sent on all requests", "key.doc.declaration": "public let apiKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"38\" column=\"16\"><Name>apiKey</Name><USR>s:9FritzCore7SessionC6apiKeySSvp</USR><Declaration>public let apiKey: String</Declaration><CommentParts><Abstract><Para>App token sent on all requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "apiKey", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 1508, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 1558, "key.offset": 1554, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1604}], "key.doc.column": 16, "key.doc.comment": "Api to connect to", "key.doc.declaration": "public let apiUrl: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"41\" column=\"16\"><Name>apiUrl</Name><USR>s:9FritzCore7SessionC6apiUrlSSvp</USR><Declaration>public let apiUrl: String</Declaration><CommentParts><Abstract><Para>Api to connect to</Para></Abstract></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "apiUrl", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 1578, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 1615, "key.offset": 1611, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1686}], "key.doc.column": 16, "key.doc.comment": "Namespace for local storage of Fritz files", "key.doc.declaration": "public let namespace: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"44\" column=\"16\"><Name>namespace</Name><USR>s:9FritzCore7SessionC9namespaceSSvp</USR><Declaration>public let namespace: String</Declaration><CommentParts><Abstract><Para>Namespace for local storage of Fritz files</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "namespace", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1635, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 1697, "key.offset": 1693, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore7SessionC9namespaceSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1762}], "key.bodylength": 41, "key.bodyoffset": 1800, "key.doc.column": 16, "key.doc.comment": "Current settings for this session", "key.doc.declaration": "public var settings: SessionSettings { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"47\" column=\"16\"><Name>settings</Name><USR>s:9FritzCore7SessionC8settingsAA0C8SettingsVvp</USR><Declaration>public var settings: SessionSettings { get }</Declaration><CommentParts><Abstract><Para>Current settings for this session</Para></Abstract></CommentParts></Other>", "key.doc.line": 47, "key.doc.name": "settings", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1720, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>settings</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 73, "key.name": "settings", "key.namelength": 8, "key.nameoffset": 1773, "key.offset": 1769, "key.parsed_declaration": "public var settings: SessionSettings", "key.parsed_scope.end": 49, "key.parsed_scope.start": 47, "key.typename": "SessionSettings", "key.typeusr": "$S9FritzCore15SessionSettingsVD", "key.usr": "s:9FritzCore7SessionC8settingsAA0C8SettingsVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: <Type usr=\"s:SS\">String</Type>, apiUrl: <Type usr=\"s:SS\">String</Type>, namespace: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1919}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1873}], "key.bodylength": 119, "key.bodyoffset": 1983, "key.doc.column": 12, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"53\" column=\"12\"><Name>init(apiKey:apiUrl:namespace:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:</USR><Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "init(apiKey:apiUrl:namespace:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 1848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:apiUrl:namespace:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>apiUrl</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>namespace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 177, "key.name": "init(apiKey:apiUrl:namespace:)", "key.namelength": 55, "key.nameoffset": 1926, "key.offset": 1926, "key.parsed_declaration": "public init(apiKey: String, apiUrl: String, namespace: String)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:\">init(apiKey:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String, String, String) -> Session", "key.typeusr": "$S6apiKey0A3Url9namespace9FritzCore7SessionCSS_S2StcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:) public convenience init(apiKey: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2169}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2162}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 2133}], "key.bodylength": 103, "key.bodyoffset": 2203, "key.doc.column": 24, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:) public convenience init(apiKey: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"61\" column=\"24\"><Name>init(apiKey:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:</USR><Declaration>@objc(initWithAppToken:) public convenience init(apiKey: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 61, "key.doc.name": "init(apiKey:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 2108, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 126, "key.name": "init(apiKey:)", "key.namelength": 20, "key.nameoffset": 2181, "key.offset": 2181, "key.parsed_declaration": "public convenience init(apiKey: String)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:\">init(apiKey:apiUrl:namespace:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String) -> Session", "key.typeusr": "$S6apiKey9FritzCore7SessionCSS_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:"}], "key.typename": "Session.Type", "key.typeusr": "$S9FritzCore7SessionCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1407, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 231}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 170}], "key.bodylength": 1146, "key.bodyoffset": 259, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1168, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 245, "key.offset": 238, "key.parsed_declaration": "public struct SessionEvent", "key.parsed_scope.end": 42, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>.EventType : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}], "key.bodylength": 803, "key.bodyoffset": 296, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 288}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>.<decl.name>EventType</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 828, "key.name": "EventType", "key.namelength": 9, "key.nameoffset": 277, "key.offset": 272, "key.parsed_declaration": "public enum EventType: String", "key.parsed_scope.end": 28, "key.parsed_scope.start": 14, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 63, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 305, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 377, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 57, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 451, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 59, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 517, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 39, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 585, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 56, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 633, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 50, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 698, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 757, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 48, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 820, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 60, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 877, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 946, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 30, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1009, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 46, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1048, "key.substructure": []}], "key.typename": "SessionEvent.EventType.Type", "key.typeusr": "$S9FritzCore12SessionEventV0D4TypeOmD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1106}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "type", "key.namelength": 4, "key.nameoffset": 1117, "key.offset": 1113, "key.parsed_declaration": "public let type: EventType", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "SessionEvent.EventType", "key.typeusr": "$S9FritzCore12SessionEventV0D4TypeOD", "key.usr": "s:9FritzCore12SessionEventV4typeAC0D4TypeOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1138}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "data", "key.namelength": 4, "key.nameoffset": 1149, "key.offset": 1145, "key.parsed_declaration": "public let data: RequestOptions", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[String : Any]", "key.typeusr": "$SSDySSypGD", "key.usr": "s:9FritzCore12SessionEventV4dataSDySSypGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sessionIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1175}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 51, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1186, "key.offset": 1182, "key.parsed_declaration": "public let sessionIdentifier = FritzCore.sessionIdentifier", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore12SessionEventV17sessionIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let timestamp: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1239}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>timestamp</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "timestamp", "key.namelength": 9, "key.nameoffset": 1250, "key.offset": 1246, "key.parsed_declaration": "public let timestamp = Date().timeIntervalSince1970", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore12SessionEventV9timestampSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type>, data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1296}], "key.bodylength": 55, "key.bodyoffset": 1348, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>type</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 101, "key.name": "init(type:data:)", "key.namelength": 43, "key.nameoffset": 1303, "key.offset": 1303, "key.parsed_declaration": "public init(type: EventType, data: RequestOptions)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 38, "key.substructure": [], "key.typename": "(SessionEvent.Type) -> (SessionEvent.EventType, [String : Any]) -> SessionEvent", "key.typeusr": "$S4type4data9FritzCore12SessionEventVAE0F4TypeO_SDySSypGtcD", "key.usr": "s:9FritzCore12SessionEventV4type4dataA2C0D4TypeO_SDySSypGtcfc"}], "key.typename": "SessionEvent.Type", "key.typeusr": "$S9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7483, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum SessionManagerError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 232}], "key.bodylength": 19, "key.bodyoffset": 272, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 265}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SessionManagerError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 53, "key.name": "SessionManagerError", "key.namelength": 19, "key.nameoffset": 244, "key.offset": 239, "key.parsed_declaration": "public enum SessionManagerError: Error", "key.parsed_scope.end": 16, "key.parsed_scope.start": 14, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 277, "key.substructure": []}], "key.typename": "SessionManagerError.Type", "key.typeusr": "$S9FritzCore19SessionManagerErrorOmD", "key.usr": "s:9FritzCore19SessionManagerErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 362}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 355}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 294}], "key.bodylength": 1569, "key.bodyoffset": 390, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1592, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 374, "key.offset": 368, "key.parsed_declaration": "public final class SessionManager", "key.parsed_scope.end": 65, "key.parsed_scope.start": 19, "key.runtime_name": "_TtC4main14SessionManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 432}], "key.doc.column": 16, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"22\" column=\"16\"><Name>session</Name><USR>s:9FritzCore14SessionManagerC7sessionAA0C0Cvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 396, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 443, "key.offset": 439, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Session", "key.typeusr": "$S9FritzCore7SessionCD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAA0C0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiClient: <Type usr=\"s:9FritzCore9APIClientC\">APIClient</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 506}], "key.doc.column": 16, "key.doc.comment": "API client to make requests with", "key.doc.declaration": "public let apiClient: APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"25\" column=\"16\"><Name>apiClient</Name><USR>s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp</USR><Declaration>public let apiClient: APIClient</Declaration><CommentParts><Abstract><Para>API client to make requests with</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "apiClient", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 465, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiClient</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore9APIClientC\">APIClient</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "apiClient", "key.namelength": 9, "key.nameoffset": 517, "key.offset": 513, "key.parsed_declaration": "public let apiClient: APIClient", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "APIClient", "key.typeusr": "$S9FritzCore9APIClientCD", "key.usr": "s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestQueue: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;<Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 585}], "key.doc.column": 16, "key.doc.comment": "Queue to batch and retry requests", "key.doc.declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"28\" column=\"16\"><Name>trackRequestQueue</Name><USR>s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp</USR><Declaration>public let trackRequestQueue: BatchedRequestQueue&lt;SessionEvent&gt;</Declaration><CommentParts><Abstract><Para>Queue to batch and retry requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "trackRequestQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 543, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestQueue</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;<ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "trackRequestQueue", "key.namelength": 17, "key.nameoffset": 596, "key.offset": 592, "key.parsed_declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore14SessionManagerC17trackRequestQueue7flushed17completionHandlerySayAA0C5EventVG_yAA8ResponseOctF\">trackRequestQueue(flushed:completionHandler:)</RelatedName>"}], "key.typename": "BatchedRequestQueue<SessionEvent>", "key.typeusr": "$S9FritzCore19BatchedRequestQueueCyAA12SessionEventVGD", "key.usr": "s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let fileManager: <Type usr=\"c:objc(cs)NSFileManager\">FileManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 683}], "key.doc.column": 16, "key.doc.comment": "Default file manager", "key.doc.declaration": "public let fileManager: FileManager", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"31\" column=\"16\"><Name>fileManager</Name><USR>s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp</USR><Declaration>public let fileManager: FileManager</Declaration><CommentParts><Abstract><Para>Default file manager</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "fileManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 654, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fileManager</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSFileManager\">FileManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "fileManager", "key.namelength": 11, "key.nameoffset": 694, "key.offset": 690, "key.parsed_declaration": "public let fileManager: FileManager = .default", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "FileManager", "key.typeusr": "$SSo13NSFileManagerCD", "key.usr": "s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let logger: <Type usr=\"s:9FritzCore6LoggerV\">Logger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 767}], "key.doc.column": 16, "key.doc.comment": "Private logger instance", "key.doc.declaration": "public let logger: FritzCore.Logger", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"34\" column=\"16\"><Name>logger</Name><USR>s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp</USR><Declaration>public let logger: FritzCore.Logger</Declaration><CommentParts><Abstract><Para>Private logger instance</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "logger", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 735, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>logger</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore6LoggerV\">Logger</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "logger", "key.namelength": 6, "key.nameoffset": 778, "key.offset": 774, "key.parsed_declaration": "public let logger = Logger(name: \"SessionManager\")", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "Logger", "key.typeusr": "$S9FritzCore6LoggerVD", "key.usr": "s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 933}], "key.bodylength": 601, "key.bodyoffset": 964, "key.doc.column": 12, "key.doc.comment": "Required initializer", "key.doc.declaration": "public init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"40\" column=\"12\"><Name>init(session:)</Name><USR>s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc</USR><Declaration>public init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 40, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 904, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 626, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 940, "key.offset": 940, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 40, "key.substructure": [{"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"s:9FritzCore14SessionManagerC\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore14SessionManagerC\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1188, "key.offset": 1188, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"s:9FritzCore14SessionManagerC\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore14SessionManagerC\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1188, "key.offset": 1188, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"s:9FritzCore14SessionManagerC\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore14SessionManagerC\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1380, "key.offset": 1380, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"s:9FritzCore14SessionManagerC\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 0, "key.offset": 0}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore14SessionManagerC\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1380, "key.offset": 1380, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "SessionManager?", "key.typeusr": "$S9FritzCore14SessionManagerCSgXwD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgXwvp"}], "key.typename": "(SessionManager.Type) -> (Session) -> SessionManager", "key.typeusr": "$S7session9FritzCore14SessionManagerCAB0D0C_tcD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func trackEvent(_ event: <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1635}], "key.bodylength": 135, "key.bodyoffset": 1682, "key.doc.column": 17, "key.doc.comment": "Track an event, taking into account blacklisted events", "key.doc.declaration": "public func trackEvent(_ event: SessionEvent)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"55\" column=\"17\"><Name>trackEvent(_:)</Name><USR>s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF</USR><Declaration>public func trackEvent(_ event: SessionEvent)</Declaration><CommentParts><Abstract><Para>Track an event, taking into account blacklisted events</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "trackEvent(_:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1572, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackEvent</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>event</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 176, "key.name": "trackEvent(_:)", "key.namelength": 33, "key.nameoffset": 1647, "key.offset": 1642, "key.parsed_declaration": "public func trackEvent(_ event: SessionEvent)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 55, "key.substructure": [], "key.typename": "(SessionManager) -> (SessionEvent) -> ()", "key.typeusr": "$Syy9FritzCore12SessionEventVcD", "key.usr": "s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF"}], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Initialize", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1965}, {"key.annotated_decl": "<Declaration>public final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1985}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1985}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1985}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1985}], "key.bodylength": 1536, "key.bodyoffset": 2072, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1563, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 2056, "key.offset": 2046, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func loadSessionSettings()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2499}], "key.bodylength": 676, "key.bodyoffset": 2534, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>loadSessionSettings</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 705, "key.name": "loadSessionSettings()", "key.namelength": 21, "key.nameoffset": 2511, "key.offset": 2506, "key.parsed_declaration": "public func loadSessionSettings()", "key.parsed_scope.end": 97, "key.parsed_scope.start": 81, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "path", "key.namelength": 4, "key.nameoffset": 2547, "key.offset": 2543, "key.parsed_declaration": "let path = \"/session/settings\"", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:9FritzCore14SessionManagerC04loadC8SettingsyyF4pathL_SSvp"}], "key.typename": "(SessionManager) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "s:9FritzCore14SessionManagerC04loadC8SettingsyyF"}], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Healthcheck", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3614}, {"key.annotated_decl": "<Declaration>public final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3634}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3634}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3634}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3634}], "key.bodylength": 675, "key.bodyoffset": 3721, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 702, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 3705, "key.offset": 3695, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4402}, {"key.annotated_decl": "<Declaration>public final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4420}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4420}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4420}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4420}], "key.bodylength": 2653, "key.bodyoffset": 4507, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2680, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 4491, "key.offset": 4481, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7163}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7163}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7163}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7163}], "key.bodylength": 233, "key.bodyoffset": 7248, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 258, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 7234, "key.offset": 7224, "key.substructure": [], "key.typename": "SessionEvent.Type", "key.typeusr": "$S9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3267, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 235}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 174}], "key.bodylength": 1834, "key.bodyoffset": 275, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 266}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 1868, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 249, "key.offset": 242, "key.parsed_declaration": "public struct SessionSettings: Codable", "key.parsed_scope.end": 55, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}], "key.doc.column": 16, "key.doc.comment": "If false, no calls will be made to the API", "key.doc.declaration": "public let apiRequestsEnabled: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"15\" column=\"16\"><Name>apiRequestsEnabled</Name><USR>s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp</USR><Declaration>public let apiRequestsEnabled: Bool</Declaration><CommentParts><Abstract><Para>If false, no calls will be made to the API</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "apiRequestsEnabled", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiRequestsEnabled</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "apiRequestsEnabled", "key.namelength": 18, "key.nameoffset": 343, "key.offset": 339, "key.parsed_declaration": "public let apiRequestsEnabled: Bool", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 407}], "key.doc.column": 16, "key.doc.comment": "Settings refresh interval", "key.doc.declaration": "public let settingsRefreshInterval: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"18\" column=\"16\"><Name>settingsRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp</USR><Declaration>public let settingsRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>Settings refresh interval</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "settingsRefreshInterval", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 373, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>settingsRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "settingsRefreshInterval", "key.namelength": 23, "key.nameoffset": 418, "key.offset": 414, "key.parsed_declaration": "public let settingsRefreshInterval: TimeInterval", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 516}], "key.doc.column": 16, "key.doc.comment": "Control model I/O sampling based on ratio, 0-1", "key.doc.declaration": "public let modelInputOutputSamplingRatio: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"21\" column=\"16\"><Name>modelInputOutputSamplingRatio</Name><USR>s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp</USR><Declaration>public let modelInputOutputSamplingRatio: Float</Declaration><CommentParts><Abstract><Para>Control model I/O sampling based on ratio, 0-1</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "modelInputOutputSamplingRatio", "key.doc.type": "Other", "key.doclength": 51, "key.docoffset": 461, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputOutputSamplingRatio</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "modelInputOutputSamplingRatio", "key.namelength": 29, "key.nameoffset": 527, "key.offset": 523, "key.parsed_declaration": "public let modelInputOutputSamplingRatio: Float", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "Float", "key.typeusr": "$SSfD", "key.usr": "s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.doc.column": 16, "key.doc.comment": "Control batch size of track requests", "key.doc.declaration": "public let trackRequestBatchSize: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"24\" column=\"16\"><Name>trackRequestBatchSize</Name><USR>s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp</USR><Declaration>public let trackRequestBatchSize: Int</Declaration><CommentParts><Abstract><Para>Control batch size of track requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "trackRequestBatchSize", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 569, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestBatchSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "trackRequestBatchSize", "key.namelength": 21, "key.nameoffset": 625, "key.offset": 621, "key.parsed_declaration": "public let trackRequestBatchSize: Int", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 713}], "key.doc.column": 16, "key.doc.comment": "Control if events are gzipped in track response", "key.doc.declaration": "public let gzipTrackEvents: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"27\" column=\"16\"><Name>gzipTrackEvents</Name><USR>s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp</USR><Declaration>public let gzipTrackEvents: Bool</Declaration><CommentParts><Abstract><Para>Control if events are gzipped in track response</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "gzipTrackEvents", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>gzipTrackEvents</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "gzipTrackEvents", "key.namelength": 15, "key.nameoffset": 724, "key.offset": 720, "key.parsed_declaration": "public let gzipTrackEvents: Bool", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "Bool", "key.typeusr": "$SSbD", "key.usr": "s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let batchFlushInterval: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 799}], "key.doc.column": 16, "key.doc.comment": "Batch request flush interval in seconds", "key.doc.declaration": "public let batchFlushInterval: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"30\" column=\"16\"><Name>batchFlushInterval</Name><USR>s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp</USR><Declaration>public let batchFlushInterval: Double</Declaration><CommentParts><Abstract><Para>Batch request flush interval in seconds</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "batchFlushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 751, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>batchFlushInterval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "batchFlushInterval", "key.namelength": 18, "key.nameoffset": 810, "key.offset": 806, "key.parsed_declaration": "public let batchFlushInterval: Double", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 885}], "key.doc.column": 16, "key.doc.comment": "List of events we should not track", "key.doc.declaration": "public let eventBlacklist: Set<String>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"33\" column=\"16\"><Name>eventBlacklist</Name><USR>s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp</USR><Declaration>public let eventBlacklist: Set&lt;String&gt;</Declaration><CommentParts><Abstract><Para>List of events we should not track</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "eventBlacklist", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 842, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>eventBlacklist</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "eventBlacklist", "key.namelength": 14, "key.nameoffset": 896, "key.offset": 892, "key.parsed_declaration": "public let eventBlacklist: Set<String>", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "Set<String>", "key.typeusr": "$SShySSGD", "key.usr": "s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type> = default, settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = default, modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type> = default, gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type> = default, trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type> = default, batchFlushInterval: <Type usr=\"s:Sd\">Double</Type> = default, eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt; = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1436}], "key.bodylength": 400, "key.bodyoffset": 1707, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiRequestsEnabled</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>settingsRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelInputOutputSamplingRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>gzipTrackEvents</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trackRequestBatchSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>batchFlushInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventBlacklist</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 665, "key.name": "init(apiRequestsEnabled:settingsRefreshInterval:modelInputOutputSamplingRatio:gzipTrackEvents:trackRequestBatchSize:batchFlushInterval:eventBlacklist:)", "key.namelength": 262, "key.nameoffset": 1443, "key.offset": 1443, "key.parsed_declaration": "public init(apiRequestsEnabled: Bool = true, settingsRefreshInterval: TimeInterval = 30 * 60, modelInputOutputSamplingRatio: Float = 0, gzipTrackEvents: Bool = false, trackRequestBatchSize: Int = 100, batchFlushInterval: Double = 60.0, eventBlacklist: Set<String> = [])", "key.parsed_scope.end": 54, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore15SessionSettingsV4fromACs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Bool, Double, Float, Bool, Int, Double, Set<String>) -> SessionSettings", "key.typeusr": "$S18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushF014eventBlacklist9FritzCore15SessionSettingsVSb_SdSfSbSiSdShySSGtcD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushJ014eventBlacklistACSb_SdSfSbSiSdShySSGtcfc"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 14, "key.name": "MARK: - Static", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2115}, {"key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2131}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2131}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2131}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2131}], "key.bodylength": 522, "key.bodyoffset": 2219, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 550, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 2202, "key.offset": 2192, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func settings(for session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>) -&gt; <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2413}], "key.bodylength": 70, "key.bodyoffset": 2483, "key.doc.column": 24, "key.doc.comment": "Returns cached settings for a session, or default settings if not cached", "key.doc.declaration": "public static func settings(for session: Session) -> SessionSettings", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"66\" column=\"24\"><Name>settings(for:)</Name><USR>s:9FritzCore15SessionSettingsV8settings3forAcA0C0C_tFZ</USR><Declaration>public static func settings(for session: Session) -&gt; SessionSettings</Declaration><CommentParts><Abstract><Para>Returns cached settings for a session, or default settings if not cached</Para></Abstract></CommentParts></Function>", "key.doc.line": 66, "key.doc.name": "settings(for:)", "key.doc.type": "Function", "key.doclength": 77, "key.docoffset": 2332, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>settings</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>session</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 134, "key.name": "settings(for:)", "key.namelength": 30, "key.nameoffset": 2432, "key.offset": 2420, "key.parsed_declaration": "public static func settings(for session: Session) -> SessionSettings", "key.parsed_scope.end": 68, "key.parsed_scope.start": 66, "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Session) -> SessionSettings", "key.typeusr": "$S3for9FritzCore15SessionSettingsVAB0D0C_tcD", "key.usr": "s:9FritzCore15SessionSettingsV8settings3forAcA0C0C_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func setSettings(_ settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type>, for session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2610}], "key.bodylength": 46, "key.bodyoffset": 2693, "key.doc.column": 24, "key.doc.comment": "Updates the cached settings for a session", "key.doc.declaration": "public static func setSettings(_ settings: SessionSettings, for session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"71\" column=\"24\"><Name>setSettings(_:for:)</Name><USR>s:9FritzCore15SessionSettingsV03setD0_3foryAC_AA0C0CtFZ</USR><Declaration>public static func setSettings(_ settings: SessionSettings, for session: Session)</Declaration><CommentParts><Abstract><Para>Updates the cached settings for a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 71, "key.doc.name": "setSettings(_:for:)", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2560, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setSettings</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>settings</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>session</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 123, "key.name": "setSettings(_:for:)", "key.namelength": 62, "key.nameoffset": 2629, "key.offset": 2617, "key.parsed_declaration": "public static func setSettings(_ settings: SessionSettings, for session: Session)", "key.parsed_scope.end": 73, "key.parsed_scope.start": 71, "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (SessionSettings, Session) -> ()", "key.typeusr": "$S_3fory9FritzCore15SessionSettingsV_AB0D0CtcD", "key.usr": "s:9FritzCore15SessionSettingsV03setD0_3foryAC_AA0C0CtFZ"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 16, "key.name": "MARK: - Sampling", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2747}, {"key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2765}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2765}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2765}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2765}], "key.bodylength": 412, "key.bodyoffset": 2853, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.kind": "source.lang.swift.decl.extension", "key.length": 440, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 2836, "key.offset": 2826, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func shouldSampleInputOutput() -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2992}], "key.bodylength": 224, "key.bodyoffset": 3039, "key.doc.column": 17, "key.doc.comment": "Randomly decides whether we should sample based on the I/O percentage", "key.doc.declaration": "public func shouldSampleInputOutput() -> Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"84\" column=\"17\"><Name>shouldSampleInputOutput()</Name><USR>s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF</USR><Declaration>public func shouldSampleInputOutput() -&gt; Bool</Declaration><CommentParts><Abstract><Para>Randomly decides whether we should sample based on the I/O percentage</Para></Abstract></CommentParts></Function>", "key.doc.line": 84, "key.doc.name": "shouldSampleInputOutput()", "key.doc.type": "Function", "key.doclength": 74, "key.docoffset": 2914, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shouldSampleInputOutput</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 265, "key.name": "shouldSampleInputOutput()", "key.namelength": 25, "key.nameoffset": 3004, "key.offset": 2999, "key.parsed_declaration": "public func shouldSampleInputOutput() -> Bool", "key.parsed_scope.end": 88, "key.parsed_scope.start": 84, "key.substructure": [{"key.annotated_decl": "<Declaration>let randomInt: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>randomInt</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "randomInt", "key.namelength": 9, "key.nameoffset": 3052, "key.offset": 3048, "key.parsed_declaration": "let randomInt = arc4random_uniform(SessionSettings.samplePrecision)", "key.parsed_scope.end": 85, "key.parsed_scope.start": 85, "key.typename": "UInt32", "key.typeusr": "$Ss6UInt32VD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF9randomIntL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let randomFloat: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>randomFloat</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 75, "key.name": "randomFloat", "key.namelength": 11, "key.nameoffset": 3128, "key.offset": 3124, "key.parsed_declaration": "let randomFloat = Float(randomInt) / Float(SessionSettings.samplePrecision)", "key.parsed_scope.end": 86, "key.parsed_scope.start": 86, "key.typename": "Float", "key.typeusr": "$SSfD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF11randomFloatL_Sfvp"}], "key.typename": "(SessionSettings) -> () -> Bool", "key.typeusr": "$SSbycD", "key.usr": "s:9FritzCore15SessionSettingsV23shouldSampleInputOutputSbyF"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$S9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10628, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 315}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 254}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 224}], "key.bodylength": 54, "key.bodyoffset": 350, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"15\" column=\"17\"><Name>ReadModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "ReadModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 192, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadModelProvider</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 83, "key.name": "ReadModelProvider", "key.namelength": 17, "key.nameoffset": 331, "key.offset": 322, "key.parsed_declaration": "public protocol ReadModelProvider", "key.parsed_scope.end": 19, "key.parsed_scope.start": 15, "key.runtime_name": "FritzReadModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 397, "key.doc.column": 9, "key.doc.comment": "A read model", "key.doc.declaration": "var model: MLModel { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"18\" column=\"9\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model</USR><Declaration>var model: MLModel { get }</Declaration><CommentParts><Abstract><Para>A read model</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 17, "key.docoffset": 356, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "model", "key.namelength": 5, "key.nameoffset": 381, "key.offset": 377, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}], "key.typename": "ReadModelProvider.Protocol", "key.typeusr": "$S17FritzManagedModel04ReadC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 535}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 474}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 474}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 474}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 474}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 439}], "key.bodylength": 64, "key.bodyoffset": 594, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"24\" column=\"17\"><Name>ReadWriteModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 24, "key.doc.name": "ReadWriteModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 407, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 575}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadWriteModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadWriteModelProvider</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 117, "key.name": "ReadWriteModelProvider", "key.namelength": 22, "key.nameoffset": 551, "key.offset": 542, "key.parsed_declaration": "public protocol ReadWriteModelProvider: ReadModelProvider", "key.parsed_scope.end": 28, "key.parsed_scope.start": 24, "key.runtime_name": "FritzReadWriteModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 647, "key.doc.column": 9, "key.doc.comment": "A read-write model", "key.doc.declaration": "var model: MLModel { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"27\" column=\"9\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model</USR><Declaration>var model: MLModel { get set }</Declaration><CommentParts><Abstract><Para>A read-write model</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 600, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "model", "key.namelength": 5, "key.nameoffset": 631, "key.offset": 627, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model\">model</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model"}], "key.typename": "ReadWriteModelProvider.Protocol", "key.typeusr": "$S17FritzManagedModel09ReadWriteC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - Base", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 664}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1143}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1082}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1082}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1082}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1082}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1050}], "key.bodylength": 1300, "key.bodyoffset": 1199, "key.doc.column": 17, "key.doc.comment": "This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.\n\n- SeeAlso:\n   `SwiftIdentifiedModel`\n   `ObjcIdentifiedModel`\n\n- Note: You should not conform your generated class to this protocol directly, instead conform to either `SwiftIdentifiedModel` when using Swift, or `ObjcIdentifiedModel` when using Objective-C.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"43\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 43, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.doclength": 371, "key.docoffset": 678, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1180}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 1350, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 1159, "key.offset": 1150, "key.parsed_declaration": "public protocol BaseIdentifiedModel: ReadModelProvider", "key.parsed_scope.end": 73, "key.parsed_scope.start": 43, "key.runtime_name": "FritzBaseIdentifiedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1349}], "key.bodylength": 5, "key.bodyoffset": 1417, "key.doc.column": 16, "key.doc.comment": "The Fritz model identifier that matches this class.\n\n- Note: You should copy this identifier from the Fritz dashboard", "key.doc.declaration": "@objc(fritzModelIdentifier) static var modelIdentifier: String { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"51\" column=\"16\"><Name>modelIdentifier</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier</USR><Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>The Fritz model identifier that matches this class.</Para></Abstract><Discussion><Note><Para>You should copy this identifier from the Fritz dashboard</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 51, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 1205, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzModelIdentifier)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 1392, "key.offset": 1381, "key.parsed_declaration": "static var modelIdentifier: String", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 2025}], "key.bodylength": 5, "key.bodyoffset": 2100, "key.doc.column": 16, "key.doc.comment": "This is the version of the model that is packaged with your application at submission time.\n\n- Note: As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.", "key.doc.declaration": "@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"59\" column=\"16\"><Name>packagedModelVersion</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion</USR><Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>This is the version of the model that is packaged with your application at submission time.</Para></Abstract><Discussion><Note><Para>As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 59, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 591, "key.docoffset": 1429, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzPackagedModelVersion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 44, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 2073, "key.offset": 2062, "key.parsed_declaration": "static var packagedModelVersion: Int", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2219}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 2188}], "key.bodylength": 5, "key.bodyoffset": 2264, "key.doc.column": 25, "key.doc.comment": "Signifies whether or not the model is encrypted.", "key.doc.declaration": "@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"66\" column=\"25\"><Name>encryptionSeed</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed</USR><Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }</Declaration><CommentParts><Abstract><Para>Signifies whether or not the model is encrypted.</Para></Abstract></CommentParts></Other>", "key.doc.line": 66, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 71, "key.docoffset": 2112, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzEncryptionSeed)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 2239, "key.offset": 2228, "key.parsed_declaration": "optional static var encryptionSeed: [UInt8]", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]", "key.typeusr": "$SSays5UInt8VGD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzConfiguration) optional static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2442}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 2412}], "key.bodylength": 5, "key.bodyoffset": 2492, "key.doc.column": 25, "key.doc.comment": "A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.", "key.doc.declaration": "@objc(fritzConfiguration) optional static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"72\" column=\"25\"><Name>configuration</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration</USR><Declaration>@objc(fritzConfiguration) optional static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 131, "key.docoffset": 2276, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 2462, "key.offset": 2451, "key.parsed_declaration": "optional static var configuration: Configuration", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2502}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2502}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2502}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2502}], "key.bodylength": 1440, "key.bodyoffset": 2594, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"43\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 43, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1472, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 2573, "key.offset": 2563, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var identifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2944}], "key.bodylength": 51, "key.bodyoffset": 2975, "key.doc.column": 16, "key.doc.comment": "Identifier for this instance, proxy from the class identifier", "key.doc.declaration": "public var identifier: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"85\" column=\"16\"><Name>identifier</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE10identifierSSvp</USR><Declaration>public var identifier: String { get }</Declaration><CommentParts><Abstract><Para>Identifier for this instance, proxy from the class identifier</Para></Abstract></CommentParts></Other>", "key.doc.line": 85, "key.doc.name": "identifier", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 2874, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>identifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 76, "key.name": "identifier", "key.namelength": 10, "key.nameoffset": 2955, "key.offset": 2951, "key.parsed_declaration": "public var identifier: String", "key.parsed_scope.end": 87, "key.parsed_scope.start": 85, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE10identifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3071}], "key.bodylength": 50, "key.bodyoffset": 3108, "key.doc.column": 16, "key.doc.comment": "If model is encrypted or not.", "key.doc.declaration": "public var encryptionSeed: [UInt8]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"90\" column=\"16\"><Name>encryptionSeed</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp</USR><Declaration>public var encryptionSeed: [UInt8]? { get }</Declaration><CommentParts><Abstract><Para>If model is encrypted or not.</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 3033, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 81, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 3082, "key.offset": 3078, "key.parsed_declaration": "public var encryptionSeed: [UInt8]?", "key.parsed_scope.end": 92, "key.parsed_scope.start": 90, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]?", "key.typeusr": "$SSays5UInt8VGSgD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3241}], "key.bodylength": 76, "key.bodyoffset": 3282, "key.doc.column": 16, "key.doc.comment": "Configuration for this instance, proxy from the class configuration", "key.doc.declaration": "public var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"95\" column=\"16\"><Name>configuration</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp</USR><Declaration>public var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Configuration for this instance, proxy from the class configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 95, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 72, "key.docoffset": 3165, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 111, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 3252, "key.offset": 3248, "key.parsed_declaration": "public var configuration: Configuration", "key.parsed_scope.end": 97, "key.parsed_scope.start": 95, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$S9FritzCore13ConfigurationCD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3435}], "key.bodylength": 56, "key.bodyoffset": 3473, "key.doc.column": 16, "key.doc.comment": "Packaged version for this class, proxy from the class version", "key.doc.declaration": "public var packagedModelVersion: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"100\" column=\"16\"><Name>packagedModelVersion</Name><USR>s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp</USR><Declaration>public var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>Packaged version for this class, proxy from the class version</Para></Abstract></CommentParts></Other>", "key.doc.line": 100, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 66, "key.docoffset": 3365, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 88, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 3446, "key.offset": 3442, "key.parsed_declaration": "public var packagedModelVersion: Int", "key.parsed_scope.end": 102, "key.parsed_scope.start": 100, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 13, "key.name": "MARK: - Swift", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4040}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4281}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4220}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4220}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4220}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4220}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 4187}], "key.bodylength": 0, "key.bodyoffset": 4364, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"123\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 123, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.doclength": 131, "key.docoffset": 4055, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 4319}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 4340}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}, {"key.name": "ReadWriteModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 77, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 4297, "key.offset": 4288, "key.parsed_declaration": "public protocol SwiftIdentifiedModel: BaseIdentifiedModel, ReadWriteModelProvider", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.runtime_name": "FritzSwiftIdentifiedModel", "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4367}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4367}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4367}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4367}], "key.bodylength": 930, "key.bodyoffset": 4460, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"123\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 123, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 963, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 4438, "key.offset": 4428, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fritz() -&gt; <Type usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE4Selfxmfp\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4651}], "key.bodylength": 159, "key.bodyoffset": 4680, "key.doc.column": 17, "key.doc.comment": "Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.\n\n- Returns: The same instance that this method was called.", "key.doc.declaration": "public func fritz() -> Self", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"133\" column=\"17\"><Name>fritz()</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF</USR><Declaration>public func fritz() -&gt; Self</Declaration><CommentParts><Abstract><Para>Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.</Para></Abstract><ResultDiscussion><Para>The same instance that this method was called.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 133, "key.doc.name": "fritz()", "key.doc.result_discussion": [{"Para": "The same instance that this method was called."}], "key.doc.type": "Function", "key.doclength": 180, "key.docoffset": 4466, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fritz</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 182, "key.name": "fritz()", "key.namelength": 7, "key.nameoffset": 4663, "key.offset": 4658, "key.parsed_declaration": "public func fritz() -> Self", "key.parsed_scope.end": 138, "key.parsed_scope.start": 133, "key.substructure": [{"key.annotated_decl": "<Declaration>let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel\">ManagedMLModel</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel\">ManagedMLModel</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 56, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 4728, "key.offset": 4724, "key.parsed_declaration": "let managedModel = ManagedMLModel(identifiedModel: self)", "key.parsed_scope.end": 135, "key.parsed_scope.start": 135, "key.typename": "ManagedMLModel", "key.typeusr": "$S17FritzManagedModel0B7MLModelCD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF07managedC0L_AA0B7MLModelCvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self) -> () -> Self", "key.typeusr": "$SxycD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE5fritzxyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4906}], "key.bodylength": 81, "key.bodyoffset": 4987, "key.doc.column": 17, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"143\" column=\"17\"><Name>updateIfNeeded(completionHandler:)</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF</USR><Declaration>public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 143, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 4846, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 156, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 4918, "key.offset": 4913, "key.parsed_declaration": "public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 145, "key.parsed_scope.start": 143, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5135}], "key.bodylength": 165, "key.bodyoffset": 5223, "key.doc.column": 24, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"150\" column=\"24\"><Name>updateIfNeeded(completionHandler:)</Name><USR>s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ</USR><Declaration>public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 150, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 5075, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 247, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 5154, "key.offset": 5142, "key.parsed_declaration": "public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 153, "key.parsed_scope.start": 150, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tF\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self.Type) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE14updateIfNeeded17completionHandleryySb_s5Error_pSgtc_tFZ"}], "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5393}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5393}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5393}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5393}], "key.bodylength": 1263, "key.bodyoffset": 5486, "key.doc.column": 17, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"123\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : BaseIdentifiedModel, ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 123, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1296, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 5464, "key.offset": 5454, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func download(completionHandler: @escaping (<Type usr=\"s:10Foundation3URLV\">URL</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5492}], "key.bodylength": 1181, "key.bodyoffset": 5566, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>download</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 1249, "key.name": "download(completionHandler:)", "key.namelength": 53, "key.nameoffset": 5511, "key.offset": 5499, "key.parsed_declaration": "public static func download(completionHandler: @escaping (URL?) -> Void)", "key.parsed_scope.end": 188, "key.parsed_scope.start": 159, "key.substructure": [{"key.annotated_decl": "<Declaration>let logger: <Type usr=\"s:9FritzCore6LoggerV\">Logger</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>logger</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore6LoggerV\">Logger</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 56, "key.name": "logger", "key.namelength": 6, "key.nameoffset": 5579, "key.offset": 5575, "key.parsed_declaration": "let logger = resolvedConfiguration.sessionManager.logger", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "Logger", "key.typeusr": "$S9FritzCore6LoggerVD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ6loggerL_0A4Core6LoggerVvp"}, {"key.annotated_decl": "<Declaration>let localInfo: <Type usr=\"s:17FritzManagedModel05LocalC4InfoV\">LocalModelInfo</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>localInfo</decl.name>: <decl.var.type><ref.struct usr=\"s:17FritzManagedModel05LocalC4InfoV\">LocalModelInfo</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "localInfo", "key.namelength": 9, "key.nameoffset": 5645, "key.offset": 5641, "key.parsed_declaration": "let localInfo = SessionManager.localModelManager.getLocalInfo(self)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "LocalModelInfo?", "key.typeusr": "$S17FritzManagedModel05LocalC4InfoVSgD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ9localInfoL_AA05LocalcL0VSgvp"}], "key.typename": "<Self where Self : SwiftIdentifiedModel> (Self.Type) -> (@escaping (URL?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryy10Foundation3URLVSgc_tcD", "key.usr": "s:17FritzManagedModel015SwiftIdentifiedC0PAAE8download17completionHandleryy10Foundation3URLVSgc_tFZ"}], "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func modelForFileName(bundle: <Type usr=\"c:objc(cs)NSBundle\">Bundle</Type>, fileName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6777}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 6753}], "key.bodylength": 426, "key.bodyoffset": 6852, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>modelForFileName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>bundle</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSBundle\">Bundle</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>fileName</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 495, "key.name": "modelForFileName(bundle:fileName:)", "key.namelength": 50, "key.nameoffset": 6789, "key.offset": 6784, "key.parsed_declaration": "public func modelForFileName(bundle: Bundle, fileName: String) -> MLModel", "key.parsed_scope.end": 202, "key.parsed_scope.start": 193, "key.substructure": [{"key.annotated_decl": "<Declaration>var assetPath: <Type usr=\"s:10Foundation3URLV\">URL</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>assetPath</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 87, "key.name": "assetPath", "key.namelength": 9, "key.nameoffset": 6861, "key.offset": 6857, "key.parsed_declaration": "var assetPath = bundle.url(forResource: \"Models/\" + fileName, withExtension:\"mlmodelc\")", "key.parsed_scope.end": 194, "key.parsed_scope.start": 194, "key.typename": "URL?", "key.typeusr": "$S10Foundation3URLVSgD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF9assetPathL_10Foundation3URLVSgvp"}], "key.typename": "(Bundle, String) -> MLModel", "key.typeusr": "$S6bundle8fileNameSo7MLModelCSo8NSBundleC_SStcD", "key.usr": "s:17FritzManagedModel16modelForFileName6bundle04fileG0So7MLModelCSo8NSBundleC_SStF"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Objective-C", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 7284}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7475}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 7443}], "key.bodylength": 0, "key.bodyoffset": 7533, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"212\" column=\"17\"><Name>ObjcIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel</USR><Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : BaseIdentifiedModel</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 212, "key.doc.name": "ObjcIdentifiedModel", "key.doc.type": "Class", "key.doclength": 137, "key.docoffset": 7305, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 7512}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzObjcIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ObjcIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 52, "key.name": "ObjcIdentifiedModel", "key.namelength": 19, "key.nameoffset": 7491, "key.offset": 7482, "key.parsed_declaration": "public protocol ObjcIdentifiedModel: BaseIdentifiedModel", "key.parsed_scope.end": 212, "key.parsed_scope.start": 212, "key.runtime_name": "FritzObjcIdentifiedModel", "key.typename": "ObjcIdentifiedModel.Protocol", "key.typeusr": "$S17FritzManagedModel014ObjcIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel"}, {"key.annotated_decl": "<Declaration>class NSObject : <Type usr=\"c:objc(pl)NSObject\">NSObjectProtocol</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7823}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7823}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7823}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 7823}], "key.bodylength": 1892, "key.bodyoffset": 7904, "key.doc.comment": "- Note: In order to expose a Swift extension to Objective-C the extension *must* be mode on a concrete class and not a protocol. Ideally this extension would be made on `ObjcIdentifiedModel` but this is not possible as of Swift 4 and Xcode 9.\n\n- SeeAlso: `ObjcIdentifiedModel`", "key.doclength": 286, "key.docoffset": 7536, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/usr/include/objc/NSObject.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>NSObject</decl.name> : <ref.protocol usr=\"c:objc(pl)NSObject\">NSObjectProtocol</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 1913, "key.modulename": "ObjectiveC.NSObject", "key.name": "NSObject", "key.namelength": 8, "key.nameoffset": 7894, "key.offset": 7884, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritz) public func fritz() -&gt; <Type usr=\"c:objc(cs)NSObject\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8811}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 12, "key.offset": 8794}], "key.bodylength": 256, "key.bodyoffset": 8840, "key.doc.column": 17, "key.doc.comment": "Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.\n\n- Returns: The same instance that this method was called.\n\n- Warning: When Xcode generates a Swift class based on a MLModel file it provides a read-write model property that allows the SDK to safely overwrite the model with a Fritz managed model. When using Objective-C, Xcode generates a class with a readonly model property which forces us to use `setValue:forKey:` instead of a type-safe setter. It's crucial to test your apps on future beta versions of iOS as Apple could change the underlying implementation of the model property causing this method to crash. If this is the case, we will have updated SDKs ready for those newer versions.\n\n- Note: This method will have no affect on any object that does not conform to `ObjcIdentifiedModel`.", "key.doc.declaration": "@objc(fritz) public func fritz() -> Self", "key.doc.discussion": [{"Warning": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"232\" column=\"17\"><Name>fritz()</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(im)fritz</USR><Declaration>@objc(fritz) public func fritz() -&gt; Self</Declaration><CommentParts><Abstract><Para>Injects a Fritz managed model into this instance allowing the SDK to instrument model predications.</Para></Abstract><ResultDiscussion><Para>The same instance that this method was called.</Para></ResultDiscussion><Discussion><Warning><Para>When Xcode generates a Swift class based on a MLModel file it provides a read-write model property that allows the SDK to safely overwrite the model with a Fritz managed model. When using Objective-C, Xcode generates a class with a readonly model property which forces us to use <codeVoice>setValue:forKey:</codeVoice> instead of a type-safe setter. It\u2019s crucial to test your apps on future beta versions of iOS as Apple could change the underlying implementation of the model property causing this method to crash. If this is the case, we will have updated SDKs ready for those newer versions.</Para></Warning><Note><Para>This method will have no affect on any object that does not conform to <codeVoice>ObjcIdentifiedModel</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 232, "key.doc.name": "fritz()", "key.doc.result_discussion": [{"Para": "The same instance that this method was called."}], "key.doc.type": "Function", "key.doclength": 879, "key.docoffset": 7910, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritz)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fritz</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)NSObject\">Self</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 279, "key.name": "fritz()", "key.namelength": 7, "key.nameoffset": 8823, "key.offset": 8818, "key.parsed_declaration": "public func fritz() -> Self", "key.parsed_scope.end": 239, "key.parsed_scope.start": 232, "key.substructure": [], "key.typename": "(NSObject) -> () -> Self", "key.typeusr": "$SSo8NSObjectCXDycD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(im)fritz"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(updateIfNeeded:) public func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9190}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 9163}], "key.bodylength": 81, "key.bodyoffset": 9271, "key.doc.column": 17, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "@objc(updateIfNeeded:) public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"245\" column=\"17\"><Name>updateIfNeeded(completionHandler:)</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded:</USR><Declaration>@objc(updateIfNeeded:) public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 245, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 9103, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(updateIfNeeded:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 156, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 9202, "key.offset": 9197, "key.parsed_declaration": "public func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 247, "key.parsed_scope.start": 245, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded:\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "(NSObject) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(updateIfNeeded:) public static func updateIfNeeded(completionHandler: @escaping (<Type usr=\"s:Sb\">Bool</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9446}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 9419}], "key.bodylength": 260, "key.bodyoffset": 9534, "key.doc.column": 24, "key.doc.comment": "Manually check for an OTA model update", "key.doc.declaration": "@objc(updateIfNeeded:) public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"253\" column=\"24\"><Name>updateIfNeeded(completionHandler:)</Name><USR>c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded:</USR><Declaration>@objc(updateIfNeeded:) public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Manually check for an OTA model update</Para></Abstract></CommentParts></Function>", "key.doc.line": 253, "key.doc.name": "updateIfNeeded(completionHandler:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 9359, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(updateIfNeeded:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>updateIfNeeded</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 342, "key.name": "updateIfNeeded(completionHandler:)", "key.namelength": 67, "key.nameoffset": 9465, "key.offset": 9453, "key.parsed_declaration": "public static func updateIfNeeded(completionHandler: @escaping (Bool, Error?) -> Void)", "key.parsed_scope.end": 257, "key.parsed_scope.start": 253, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzManagedModel@@objc(cs)NSObject(im)updateIfNeeded:\">updateIfNeeded(completionHandler: @escaping (Bool, Error?) -&gt; Void)</RelatedName>"}], "key.substructure": [], "key.typename": "(NSObject.Type) -> (@escaping (Bool, Error?) -> ()) -> ()", "key.typeusr": "$S17completionHandleryySb_s5Error_pSgtc_tcD", "key.usr": "c:@CM@FritzManagedModel@@objc(cs)NSObject(cm)updateIfNeeded:"}], "key.typename": "NSObject.Type", "key.typeusr": "$SSo8NSObjectCmD", "key.usr": "c:objc(cs)NSObject"}, {"key.annotated_decl": "<Declaration>@objc(FritzCore) class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9799}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9799}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9799}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9799}], "key.bodylength": 745, "key.bodyoffset": 9881, "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 767, "key.modulename": "FritzCore", "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 9870, "key.offset": 9860, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10174}, {"key.attribute": "source.decl.attribute.available", "key.length": 137, "key.offset": 10032}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 9991}], "key.bodylength": 0, "key.bodyoffset": 10283, "key.doc.comment": "Removed in v1.0.0-beta.9\n\n- SeeAlso: `updateModelIfNeeded:completionHandler:`", "key.doclength": 99, "key.docoffset": 9887, "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 103, "key.name": "setup(models:completionHandler:)", "key.namelength": 88, "key.nameoffset": 10193, "key.offset": 10181, "key.substructure": []}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10562}, {"key.attribute": "source.decl.attribute.available", "key.length": 137, "key.offset": 10420}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 10397}], "key.bodylength": 0, "key.bodyoffset": 10624, "key.doc.comment": "Deprecated in v1.0.0-beta.9\n\n- SeeAlso: `updateModelIfNeeded:completionHandler:`", "key.doclength": 102, "key.docoffset": 10290, "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 56, "key.name": "setup(models:)", "key.namelength": 41, "key.nameoffset": 10581, "key.offset": 10569, "key.substructure": []}], "key.typename": "FritzCore.Type", "key.typeusr": "$S9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/LocalModelManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5298, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/MLFeatureProvider+JSON.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1912, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>protocol MLFeatureProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 192}], "key.bodylength": 642, "key.bodyoffset": 282, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureProvider.h", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MLFeatureProvider</decl.name></decl.protocol>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 672, "key.modulename": "CoreML.MLFeatureProvider", "key.name": "MLFeatureProvider", "key.namelength": 17, "key.nameoffset": 263, "key.offset": 253, "key.substructure": [], "key.typename": "MLFeatureProvider.Protocol", "key.typeusr": "$SSo17MLFeatureProvider_pmD", "key.usr": "c:objc(pl)MLFeatureProvider"}, {"key.annotated_decl": "<Declaration>class MLFeatureValue : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSCopying\">NSCopying</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 927}], "key.bodylength": 896, "key.bodyoffset": 1014, "key.doc.column": 12, "key.doc.declaration": "class MLFeatureValue : NSObject, NSCopying", "key.doc.discussion": [{"Para": " MLFeatureValue does not support type conversion in its accessor properties. It can also have a missing or undefined value of a well defined type."}], "key.doc.file": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h", "key.doc.full_as_xml": "<Other file=\"/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h\" line=\"26\" column=\"12\"><Name>MLFeatureValue</Name><USR>c:objc(cs)MLFeatureValue</USR><Declaration>class MLFeatureValue : NSObject, NSCopying</Declaration><Abstract><Para> An immutable variant holding a data value of a supported MLFeatureType</Para></Abstract><Availability distribution=\"tvOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"watchOS\"><IntroducedInVersion>4.0</IntroducedInVersion></Availability><Availability distribution=\"iOS\"><IntroducedInVersion>11.0</IntroducedInVersion></Availability><Availability distribution=\"macOS\"><IntroducedInVersion>10.13</IntroducedInVersion></Availability><Discussion><Para> MLFeatureValue does not support type conversion in its accessor properties. It can also have a missing or undefined value of a well defined type.</Para></Discussion></Other>", "key.doc.line": 26, "key.doc.name": "MLFeatureValue", "key.doc.type": "Other", "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/CoreML.framework/Headers/MLFeatureValue.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MLFeatureValue</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSCopying\">NSCopying</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 923, "key.modulename": "CoreML.MLFeatureValue", "key.name": "MLFeatureValue", "key.namelength": 14, "key.nameoffset": 998, "key.offset": 988, "key.substructure": [], "key.typename": "MLFeatureValue.Type", "key.typeusr": "$SSo14MLFeatureValueCmD", "key.usr": "c:objc(cs)MLFeatureValue"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5906, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzManagedMLModel) public final class ManagedMLModel : <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 345}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 338}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 277}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 277}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 277}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 277}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 250}], "key.bodylength": 5522, "key.bodyoffset": 382, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 373}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzManagedMLModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ManagedMLModel</decl.name> : <ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "MLModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 5554, "key.name": "ManagedMLModel", "key.namelength": 14, "key.nameoffset": 357, "key.offset": 351, "key.parsed_declaration": "public final class ManagedMLModel: MLModel", "key.parsed_scope.end": 145, "key.parsed_scope.start": 16, "key.runtime_name": "FritzManagedMLModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 605}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 598}], "key.doc.column": 29, "key.doc.comment": "Model to use for predictions", "key.doc.declaration": "public private(set) var model: MLModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift\" line=\"25\" column=\"29\"><Name>model</Name><USR>s:17FritzManagedModel0B7MLModelC5modelSo0D0Cvp</USR><Declaration>public private(set) var model: MLModel</Declaration><CommentParts><Abstract><Para>Model to use for predictions</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 561, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "model", "key.namelength": 5, "key.nameoffset": 622, "key.offset": 618, "key.parsed_declaration": "public private(set) var model: MLModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "MLModel", "key.typeusr": "$SSo7MLModelCD", "key.usr": "s:17FritzManagedModel0B7MLModelC5modelSo0D0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 811}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 775}], "key.bodylength": 2120, "key.bodyoffset": 862, "key.doc.column": 12, "key.doc.comment": "Initialize model with an model type", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public init(identifiedModel: BaseIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift\" line=\"32\" column=\"12\"><Name>init(identifiedModel:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public init(identifiedModel: BaseIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with an model type</Para></Abstract></CommentParts></Function>", "key.doc.line": 32, "key.doc.name": "init(identifiedModel:)", "key.doc.type": "Function", "key.doclength": 40, "key.docoffset": 731, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 2165, "key.name": "init(identifiedModel:)", "key.namelength": 42, "key.nameoffset": 818, "key.offset": 818, "key.parsed_declaration": "public init(identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 32, "key.substructure": [{"key.annotated_decl": "<Declaration>let modelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelType</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "modelType", "key.namelength": 9, "key.nameoffset": 875, "key.offset": 871, "key.parsed_declaration": "let modelType = type(of: identifiedModel)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "BaseIdentifiedModel.Type", "key.typeusr": "$S17FritzManagedModel014BaseIdentifiedC0_pXpD", "key.usr": "s:17FritzManagedModel0B7MLModelC010identifiedC0AcA014BaseIdentifiedC0_p_tcfc9modelTypeL_AaE_pXpvp"}], "key.typename": "(ManagedMLModel.Type) -> (BaseIdentifiedModel) -> ManagedMLModel", "key.typeusr": "$S15identifiedModel012FritzManagedB00D7MLModelCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var modelDescription: <Type usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3941}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3934}], "key.bodylength": 43, "key.bodyoffset": 3992, "key.doc.column": 25, "key.doc.comment": "Proxy model description", "key.doc.declaration": "public override var modelDescription: MLModelDescription { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift\" line=\"105\" column=\"25\"><Name>modelDescription</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(py)modelDescription</USR><Declaration>public override var modelDescription: MLModelDescription { get }</Declaration><CommentParts><Abstract><Para>Proxy model description</Para></Abstract></CommentParts></Other>", "key.doc.line": 105, "key.doc.name": "modelDescription", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 3902, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelDescription</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 86, "key.name": "modelDescription", "key.namelength": 16, "key.nameoffset": 3954, "key.offset": 3950, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(py)modelDescription"}], "key.parsed_declaration": "public override var modelDescription: MLModelDescription", "key.parsed_scope.end": 107, "key.parsed_scope.start": 105, "key.typename": "MLModelDescription", "key.typeusr": "$SSo18MLModelDescriptionCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(py)modelDescription"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4119}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4112}], "key.bodylength": 298, "key.bodyoffset": 4204, "key.doc.column": 26, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift\" line=\"110\" column=\"26\"><Name>prediction(from:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:error:</USR><Declaration>public override func prediction(from input: MLFeatureProvider) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 110, "key.doc.name": "prediction(from:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 4042, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 375, "key.name": "prediction(from:)", "key.namelength": 41, "key.nameoffset": 4133, "key.offset": 4128, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.parsed_scope.end": 115, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:options:error:\">prediction(from:options:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 95, "key.name": "result", "key.namelength": 6, "key.nameoffset": 4217, "key.offset": 4213, "key.parsed_declaration": "let result = PredictionResult(input: input, options: nil) { try model.prediction(from: input) }", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "PredictionResult", "key.typeusr": "$S17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0B7MLModelC10prediction4fromSo17MLFeatureProvider_pSoAF_p_tKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(ManagedMLModel) -> (MLFeatureProvider) throws -> MLFeatureProvider", "key.typeusr": "$S4fromSo17MLFeatureProvider_pSoAB_p_tKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>, options: <Type usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4586}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4579}], "key.bodylength": 302, "key.bodyoffset": 4701, "key.doc.column": 26, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift\" line=\"118\" column=\"26\"><Name>prediction(from:options:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:options:error:</USR><Declaration>public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "prediction(from:options:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 4509, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 409, "key.name": "prediction(from:options:)", "key.namelength": 71, "key.nameoffset": 4600, "key.offset": 4595, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:options:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.parsed_scope.end": 123, "key.parsed_scope.start": 118, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:error:\">prediction(from:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 99, "key.name": "result", "key.namelength": 6, "key.nameoffset": 4714, "key.offset": 4710, "key.parsed_declaration": "let result = PredictionResult(input: input, options: options) { try model.prediction(from: input) }", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "PredictionResult", "key.typeusr": "$S17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0B7MLModelC10prediction4from7optionsSo17MLFeatureProvider_pSoAG_p_So19MLPredictionOptionsCtKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(ManagedMLModel) -> (MLFeatureProvider, MLPredictionOptions) throws -> MLFeatureProvider", "key.typeusr": "$S4from7optionsSo17MLFeatureProvider_pSoAC_p_So19MLPredictionOptionsCtKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel(im)predictionFromFeatures:options:error:"}, {"key.annotated_decl": "<Declaration>let installs: [<Type usr=\"s:SS\">String</Type> : Any]?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 73, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 5158, "key.offset": 5154, "key.parsed_declaration": "let installs = UserDefaults.standard.dictionary(forKey: reportInstallKey)", "key.parsed_scope.end": 128, "key.parsed_scope.start": 128, "key.typename": "[String : Any]?", "key.typeusr": "$SSDySSypGSgD", "key.usr": "s:17FritzManagedModel0B7MLModelC26lastReportedInstallVersion33_312F43D3C2B25CE6A83B7E1BE8802608LLSiSgvg8installsL_SDySSypGSgvp"}, {"key.annotated_decl": "<Declaration>var installs: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ManagedMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 5314, "key.offset": 5310, "key.parsed_declaration": "var installs = UserDefaults.standard.dictionary(forKey: reportInstallKey) ?? [String: Int]()", "key.parsed_scope.end": 132, "key.parsed_scope.start": 132, "key.typename": "[String : Any]", "key.typeusr": "$SSDySSypGD", "key.usr": "s:17FritzManagedModel0B7MLModelC26lastReportedInstallVersion33_312F43D3C2B25CE6A83B7E1BE8802608LLSiSgvs8installsL_SDySSypGvp"}], "key.typename": "ManagedMLModel.Type", "key.typeusr": "$S17FritzManagedModel0B7MLModelCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedMLModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDownloader.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3260, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelInfo.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1220, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>internal struct LocalModelInfo : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.bodylength": 0, "key.bodyoffset": 970, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 959}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelInfo.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>internal</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>LocalModelInfo</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.extension", "key.length": 38, "key.name": "LocalModelInfo", "key.namelength": 14, "key.nameoffset": 943, "key.offset": 933, "key.typename": "LocalModelInfo.Type", "key.typeusr": "$S17FritzManagedModel05LocalC4InfoVmD", "key.usr": "s:17FritzManagedModel05LocalC4InfoV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Obfuscator.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2429, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/PredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1650, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 28825, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>protocol RNCryptorType</Declaration>", "key.bodylength": 543, "key.bodyoffset": 2376, "key.doc.column": 10, "key.doc.declaration": "protocol RNCryptorType", "key.doc.discussion": [{"CodeListing": ""}, {"Para": "After calling `finalData()`, the cryptor is no longer valid."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"44\" column=\"10\"><Name>RNCryptorType</Name><USR>s:17FritzManagedModel13RNCryptorTypeP</USR><Declaration>protocol RNCryptorType</Declaration><CommentParts><Abstract><Para>The <codeVoice>RNCryptorType</codeVoice> protocol defines generic API to a mutable, incremental, password-based encryptor or decryptor. Its generic usage is as follows:</Para></Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cryptor = Encryptor(password: \"mypassword\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// or Decryptor()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var result = Data()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for data in datas {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    result.appendData(try cryptor.update(data))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[result.appendData(try cryptor.final())]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>After calling <codeVoice>finalData()</codeVoice>, the cryptor is no longer valid.</Para></Discussion></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "RNCryptorType", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>RNCryptorType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.extension", "key.length": 569, "key.name": "RNCryptorType", "key.namelength": 13, "key.nameoffset": 2361, "key.offset": 2351, "key.substructure": [], "key.typename": "RNCryptorType.Protocol", "key.typeusr": "$S17FritzManagedModel13RNCryptorType_pmD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP"}, {"key.annotated_decl": "<Declaration>enum RNCryptor</Declaration>", "key.bodylength": 12131, "key.bodyoffset": 8528, "key.doc.column": 6, "key.doc.declaration": "enum RNCryptor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"81\" column=\"6\"><Name>RNCryptor</Name><USR>s:17FritzManagedModel9RNCryptorO</USR><Declaration>enum RNCryptor</Declaration><CommentParts><Abstract><Para>RNCryptor encryption/decryption interface.</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "RNCryptor", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RNCryptor</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 12153, "key.name": "RNCryptor", "key.namelength": 9, "key.nameoffset": 8517, "key.offset": 8507, "key.substructure": [], "key.typename": "RNCryptor.Type", "key.typeusr": "$S17FritzManagedModel9RNCryptorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager+ManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10892, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 267}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 267}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 267}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 267}], "key.bodylength": 510, "key.bodyoffset": 354, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 537, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 338, "key.offset": 328, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 870}, {"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 889}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 889}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 889}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 889}], "key.bodylength": 2281, "key.bodyoffset": 976, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 2308, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 960, "key.offset": 950, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 32, "key.name": "MARK: - Download / Compile Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3263}, {"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3296}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3296}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3296}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 3296}], "key.bodylength": 4612, "key.bodyoffset": 3383, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 4639, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 3367, "key.offset": 3357, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Measure", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 8001}, {"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8017}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8017}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8017}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 8017}], "key.bodylength": 1550, "key.bodyoffset": 8104, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1577, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 8088, "key.offset": 8078, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Install", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9660}, {"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9676}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9676}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9676}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 9676}], "key.bodylength": 416, "key.bodyoffset": 9763, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 443, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 9747, "key.offset": 9737, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10185}, {"key.annotated_decl": "<Declaration>final class SessionManager</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 10203}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 10203}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 10203}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 10203}], "key.bodylength": 600, "key.bodyoffset": 10290, "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 627, "key.modulename": "FritzCore", "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 10274, "key.offset": 10264, "key.substructure": [], "key.typename": "SessionManager.Type", "key.typeusr": "$S9FritzCore14SessionManagerCmD", "key.usr": "s:9FritzCore14SessionManagerC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8056, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 215}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 209}], "key.bodylength": 65, "key.bodyoffset": 257, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 245}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 250}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 101, "key.name": "FritzVisionError", "key.namelength": 16, "key.nameoffset": 227, "key.offset": 222, "key.parsed_declaration": "@objc public enum FritzVisionError: Int, Error", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 262, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 296, "key.substructure": []}], "key.typename": "FritzVisionError.Type", "key.typeusr": "$S11FritzVision0aB5ErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionError"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 598}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 592}], "key.bodylength": 1276, "key.bodyoffset": 640, "key.doc.column": 19, "key.doc.comment": "Describes the orientation of the image. The orientations match the [CGImagePropertyOrientation](https://developer.apple.com/documentation/imageio/cgimagepropertyorientation) Enumeration from Apple. Refer to that documentation for clear descriptions of each case.", "key.doc.declaration": "@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"19\" column=\"19\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.doclength": 267, "key.docoffset": 325, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 633}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int32"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1312, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 610, "key.offset": 605, "key.parsed_declaration": "@objc public enum FritzImageOrientation: Int32", "key.parsed_scope.end": 55, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 646, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 662, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 682, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 696, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 718, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 740, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 755, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 778, "key.substructure": []}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fromAVCaptureConnection(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>) -&gt; <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1185}, {"key.attribute": "source.decl.attribute.available", "key.length": 92, "key.offset": 1088}], "key.bodylength": 622, "key.bodyoffset": 1292, "key.doc.column": 24, "key.doc.comment": "Infer FritzImageOrientation from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.\n\n- Parameter connection: AVCaptureConnection\n- Returns: FritzImageOrientation", "key.doc.declaration": "@available(*, deprecated, message: \"Initialize with FritzImageOrientation(connection) now.\")\npublic static func fromAVCaptureConnection(from connection: AVCaptureConnection) -> FritzImageOrientation", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"35\" column=\"24\"><Name>fromAVCaptureConnection(from:)</Name><USR>s:11FritzVision0A16ImageOrientationO23fromAVCaptureConnection0E0ACSo0fG0C_tFZ</USR><Declaration>@available(*, deprecated, message: &quot;Initialize with FritzImageOrientation(connection) now.&quot;)\npublic static func fromAVCaptureConnection(from connection: AVCaptureConnection) -&gt; FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Infer FritzImageOrientation from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.</Para></Abstract><Parameters><Parameter><Name>connection</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AVCaptureConnection</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzImageOrientation</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 35, "key.doc.name": "fromAVCaptureConnection(from:)", "key.doc.parameters": [{"discussion": [{"Para": "AVCaptureConnection"}], "name": "connection"}], "key.doc.result_discussion": [{"Para": "FritzImageOrientation"}], "key.doc.type": "Function", "key.doclength": 291, "key.docoffset": 793, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromAVCaptureConnection</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 723, "key.name": "fromAVCaptureConnection(from:)", "key.namelength": 61, "key.nameoffset": 1204, "key.offset": 1192, "key.parsed_declaration": "public static func fromAVCaptureConnection(from connection: AVCaptureConnection) -> FritzImageOrientation", "key.parsed_scope.end": 54, "key.parsed_scope.start": 35, "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$S4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO23fromAVCaptureConnection0E0ACSo0fG0C_tFZ"}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$S11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1919}], "key.bodylength": 1250, "key.bodyoffset": 1959, "key.doc.column": 19, "key.doc.declaration": "@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"19\" column=\"19\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.kind": "source.lang.swift.decl.extension", "key.length": 1284, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 1936, "key.offset": 1926, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ uiOrientation: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>.<Type usr=\"c:@E@UIImageOrientation\">Orientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1965}], "key.bodylength": 370, "key.bodyoffset": 2016, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>uiOrientation</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>.<ref.enum usr=\"c:@E@UIImageOrientation\">Orientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 415, "key.name": "init(_:)", "key.namelength": 42, "key.nameoffset": 1972, "key.offset": 1972, "key.parsed_declaration": "public init(_ uiOrientation: UIImage.Orientation)", "key.parsed_scope.end": 70, "key.parsed_scope.start": 59, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc\">init(from:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (UIImage.Orientation) -> FritzImageOrientation", "key.typeusr": "$Sy11FritzVision0A16ImageOrientationOSo07UIImageD0VcD", "key.usr": "s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(from connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2630}], "key.bodylength": 526, "key.bodyoffset": 2681, "key.doc.column": 12, "key.doc.comment": "Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.\n\n- Parameter connection: AVCaptureConnection", "key.doc.declaration": "public init(from connection: AVCaptureConnection)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"75\" column=\"12\"><Name>init(from:)</Name><USR>s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc</USR><Declaration>public init(from connection: AVCaptureConnection)</Declaration><CommentParts><Abstract><Para>Initialize from AVCaptureConnection.  This chooses reasonable defaults from the orientation of the camera. Note that this will not take device orientation into account.</Para></Abstract><Parameters><Parameter><Name>connection</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>AVCaptureConnection</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 75, "key.doc.name": "init(from:)", "key.doc.parameters": [{"discussion": [{"Para": "AVCaptureConnection"}], "name": "connection"}], "key.doc.type": "Function", "key.doclength": 233, "key.docoffset": 2393, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>connection</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 571, "key.name": "init(from:)", "key.namelength": 42, "key.nameoffset": 2637, "key.offset": 2637, "key.parsed_declaration": "public init(from connection: AVCaptureConnection)", "key.parsed_scope.end": 86, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationOyACSo07UIImageD0Vcfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A16ImageOrientationO8rawValueACSgs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzImageOrientation.Type) -> (AVCaptureConnection) -> FritzImageOrientation", "key.typeusr": "$S4from11FritzVision0B16ImageOrientationOSo19AVCaptureConnectionC_tcD", "key.usr": "s:11FritzVision0A16ImageOrientationO4fromACSo19AVCaptureConnectionC_tcfc"}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$S11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImageMetadata) public class FritzVisionImageMetadata : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3244}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3212}], "key.bodylength": 1078, "key.bodyoffset": 3293, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3283}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImageMetadata)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImageMetadata</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1121, "key.name": "FritzVisionImageMetadata", "key.namelength": 24, "key.nameoffset": 3257, "key.offset": 3251, "key.parsed_declaration": "public class FritzVisionImageMetadata: NSObject", "key.parsed_scope.end": 119, "key.parsed_scope.start": 90, "key.runtime_name": "FritzVisionImageMetadata", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3305}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3298}], "key.bodylength": 14, "key.bodyoffset": 3322, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 23, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 3314, "key.offset": 3314, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.substructure": [], "key.typename": "(FritzVisionImageMetadata.Type) -> () -> FritzVisionImageMetadata", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCycD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var orientation: <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3486}], "key.doc.column": 16, "key.doc.comment": "Orientation defaults to `FritzImageOrientation.right` which should work for rear facing cameras with a device orientation of Portrait.", "key.doc.declaration": "public var orientation: FritzVision.FritzImageOrientation", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"94\" column=\"16\"><Name>orientation</Name><USR>s:11FritzVision0aB13ImageMetadataC11orientationAA0aC11OrientationOvp</USR><Declaration>public var orientation: FritzVision.FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Orientation defaults to <codeVoice>FritzImageOrientation.right</codeVoice> which should work for rear facing cameras with a device orientation of Portrait.</Para></Abstract></CommentParts></Other>", "key.doc.line": 94, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 3343, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 3497, "key.offset": 3493, "key.parsed_declaration": "public var orientation: FritzImageOrientation = .right", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOrientation", "key.typeusr": "$S11FritzVision0A16ImageOrientationOD", "key.usr": "s:11FritzVision0aB13ImageMetadataC11orientationAA0aC11OrientationOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var cgOrientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3546}], "key.bodylength": 768, "key.bodyoffset": 3600, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgOrientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 816, "key.name": "cgOrientation", "key.namelength": 13, "key.nameoffset": 3557, "key.offset": 3553, "key.parsed_declaration": "public var cgOrientation: CGImagePropertyOrientation", "key.parsed_scope.end": 117, "key.parsed_scope.start": 96, "key.typename": "CGImagePropertyOrientation", "key.typeusr": "$SSo26CGImagePropertyOrientationVD", "key.usr": "s:11FritzVision0aB13ImageMetadataC13cgOrientationSo015CGImagePropertyF0Vvp"}], "key.typename": "FritzVisionImageMetadata.Type", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabel) public class FritzVisionLabel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4496}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4435}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 4435}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 4411}], "key.bodylength": 463, "key.bodyoffset": 4537, "key.doc.column": 14, "key.doc.comment": "Represents a label for an image.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"124\" column=\"14\"><Name>FritzVisionLabel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject</Declaration><CommentParts><Abstract><Para>Represents a label for an image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 124, "key.doc.name": "FritzVisionLabel", "key.doc.type": "Class", "key.doclength": 37, "key.docoffset": 4374, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 4527}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 498, "key.name": "FritzVisionLabel", "key.namelength": 16, "key.nameoffset": 4509, "key.offset": 4503, "key.parsed_declaration": "public class FritzVisionLabel: NSObject", "key.parsed_scope.end": 143, "key.parsed_scope.start": 124, "key.runtime_name": "FritzVisionLabel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4592}], "key.doc.column": 16, "key.doc.comment": "Human readable string of detected label.", "key.doc.declaration": "public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"127\" column=\"16\"><Name>label</Name><USR>s:11FritzVision0aB5LabelC5labelSSvp</USR><Declaration>public let label: String</Declaration><CommentParts><Abstract><Para>Human readable string of detected label.</Para></Abstract></CommentParts></Other>", "key.doc.line": 127, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 4543, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 4603, "key.offset": 4599, "key.parsed_declaration": "public let label: String", "key.parsed_scope.end": 127, "key.parsed_scope.start": 127, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "s:11FritzVision0aB5LabelC5labelSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let confidence: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4681}], "key.doc.column": 16, "key.doc.comment": "Prediction confidence for label in range of [0, 1]", "key.doc.declaration": "public let confidence: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"130\" column=\"16\"><Name>confidence</Name><USR>s:11FritzVision0aB5LabelC10confidenceSdvp</USR><Declaration>public let confidence: Double</Declaration><CommentParts><Abstract><Para>Prediction confidence for label in range of [0, 1]</Para></Abstract></CommentParts></Other>", "key.doc.line": 130, "key.doc.name": "confidence", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 4622, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 4692, "key.offset": 4688, "key.parsed_declaration": "public let confidence: Double", "key.parsed_scope.end": 130, "key.parsed_scope.start": 130, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision0aB5LabelC10confidenceSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4723}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4716}], "key.bodylength": 96, "key.bodyoffset": 4757, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 122, "key.name": "description", "key.namelength": 11, "key.nameoffset": 4736, "key.offset": 4732, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 136, "key.parsed_scope.start": 132, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"s:SS\">String</Type>, confidence: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4860}], "key.bodylength": 90, "key.bodyoffset": 4908, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>confidence</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 132, "key.name": "init(label:confidence:)", "key.namelength": 39, "key.nameoffset": 4867, "key.offset": 4867, "key.parsed_declaration": "public init(label: String, confidence: Double)", "key.parsed_scope.end": 142, "key.parsed_scope.start": 138, "key.substructure": [], "key.typename": "(FritzVisionLabel.Type) -> (String, Double) -> FritzVisionLabel", "key.typeusr": "$S5label10confidence11FritzVision0cD5LabelCSS_SdtcD", "key.usr": "s:11FritzVision0aB5LabelC5label10confidenceACSS_Sdtcfc"}], "key.typename": "FritzVisionLabel.Type", "key.typeusr": "$S11FritzVision0aB5LabelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObject) public class FritzVisionObject : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5172}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 5029}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 5004}], "key.bodylength": 516, "key.bodyoffset": 5214, "key.doc.comment": "Object identified in object detection model. Contains the label and corresponding BoundingBox of identified model.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 5204}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObject)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObject</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 552, "key.name": "FritzVisionObject", "key.namelength": 17, "key.nameoffset": 5185, "key.offset": 5179, "key.parsed_declaration": "public class FritzVisionObject: NSObject", "key.parsed_scope.end": 166, "key.parsed_scope.start": 149, "key.runtime_name": "FritzVisionObject", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let label: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5220}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "label", "key.namelength": 5, "key.nameoffset": 5231, "key.offset": 5227, "key.parsed_declaration": "public let label: FritzVisionLabel", "key.parsed_scope.end": 151, "key.parsed_scope.start": 151, "key.typename": "FritzVisionLabel", "key.typeusr": "$S11FritzVision0aB5LabelCD", "key.usr": "s:11FritzVision0aB6ObjectC5labelAA0aB5LabelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5300}], "key.doc.column": 16, "key.doc.comment": "BoundingBox of detected object.", "key.doc.declaration": "public let boundingBox: BoundingBox", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"154\" column=\"16\"><Name>boundingBox</Name><USR>s:11FritzVision0aB6ObjectC11boundingBoxAA08BoundingE0Cvp</USR><Declaration>public let boundingBox: BoundingBox</Declaration><CommentParts><Abstract><Para>BoundingBox of detected object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 154, "key.doc.name": "boundingBox", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 5260, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>boundingBox</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "boundingBox", "key.namelength": 11, "key.nameoffset": 5311, "key.offset": 5307, "key.parsed_declaration": "public let boundingBox: BoundingBox", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "BoundingBox", "key.typeusr": "$S11FritzVision11BoundingBoxCD", "key.usr": "s:11FritzVision0aB6ObjectC11boundingBoxAA08BoundingE0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 5348}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5341}], "key.bodylength": 204, "key.bodyoffset": 5382, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 230, "key.name": "description", "key.namelength": 11, "key.nameoffset": 5361, "key.offset": 5357, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 160, "key.parsed_scope.start": 156, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>, boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5593}], "key.bodylength": 71, "key.bodyoffset": 5657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>boundingBox</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "init(label:boundingBox:)", "key.namelength": 55, "key.nameoffset": 5600, "key.offset": 5600, "key.parsed_declaration": "public init(label: FritzVisionLabel, boundingBox: BoundingBox)", "key.parsed_scope.end": 165, "key.parsed_scope.start": 162, "key.substructure": [], "key.typename": "(FritzVisionObject.Type) -> (FritzVisionLabel, BoundingBox) -> FritzVisionObject", "key.typeusr": "$S5label11boundingBox11FritzVision0dE6ObjectCAC0dE5LabelC_AC08BoundingC0CtcD", "key.usr": "s:11FritzVision0aB6ObjectC5label11boundingBoxAcA0aB5LabelC_AA08BoundingF0Ctcfc"}], "key.typename": "FritzVisionObject.Type", "key.typeusr": "$S11FritzVision0aB6ObjectCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBox) public class BoundingBox : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6086}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 6067}], "key.bodylength": 1218, "key.bodyoffset": 6122, "key.doc.column": 14, "key.doc.comment": "BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.", "key.doc.declaration": "@objc(BoundingBox) public class BoundingBox : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"171\" column=\"14\"><Name>BoundingBox</Name><USR>c:@M@FritzVision@objc(cs)BoundingBox</USR><Declaration>@objc(BoundingBox) public class BoundingBox : NSObject</Declaration><CommentParts><Abstract><Para>BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 171, "key.doc.name": "BoundingBox", "key.doc.type": "Class", "key.doclength": 333, "key.docoffset": 5734, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 6112}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBox)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBox</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1248, "key.name": "BoundingBox", "key.namelength": 11, "key.nameoffset": 6099, "key.offset": 6093, "key.parsed_declaration": "public class BoundingBox: NSObject", "key.parsed_scope.end": 208, "key.parsed_scope.start": 171, "key.runtime_name": "BoundingBox", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(yMin: <Type usr=\"s:Sd\">Double</Type>, xMin: <Type usr=\"s:Sd\">Double</Type>, yMax: <Type usr=\"s:Sd\">Double</Type>, xMax: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6212}], "key.bodylength": 105, "key.bodyoffset": 6281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "init(yMin:xMin:yMax:xMax:)", "key.namelength": 60, "key.nameoffset": 6219, "key.offset": 6219, "key.parsed_declaration": "public init(yMin: Double, xMin: Double, yMax: Double, xMax: Double)", "key.parsed_scope.end": 182, "key.parsed_scope.start": 177, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc\">init(fromAnchor:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Double, Double, Double, Double) -> BoundingBox", "key.typeusr": "$S4yMin01xA04yMax01xB011FritzVision11BoundingBoxCSd_S3dtcD", "key.usr": "s:11FritzVision11BoundingBoxC4yMin01xE04yMax01xF0ACSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fromAnchor anchor: <Type usr=\"s:11FritzVision6AnchorV\">Anchor</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6393}], "key.bodylength": 133, "key.bodyoffset": 6433, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fromAnchor</decl.var.parameter.argument_label> <decl.var.parameter.name>anchor</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision6AnchorV\">Anchor</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 167, "key.name": "init(fromAnchor:)", "key.namelength": 31, "key.nameoffset": 6400, "key.offset": 6400, "key.parsed_declaration": "public init(fromAnchor anchor: Anchor)", "key.parsed_scope.end": 189, "key.parsed_scope.start": 184, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC4yMin01xE04yMax01xF0ACSd_S3dtcfc\">init(yMin:xMin:yMax:xMax:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Anchor) -> BoundingBox", "key.typeusr": "$S10fromAnchor11FritzVision11BoundingBoxCAB0B0V_tcD", "key.usr": "s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6648}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 6617}], "key.bodylength": 191, "key.bodyoffset": 6717, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 254, "key.name": "toCGRect(imgHeight:imgWidth:)", "key.namelength": 45, "key.nameoffset": 6660, "key.offset": 6655, "key.parsed_declaration": "public func toCGRect(imgHeight: Double, imgWidth: Double) -> CGRect", "key.parsed_scope.end": 198, "key.parsed_scope.start": 193, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:\">toCGRect(imgHeight:imgWidth:xOffset:yOffset:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 6730, "key.offset": 6726, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 194, "key.parsed_scope.start": 194, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 6777, "key.offset": 6773, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 195, "key.parsed_scope.start": 195, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double) -> CGRect", "key.typeusr": "$S9imgHeight0A5WidthSo6CGRectVSd_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:xOffset:yOffset:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>, xOffset: <Type usr=\"s:Sd\">Double</Type>, yOffset: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7028}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 6981}], "key.bodylength": 211, "key.bodyoffset": 7127, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:xOffset:yOffset:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 304, "key.name": "toCGRect(imgHeight:imgWidth:xOffset:yOffset:)", "key.namelength": 75, "key.nameoffset": 7040, "key.offset": 7035, "key.parsed_declaration": "public func toCGRect(imgHeight:Double, imgWidth:Double, xOffset:Double, yOffset:Double) -> CGRect", "key.parsed_scope.end": 207, "key.parsed_scope.start": 202, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:\">toCGRect(imgHeight:imgWidth:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 7140, "key.offset": 7136, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 203, "key.parsed_scope.start": 203, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 7187, "key.offset": 7183, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 204, "key.parsed_scope.start": 204, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double, Double, Double) -> CGRect", "key.typeusr": "$S9imgHeight0A5Width7xOffset01yD0So6CGRectVSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:"}], "key.typename": "BoundingBox.Type", "key.typeusr": "$S11FritzVision11BoundingBoxCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Anchor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7391}], "key.bodylength": 641, "key.bodyoffset": 7413, "key.doc.column": 15, "key.doc.comment": "Anchor box used in object detection models.", "key.doc.declaration": "public struct Anchor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift\" line=\"211\" column=\"15\"><Name>Anchor</Name><USR>s:11FritzVision6AnchorV</USR><Declaration>public struct Anchor</Declaration><CommentParts><Abstract><Para>Anchor box used in object detection models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 211, "key.doc.name": "Anchor", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 7343, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Anchor</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 657, "key.name": "Anchor", "key.namelength": 6, "key.nameoffset": 7405, "key.offset": 7398, "key.parsed_declaration": "public struct Anchor", "key.parsed_scope.end": 240, "key.parsed_scope.start": 211, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7419}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "yCenter", "key.namelength": 7, "key.nameoffset": 7430, "key.offset": 7426, "key.parsed_declaration": "public let yCenter: Double", "key.parsed_scope.end": 213, "key.parsed_scope.start": 213, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV7yCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7450}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "xCenter", "key.namelength": 7, "key.nameoffset": 7461, "key.offset": 7457, "key.parsed_declaration": "public let xCenter: Double", "key.parsed_scope.end": 214, "key.parsed_scope.start": 214, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV7xCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7481}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "height", "key.namelength": 6, "key.nameoffset": 7492, "key.offset": 7488, "key.parsed_declaration": "public let height: Double", "key.parsed_scope.end": 215, "key.parsed_scope.start": 215, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV6heightSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7511}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "width", "key.namelength": 5, "key.nameoffset": 7522, "key.offset": 7518, "key.parsed_declaration": "public let width: Double", "key.parsed_scope.end": 216, "key.parsed_scope.start": 216, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV5widthSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(yCenter: <Type usr=\"s:Sd\">Double</Type>, xCenter: <Type usr=\"s:Sd\">Double</Type>, height: <Type usr=\"s:Sd\">Double</Type>, width: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7541}], "key.bodylength": 123, "key.bodyoffset": 7619, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 195, "key.name": "init(yCenter:xCenter:height:width:)", "key.namelength": 69, "key.nameoffset": 7548, "key.offset": 7548, "key.parsed_declaration": "public init(yCenter: Double, xCenter: Double, height: Double, width: Double)", "key.parsed_scope.end": 223, "key.parsed_scope.start": 218, "key.substructure": [], "key.typename": "(Anchor.Type) -> (Double, Double, Double, Double) -> Anchor", "key.typeusr": "$S7yCenter01xA06height5width11FritzVision6AnchorVSd_S3dtcD", "key.usr": "s:11FritzVision6AnchorV7yCenter01xD06height5widthACSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7753}], "key.bodylength": 44, "key.bodyoffset": 7778, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 63, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 7764, "key.offset": 7760, "key.parsed_declaration": "public var xMin: Double", "key.parsed_scope.end": 227, "key.parsed_scope.start": 225, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7829}], "key.bodylength": 44, "key.bodyoffset": 7854, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 63, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 7840, "key.offset": 7836, "key.parsed_declaration": "public var xMax: Double", "key.parsed_scope.end": 231, "key.parsed_scope.start": 229, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7905}], "key.bodylength": 45, "key.bodyoffset": 7930, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 7916, "key.offset": 7912, "key.parsed_declaration": "public var yMin: Double", "key.parsed_scope.end": 235, "key.parsed_scope.start": 233, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7982}], "key.bodylength": 45, "key.bodyoffset": 8007, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVision.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 7993, "key.offset": 7989, "key.parsed_declaration": "public var yMax: Double", "key.parsed_scope.end": 239, "key.parsed_scope.start": 237, "key.typename": "Double", "key.typeusr": "$SSdD", "key.usr": "s:11FritzVision6AnchorV4yMaxSdvp"}], "key.typename": "Anchor.Type", "key.typeusr": "$S11FritzVision6AnchorVmD", "key.usr": "s:11FritzVision6AnchorV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8667, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionCropAndScale) public enum FritzVisionCropAndScale : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 68}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 37}], "key.bodylength": 70, "key.bodyoffset": 110, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 105}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionCropAndScale)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionCropAndScale</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 106, "key.name": "FritzVisionCropAndScale", "key.namelength": 23, "key.nameoffset": 80, "key.offset": 75, "key.parsed_declaration": "public enum FritzVisionCropAndScale: Int", "key.parsed_scope.end": 11, "key.parsed_scope.start": 7, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 115, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 139, "key.substructure": []}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 162, "key.substructure": []}], "key.typename": "FritzVisionCropAndScale.Type", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 324}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 263}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 263}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 263}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 263}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 239}], "key.bodylength": 3784, "key.bodyoffset": 365, "key.doc.column": 14, "key.doc.comment": "An image or image buffer used in vision detection.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"17\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.doclength": 55, "key.docoffset": 184, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 355}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3819, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 337, "key.offset": 331, "key.parsed_declaration": "public class FritzVisionImage: NSObject", "key.parsed_scope.end": 115, "key.parsed_scope.start": 17, "key.runtime_name": "FritzVisionImage", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 403}], "key.doc.column": 16, "key.doc.comment": "CVPixelBuffer of image.", "key.doc.declaration": "public let imageBuffer: CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"20\" column=\"16\"><Name>imageBuffer</Name><USR>s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp</USR><Declaration>public let imageBuffer: CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>CVPixelBuffer of image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "imageBuffer", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 371, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "imageBuffer", "key.namelength": 11, "key.nameoffset": 414, "key.offset": 410, "key.parsed_declaration": "public let imageBuffer: CVPixelBuffer?", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 446}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampleBuffer</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "sampleBuffer", "key.namelength": 12, "key.nameoffset": 457, "key.offset": 453, "key.parsed_declaration": "public let sampleBuffer: CMSampleBuffer?", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "CMSampleBuffer?", "key.typeusr": "$SSo17CMSampleBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBufferSo08CMSampleE3RefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 491}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "image", "key.namelength": 5, "key.nameoffset": 502, "key.offset": 498, "key.parsed_declaration": "public let image: UIImage?", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "UIImage?", "key.typeusr": "$SSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB5ImageC5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 523}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 534, "key.offset": 530, "key.parsed_declaration": "public var metadata: FritzVisionImageMetadata?", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionImageMetadata?", "key.typeusr": "$S11FritzVision0aB13ImageMetadataCSgD", "key.usr": "s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var size: <Type usr=\"c:@S@CGSize\">CGSize</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.bodylength": 1039, "key.bodyoffset": 640, "key.doc.column": 16, "key.doc.comment": "Dimensions of FritzVisionImage", "key.doc.declaration": "public var size: CGSize? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"27\" column=\"16\"><Name>size</Name><USR>s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp</USR><Declaration>public var size: CGSize? { get }</Declaration><CommentParts><Abstract><Para>Dimensions of FritzVisionImage</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "size", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 575, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 1059, "key.name": "size", "key.namelength": 4, "key.nameoffset": 625, "key.offset": 621, "key.parsed_declaration": "public var size: CGSize?", "key.parsed_scope.end": 50, "key.parsed_scope.start": 27, "key.typename": "CGSize?", "key.typeusr": "$SSo6CGSizeVSgD", "key.usr": "s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp"}, {"key.annotated_decl": "<Declaration>var size: <Type usr=\"c:@S@CGSize\">CGSize</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 17, "key.name": "size", "key.namelength": 4, "key.nameoffset": 671, "key.offset": 667, "key.parsed_declaration": "var size: CGSize?", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvp\">size</RelatedName>"}], "key.typename": "CGSize?", "key.typeusr": "$SSo6CGSizeVSgD", "key.usr": "s:11FritzVision0aB5ImageC4sizeSo6CGSizeVSgvgADL_AGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithBuffer:) public init(buffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1713}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 1686}], "key.bodylength": 96, "key.bodyoffset": 1750, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(buffer:)", "key.namelength": 28, "key.nameoffset": 1720, "key.offset": 1720, "key.parsed_declaration": "public init(buffer: CMSampleBuffer)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 53, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer) -> FritzVisionImage", "key.typeusr": "$S6buffer11FritzVision0bC5ImageCSo17CMSampleBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1885}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1853}], "key.bodylength": 101, "key.bodyoffset": 1926, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 136, "key.name": "init(imageBuffer:)", "key.namelength": 32, "key.nameoffset": 1892, "key.offset": 1892, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer) -> FritzVisionImage", "key.typeusr": "$S11imageBuffer11FritzVision0cD5ImageCSo11CVBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2060}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2034}], "key.bodylength": 95, "key.bodyoffset": 2089, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init(image:)", "key.namelength": 20, "key.nameoffset": 2067, "key.offset": 2067, "key.parsed_declaration": "public init(image: UIImage)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 67, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (UIImage) -> FritzVisionImage", "key.typeusr": "$S5image11FritzVision0bC5ImageCSo7UIImageC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildImageRequestHandler() -&gt; <Type usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2192}], "key.bodylength": 1888, "key.bodyoffset": 2258, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildImageRequestHandler</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1948, "key.name": "buildImageRequestHandler()", "key.namelength": 26, "key.nameoffset": 2204, "key.offset": 2199, "key.parsed_declaration": "public func buildImageRequestHandler() -> VNImageRequestHandler?", "key.parsed_scope.end": 113, "key.parsed_scope.start": 74, "key.substructure": [], "key.typename": "(FritzVisionImage) -> () -> VNImageRequestHandler?", "key.typeusr": "$SSo21VNImageRequestHandlerCSgycD", "key.usr": "s:11FritzVision0aB5ImageC05buildC14RequestHandlerSo07VNImageeF0CSgyF"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$S11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}, {"key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 4152}], "key.bodylength": 4370, "key.bodyoffset": 4204, "key.doc.column": 14, "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift\" line=\"17\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 4399, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 4186, "key.offset": 4176, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func prepare(height: <Type usr=\"s:Si\">Int</Type>, width: <Type usr=\"s:Si\">Int</Type>, scaleCropOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> = default) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4815}], "key.bodylength": 1012, "key.bodyoffset": 4935, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prepare</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleCropOption</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1126, "key.name": "prepare(height:width:scaleCropOption:)", "key.namelength": 88, "key.nameoffset": 4827, "key.offset": 4822, "key.parsed_declaration": "public func prepare(height: Int, width: Int, scaleCropOption: FritzVisionCropAndScale = .centerCrop) -> CVPixelBuffer?", "key.parsed_scope.end": 161, "key.parsed_scope.start": 134, "key.substructure": [{"key.annotated_decl": "<Declaration>var rotated: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rotated</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "rotated", "key.namelength": 7, "key.nameoffset": 5020, "key.offset": 5016, "key.parsed_declaration": "var rotated: CVPixelBuffer? = buffer", "key.parsed_scope.end": 137, "key.parsed_scope.start": 137, "key.typename": "CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC7prepare6height5width15scaleCropOptionSo11CVBufferRefaSgSi_SiAA0abH8AndScaleOtF7rotatedL_AJvp"}], "key.typename": "(FritzVisionImage) -> (Int, Int, FritzVisionCropAndScale) -> CVBuffer?", "key.typeusr": "$S6height5width15scaleCropOptionSo11CVBufferRefaSgSi_Si11FritzVision0hiD8AndScaleOtcD", "key.usr": "s:11FritzVision0aB5ImageC7prepare6height5width15scaleCropOptionSo11CVBufferRefaSgSi_SiAA0abH8AndScaleOtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(rotate) public func rotate() -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5972}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 13, "key.offset": 5954}], "key.bodylength": 691, "key.bodyoffset": 6012, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(rotate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rotate</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 725, "key.name": "rotate()", "key.namelength": 8, "key.nameoffset": 5984, "key.offset": 5979, "key.parsed_declaration": "public func rotate() -> CVPixelBuffer?", "key.parsed_scope.end": 177, "key.parsed_scope.start": 164, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 65, "key.name": "TODO: flip mirrored images through affine transformation I think?", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6251}], "key.typename": "(FritzVisionImage) -> () -> CVBuffer?", "key.typeusr": "$SSo11CVBufferRefaSgycD", "key.usr": "c:@CM@FritzVision@objc(cs)FritzVisionImage(im)rotate"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$S11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/UIImage+Vision.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1652, "key.offset": 0, "key.substructure": [{"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 1458, "key.bodyoffset": 192, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 1478, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 183, "key.offset": 173, "key.substructure": [], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5140, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModelOptions) public class FritzVisionObjectModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 223}], "key.bodylength": 599, "key.bodyoffset": 314, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 304}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 647, "key.name": "FritzVisionObjectModelOptions", "key.namelength": 29, "key.nameoffset": 273, "key.offset": 267, "key.parsed_declaration": "public class FritzVisionObjectModelOptions: NSObject", "key.parsed_scope.end": 31, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionObjectModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithThreshold:iouThreshold:numResults:) public init(threshold: <Type usr=\"s:Sd\">Double</Type> = default, iouThreshold: <Type usr=\"s:Sf\">Float</Type> = default, numResults: <Type usr=\"s:Si\">Int</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 705}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 49, "key.offset": 651}], "key.bodylength": 118, "key.bodyoffset": 793, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithThreshold:iouThreshold:numResults:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>threshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numResults</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 200, "key.name": "init(threshold:iouThreshold:numResults:)", "key.namelength": 79, "key.nameoffset": 712, "key.offset": 712, "key.parsed_declaration": "public init(threshold: Double = 0.6, iouThreshold: Float = 0.25, numResults: Int = 15)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 26, "key.substructure": [], "key.typename": "(FritzVisionObjectModelOptions.Type) -> (Double, Float, Int) -> FritzVisionObjectModelOptions", "key.typeusr": "$S9threshold12iouThreshold10numResults22FritzVisionObjectModel0fghI7OptionsCSd_SfSitcD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions(im)initWithThreshold:iouThreshold:numResults:"}], "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$S22FritzVisionObjectModel0abcD7OptionsCmD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModel) public class FritzVisionObjectModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1294}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1270}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1240}], "key.bodylength": 3797, "key.bodyoffset": 1341, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1331}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3838, "key.name": "FritzVisionObjectModel", "key.namelength": 22, "key.nameoffset": 1307, "key.offset": 1301, "key.parsed_declaration": "public class FritzVisionObjectModel: NSObject", "key.parsed_scope.end": 133, "key.parsed_scope.start": 42, "key.runtime_name": "FritzVisionObjectModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var pendingAsyncPredictions: <Type usr=\"s:Si\">Int</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1410}], "key.bodylength": 247, "key.bodyoffset": 1451, "key.doc.column": 16, "key.doc.comment": "Number of predictions waiting to be run asynchronously", "key.doc.declaration": "public var pendingAsyncPredictions: Int { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift\" line=\"45\" column=\"16\"><Name>pendingAsyncPredictions</Name><USR>s:22FritzVisionObjectModelAAC23pendingAsyncPredictionsSivp</USR><Declaration>public var pendingAsyncPredictions: Int { get set }</Declaration><CommentParts><Abstract><Para>Number of predictions waiting to be run asynchronously</Para></Abstract></CommentParts></Other>", "key.doc.line": 45, "key.doc.name": "pendingAsyncPredictions", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1347, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pendingAsyncPredictions</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 282, "key.name": "pendingAsyncPredictions", "key.namelength": 23, "key.nameoffset": 1421, "key.offset": 1417, "key.parsed_declaration": "public var pendingAsyncPredictions: Int", "key.parsed_scope.end": 54, "key.parsed_scope.start": 45, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:22FritzVisionObjectModelAAC23pendingAsyncPredictionsSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = default, completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3051}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3012}], "key.bodylength": 1099, "key.bodyoffset": 3206, "key.doc.column": 17, "key.doc.comment": "Run prediction for vision object model.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, completion: ([FritzVisionObject]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift\" line=\"88\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, completion: ([FritzVisionObject]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction for vision object model.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 88, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 279, "key.docoffset": 2729, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1248, "key.name": "predict(_:options:completion:)", "key.namelength": 141, "key.nameoffset": 3063, "key.offset": 3058, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -> Void)", "key.parsed_scope.end": 116, "key.parsed_scope.start": 88, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:queue:completion:\">predict(_:options:on:completion:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var resultObjects: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resultObjects</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "resultObjects", "key.namelength": 13, "key.nameoffset": 3219, "key.offset": 3215, "key.parsed_declaration": "var resultObjects: [FritzVisionObject]?", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.typename": "[FritzVisionObject]?", "key.typeusr": "$SSay11FritzVision0aB6ObjectCGSgD", "key.usr": "s:22FritzVisionObjectModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF13resultObjectsL_ANvp"}, {"key.annotated_decl": "<Declaration>var resultError: <Type usr=\"s:s5ErrorP\">Error</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resultError</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "resultError", "key.namelength": 11, "key.nameoffset": 3267, "key.offset": 3263, "key.parsed_declaration": "var resultError: Error?", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "Error?", "key.typeusr": "$Ss5Error_pSgD", "key.usr": "s:22FritzVisionObjectModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF06resultJ0L_APvp"}, {"key.annotated_decl": "<Declaration>let trackingRequest: <Type usr=\"c:objc(cs)VNCoreMLRequest\">VNCoreMLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackingRequest</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)VNCoreMLRequest\">VNCoreMLRequest</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 551, "key.name": "trackingRequest", "key.namelength": 15, "key.nameoffset": 3300, "key.offset": 3296, "key.parsed_declaration": "let trackingRequest = VNCoreMLRequest(model: visionModel) { (request, error) in", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "VNCoreMLRequest", "key.typeusr": "$SSo15VNCoreMLRequestCD", "key.usr": "s:22FritzVisionObjectModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF15trackingRequestL_So15VNCoreMLRequestCvp"}], "key.typename": "(FritzVisionObjectModel) -> (FritzVisionImage, FritzVisionObjectModelOptions, ([FritzVisionObject]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_0cD11ObjectModel0cdfG7OptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:completion:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = default, on queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, completion: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4747}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 4702}], "key.bodylength": 199, "key.bodyoffset": 4937, "key.doc.column": 17, "key.doc.comment": "Run prediction for vision object model asynchronously on a given queue.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - queue: Dispatch queue to asynchronously execute predictions on\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, on queue: DispatchQueue, completion: @escaping ([FritzVisionObject]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift\" line=\"126\" column=\"17\"><Name>predict(_:options:on:completion:)</Name><USR>c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:queue:completion:</USR><Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = default, on queue: DispatchQueue, completion: @escaping ([FritzVisionObject]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction for vision object model asynchronously on a given queue.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>queue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Dispatch queue to asynchronously execute predictions on</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 126, "key.doc.name": "predict(_:options:on:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "Dispatch queue to asynchronously execute predictions on"}], "name": "queue"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 386, "key.docoffset": 4312, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/FritzVisionObjectModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:queue:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on</decl.var.parameter.argument_label> <decl.var.parameter.name>queue</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 383, "key.name": "predict(_:options:on:completion:)", "key.namelength": 176, "key.nameoffset": 4759, "key.offset": 4754, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), on queue: DispatchQueue, completion: @escaping ([FritzVisionObject]?, Error?) -> Void)", "key.parsed_scope.end": 132, "key.parsed_scope.start": 126, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:completion:\">predict(_:options:completion:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionObjectModel) -> (FritzVisionImage, FritzVisionObjectModelOptions, DispatchQueue, @escaping ([FritzVisionObject]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options2on10completiony11FritzVision0dE5ImageC_0dE11ObjectModel0degH7OptionsCSo17OS_dispatch_queueCySayAD0deG0CGSg_s5Error_pSgtctcD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel(im)predict:options:queue:completion:"}], "key.typename": "FritzVisionObjectModel.Type", "key.typeusr": "$S22FritzVisionObjectModelAACmD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)FritzVisionObjectModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/Anchors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2832, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2466, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBoxOutline) public class BoundingBoxOutline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 192}], "key.bodylength": 2203, "key.bodyoffset": 261, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 251}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBoxOutline)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBoxOutline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2240, "key.name": "BoundingBoxOutline", "key.namelength": 18, "key.nameoffset": 231, "key.offset": 225, "key.parsed_declaration": "public class BoundingBoxOutline: NSObject", "key.parsed_scope.end": 77, "key.parsed_scope.start": 12, "key.runtime_name": "BoundingBoxOutline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fontSize: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 331}], "key.bodylength": 436, "key.bodyoffset": 370, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fontSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 469, "key.name": "init(fontSize:)", "key.namelength": 30, "key.nameoffset": 338, "key.offset": 338, "key.parsed_declaration": "public init(fontSize: CGFloat = 14.0)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(BoundingBoxOutline.Type) -> (CGFloat) -> BoundingBoxOutline", "key.typeusr": "$S8fontSize22FritzVisionObjectModel18BoundingBoxOutlineC12CoreGraphics7CGFloatV_tcD", "key.usr": "s:22FritzVisionObjectModel18BoundingBoxOutlineC8fontSizeAC12CoreGraphics7CGFloatV_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(parent:) public func addToLayer(_ parent: <Type usr=\"c:objc(cs)CALayer\">CALayer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 926}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 14, "key.offset": 907}], "key.bodylength": 82, "key.bodyoffset": 969, "key.doc.column": 17, "key.doc.comment": "Add shape and text to parent layer\n\n- Parameter parent: parent CALayer", "key.doc.declaration": "@objc(parent:) public func addToLayer(_ parent: CALayer)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"34\" column=\"17\"><Name>addToLayer(_:)</Name><USR>c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)parent:</USR><Declaration>@objc(parent:) public func addToLayer(_ parent: CALayer)</Declaration><CommentParts><Abstract><Para>Add shape and text to parent layer</Para></Abstract><Parameters><Parameter><Name>parent</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>parent CALayer</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "addToLayer(_:)", "key.doc.parameters": [{"discussion": [{"Para": "parent CALayer"}], "name": "parent"}], "key.doc.type": "Function", "key.doclength": 90, "key.docoffset": 813, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(parent:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToLayer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>parent</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CALayer\">CALayer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "addToLayer(_:)", "key.namelength": 29, "key.nameoffset": 938, "key.offset": 933, "key.parsed_declaration": "public func addToLayer(_ parent: CALayer)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(BoundingBoxOutline) -> (CALayer) -> ()", "key.typeusr": "$SyySo7CALayerCcD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)parent:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(frame:label:color:textColor:) public func show(frame: <Type usr=\"c:@S@CGRect\">CGRect</Type>, label: <Type usr=\"s:SS\">String</Type>, color: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type>, textColor: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1338}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1298}], "key.bodylength": 870, "key.bodyoffset": 1431, "key.doc.column": 17, "key.doc.comment": "Show Bounding box.\n\n- Parameters:\n  - frame: CGRect of coordinates to draw box\n  - label: Classified label\n  - color: Color of bounding box outline\n  - textColor: Classified label text", "key.doc.declaration": "@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = default)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"47\" column=\"17\"><Name>show(frame:label:color:textColor:)</Name><USR>c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:</USR><Declaration>@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = default)</Declaration><CommentParts><Abstract><Para>Show Bounding box.</Para></Abstract><Parameters><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CGRect of coordinates to draw box</Para></Discussion></Parameter><Parameter><Name>label</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label</Para></Discussion></Parameter><Parameter><Name>color</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Color of bounding box outline</Para></Discussion></Parameter><Parameter><Name>textColor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label text</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "show(frame:label:color:textColor:)", "key.doc.parameters": [{"discussion": [{"Para": "CGRect of coordinates to draw box"}], "name": "frame"}, {"discussion": [{"Para": "Classified label"}], "name": "label"}, {"discussion": [{"Para": "Color of bounding box outline"}], "name": "color"}, {"discussion": [{"Para": "Classified label text"}], "name": "textColor"}], "key.doc.type": "Function", "key.doclength": 236, "key.docoffset": 1058, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(frame:label:color:textColor:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>show</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>textColor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 957, "key.name": "show(frame:label:color:textColor:)", "key.namelength": 79, "key.nameoffset": 1350, "key.offset": 1345, "key.parsed_declaration": "public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "path", "key.namelength": 4, "key.nameoffset": 1491, "key.offset": 1487, "key.parsed_declaration": "let path = UIBezierPath(rect: frame)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "UIBezierPath", "key.typeusr": "$SSo12UIBezierPathCD", "key.usr": "s:22FritzVisionObjectModel18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF4pathL_So12UIBezierPathCvp"}, {"key.annotated_decl": "<Declaration>let textRect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 224, "key.name": "textRect", "key.namelength": 8, "key.nameoffset": 1831, "key.offset": 1827, "key.parsed_declaration": "let textRect = label.boundingRect(", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "CGRect", "key.typeusr": "$SSo6CGRectVD", "key.usr": "s:22FritzVisionObjectModel18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0L4RectL_AJvp"}, {"key.annotated_decl": "<Declaration>let textSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 74, "key.name": "textSize", "key.namelength": 8, "key.nameoffset": 2064, "key.offset": 2060, "key.parsed_declaration": "let textSize = CGSize(width: textRect.width + 12, height: textRect.height)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "CGSize", "key.typeusr": "$SSo6CGSizeVD", "key.usr": "s:22FritzVisionObjectModel18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0L4SizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let textOrigin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textOrigin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "textOrigin", "key.namelength": 10, "key.nameoffset": 2147, "key.offset": 2143, "key.parsed_declaration": "let textOrigin = CGPoint(x: frame.origin.x - 2, y: frame.origin.y - textSize.height)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "CGPoint", "key.typeusr": "$SSo7CGPointVD", "key.usr": "s:22FritzVisionObjectModel18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0L6OriginL_So7CGPointVvp"}], "key.typename": "(BoundingBoxOutline) -> (CGRect, String, UIColor, UIColor) -> ()", "key.typeusr": "$S5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCAHtcD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public func hide()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2368}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.bodylength": 74, "key.bodyoffset": 2388, "key.doc.column": 17, "key.doc.comment": "Hide bounding box from appearing in view.", "key.doc.declaration": "@objc public func hide()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift\" line=\"73\" column=\"17\"><Name>hide()</Name><USR>c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)hide</USR><Declaration>@objc public func hide()</Declaration><CommentParts><Abstract><Para>Hide bounding box from appearing in view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "hide()", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2308, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hide</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "hide()", "key.namelength": 6, "key.nameoffset": 2380, "key.offset": 2375, "key.parsed_declaration": "public func hide()", "key.parsed_scope.end": 76, "key.parsed_scope.start": 73, "key.typename": "(BoundingBoxOutline) -> () -> ()", "key.typeusr": "$SyycD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline(im)hide"}], "key.typename": "BoundingBoxOutline.Type", "key.typeusr": "$S22FritzVisionObjectModel18BoundingBoxOutlineCmD", "key.usr": "c:@M@FritzVisionObjectModel@objc(cs)BoundingBoxOutline"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 876, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5909, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol MultiArrayType : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1152}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1128}], "key.bodylength": 209, "key.bodyoffset": 1196, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1184}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MultiArrayType</decl.name> : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 247, "key.name": "MultiArrayType", "key.namelength": 14, "key.nameoffset": 1168, "key.offset": 1159, "key.parsed_declaration": "public protocol MultiArrayType: Comparable", "key.parsed_scope.end": 34, "key.parsed_scope.start": 28, "key.runtime_name": "_TtP4main14MultiArrayType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1254, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1212, "key.offset": 1201, "key.parsed_declaration": "static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP05multif4DataG0So07MLMultifiG0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func + (lhs: <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "+(_:_:)", "key.namelength": 23, "key.nameoffset": 1277, "key.offset": 1265, "key.parsed_declaration": "static func +(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers14MultiArrayTypeP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyxx_0C5ValueQztFZ\">+ (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyx0C5ValueQz_xtFZ\">+ (_: Self.RawValue, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SjsE1popyxxFZ\">+(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideSxQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideSxQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$Syxx_xtcD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP1poiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 43, "key.name": "*(_:_:)", "key.namelength": 23, "key.nameoffset": 1325, "key.offset": 1313, "key.parsed_declaration": "static func *(lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$Syxx_xtcD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP1moiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 12, "key.name": "init(_:)", "key.namelength": 12, "key.nameoffset": 1361, "key.offset": 1361, "key.parsed_declaration": "init(_: Int)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Int) -> Self", "key.typeusr": "$SyxSicD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypePyxSicfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1398, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1382, "key.offset": 1378, "key.parsed_declaration": "var toUInt8: UInt8", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP7toUInt8s0I0Vvp"}], "key.typename": "MultiArrayType.Protocol", "key.typeusr": "$S22FritzVisionObjectModel14MultiArrayType_pmD", "key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP"}, {"key.annotated_decl": "<Declaration>struct Double</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1408}], "key.bodylength": 136, "key.bodyoffset": 1466, "key.doc.declaration": "struct Double", "key.doc.full_as_xml": "<Class><Name>Double</Name><USR>s:Sd</USR><Declaration>struct Double</Declaration><CommentParts><Abstract><Para>A double-precision, floating-point value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Double", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1450}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Double</decl.name></decl.struct>", "key.groupname": "Math/Floating", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 171, "key.modulename": "Swift", "key.name": "Double", "key.namelength": 6, "key.nameoffset": 1442, "key.offset": 1432, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1471}], "key.bodylength": 16, "key.bodyoffset": 1531, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.static", "key.length": 70, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1489, "key.offset": 1478, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP05multif4DataG0So07MLMultifiG0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:Sd22FritzVisionObjectModelE18multiArrayDataTypeSo07MLMultifgH0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1553}], "key.bodylength": 20, "key.bodyoffset": 1580, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1564, "key.offset": 1560, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP7toUInt8s0I0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:Sd22FritzVisionObjectModelE7toUInt8s0F0Vvp"}], "key.typename": "Double.Type", "key.typeusr": "$SSdmD", "key.usr": "s:Sd"}, {"key.annotated_decl": "<Declaration>struct Float</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1605}], "key.bodylength": 137, "key.bodyoffset": 1662, "key.doc.declaration": "struct Float", "key.doc.full_as_xml": "<Class><Name>Float</Name><USR>s:Sf</USR><Declaration>struct Float</Declaration><CommentParts><Abstract><Para>A single-precision, floating-point value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Float", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1646}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Float</decl.name></decl.struct>", "key.groupname": "Math/Floating", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 171, "key.modulename": "Swift", "key.name": "Float", "key.namelength": 5, "key.nameoffset": 1639, "key.offset": 1629, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1667}], "key.bodylength": 17, "key.bodyoffset": 1727, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1685, "key.offset": 1674, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP05multif4DataG0So07MLMultifiG0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:Sf22FritzVisionObjectModelE18multiArrayDataTypeSo07MLMultifgH0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1750}], "key.bodylength": 20, "key.bodyoffset": 1777, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Floating", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1761, "key.offset": 1757, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP7toUInt8s0I0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:Sf22FritzVisionObjectModelE7toUInt8s0F0Vvp"}], "key.typename": "Float.Type", "key.typeusr": "$SSfmD", "key.usr": "s:Sf"}, {"key.annotated_decl": "<Declaration>struct Int32 : <Type usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</Type>, <Type usr=\"s:SZ\">SignedInteger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1802}], "key.bodylength": 135, "key.bodyoffset": 1859, "key.doc.declaration": "struct Int32 : FixedWidthInteger, SignedInteger", "key.doc.full_as_xml": "<Class><Name>Int32</Name><USR>s:s5Int32V</USR><Declaration>struct Int32 : FixedWidthInteger, SignedInteger</Declaration><CommentParts><Abstract><Para>A 32-bit signed integer value type.</Para></Abstract></CommentParts></Class>", "key.doc.name": "Int32", "key.doc.type": "Class", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 1843}], "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Int32</decl.name> : <ref.protocol usr=\"s:s17FixedWidthIntegerP\">FixedWidthInteger</ref.protocol>, <ref.protocol usr=\"s:SZ\">SignedInteger</ref.protocol></decl.struct>", "key.groupname": "Math/Integers", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 169, "key.modulename": "Swift", "key.name": "Int32", "key.namelength": 5, "key.nameoffset": 1836, "key.offset": 1826, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1864}], "key.bodylength": 15, "key.bodyoffset": 1924, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.groupname": "Math/Integers", "key.kind": "source.lang.swift.decl.var.static", "key.length": 69, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1882, "key.offset": 1871, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP05multif4DataG0So07MLMultifiG0VvpZ"}], "key.parsed_declaration": "public static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$SSo20MLMultiArrayDataTypeVD", "key.usr": "s:s5Int32V22FritzVisionObjectModelE18multiArrayDataTypeSo07MLMultighI0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1945}], "key.bodylength": 20, "key.bodyoffset": 1972, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.groupname": "Math/Integers", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1956, "key.offset": 1952, "key.overrides": [{"key.usr": "s:22FritzVisionObjectModel14MultiArrayTypeP7toUInt8s0I0Vvp"}], "key.parsed_declaration": "public var toUInt8: UInt8", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "UInt8", "key.typeusr": "$Ss5UInt8VD", "key.usr": "s:s5Int32V22FritzVisionObjectModelE7toUInt8s0G0Vvp"}], "key.typename": "Int32.Type", "key.typeusr": "$Ss5Int32VmD", "key.usr": "s:s5Int32V"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2082}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2058}], "key.bodylength": 3779, "key.bodyoffset": 2127, "key.doc.column": 15, "key.doc.comment": "Wrapper around MLMultiArray to make it more Swifty.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"58\" column=\"15\"><Name>MultiArray</Name><USR>s:22FritzVisionObjectModel10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 58, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.doclength": 60, "key.docoffset": 1997, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 3818, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 2096, "key.offset": 2089, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 173, "key.parsed_scope.start": 58, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 2110}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:22FritzVisionObjectModel14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 2107, "key.offset": 2107, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "T.Type", "key.typeusr": "$SxmD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2132}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "array", "key.namelength": 5, "key.nameoffset": 2143, "key.offset": 2139, "key.parsed_declaration": "public let array: MLMultiArray", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5arraySo07MLMultiF0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let pointer: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2167}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "pointer", "key.namelength": 7, "key.nameoffset": 2178, "key.offset": 2174, "key.parsed_declaration": "public let pointer: UnsafeMutablePointer<T>", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "UnsafeMutablePointer<T>", "key.typeusr": "$SSpyxGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV7pointerSpyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var strides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2229}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2216}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>strides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "strides", "key.namelength": 7, "key.nameoffset": 2240, "key.offset": 2236, "key.parsed_declaration": "private(set) public var strides: [Int]", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV7stridesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var shape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2272}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2259}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "shape", "key.namelength": 5, "key.nameoffset": 2283, "key.offset": 2279, "key.parsed_declaration": "private(set) public var shape: [Int]", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5shapeSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2371}], "key.bodylength": 179, "key.bodyoffset": 2398, "key.doc.column": 12, "key.doc.comment": "Creates a new multi-array filled with all zeros.", "key.doc.declaration": "public init(shape: [Int])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"68\" column=\"12\"><Name>init(shape:)</Name><USR>s:22FritzVisionObjectModel10MultiArrayV5shapeACyxGSaySiG_tcfc</USR><Declaration>public init(shape: [Int])</Declaration><CommentParts><Abstract><Para>Creates a new multi-array filled with all zeros.</Para></Abstract></CommentParts></Function>", "key.doc.line": 68, "key.doc.name": "init(shape:)", "key.doc.type": "Function", "key.doclength": 65, "key.docoffset": 2301, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 200, "key.name": "init(shape:)", "key.namelength": 18, "key.nameoffset": 2378, "key.offset": 2378, "key.parsed_declaration": "public init(shape: [Int])", "key.parsed_scope.end": 72, "key.parsed_scope.start": 68, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let m: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>m</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 85, "key.name": "m", "key.namelength": 1, "key.nameoffset": 2411, "key.offset": 2407, "key.parsed_declaration": "let m = try! MLMultiArray(shape: shape as [NSNumber], dataType: T.multiArrayDataType)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5shapeACyxGSaySiG_tcfc1mL_So07MLMultiF0Cvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$S5shape22FritzVisionObjectModel10MultiArrayVyxGSaySiG_tcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5shapeACyxGSaySiG_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>], initial: <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2669}], "key.bodylength": 109, "key.bodyoffset": 2708, "key.doc.column": 12, "key.doc.comment": "Creates a new multi-array initialized with the specified value.", "key.doc.declaration": "public init(shape: [Int], initial: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"77\" column=\"12\"><Name>init(shape:initial:)</Name><USR>s:22FritzVisionObjectModel10MultiArrayV5shape7initialACyxGSaySiG_xtcfc</USR><Declaration>public init(shape: [Int], initial: T)</Declaration><CommentParts><Abstract><Para>Creates a new multi-array initialized with the specified value.</Para></Abstract></CommentParts></Function>", "key.doc.line": 77, "key.doc.name": "init(shape:initial:)", "key.doc.type": "Function", "key.doclength": 80, "key.docoffset": 2584, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initial</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(shape:initial:)", "key.namelength": 30, "key.nameoffset": 2676, "key.offset": 2676, "key.parsed_declaration": "public init(shape: [Int], initial: T)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 77, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int], T) -> MultiArray<T>", "key.typeusr": "$S5shape7initial22FritzVisionObjectModel10MultiArrayVyxGSaySiG_xtcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5shape7initialACyxGSaySiG_xtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2904}], "key.bodylength": 78, "key.bodyoffset": 2940, "key.doc.column": 12, "key.doc.comment": "Creates a multi-array that wraps an existing MLMultiArray.", "key.doc.declaration": "public init(_ array: MLMultiArray)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"87\" column=\"12\"><Name>init(_:)</Name><USR>s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0Ccfc</USR><Declaration>public init(_ array: MLMultiArray)</Declaration><CommentParts><Abstract><Para>Creates a multi-array that wraps an existing MLMultiArray.</Para></Abstract></CommentParts></Function>", "key.doc.line": 87, "key.doc.name": "init(_:)", "key.doc.type": "Function", "key.doclength": 75, "key.docoffset": 2824, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 108, "key.name": "init(_:)", "key.namelength": 27, "key.nameoffset": 2911, "key.offset": 2911, "key.parsed_declaration": "public init(_ array: MLMultiArray)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 87, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> (MLMultiArray) -> MultiArray<T>", "key.typeusr": "$Sy22FritzVisionObjectModel10MultiArrayVyxGSo07MLMultiF0CcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyACyxGSo07MLMultiF0Ccfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3334}], "key.bodylength": 39, "key.bodyoffset": 3357, "key.doc.column": 16, "key.doc.comment": "Returns the number of elements in the entire array.", "key.doc.declaration": "public var count: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"101\" column=\"16\"><Name>count</Name><USR>s:22FritzVisionObjectModel10MultiArrayV5countSivp</USR><Declaration>public var count: Int { get }</Declaration><CommentParts><Abstract><Para>Returns the number of elements in the entire array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 101, "key.doc.name": "count", "key.doc.type": "Other", "key.doclength": 68, "key.docoffset": 3261, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "count", "key.namelength": 5, "key.nameoffset": 3345, "key.offset": 3341, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 103, "key.parsed_scope.start": 101, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3403}], "key.bodylength": 77, "key.bodyoffset": 3434, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 102, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 3410, "key.offset": 3410, "key.parsed_declaration": "public subscript(a: Int) -> T", "key.parsed_scope.end": 108, "key.parsed_scope.start": 105, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int) -> T", "key.typeusr": "$SyxSicD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSicip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3518}], "key.bodylength": 129, "key.bodyoffset": 3557, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 162, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 3525, "key.offset": 3525, "key.parsed_declaration": "public subscript(a: Int, b: Int) -> T", "key.parsed_scope.end": 113, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int) -> T", "key.typeusr": "$SyxSi_SitcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3693}], "key.bodylength": 159, "key.bodyoffset": 3740, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 200, "key.name": "subscript(_:_:_:)", "key.namelength": 33, "key.nameoffset": 3700, "key.offset": 3700, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int) -> T", "key.parsed_scope.end": 118, "key.parsed_scope.start": 115, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S2itcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3906}], "key.bodylength": 189, "key.bodyoffset": 3961, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 238, "key.name": "subscript(_:_:_:_:)", "key.namelength": 41, "key.nameoffset": 3913, "key.offset": 3913, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int) -> T", "key.parsed_scope.end": 123, "key.parsed_scope.start": 120, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S3itcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>, e: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4157}], "key.bodylength": 219, "key.bodyoffset": 4220, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>e</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 276, "key.name": "subscript(_:_:_:_:_:)", "key.namelength": 49, "key.nameoffset": 4164, "key.offset": 4164, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int, e: Int) -> T", "key.parsed_scope.end": 128, "key.parsed_scope.start": 125, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int, Int) -> T", "key.typeusr": "$SyxSi_S4itcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(indices: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4446}], "key.bodylength": 115, "key.bodyoffset": 4485, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:22FritzVisionObjectModel10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 148, "key.name": "subscript(_:)", "key.namelength": 25, "key.nameoffset": 4453, "key.offset": 4453, "key.parsed_declaration": "public subscript(indices: [Int]) -> T", "key.parsed_scope.end": 133, "key.parsed_scope.start": 130, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:22FritzVisionObjectModel10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> ([Int]) -> T", "key.typeusr": "$SyxSaySiGcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayVyxSaySiGcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func transposed(_ order: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4958}], "key.bodylength": 306, "key.bodyoffset": 5012, "key.doc.column": 17, "key.doc.comment": "Returns a transposed version of this array. NOTE: The new array still uses\nthe same underlying storage (the same MLMultiArray object).", "key.doc.declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"147\" column=\"17\"><Name>transposed(_:)</Name><USR>s:22FritzVisionObjectModel10MultiArrayV10transposedyACyxGSaySiGF</USR><Declaration>public func transposed(_ order: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Returns a transposed version of this array. NOTE: The new array still uses the same underlying storage (the same MLMultiArray object).</Para></Abstract></CommentParts></Function>", "key.doc.line": 147, "key.doc.name": "transposed(_:)", "key.doc.type": "Function", "key.doclength": 156, "key.docoffset": 4797, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>order</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:22FritzVisionObjectModel10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 354, "key.name": "transposed(_:)", "key.namelength": 26, "key.nameoffset": 4970, "key.offset": 4965, "key.parsed_declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.parsed_scope.end": 156, "key.parsed_scope.start": 147, "key.substructure": [{"key.annotated_decl": "<Declaration>var newShape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newShape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "newShape", "key.namelength": 8, "key.nameoffset": 5076, "key.offset": 5072, "key.parsed_declaration": "var newShape = shape", "key.parsed_scope.end": 149, "key.parsed_scope.start": 149, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV10transposedyACyxGSaySiGF8newShapeL_AFvp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 5105, "key.offset": 5101, "key.parsed_declaration": "var newStrides = strides", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV10transposedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$Sy22FritzVisionObjectModel10MultiArrayVyxGSaySiGcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV10transposedyACyxGSaySiGF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func reshaped(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:22FritzVisionObjectModel10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5396}], "key.bodylength": 451, "key.bodyoffset": 5453, "key.doc.column": 17, "key.doc.comment": "Changes the number of dimensions and their sizes.", "key.doc.declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift\" line=\"161\" column=\"17\"><Name>reshaped(_:)</Name><USR>s:22FritzVisionObjectModel10MultiArrayV8reshapedyACyxGSaySiGF</USR><Declaration>public func reshaped(_ dimensions: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Changes the number of dimensions and their sizes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 161, "key.doc.name": "reshaped(_:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 5325, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:22FritzVisionObjectModel10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 502, "key.name": "reshaped(_:)", "key.namelength": 29, "key.nameoffset": 5408, "key.offset": 5403, "key.parsed_declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.parsed_scope.end": 172, "key.parsed_scope.start": 161, "key.substructure": [{"key.annotated_decl": "<Declaration>let newCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "newCount", "key.namelength": 8, "key.nameoffset": 5466, "key.offset": 5462, "key.parsed_declaration": "let newCount = dimensions.reduce(1, *)", "key.parsed_scope.end": 162, "key.parsed_scope.start": 162, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV8reshapedyACyxGSaySiGF8newCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 5598, "key.offset": 5594, "key.parsed_declaration": "var newStrides = [Int](repeating: 0, count: dimensions.count)", "key.parsed_scope.end": 165, "key.parsed_scope.start": 165, "key.typename": "[Int]", "key.typeusr": "$SSaySiGD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV8reshapedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$Sy22FritzVisionObjectModel10MultiArrayVyxGSaySiGcD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV8reshapedyACyxGSaySiGF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$S22FritzVisionObjectModel10MultiArrayVyxGmD", "key.usr": "s:22FritzVisionObjectModel10MultiArrayV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModel/Helpers/SSDPostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7924, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4754, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModelOptions) public class FritzVisionLabelModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 284}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 248}], "key.bodylength": 379, "key.bodyoffset": 337, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 327}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 426, "key.name": "FritzVisionLabelModelOptions", "key.namelength": 28, "key.nameoffset": 297, "key.offset": 291, "key.parsed_declaration": "public class FritzVisionLabelModelOptions: NSObject", "key.parsed_scope.end": 28, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionLabelModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithThreshold:numResults:) public init(threshold: <Type usr=\"s:Sd\">Double</Type> = default, numResults: <Type usr=\"s:Si\">Int</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 577}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 536}], "key.bodylength": 77, "key.bodyoffset": 637, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithThreshold:numResults:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>threshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>numResults</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 131, "key.name": "init(threshold:numResults:)", "key.namelength": 51, "key.nameoffset": 584, "key.offset": 584, "key.parsed_declaration": "public init(threshold: Double = 0.6, numResults: Int = 15)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "(FritzVisionLabelModelOptions.Type) -> (Double, Int) -> FritzVisionLabelModelOptions", "key.typeusr": "$S9threshold10numResults21FritzVisionLabelModel0defG7OptionsCSd_SitcD", "key.usr": "c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions(im)initWithThreshold:numResults:"}], "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$S21FritzVisionLabelModel0abcD7OptionsCmD", "key.usr": "c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionLabelError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 719}], "key.bodylength": 24, "key.bodyoffset": 772, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 760}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 765}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionLabelError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 65, "key.name": "FritzVisionLabelError", "key.namelength": 21, "key.nameoffset": 737, "key.offset": 732, "key.parsed_declaration": "@objc public enum FritzVisionLabelError: Int, Error", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 777, "key.substructure": []}], "key.typename": "FritzVisionLabelError.Type", "key.typeusr": "$S21FritzVisionLabelModel0abC5ErrorOmD", "key.usr": "c:@M@FritzVisionLabelModel@E@FritzVisionLabelError"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModel) public class FritzVisionLabelModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1229}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1168}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1168}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1168}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1168}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1139}], "key.bodylength": 3477, "key.bodyoffset": 1275, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1265}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3517, "key.name": "FritzVisionLabelModel", "key.namelength": 21, "key.nameoffset": 1242, "key.offset": 1236, "key.parsed_declaration": "public class FritzVisionLabelModel: NSObject", "key.parsed_scope.end": 127, "key.parsed_scope.start": 43, "key.runtime_name": "FritzVisionLabelModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var pendingAsyncPredictions: <Type usr=\"s:Si\">Int</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1344}], "key.bodylength": 247, "key.bodyoffset": 1385, "key.doc.column": 16, "key.doc.comment": "Number of predictions waiting to be run asynchronously", "key.doc.declaration": "public var pendingAsyncPredictions: Int { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift\" line=\"46\" column=\"16\"><Name>pendingAsyncPredictions</Name><USR>s:21FritzVisionLabelModelAAC23pendingAsyncPredictionsSivp</USR><Declaration>public var pendingAsyncPredictions: Int { get set }</Declaration><CommentParts><Abstract><Para>Number of predictions waiting to be run asynchronously</Para></Abstract></CommentParts></Other>", "key.doc.line": 46, "key.doc.name": "pendingAsyncPredictions", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pendingAsyncPredictions</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 282, "key.name": "pendingAsyncPredictions", "key.namelength": 23, "key.nameoffset": 1355, "key.offset": 1351, "key.parsed_declaration": "public var pendingAsyncPredictions: Int", "key.parsed_scope.end": 55, "key.parsed_scope.start": 46, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:21FritzVisionLabelModelAAC23pendingAsyncPredictionsSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type> = default, completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2907}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2868}], "key.bodylength": 831, "key.bodyoffset": 3060, "key.doc.column": 17, "key.doc.comment": "Run label prediction requst on a UIImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift\" line=\"86\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, completion: ([FritzVisionLabel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run label prediction requst on a UIImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 86, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 322, "key.docoffset": 2542, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 978, "key.name": "predict(_:options:completion:)", "key.namelength": 139, "key.nameoffset": 2919, "key.offset": 2914, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.parsed_scope.end": 110, "key.parsed_scope.start": 86, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:queue:completion:\">predict(_:options:on:completion:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var resultLabels: [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resultLabels</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "resultLabels", "key.namelength": 12, "key.nameoffset": 3073, "key.offset": 3069, "key.parsed_declaration": "var resultLabels: [FritzVisionLabel]?", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "[FritzVisionLabel]?", "key.typeusr": "$SSay11FritzVision0aB5LabelCGSgD", "key.usr": "s:21FritzVisionLabelModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF12resultLabelsL_ANvp"}, {"key.annotated_decl": "<Declaration>var resultError: <Type usr=\"s:s5ErrorP\">Error</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resultError</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "resultError", "key.namelength": 11, "key.nameoffset": 3119, "key.offset": 3115, "key.parsed_declaration": "var resultError: Error?", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "Error?", "key.typeusr": "$Ss5Error_pSgD", "key.usr": "s:21FritzVisionLabelModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF06resultJ0L_APvp"}, {"key.annotated_decl": "<Declaration>let trackingRequest: <Type usr=\"c:objc(cs)VNCoreMLRequest\">VNCoreMLRequest</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackingRequest</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)VNCoreMLRequest\">VNCoreMLRequest</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 286, "key.name": "trackingRequest", "key.namelength": 15, "key.nameoffset": 3152, "key.offset": 3148, "key.parsed_declaration": "let trackingRequest = VNCoreMLRequest(model: visionModel) { (request, error) in", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "VNCoreMLRequest", "key.typeusr": "$SSo15VNCoreMLRequestCD", "key.usr": "s:21FritzVisionLabelModelAAC7predict_7options10completiony0aB00aB5ImageC_AA0abcD7OptionsCySayAF0abC0CGSg_s5Error_pSgtXEtF15trackingRequestL_So15VNCoreMLRequestCvp"}], "key.typename": "(FritzVisionLabelModel) -> (FritzVisionImage, FritzVisionLabelModelOptions, ([FritzVisionLabel]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_0cD10LabelModel0cdfG7OptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:completion:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type> = default, on queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, completion: @escaping ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4363}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 4318}], "key.bodylength": 199, "key.bodyoffset": 4551, "key.doc.column": 17, "key.doc.comment": "Run label prediction requst asynchronously on a given queue.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - queue: Dispatch queue to asynchronously execute predictions on\n  - completion: The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.", "key.doc.declaration": "@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, on queue: DispatchQueue, completion: @escaping ([FritzVisionLabel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift\" line=\"120\" column=\"17\"><Name>predict(_:options:on:completion:)</Name><USR>c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:queue:completion:</USR><Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = default, on queue: DispatchQueue, completion: @escaping ([FritzVisionLabel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run label prediction requst asynchronously on a given queue.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>queue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Dispatch queue to asynchronously execute predictions on</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 120, "key.doc.name": "predict(_:options:on:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "Dispatch queue to asynchronously execute predictions on"}], "name": "queue"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains an array of FritzVisionLabel objects or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 416, "key.docoffset": 3898, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModel/FritzVisionLabelModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:queue:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>on</decl.var.parameter.argument_label> <decl.var.parameter.name>queue</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 381, "key.name": "predict(_:options:on:completion:)", "key.namelength": 174, "key.nameoffset": 4375, "key.offset": 4370, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), on queue: DispatchQueue, completion: @escaping ([FritzVisionLabel]?, Error?) -> Void)", "key.parsed_scope.end": 126, "key.parsed_scope.start": 120, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:completion:\">predict(_:options:completion:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLabelModel) -> (FritzVisionImage, FritzVisionLabelModelOptions, DispatchQueue, @escaping ([FritzVisionLabel]?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options2on10completiony11FritzVision0dE5ImageC_0dE10LabelModel0degH7OptionsCSo17OS_dispatch_queueCySayAD0deG0CGSg_s5Error_pSgtctcD", "key.usr": "c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel(im)predict:options:queue:completion:"}], "key.typename": "FritzVisionLabelModel.Type", "key.typeusr": "$S21FritzVisionLabelModelAACmD", "key.usr": "c:@M@FritzVisionLabelModel@objc(cs)FritzVisionLabelModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8214, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModelOptions) public class FritzVisionStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 238}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 202}], "key.bodylength": 284, "key.bodyoffset": 291, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 331, "key.name": "FritzVisionStyleModelOptions", "key.namelength": 28, "key.nameoffset": 251, "key.offset": 245, "key.parsed_declaration": "public class FritzVisionStyleModelOptions: NSObject", "key.parsed_scope.end": 24, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 334}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 328}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option.", "key.doc.declaration": "@objc public let imageCropAndScaleOption: FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift\" line=\"18\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public let imageCropAndScaleOption: FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 297, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 345, "key.offset": 341, "key.parsed_declaration": "@objc public let imageCropAndScaleOption: FritzVisionCropAndScale", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithCropAndScaleOption:) public init(cropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 438}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 399}], "key.bodylength": 63, "key.bodyoffset": 510, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithCropAndScaleOption:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>cropAndScaleOption</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "init(cropAndScaleOption:)", "key.namelength": 63, "key.nameoffset": 445, "key.offset": 445, "key.parsed_declaration": "public init(cropAndScaleOption: FritzVisionCropAndScale = .centerCrop)", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.substructure": [], "key.typename": "(FritzVisionStyleModelOptions.Type) -> (FritzVisionCropAndScale) -> FritzVisionStyleModelOptions", "key.typeusr": "$S18cropAndScaleOption25FritzVisionStyleModelBase0efgH7OptionsC0eF00ef4CropbC0O_tcD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions(im)initWithCropAndScaleOption:"}], "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$S25FritzVisionStyleModelBase0abcD7OptionsCmD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1216}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1187}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1163}], "key.bodylength": 1971, "key.bodyoffset": 1262, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1252}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2011, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 1229, "key.offset": 1223, "key.parsed_declaration": "public class FritzVisionStyleModel: NSObject", "key.parsed_scope.end": 103, "key.parsed_scope.start": 48, "key.runtime_name": "FritzVisionStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var pendingAsyncPredictions: <Type usr=\"s:Si\">Int</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1383}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1377}], "key.bodylength": 247, "key.bodyoffset": 1424, "key.doc.column": 22, "key.doc.comment": "Number of predictions waiting to be run asynchronously", "key.doc.declaration": "@objc public var pendingAsyncPredictions: Int { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift\" line=\"53\" column=\"22\"><Name>pendingAsyncPredictions</Name><USR>c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(py)pendingAsyncPredictions</USR><Declaration>@objc public var pendingAsyncPredictions: Int { get set }</Declaration><CommentParts><Abstract><Para>Number of predictions waiting to be run asynchronously</Para></Abstract></CommentParts></Other>", "key.doc.line": 53, "key.doc.name": "pendingAsyncPredictions", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1314, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pendingAsyncPredictions</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 282, "key.name": "pendingAsyncPredictions", "key.namelength": 23, "key.nameoffset": 1394, "key.offset": 1390, "key.parsed_declaration": "@objc public var pendingAsyncPredictions: Int", "key.parsed_scope.end": 62, "key.parsed_scope.start": 53, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(py)pendingAsyncPredictions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2896}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2870}], "key.bodylength": 293, "key.bodyoffset": 2938, "key.doc.column": 12, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithModel:) public init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift\" line=\"93\" column=\"12\"><Name>init(model:)</Name><USR>c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 143, "key.docoffset": 2723, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 329, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 2903, "key.offset": 2903, "key.parsed_declaration": "public init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 102, "key.parsed_scope.start": 93, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:25FritzVisionStyleModelBase0aD18SpecificationError031_4CCAA76E7E10AD323897DB1DE9DFF0I0LLO\">FritzModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:25FritzVisionStyleModelBase0aD18SpecificationError031_4CCAA76E7E10AD323897DB1DE9DFF0I0LLO\">FritzModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3079, "key.offset": 3079, "key.parsed_declaration": "} catch let error as FritzModelSpecificationError", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "FritzModelSpecificationError", "key.typeusr": "$S25FritzVisionStyleModelBase0aD18SpecificationError031_4CCAA76E7E10AD323897DB1DE9DFF0I0LLOD", "key.usr": "s:25FritzVisionStyleModelBase0abcD0C5modelAC0a7ManagedD0015SwiftIdentifiedD0_p_tcfc5errorL_AA0aD18SpecificationError031_4CCAA76E7E10AD323897DB1DE9DFF0N0LLOvp"}], "key.typename": "(FritzVisionStyleModel.Type) -> (SwiftIdentifiedModel) -> FritzVisionStyleModel", "key.typeusr": "$S5model25FritzVisionStyleModelBase0bcdE0C0b7ManagedE0015SwiftIdentifiedE0_p_tcD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)initWithModel:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S25FritzVisionStyleModelBase0abcD0CmD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModel) public class FritzVisionStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3261}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3237}], "key.bodylength": 4306, "key.bodyoffset": 3301, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.kind": "source.lang.swift.decl.extension", "key.length": 4340, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 3278, "key.offset": 3268, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = default, completion: @escaping (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3667}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3628}], "key.bodylength": 330, "key.bodyoffset": 3825, "key.doc.column": 17, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, completion: @escaping (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift\" line=\"116\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, completion: @escaping (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 317, "key.docoffset": 3307, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 482, "key.name": "predict(_:options:completion:)", "key.namelength": 144, "key.nameoffset": 3679, "key.offset": 3674, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: @escaping (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 116, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:queue:completion:\">predict(_:options:queue:completion:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStyleModel) -> (FritzVisionImage, FritzVisionStyleModelOptions, @escaping (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_0cD14StyleModelBase0cdfG7OptionsCySo11CVBufferRefaSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:completion:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = default, queue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, completion: @escaping (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7227}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 7182}], "key.bodylength": 198, "key.bodyoffset": 7407, "key.doc.column": 17, "key.doc.comment": "Run prediction on a style transfer model asynchronously on the given queue.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - queue: DispatchQueue to run prediction on.  This will run as an async request on the queue.\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, queue: DispatchQueue, completion: @escaping (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift\" line=\"188\" column=\"17\"><Name>predict(_:options:queue:completion:)</Name><USR>c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:queue:completion:</USR><Declaration>@objc(predict:options:queue:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = default, queue: DispatchQueue, completion: @escaping (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction on a style transfer model asynchronously on the given queue.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>queue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>DispatchQueue to run prediction on.  This will run as an async request on the queue.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 188, "key.doc.name": "predict(_:options:queue:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "DispatchQueue to run prediction on.  This will run as an async request on the queue."}], "name": "queue"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 419, "key.docoffset": 6759, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelBase/FritzVisionStyleModelBase.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:queue:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>queue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 372, "key.name": "predict(_:options:queue:completion:)", "key.namelength": 166, "key.nameoffset": 7239, "key.offset": 7234, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), queue: DispatchQueue, completion: @escaping (CVPixelBuffer?, Error?) -> Void)", "key.parsed_scope.end": 194, "key.parsed_scope.start": 188, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:completion:\">predict(_:options:completion:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStyleModel) -> (FritzVisionImage, FritzVisionStyleModelOptions, DispatchQueue, @escaping (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options5queue10completiony11FritzVision0dE5ImageC_0dE14StyleModelBase0degH7OptionsCSo012OS_dispatch_B0CySo11CVBufferRefaSg_s5Error_pSgtctcD", "key.usr": "c:@CM@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel(im)predict:options:queue:completion:"}], "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$S25FritzVisionStyleModelBase0abcD0CmD", "key.usr": "c:@M@FritzVisionStyleModelBase@objc(cs)FritzVisionStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7078, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModelOptions) public class FritzVisionSegmentationModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 289}], "key.bodylength": 382, "key.bodyoffset": 392, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 382}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 436, "key.name": "FritzVisionSegmentationModelOptions", "key.namelength": 35, "key.nameoffset": 345, "key.offset": 339, "key.parsed_declaration": "public class FritzVisionSegmentationModelOptions: NSObject", "key.parsed_scope.end": 33, "key.parsed_scope.start": 18, "key.runtime_name": "FritzVisionSegmentationModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 435}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 429}], "key.doc.column": 22, "key.doc.comment": "Crop and scale option.", "key.doc.declaration": "@objc public let imageCropAndScaleOption: FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift\" line=\"21\" column=\"22\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public let imageCropAndScaleOption: FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 398, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 446, "key.offset": 442, "key.parsed_declaration": "@objc public let imageCropAndScaleOption: FritzVisionCropAndScale", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$S11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) override public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 526}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 517}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 501}], "key.bodylength": 56, "key.bodyoffset": 541, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 533, "key.offset": 533, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "override public init()", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(im)initWithCropAndScale:\">init(cropAndScaleOption:)</RelatedName>"}], "key.typename": "(FritzVisionSegmentationModelOptions.Type) -> () -> FritzVisionSegmentationModelOptions", "key.typeusr": "$S28FritzVisionSegmentationModel0abcD7OptionsCycD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithCropAndScale:) public init(cropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> = default)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 637}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 604}], "key.bodylength": 63, "key.bodyoffset": 709, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithCropAndScale:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>cropAndScaleOption</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "init(cropAndScaleOption:)", "key.namelength": 63, "key.nameoffset": 644, "key.offset": 644, "key.parsed_declaration": "public init(cropAndScaleOption: FritzVisionCropAndScale = .centerCrop)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(im)init\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModelOptions.Type) -> (FritzVisionCropAndScale) -> FritzVisionSegmentationModelOptions", "key.typeusr": "$S18cropAndScaleOption28FritzVisionSegmentationModel0efgH7OptionsC0eF00ef4CropbC0O_tcD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions(im)initWithCropAndScale:"}], "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$S28FritzVisionSegmentationModel0abcD7OptionsCmD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelSegmentationClass) public class ModelSegmentationClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 807}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 777}], "key.bodylength": 345, "key.bodyoffset": 854, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 844}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelSegmentationClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelSegmentationClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 386, "key.name": "ModelSegmentationClass", "key.namelength": 22, "key.nameoffset": 820, "key.offset": 814, "key.parsed_declaration": "public class ModelSegmentationClass: NSObject", "key.parsed_scope.end": 51, "key.parsed_scope.start": 36, "key.runtime_name": "ModelSegmentationClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 908}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 902}], "key.doc.column": 22, "key.doc.comment": "Index in output array from model.", "key.doc.declaration": "@objc public let index: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift\" line=\"39\" column=\"22\"><Name>index</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass(py)index</USR><Declaration>@objc public let index: Int</Declaration><CommentParts><Abstract><Para>Index in output array from model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "index", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 860, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 919, "key.offset": 915, "key.parsed_declaration": "@objc public let index: Int", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass(py)index"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 990}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 984}], "key.doc.column": 22, "key.doc.comment": "Label name for Model Segmentation Class.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift\" line=\"42\" column=\"22\"><Name>label</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Label name for Model Segmentation Class.</Para></Abstract></CommentParts></Other>", "key.doc.line": 42, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 935, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 1001, "key.offset": 997, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let color: <Type usr=\"s:28FritzVisionSegmentationModel9rgbaValuea\">rgbaValue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1020}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.typealias usr=\"s:28FritzVisionSegmentationModel9rgbaValuea\">rgbaValue</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 1031, "key.offset": 1027, "key.parsed_declaration": "public let color: rgbaValue", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.typeusr": "$Ss5UInt8V1r_AB1gAB1bAB1atD", "key.usr": "s:28FritzVisionSegmentationModel0dC5ClassC5colors5UInt8V1r_AF1gAF1bAF1atvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"s:SS\">String</Type>, index: <Type usr=\"s:Si\">Int</Type>, color: <Type usr=\"s:28FritzVisionSegmentationModel9rgbaValuea\">rgbaValue</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1053}], "key.bodylength": 86, "key.bodyoffset": 1111, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:28FritzVisionSegmentationModel9rgbaValuea\">rgbaValue</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 138, "key.name": "init(label:index:color:)", "key.namelength": 49, "key.nameoffset": 1060, "key.offset": 1060, "key.parsed_declaration": "public init(label: String, index: Int, color: rgbaValue)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(ModelSegmentationClass.Type) -> (String, Int, (r: UInt8, g: UInt8, b: UInt8, a: UInt8)) -> ModelSegmentationClass", "key.typeusr": "$S5label5index5color28FritzVisionSegmentationModel0gF5ClassCSS_Sis5UInt8V1r_AH1gAH1bAH1attcD", "key.usr": "s:28FritzVisionSegmentationModel0dC5ClassC5label5index5colorACSS_Sis5UInt8V1r_AH1gAH1bAH1attcfc"}], "key.typename": "ModelSegmentationClass.Type", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCmD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModel) open class FritzVisionSegmentationModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 1300}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1239}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1239}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1239}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1239}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1203}], "key.bodylength": 5045, "key.bodyoffset": 1351, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1341}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 5092, "key.name": "FritzVisionSegmentationModel", "key.namelength": 28, "key.nameoffset": 1311, "key.offset": 1305, "key.parsed_declaration": "open class FritzVisionSegmentationModel: NSObject", "key.parsed_scope.end": 170, "key.parsed_scope.start": 56, "key.runtime_name": "FritzVisionSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1409}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1403}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 1420, "key.offset": 1416, "key.parsed_declaration": "@objc public let name: String", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "String", "key.typeusr": "$SSSD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel(py)name"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1444}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1438}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 1455, "key.offset": 1451, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay28FritzVisionSegmentationModel0dC5ClassCGD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1494}], "key.bodylength": 96, "key.bodyoffset": 1585, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 181, "key.name": "init(model:name:classes:)", "key.namelength": 82, "key.nameoffset": 1501, "key.offset": 1501, "key.parsed_declaration": "public init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 68, "key.parsed_scope.start": 64, "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (SwiftIdentifiedModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$S5model4name7classes28FritzVisionSegmentationModelADC0d7ManagedG0015SwiftIdentifiedG0_p_SSSayAD0gF5ClassCGtcD", "key.usr": "s:28FritzVisionSegmentationModelAAC5model4name7classesAB0a7ManagedD0015SwiftIdentifiedD0_p_SSSayAA0dC5ClassCGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var pendingAsyncPredictions: <Type usr=\"s:Si\">Int</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1751}], "key.bodylength": 247, "key.bodyoffset": 1792, "key.doc.column": 16, "key.doc.comment": "Number of predictions waiting to be run asynchronously", "key.doc.declaration": "public var pendingAsyncPredictions: Int { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift\" line=\"71\" column=\"16\"><Name>pendingAsyncPredictions</Name><USR>s:28FritzVisionSegmentationModelAAC23pendingAsyncPredictionsSivp</USR><Declaration>public var pendingAsyncPredictions: Int { get set }</Declaration><CommentParts><Abstract><Para>Number of predictions waiting to be run asynchronously</Para></Abstract></CommentParts></Other>", "key.doc.line": 71, "key.doc.name": "pendingAsyncPredictions", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 1688, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pendingAsyncPredictions</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 282, "key.name": "pendingAsyncPredictions", "key.namelength": 23, "key.nameoffset": 1762, "key.offset": 1758, "key.parsed_declaration": "public var pendingAsyncPredictions: Int", "key.parsed_scope.end": 80, "key.parsed_scope.start": 71, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:28FritzVisionSegmentationModelAAC23pendingAsyncPredictionsSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type> = default, completion: (<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4563}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4524}], "key.bodylength": 331, "key.bodyoffset": 4734, "key.doc.column": 17, "key.doc.comment": "Run image segmentation on a FritzVisionImage.\n\n- Parameters:\n  - fritzImage: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = default, completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift\" line=\"141\" column=\"17\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = default, completion: (FritzVisionSegmentationResult?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>fritzImage</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 141, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "fritzImage"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 321, "key.docoffset": 4199, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>fritzImage</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 496, "key.name": "predict(_:options:completion:)", "key.namelength": 157, "key.nameoffset": 4575, "key.offset": 4570, "key.parsed_declaration": "public func predict(_ fritzImage: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.parsed_scope.end": 148, "key.parsed_scope.start": 141, "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel) -> (FritzVisionImage, FritzVisionSegmentationModelOptions, (FritzVisionSegmentationResult?, Error?) -> ()) -> ()", "key.typeusr": "$S_7options10completiony11FritzVision0cD5ImageC_0cD17SegmentationModel0cdfG7OptionsCyAF0cdF6ResultCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:"}], "key.typename": "FritzVisionSegmentationModel.Type", "key.typeusr": "$S28FritzVisionSegmentationModelAACmD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias rgbaValue = (r: <Type usr=\"s:s5UInt8V\">UInt8</Type>, g: <Type usr=\"s:s5UInt8V\">UInt8</Type>, b: <Type usr=\"s:s5UInt8V\">UInt8</Type>, a: <Type usr=\"s:s5UInt8V\">UInt8</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7008}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>rgbaValue</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>r</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>g</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>b</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>a</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 62, "key.name": "rgbaValue", "key.namelength": 9, "key.nameoffset": 7025, "key.offset": 7015, "key.parsed_declaration": "public typealias rgbaValue = (r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.parsed_scope.end": 198, "key.parsed_scope.start": 198, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8).Type", "key.typeusr": "$Ss5UInt8V1r_AB1gAB1bAB1atmD", "key.usr": "s:28FritzVisionSegmentationModel9rgbaValuea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9032, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationResult) public class FritzVisionSegmentationResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 371}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 334}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 273}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 273}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 273}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 273}], "key.bodylength": 8140, "key.bodyoffset": 425, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 415}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 8188, "key.name": "FritzVisionSegmentationResult", "key.namelength": 29, "key.nameoffset": 384, "key.offset": 378, "key.parsed_declaration": "public class FritzVisionSegmentationResult: NSObject", "key.parsed_scope.end": 183, "key.parsed_scope.start": 17, "key.runtime_name": "FritzVisionSegmentationResult", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 475}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 469}], "key.doc.column": 22, "key.doc.comment": "Height of model output array.", "key.doc.declaration": "@objc public let height: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"20\" column=\"22\"><Name>height</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)height</USR><Declaration>@objc public let height: Int</Declaration><CommentParts><Abstract><Para>Height of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "height", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 431, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 15, "key.name": "height", "key.namelength": 6, "key.nameoffset": 486, "key.offset": 482, "key.parsed_declaration": "@objc public let height: Int", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)height"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 546}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 540}], "key.doc.column": 22, "key.doc.comment": "Width of model output array.", "key.doc.declaration": "@objc public let width: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"23\" column=\"22\"><Name>width</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)width</USR><Declaration>@objc public let width: Int</Declaration><CommentParts><Abstract><Para>Width of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "width", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 503, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "width", "key.namelength": 5, "key.nameoffset": 557, "key.offset": 553, "key.parsed_declaration": "@objc public let width: Int", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)width"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 602}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 596}], "key.doc.column": 22, "key.doc.comment": "Model classes.", "key.doc.declaration": "@objc public let classes: [ModelSegmentationClass]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"26\" column=\"22\"><Name>classes</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)classes</USR><Declaration>@objc public let classes: [ModelSegmentationClass]</Declaration><CommentParts><Abstract><Para>Model classes.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "classes", "key.doc.type": "Other", "key.doclength": 19, "key.docoffset": 573, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 613, "key.offset": 609, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay28FritzVisionSegmentationModel0dC5ClassCGD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let predictionResult: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 707}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 701}], "key.doc.column": 22, "key.doc.comment": "Raw MLMultiArray result from prediction.", "key.doc.declaration": "@objc public let predictionResult: MLMultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"29\" column=\"22\"><Name>predictionResult</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)predictionResult</USR><Declaration>@objc public let predictionResult: MLMultiArray</Declaration><CommentParts><Abstract><Para>Raw MLMultiArray result from prediction.</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "predictionResult", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 652, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictionResult</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "predictionResult", "key.namelength": 16, "key.nameoffset": 718, "key.offset": 714, "key.parsed_declaration": "@objc public let predictionResult: MLMultiArray", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "MLMultiArray", "key.typeusr": "$SSo12MLMultiArrayCD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(py)predictionResult"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getMaxIndices:) public func getMaxIndices(minThreshold: <Type usr=\"s:Sd\">Double</Type> = default) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3139}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 3113}], "key.bodylength": 394, "key.bodyoffset": 3205, "key.doc.column": 17, "key.doc.comment": "Create 2D-Array same size as the model output with each point representing most likely class.\n\n- Parameters:\n  - minThreshold: Only include classes that have a probability greater than the minThreshold.", "key.doc.declaration": "@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = default) -> [Int32]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"92\" column=\"17\"><Name>getMaxIndices(minThreshold:)</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:</USR><Declaration>@objc(getMaxIndices:) public func getMaxIndices(minThreshold: Double = default) -&gt; [Int32]</Declaration><CommentParts><Abstract><Para>Create 2D-Array same size as the model output with each point representing most likely class.</Para></Abstract><Parameters><Parameter><Name>minThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Only include classes that have a probability greater than the minThreshold.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 92, "key.doc.name": "getMaxIndices(minThreshold:)", "key.doc.parameters": [{"discussion": [{"Para": "Only include classes that have a probability greater than the minThreshold."}], "name": "minThreshold"}], "key.doc.type": "Function", "key.doclength": 230, "key.docoffset": 2879, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getMaxIndices:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getMaxIndices</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 454, "key.name": "getMaxIndices(minThreshold:)", "key.namelength": 41, "key.nameoffset": 3151, "key.offset": 3146, "key.parsed_declaration": "public func getMaxIndices(minThreshold: Double = 0.0) -> [Int32]", "key.parsed_scope.end": 99, "key.parsed_scope.start": 92, "key.substructure": [{"key.annotated_decl": "<Declaration>let pixelCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelCount", "key.namelength": 10, "key.nameoffset": 3218, "key.offset": 3214, "key.parsed_declaration": "let pixelCount = height * width", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "Int", "key.typeusr": "$SSiD", "key.usr": "s:28FritzVisionSegmentationModel0abC6ResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF10pixelCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 3258, "key.offset": 3254, "key.parsed_declaration": "var bytes = [Float](repeating: 0, count: pixelCount * classes.count)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "[Float]", "key.typeusr": "$SSaySfGD", "key.usr": "s:28FritzVisionSegmentationModel0abC6ResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF5bytesL_SaySfGvp"}, {"key.annotated_decl": "<Declaration>var reducedMask: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>reducedMask</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "reducedMask", "key.namelength": 11, "key.nameoffset": 3335, "key.offset": 3331, "key.parsed_declaration": "var reducedMask = [Int32](repeating: 0, count: pixelCount)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "[Int32]", "key.typeusr": "$SSays5Int32VGD", "key.usr": "s:28FritzVisionSegmentationModel0abC6ResultC13getMaxIndices12minThresholdSays5Int32VGSd_tF11reducedMaskL_AHvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double) -> [Int32]", "key.typeusr": "$S12minThresholdSays5Int32VGSd_tcD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)getMaxIndices:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(toImageMask:alpha:) public func toImageMask(minThreshold: <Type usr=\"s:Sd\">Double</Type> = default, alpha: <Type usr=\"s:s5UInt8V\">UInt8</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5475}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 5445}], "key.bodylength": 121, "key.bodyoffset": 5560, "key.doc.column": 17, "key.doc.comment": "Generate UIImage mask from most likely class at each pixel.\n\nThe generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.\n\n- Parameters:\n  - minThreshold: Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability.\n  - alpha: Alpha value of the color (0-255) for detected classes. By default completely opaque.", "key.doc.declaration": "@objc(toImageMask:alpha:) public func toImageMask(minThreshold: Double = default, alpha: UInt8 = default) -> UIImage?", "key.doc.discussion": [{"Para": "The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"131\" column=\"17\"><Name>toImageMask(minThreshold:alpha:)</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:</USR><Declaration>@objc(toImageMask:alpha:) public func toImageMask(minThreshold: Double = default, alpha: UInt8 = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Generate UIImage mask from most likely class at each pixel.</Para></Abstract><Parameters><Parameter><Name>minThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability.</Para></Discussion></Parameter><Parameter><Name>alpha</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Alpha value of the color (0-255) for detected classes. By default completely opaque.</Para></Discussion></Parameter></Parameters><Discussion><Para>The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.</Para></Discussion></CommentParts></Function>", "key.doc.line": 131, "key.doc.name": "toImageMask(minThreshold:alpha:)", "key.doc.parameters": [{"discussion": [{"Para": "Minimum threshold value needed to count. By default zero.  You can set this property to filter out classes that may be the most likely but still have a lower probability."}], "name": "minThreshold"}, {"discussion": [{"Para": "Alpha value of the color (0-255) for detected classes. By default completely opaque."}], "name": "alpha"}], "key.doc.type": "Function", "key.doclength": 593, "key.docoffset": 4848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(toImageMask:alpha:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageMask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>minThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alpha</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 200, "key.name": "toImageMask(minThreshold:alpha:)", "key.namelength": 59, "key.nameoffset": 5487, "key.offset": 5482, "key.parsed_declaration": "public func toImageMask(minThreshold: Double = 0.0, alpha: UInt8 = 255) -> UIImage?", "key.parsed_scope.end": 135, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask33_440042E40014A67F04A2120FEB0D8301LL3for5color5alphaSo7UIImageCSgSaySfG_s5UInt8V1r_AN1gAN1bAN1atANtF\">toImageMask(for:color:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask33_440042E40014A67F04A2120FEB0D8301LL3for5alphaSo7UIImageCSgSays5Int32VG_s5UInt8VtF\">toImageMask(for:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:\">toImageMask(of:threshold:alpha:minThresholdAccepted:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let array: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 53, "key.name": "array", "key.namelength": 5, "key.nameoffset": 5573, "key.offset": 5569, "key.parsed_declaration": "let array = getMaxIndices(minThreshold: minThreshold)", "key.parsed_scope.end": 132, "key.parsed_scope.start": 132, "key.typename": "[Int32]", "key.typeusr": "$SSays5Int32VGD", "key.usr": "s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask12minThreshold5alphaSo7UIImageCSgSd_s5UInt8VtF5arrayL_Says5Int32VGvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double, UInt8) -> UIImage?", "key.typeusr": "$S12minThreshold5alphaSo7UIImageCSgSd_s5UInt8VtcD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>, threshold: <Type usr=\"s:Sd\">Double</Type> = default, alpha: <Type usr=\"s:s5UInt8V\">UInt8</Type> = default, minThresholdAccepted: <Type usr=\"s:Sd\">Double</Type> = default) -&gt; <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8209}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 56, "key.offset": 8148}], "key.bodylength": 195, "key.bodyoffset": 8368, "key.doc.column": 17, "key.doc.comment": "Generate UIImage mask of given class, filtering out values below threshold.\n\nThe generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.\n\n- Parameters:\n  - segmentClass: Class to mask.\n  - threshold: Probability to filter.  Any probabilities below this value will be filtered out.\n  - alpha: Alpha value of the color (0-255) for detected classes.\n  - minThresholdAccepted: Any confidence score below this value will have an alpha of 0. Class confidence scores between `minThresholdAccepted` and `threshold` will retain their original value.", "key.doc.declaration": "@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = default, alpha: UInt8 = default, minThresholdAccepted: Double = default) -> UIImage?", "key.doc.discussion": [{"Para": "The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift\" line=\"179\" column=\"17\"><Name>toImageMask(of:threshold:alpha:minThresholdAccepted:)</Name><USR>c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:</USR><Declaration>@objc(toImageMask:threshold:alpha:minThresholdAccepted:) public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = default, alpha: UInt8 = default, minThresholdAccepted: Double = default) -&gt; UIImage?</Declaration><CommentParts><Abstract><Para>Generate UIImage mask of given class, filtering out values below threshold.</Para></Abstract><Parameters><Parameter><Name>segmentClass</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Class to mask.</Para></Discussion></Parameter><Parameter><Name>threshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Probability to filter.  Any probabilities below this value will be filtered out.</Para></Discussion></Parameter><Parameter><Name>alpha</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Alpha value of the color (0-255) for detected classes.</Para></Discussion></Parameter><Parameter><Name>minThresholdAccepted</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Any confidence score below this value will have an alpha of 0. Class confidence scores between <codeVoice>minThresholdAccepted</codeVoice> and <codeVoice>threshold</codeVoice> will retain their original value.</Para></Discussion></Parameter></Parameters><Discussion><Para>The generated image size will fit the original image passed into prediction, applying rotation.  If the image was center cropped, will return an image that covers the cropped image.</Para></Discussion></CommentParts></Function>", "key.doc.line": 179, "key.doc.name": "toImageMask(of:threshold:alpha:minThresholdAccepted:)", "key.doc.parameters": [{"discussion": [{"Para": "Class to mask."}], "name": "segmentClass"}, {"discussion": [{"Para": "Probability to filter.  Any probabilities below this value will be filtered out."}], "name": "threshold"}, {"discussion": [{"Para": "Alpha value of the color (0-255) for detected classes."}], "name": "alpha"}, {"discussion": [{"Para": "Any confidence score below this value will have an alpha of 0. Class confidence scores between `minThresholdAccepted` and `threshold` will retain their original value."}], "name": "minThresholdAccepted"}], "key.doc.type": "Function", "key.doclength": 729, "key.docoffset": 7415, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(toImageMask:threshold:alpha:minThresholdAccepted:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toImageMask</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>segmentClass</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>threshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>alpha</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minThresholdAccepted</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = <syntaxtype.keyword>default</syntaxtype.keyword></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 348, "key.name": "toImageMask(of:threshold:alpha:minThresholdAccepted:)", "key.namelength": 133, "key.nameoffset": 8221, "key.offset": 8216, "key.parsed_declaration": "public func toImageMask(of segmentClass: ModelSegmentationClass, threshold: Double = 0.5, alpha: UInt8 = 255, minThresholdAccepted: Double = 0.5) -> UIImage?", "key.parsed_scope.end": 182, "key.parsed_scope.start": 179, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:alpha:\">toImageMask(minThreshold:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask33_440042E40014A67F04A2120FEB0D8301LL3for5color5alphaSo7UIImageCSgSaySfG_s5UInt8V1r_AN1gAN1bAN1atANtF\">toImageMask(for:color:alpha:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask33_440042E40014A67F04A2120FEB0D8301LL3for5alphaSo7UIImageCSgSays5Int32VG_s5UInt8VtF\">toImageMask(for:alpha:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let array: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSegmentationModel/FritzVisionSegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 101, "key.name": "array", "key.namelength": 5, "key.nameoffset": 8381, "key.offset": 8377, "key.parsed_declaration": "let array = thresholdClass(of: segmentClass, threshold: threshold, minAccepted: minThresholdAccepted)", "key.parsed_scope.end": 180, "key.parsed_scope.start": 180, "key.typename": "[Float]", "key.typeusr": "$SSaySfGD", "key.usr": "s:28FritzVisionSegmentationModel0abC6ResultC11toImageMask2of9threshold5alpha20minThresholdAcceptedSo7UIImageCSgAA0dC5ClassC_Sds5UInt8VSdtF5arrayL_SaySfGvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (ModelSegmentationClass, Double, UInt8, Double) -> UIImage?", "key.typeusr": "$S2of9threshold5alpha20minThresholdAcceptedSo7UIImageCSg28FritzVisionSegmentationModel0kJ5ClassC_Sds5UInt8VSdtcD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult(im)toImageMask:threshold:alpha:minThresholdAccepted:"}], "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$S28FritzVisionSegmentationModel0abC6ResultCmD", "key.usr": "c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationResult"}, {"key.annotated_decl": "<Declaration>class UIImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</Type></Declaration>", "key.bodylength": 443, "key.bodyoffset": 8587, "key.filepath": "/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS12.1.sdk/System/Library/Frameworks/UIKit.framework/Headers/UIImage.h", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>UIImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"c:objc(pl)NSSecureCoding\">NSSecureCoding</ref.protocol></decl.class>", "key.is_system": true, "key.kind": "source.lang.swift.decl.extension", "key.length": 463, "key.modulename": "UIKit.UIImage", "key.name": "UIImage", "key.namelength": 7, "key.nameoffset": 8578, "key.offset": 8568, "key.substructure": [], "key.typename": "UIImage.Type", "key.typeusr": "$SSo7UIImageCmD", "key.usr": "c:objc(cs)UIImage"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1329, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 292}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 262}], "key.bodylength": 367, "key.bodyoffset": 339, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 329}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 408, "key.name": "FritzVisionPeopleClass", "key.namelength": 22, "key.nameoffset": 305, "key.offset": 299, "key.parsed_declaration": "public class FritzVisionPeopleClass: NSObject", "key.parsed_scope.end": 22, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPeopleClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 350}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 344}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 368, "key.offset": 357, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 454}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 448}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "person", "key.namelength": 6, "key.nameoffset": 472, "key.offset": 461, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 1, color: (0, 0, 0, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 565}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 559}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 132, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 583, "key.offset": 572, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay28FritzVisionSegmentationModel0dC5ClassCGD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleClass.Type", "key.typeusr": "$S34FritzVisionPeopleSegmentationModel0abC5ClassCmD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModel) public class FritzVisionPeopleSegmentationModel : <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1099}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1057}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1033}], "key.bodylength": 149, "key.bodyoffset": 1178, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 1148}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 222, "key.name": "FritzVisionPeopleSegmentationModel", "key.namelength": 34, "key.nameoffset": 1112, "key.offset": 1106, "key.parsed_declaration": "public class FritzVisionPeopleSegmentationModel: FritzVisionSegmentationModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 33, "key.runtime_name": "FritzVisionPeopleSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1204}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 1188}], "key.bodylength": 106, "key.bodyoffset": 1219, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModel/FritzVisionPeopleSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 115, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1211, "key.offset": 1211, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModel.Type) -> () -> FritzVisionPeopleSegmentationModel", "key.typeusr": "$S34FritzVisionPeopleSegmentationModelAACycD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleSegmentationModel(im)init"}], "key.typename": "FritzVisionPeopleSegmentationModel.Type", "key.typeusr": "$S34FritzVisionPeopleSegmentationModelAACmD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModel@objc(cs)FritzVisionPeopleSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2839, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomClass) public class FritzVisionLivingRoomClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 304}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 270}], "key.bodylength": 1847, "key.bodyoffset": 355, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 345}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1892, "key.name": "FritzVisionLivingRoomClass", "key.namelength": 26, "key.nameoffset": 317, "key.offset": 311, "key.parsed_declaration": "public class FritzVisionLivingRoomClass: NSObject", "key.parsed_scope.end": 39, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionLivingRoomClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 366}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 360}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 384, "key.offset": 373, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let chair: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 470}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 464}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>chair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 94, "key.name": "chair", "key.namelength": 5, "key.nameoffset": 488, "key.offset": 477, "key.parsed_declaration": "@objc public static let chair = ModelSegmentationClass(label: \"Chair\", index: 1, color: (0, 128, 128, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)chair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let wall: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 582}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 576}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wall</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "wall", "key.namelength": 4, "key.nameoffset": 600, "key.offset": 589, "key.parsed_declaration": "@objc public static let wall = ModelSegmentationClass(label: \"Wall\", index: 2, color: (0, 0, 128, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)wall"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let coffeeTable: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 690}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 684}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>coffeeTable</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "coffeeTable", "key.namelength": 11, "key.nameoffset": 708, "key.offset": 697, "key.parsed_declaration": "@objc public static let coffeeTable = ModelSegmentationClass(label: \"Coffee Table\", index: 3, color: (230, 25, 75, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)coffeeTable"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ceiling: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 815}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 809}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ceiling</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "ceiling", "key.namelength": 7, "key.nameoffset": 833, "key.offset": 822, "key.parsed_declaration": "@objc public static let ceiling = ModelSegmentationClass(label: \"Ceiling\", index: 4, color: (255, 215, 180, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)ceiling"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let floor: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 933}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 927}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>floor</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "floor", "key.namelength": 5, "key.nameoffset": 951, "key.offset": 940, "key.parsed_declaration": "@objc public static let floor = ModelSegmentationClass(label: \"Floor\", index: 5, color: (245, 130, 48, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)floor"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bed: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1046}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1040}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bed</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "bed", "key.namelength": 3, "key.nameoffset": 1064, "key.offset": 1053, "key.parsed_declaration": "@objc public static let bed = ModelSegmentationClass(label: \"Bed\", index: 6, color: (255, 255, 25, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)bed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let lamp: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1155}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1149}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lamp</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "lamp", "key.namelength": 4, "key.nameoffset": 1173, "key.offset": 1162, "key.parsed_declaration": "@objc public static let lamp = ModelSegmentationClass(label: \"Lamp\", index: 7, color: (210, 245, 60, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)lamp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sofa: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1266}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1260}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sofa</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "sofa", "key.namelength": 4, "key.nameoffset": 1284, "key.offset": 1273, "key.parsed_declaration": "@objc public static let sofa = ModelSegmentationClass(label: \"Sofa, couch, lounge\", index: 8, color: (70, 240, 240, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)sofa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let windowpane: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1392}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1386}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>windowpane</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 104, "key.name": "windowpane", "key.namelength": 10, "key.nameoffset": 1410, "key.offset": 1399, "key.parsed_declaration": "@objc public static let windowpane = ModelSegmentationClass(label: \"Windowpane\", index: 9, color: (0, 130, 200, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)windowpane"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pillow: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1514}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1508}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pillow</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "pillow", "key.namelength": 6, "key.nameoffset": 1532, "key.offset": 1521, "key.parsed_declaration": "@objc public static let pillow = ModelSegmentationClass(label: \"Pillow\", index: 10, color: (145, 30, 180, 255))", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)pillow"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1631}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1625}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 563, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 1649, "key.offset": 1638, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay28FritzVisionSegmentationModel0dC5ClassCGD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass(cpy)allClasses"}], "key.typename": "FritzVisionLivingRoomClass.Type", "key.typeusr": "$S38FritzVisionLivingRoomSegmentationModel0abcD5ClassCmD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModel) public class FritzVisionLivingRoomSegmentationModel : <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2611}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 2565}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2541}], "key.bodylength": 143, "key.bodyoffset": 2694, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 2664}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 220, "key.name": "FritzVisionLivingRoomSegmentationModel", "key.namelength": 38, "key.nameoffset": 2624, "key.offset": 2618, "key.parsed_declaration": "public class FritzVisionLivingRoomSegmentationModel: FritzVisionSegmentationModel", "key.parsed_scope.end": 58, "key.parsed_scope.start": 51, "key.runtime_name": "FritzVisionLivingRoomSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2700}], "key.bodylength": 118, "key.bodyoffset": 2715, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModel/FritzVisionLivingRoomSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 2707, "key.offset": 2707, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 55, "key.parsed_scope.start": 53, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModel.Type) -> () -> FritzVisionLivingRoomSegmentationModel", "key.typeusr": "$S38FritzVisionLivingRoomSegmentationModelAACycD", "key.usr": "s:38FritzVisionLivingRoomSegmentationModelAACABycfc"}], "key.typename": "FritzVisionLivingRoomSegmentationModel.Type", "key.typeusr": "$S38FritzVisionLivingRoomSegmentationModelAACmD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModel@objc(cs)FritzVisionLivingRoomSegmentationModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4265, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorClass) public class FritzVisionOutdoorClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 229}], "key.bodylength": 3354, "key.bodyoffset": 308, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 298}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3396, "key.name": "FritzVisionOutdoorClass", "key.namelength": 23, "key.nameoffset": 273, "key.offset": 267, "key.parsed_declaration": "public class FritzVisionOutdoorClass: NSObject", "key.parsed_scope.end": 59, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionOutdoorClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 319}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 313}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 86, "key.name": "none", "key.namelength": 4, "key.nameoffset": 337, "key.offset": 326, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(label: \"None\", index: 0, color: (0, 0, 0, 0))", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let building: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 423}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 417}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>building</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 100, "key.name": "building", "key.namelength": 8, "key.nameoffset": 441, "key.offset": 430, "key.parsed_declaration": "@objc public static let building = ModelSegmentationClass(label: \"Building\", index: 1, color: (60, 180, 75, 255))", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)building"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 535}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 559, "key.offset": 548, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(label: \"Sky\", index: 2, color: (255, 225, 25, 255))", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let tree: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 650}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 644}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tree</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "tree", "key.namelength": 4, "key.nameoffset": 668, "key.offset": 657, "key.parsed_declaration": "@objc public static let tree = ModelSegmentationClass(label: \"Tree\", index: 3, color: (0, 130, 200, 255))", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)tree"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sidewalk: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 754}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sidewalk</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 101, "key.name": "sidewalk", "key.namelength": 8, "key.nameoffset": 778, "key.offset": 767, "key.parsed_declaration": "@objc public static let sidewalk = ModelSegmentationClass(label: \"Sidewalk\", index: 4, color: (245, 130, 48, 255))", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)sidewalk"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ground: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 879}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 873}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ground</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "ground", "key.namelength": 6, "key.nameoffset": 897, "key.offset": 886, "key.parsed_declaration": "@objc public static let ground = ModelSegmentationClass(label: \"Ground\", index: 5, color: (145, 30, 180, 255))", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)ground"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let car: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 994}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 988}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>car</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "car", "key.namelength": 3, "key.nameoffset": 1012, "key.offset": 1001, "key.parsed_declaration": "@objc public static let car = ModelSegmentationClass(label: \"Car\", index: 6, color: (70, 240, 240, 255))", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)car"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let water: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1103}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1097}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>water</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "water", "key.namelength": 5, "key.nameoffset": 1121, "key.offset": 1110, "key.parsed_declaration": "@objc public static let water = ModelSegmentationClass(label: \"Water\", index: 7, color: (240, 50, 230, 255))", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)water"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let house: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1216}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1210}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>house</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 95, "key.name": "house", "key.namelength": 5, "key.nameoffset": 1234, "key.offset": 1223, "key.parsed_declaration": "@objc public static let house = ModelSegmentationClass(label: \"House\", index: 8, color: (210, 245, 60, 255))", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)house"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let fence: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1329}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1323}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fence</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 96, "key.name": "fence", "key.namelength": 5, "key.nameoffset": 1347, "key.offset": 1336, "key.parsed_declaration": "@objc public static let fence = ModelSegmentationClass(label: \"Fence\", index: 9, color: (250, 190, 190, 255))", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)fence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sign: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1443}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1437}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sign</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 93, "key.name": "sign", "key.namelength": 4, "key.nameoffset": 1461, "key.offset": 1450, "key.parsed_declaration": "@objc public static let sign = ModelSegmentationClass(label: \"Sign\", index: 10, color: (0, 128, 128, 255))", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)sign"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let skyscraper: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1554}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1548}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>skyscraper</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "skyscraper", "key.namelength": 10, "key.nameoffset": 1572, "key.offset": 1561, "key.parsed_declaration": "@objc public static let skyscraper = ModelSegmentationClass(label: \"Skyscraper\", index: 11, color: (230, 190, 255, 255))", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)skyscraper"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bridge: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1679}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1673}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bridge</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 98, "key.name": "bridge", "key.namelength": 6, "key.nameoffset": 1697, "key.offset": 1686, "key.parsed_declaration": "@objc public static let bridge = ModelSegmentationClass(label: \"Bridge\", index: 12, color: (170, 110, 40, 255))", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)bridge"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let river: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1795}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1789}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>river</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "river", "key.namelength": 5, "key.nameoffset": 1813, "key.offset": 1802, "key.parsed_declaration": "@objc public static let river = ModelSegmentationClass(label: \"River\", index: 13, color: (255, 250, 200, 255))", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)river"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bus: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1910}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1904}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 89, "key.name": "bus", "key.namelength": 3, "key.nameoffset": 1928, "key.offset": 1917, "key.parsed_declaration": "@objc public static let bus = ModelSegmentationClass(label: \"Bus\", index: 14, color: (128, 0, 0, 255))", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)bus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let truck: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2017}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2011}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>truck</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "truck", "key.namelength": 5, "key.nameoffset": 2035, "key.offset": 2024, "key.parsed_declaration": "@objc public static let truck = ModelSegmentationClass(label: \"Truck\", index: 15, color: (170, 255, 195, 255))", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)truck"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let van: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2132}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2126}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>van</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "van", "key.namelength": 3, "key.nameoffset": 2150, "key.offset": 2139, "key.parsed_declaration": "@objc public static let van = ModelSegmentationClass(label: \"Van\", index: 16, color: (128, 128, 0, 255))", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)van"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let motorbike: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2241}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2235}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>motorbike</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 105, "key.name": "motorbike", "key.namelength": 9, "key.nameoffset": 2259, "key.offset": 2248, "key.parsed_declaration": "@objc public static let motorbike = ModelSegmentationClass(label: \"Motorbike\", index: 17, color: (255, 215, 180, 255))", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)motorbike"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bicycle: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2364}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2358}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicycle</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 97, "key.name": "bicycle", "key.namelength": 7, "key.nameoffset": 2382, "key.offset": 2371, "key.parsed_declaration": "@objc public static let bicycle = ModelSegmentationClass(label: \"Bicycle\", index: 18, color: (0, 0, 128, 255))", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)bicycle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let trafficLight: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2479}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2473}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trafficLight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 112, "key.name": "trafficLight", "key.namelength": 12, "key.nameoffset": 2497, "key.offset": 2486, "key.parsed_declaration": "@objc public static let trafficLight = ModelSegmentationClass(label: \"Traffic light\", index: 19, color: (128, 128, 128, 255))", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)trafficLight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2609}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2603}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 99, "key.name": "person", "key.namelength": 6, "key.nameoffset": 2627, "key.offset": 2616, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(label: \"Person\", index: 20, color: (255, 255, 255, 255))", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "ModelSegmentationClass", "key.typeusr": "$S28FritzVisionSegmentationModel0dC5ClassCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2727}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2721}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 927, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 2745, "key.offset": 2734, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$SSay28FritzVisionSegmentationModel0dC5ClassCGD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass(cpy)allClasses"}], "key.typename": "FritzVisionOutdoorClass.Type", "key.typeusr": "$S35FritzVisionOutdoorSegmentationModel0abC5ClassCmD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModel) public class FritzVisionOutdoorSegmentationModel : <Type usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4053}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 4010}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3986}], "key.bodylength": 130, "key.bodyoffset": 4133, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 4103}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVisionSegmentationModel@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 204, "key.name": "FritzVisionOutdoorSegmentationModel", "key.namelength": 35, "key.nameoffset": 4066, "key.offset": 4060, "key.parsed_declaration": "public class FritzVisionOutdoorSegmentationModel: FritzVisionSegmentationModel", "key.parsed_scope.end": 76, "key.parsed_scope.start": 72, "key.runtime_name": "FritzVisionOutdoorSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4138}], "key.bodylength": 108, "key.bodyoffset": 4153, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModel/FritzVisionOutdoorSegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 117, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 4145, "key.offset": 4145, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 75, "key.parsed_scope.start": 73, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModel.Type) -> () -> FritzVisionOutdoorSegmentationModel", "key.typeusr": "$S35FritzVisionOutdoorSegmentationModelAACycD", "key.usr": "s:35FritzVisionOutdoorSegmentationModelAACABycfc"}], "key.typename": "FritzVisionOutdoorSegmentationModel.Type", "key.typeusr": "$S35FritzVisionOutdoorSegmentationModelAACmD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModel@objc(cs)FritzVisionOutdoorSegmentationModel"}]}}]