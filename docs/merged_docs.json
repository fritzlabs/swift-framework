[{"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8684, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum Response</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 269}], "key.bodylength": 96, "key.bodyoffset": 291, "key.doc.column": 13, "key.doc.comment": "Represents an HTTP response", "key.doc.declaration": "public enum Response", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"13\" column=\"13\"><Name>Response</Name><USR>s:9FritzCore8ResponseO</USR><Declaration>public enum Response</Declaration><CommentParts><Abstract><Para>Represents an HTTP response</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "Response", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 237, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>Response</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 112, "key.name": "Response", "key.namelength": 8, "key.nameoffset": 281, "key.offset": 276, "key.parsed_declaration": "public enum Response", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 294, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case success(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "success(data:)", "key.namelength": 19, "key.nameoffset": 299, "key.offset": 299, "key.parsed_declaration": "case success(data: Data)", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(Response.Type) -> (Data) -> Response", "key.typeusr": "$sy9FritzCore8ResponseO10Foundation4DataV_tcACmcD", "key.usr": "s:9FritzCore8ResponseO7successyAC10Foundation4DataV_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 321, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error(error: <Type usr=\"s:s5ErrorP\">Error</Type>, response: <Type usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</Type>?, data: <Type usr=\"s:10Foundation4DataV\">Data</Type>?)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>response</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSHTTPURLResponse\">HTTPURLResponse</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct>?</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 60, "key.name": "error(error:response:data:)", "key.namelength": 60, "key.nameoffset": 326, "key.offset": 326, "key.parsed_declaration": "case error(error: Error, response: HTTPURLResponse?, data: Data?)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(Response.Type) -> (Error, HTTPURLResponse?, Data?) -> Response", "key.typeusr": "$sy9FritzCore8ResponseOs5Error_p_So17NSHTTPURLResponseCSg10Foundation4DataVSgtcACmcD", "key.usr": "s:9FritzCore8ResponseO5erroryACs5Error_p_So17NSHTTPURLResponseCSg10Foundation4DataVSgtcACmF"}]}], "key.typename": "Response.Type", "key.typeusr": "$s9FritzCore8ResponseOmD", "key.usr": "s:9FritzCore8ResponseO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RequestError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 435}], "key.bodylength": 79, "key.bodyoffset": 468, "key.doc.column": 13, "key.doc.comment": "Represents an internal HTTP client error", "key.doc.declaration": "public enum RequestError : Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"19\" column=\"13\"><Name>RequestError</Name><USR>s:9FritzCore12RequestErrorO</USR><Declaration>public enum RequestError : Error</Declaration><CommentParts><Abstract><Para>Represents an internal HTTP client error</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "RequestError", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 390, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 461}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RequestError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 106, "key.name": "RequestError", "key.namelength": 12, "key.nameoffset": 447, "key.offset": 442, "key.parsed_declaration": "public enum RequestError: Error", "key.parsed_scope.end": 24, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 471, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidData</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidData</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "invalidData", "key.namelength": 11, "key.nameoffset": 476, "key.offset": 476, "key.parsed_declaration": "case invalidData", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO11invalidDatayA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 490, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidResponse</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidResponse</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "invalidResponse", "key.namelength": 15, "key.nameoffset": 495, "key.offset": 495, "key.parsed_declaration": "case invalidResponse", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO15invalidResponseyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 513, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidURL</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidURL</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "invalidURL", "key.namelength": 10, "key.nameoffset": 518, "key.offset": 518, "key.parsed_declaration": "case invalidURL", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10invalidURLyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 531, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case statusCode</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>statusCode</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "statusCode", "key.namelength": 10, "key.nameoffset": 536, "key.offset": 536, "key.parsed_declaration": "case statusCode", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(RequestError.Type) -> RequestError", "key.typeusr": "$sy9FritzCore12RequestErrorOACmcD", "key.usr": "s:9FritzCore12RequestErrorO10statusCodeyA2CmF"}]}], "key.typename": "RequestError.Type", "key.typeusr": "$s9FritzCore12RequestErrorOmD", "key.usr": "s:9FritzCore12RequestErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestCompletionHandler = (<Type usr=\"s:9FritzCore8ResponseO\">Response</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1331}], "key.doc.column": 18, "key.doc.comment": "Type to handle network request completion", "key.doc.declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"52\" column=\"18\"><Name>RequestCompletionHandler</Name><USR>s:9FritzCore24RequestCompletionHandlera</USR><Declaration>public typealias RequestCompletionHandler = (Response) -&gt; Void</Declaration><CommentParts><Abstract><Para>Type to handle network request completion</Para></Abstract></CommentParts></Other>", "key.doc.line": 52, "key.doc.name": "RequestCompletionHandler", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 1285, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestCompletionHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore8ResponseO\">Response</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 55, "key.name": "RequestCompletionHandler", "key.namelength": 24, "key.nameoffset": 1348, "key.offset": 1338, "key.parsed_declaration": "public typealias RequestCompletionHandler = (Response) -> Void", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "(Response) -> ().Type", "key.typeusr": "$sy9FritzCore8ResponseOcmD", "key.usr": "s:9FritzCore24RequestCompletionHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestOptions = [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1442}], "key.doc.column": 18, "key.doc.comment": "Type to represent request body/url options", "key.doc.declaration": "public typealias RequestOptions = [String : Any]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"55\" column=\"18\"><Name>RequestOptions</Name><USR>s:9FritzCore14RequestOptionsa</USR><Declaration>public typealias RequestOptions = [String : Any]</Declaration><CommentParts><Abstract><Para>Type to represent request body/url options</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "RequestOptions", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1395, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestOptions</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 40, "key.name": "RequestOptions", "key.namelength": 14, "key.nameoffset": 1459, "key.offset": 1449, "key.parsed_declaration": "public typealias RequestOptions = [String: Any]", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "[String : Any].Type", "key.typeusr": "$sSDySSypGmD", "key.usr": "s:9FritzCore14RequestOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias RequestHeaders = [<Type usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1529}], "key.doc.column": 18, "key.doc.comment": "Type to represent request headers", "key.doc.declaration": "public typealias RequestHeaders = [HTTPHeader : String]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"58\" column=\"18\"><Name>RequestHeaders</Name><USR>s:9FritzCore14RequestHeadersa</USR><Declaration>public typealias RequestHeaders = [HTTPHeader : String]</Declaration><CommentParts><Abstract><Para>Type to represent request headers</Para></Abstract></CommentParts></Other>", "key.doc.line": 58, "key.doc.name": "RequestHeaders", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1491, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>RequestHeaders</decl.name> = [<ref.enum usr=\"s:9FritzCore10HTTPHeaderO\">HTTPHeader</ref.enum> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "RequestHeaders", "key.namelength": 14, "key.nameoffset": 1546, "key.offset": 1536, "key.parsed_declaration": "public typealias RequestHeaders = [HTTPHeader: String]", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "[HTTPHeader : String].Type", "key.typeusr": "$sSDy9FritzCore10HTTPHeaderOSSGmD", "key.usr": "s:9FritzCore14RequestHeadersa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPMethod : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1609}], "key.bodylength": 85, "key.bodyoffset": 1641, "key.doc.column": 13, "key.doc.comment": "HTTP methods we use", "key.doc.declaration": "public enum HTTPMethod : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"61\" column=\"13\"><Name>HTTPMethod</Name><USR>s:9FritzCore10HTTPMethodO</USR><Declaration>public enum HTTPMethod : String</Declaration><CommentParts><Abstract><Para>HTTP methods we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 61, "key.doc.name": "HTTPMethod", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1585, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1633}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPMethod</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 111, "key.name": "HTTPMethod", "key.namelength": 10, "key.nameoffset": 1621, "key.offset": 1616, "key.parsed_declaration": "public enum HTTPMethod: String", "key.parsed_scope.end": 66, "key.parsed_scope.start": 61, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1644, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case get = &quot;GET&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 1655}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>get</decl.name> = <syntaxtype.string>&quot;GET&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "get", "key.namelength": 3, "key.nameoffset": 1649, "key.offset": 1649, "key.parsed_declaration": "case get = \"GET\"", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3getyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1663, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case post = &quot;POST&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 6, "key.offset": 1675}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>post</decl.name> = <syntaxtype.string>&quot;POST&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "post", "key.namelength": 4, "key.nameoffset": 1668, "key.offset": 1668, "key.parsed_declaration": "case post = \"POST\"", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO4postyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1684, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case put = &quot;PUT&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 5, "key.offset": 1695}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>put</decl.name> = <syntaxtype.string>&quot;PUT&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "put", "key.namelength": 3, "key.nameoffset": 1689, "key.offset": 1689, "key.parsed_declaration": "case put = \"PUT\"", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO3putyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1703, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case delete = &quot;DELETE&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 8, "key.offset": 1717}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>delete</decl.name> = <syntaxtype.string>&quot;DELETE&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "delete", "key.namelength": 6, "key.nameoffset": 1708, "key.offset": 1708, "key.parsed_declaration": "case delete = \"DELETE\"", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "(HTTPMethod.Type) -> HTTPMethod", "key.typeusr": "$sy9FritzCore10HTTPMethodOACmcD", "key.usr": "s:9FritzCore10HTTPMethodO6deleteyA2CmF"}]}], "key.typename": "HTTPMethod.Type", "key.typeusr": "$s9FritzCore10HTTPMethodOmD", "key.usr": "s:9FritzCore10HTTPMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum HTTPHeader : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1753}], "key.bodylength": 285, "key.bodyoffset": 1785, "key.doc.column": 13, "key.doc.comment": "HTTP headers we use", "key.doc.declaration": "public enum HTTPHeader : String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"69\" column=\"13\"><Name>HTTPHeader</Name><USR>s:9FritzCore10HTTPHeaderO</USR><Declaration>public enum HTTPHeader : String</Declaration><CommentParts><Abstract><Para>HTTP headers we use</Para></Abstract></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "HTTPHeader", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1729, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 1777}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HTTPHeader</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 311, "key.name": "HTTPHeader", "key.namelength": 10, "key.nameoffset": 1765, "key.offset": 1760, "key.parsed_declaration": "public enum HTTPHeader: String", "key.parsed_scope.end": 77, "key.parsed_scope.start": 69, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 31, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1788, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case appToken = &quot;x-fritz-token&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 15, "key.offset": 1804}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>appToken</decl.name> = <syntaxtype.string>&quot;x-fritz-token&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 26, "key.name": "appToken", "key.namelength": 8, "key.nameoffset": 1793, "key.offset": 1793, "key.parsed_declaration": "case appToken = \"x-fritz-token\"", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO8appTokenyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 33, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1822, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentType = &quot;content-type&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 14, "key.offset": 1841}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentType</decl.name> = <syntaxtype.string>&quot;content-type&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 28, "key.name": "contentType", "key.namelength": 11, "key.nameoffset": 1827, "key.offset": 1827, "key.parsed_declaration": "case contentType = \"content-type\"", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO11contentTypeyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 47, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1858, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case instanceIdentifier = &quot;x-fritz-instance-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1884}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>instanceIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-instance-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 42, "key.name": "instanceIdentifier", "key.namelength": 18, "key.nameoffset": 1863, "key.offset": 1863, "key.parsed_declaration": "case instanceIdentifier = \"x-fritz-instance-id\"", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO18instanceIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 45, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1908, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sessionIdentifier = &quot;x-fritz-session-id&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 20, "key.offset": 1933}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name> = <syntaxtype.string>&quot;x-fritz-session-id&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 40, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1913, "key.offset": 1913, "key.parsed_declaration": "case sessionIdentifier = \"x-fritz-session-id\"", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO17sessionIdentifieryA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 29, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1956, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case userAgent = &quot;user-agent&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 1973}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>userAgent</decl.name> = <syntaxtype.string>&quot;user-agent&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 24, "key.name": "userAgent", "key.namelength": 9, "key.nameoffset": 1961, "key.offset": 1961, "key.parsed_declaration": "case userAgent = \"user-agent\"", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO9userAgentyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1988, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentEncoding = &quot;content-encoding&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 18, "key.offset": 2011}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentEncoding</decl.name> = <syntaxtype.string>&quot;content-encoding&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "contentEncoding", "key.namelength": 15, "key.nameoffset": 1993, "key.offset": 1993, "key.parsed_declaration": "case contentEncoding = \"content-encoding\"", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO15contentEncodingyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 37, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2032, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case contentLength = &quot;content-length&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 16, "key.offset": 2053}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>contentLength</decl.name> = <syntaxtype.string>&quot;content-length&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 32, "key.name": "contentLength", "key.namelength": 13, "key.nameoffset": 2037, "key.offset": 2037, "key.parsed_declaration": "case contentLength = \"content-length\"", "key.parsed_scope.end": 76, "key.parsed_scope.start": 76, "key.typename": "(HTTPHeader.Type) -> HTTPHeader", "key.typeusr": "$sy9FritzCore10HTTPHeaderOACmcD", "key.usr": "s:9FritzCore10HTTPHeaderO13contentLengthyA2CmF"}]}], "key.typename": "HTTPHeader.Type", "key.typeusr": "$s9FritzCore10HTTPHeaderOmD", "key.usr": "s:9FritzCore10HTTPHeaderO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class APIClient</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2188}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2181}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 2120}], "key.bodylength": 392, "key.bodyoffset": 2211, "key.doc.column": 20, "key.doc.comment": "Class for communicating with the Fritz API", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"81\" column=\"20\"><Name>APIClient</Name><USR>s:9FritzCore9APIClientC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class APIClient</Declaration><CommentParts><Abstract><Para>Class for communicating with the Fritz API</Para></Abstract></CommentParts></Class>", "key.doc.line": 81, "key.doc.name": "APIClient", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 2073, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>APIClient</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 410, "key.name": "APIClient", "key.namelength": 9, "key.nameoffset": 2200, "key.offset": 2194, "key.parsed_declaration": "public final class APIClient", "key.parsed_scope.end": 96, "key.parsed_scope.start": 81, "key.runtime_name": "_TtC4main9APIClient", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2329}], "key.doc.column": 14, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"87\" column=\"14\"><Name>session</Name><USR>s:9FritzCore9APIClientC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2295, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 2340, "key.offset": 2336, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore9APIClientC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2538}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2531}], "key.bodylength": 30, "key.bodyoffset": 2571, "key.doc.column": 19, "key.doc.comment": "Required initializer", "key.doc.declaration": "public required init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift\" line=\"93\" column=\"19\"><Name>init(session:)</Name><USR>s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc</USR><Declaration>public required init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "init(session:)", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 2504, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/APIClient.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 55, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 2547, "key.offset": 2547, "key.parsed_declaration": "public required init(session: Session)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 93, "key.substructure": [], "key.typename": "(APIClient.Type) -> (Session) -> APIClient", "key.typeusr": "$s7session9FritzCore9APIClientCAB7SessionC_tcD", "key.usr": "s:9FritzCore9APIClientC7sessionAcA7SessionC_tcfc"}], "key.typename": "APIClient.Type", "key.typeusr": "$s9FritzCore9APIClientCmD", "key.usr": "s:9FritzCore9APIClientC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7991, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let defaultMaxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 253}], "key.doc.column": 12, "key.doc.comment": "Default to 10 retries, last retry is ~1 hour", "key.doc.declaration": "public let defaultMaxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"12\" column=\"12\"><Name>defaultMaxRetries</Name><USR>s:9FritzCore17defaultMaxRetriesSuvp</USR><Declaration>public let defaultMaxRetries: UInt</Declaration><CommentParts><Abstract><Para>Default to 10 retries, last retry is ~1 hour</Para></Abstract></CommentParts></Other>", "key.doc.line": 12, "key.doc.name": "defaultMaxRetries", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 204, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultMaxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 32, "key.name": "defaultMaxRetries", "key.namelength": 17, "key.nameoffset": 264, "key.offset": 260, "key.parsed_declaration": "public let defaultMaxRetries: UInt = 12", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore17defaultMaxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let defaultRetryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}], "key.doc.column": 12, "key.doc.comment": "Status codes to retry if received", "key.doc.declaration": "public let defaultRetryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"15\" column=\"12\"><Name>defaultRetryStatusCodes</Name><USR>s:9FritzCore23defaultRetryStatusCodesShySiGvp</USR><Declaration>public let defaultRetryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry if received</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "defaultRetryStatusCodes", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 294, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultRetryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 50, "key.name": "defaultRetryStatusCodes", "key.namelength": 23, "key.nameoffset": 343, "key.offset": 339, "key.parsed_declaration": "public let defaultRetryStatusCodes: Set<Int> = [502, 503]", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore23defaultRetryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let defaultRetryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 416}], "key.doc.column": 12, "key.doc.comment": "Error codes to retry", "key.doc.declaration": "public let defaultRetryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"18\" column=\"12\"><Name>defaultRetryErrorCodes</Name><USR>s:9FritzCore22defaultRetryErrorCodesShySiGvp</USR><Declaration>public let defaultRetryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "defaultRetryErrorCodes", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 391, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultRetryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 121, "key.name": "defaultRetryErrorCodes", "key.namelength": 22, "key.nameoffset": 427, "key.offset": 423, "key.parsed_declaration": "public let defaultRetryErrorCodes: Set<Int> = [", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore22defaultRetryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let defaultExponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 594}], "key.doc.column": 12, "key.doc.comment": "1 second multiplier for exponential backoff", "key.doc.declaration": "public let defaultExponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"25\" column=\"12\"><Name>defaultExponentialMultiplier</Name><USR>s:9FritzCore28defaultExponentialMultipliers6UInt32Vvp</USR><Declaration>public let defaultExponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>1 second multiplier for exponential backoff</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "defaultExponentialMultiplier", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 546, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.global><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultExponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.global>", "key.kind": "source.lang.swift.decl.var.global", "key.length": 47, "key.name": "defaultExponentialMultiplier", "key.namelength": 28, "key.nameoffset": 605, "key.offset": 601, "key.parsed_declaration": "public let defaultExponentialMultiplier: UInt32 = 1000", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore28defaultExponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class BatchedRequestQueue&lt;Element&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1532}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1525}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1464}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1464}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1464}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1464}], "key.bodylength": 6415, "key.bodyoffset": 1574, "key.doc.column": 20, "key.doc.comment": "This class attemmpts to strategically batch send requests and batch retry requests on failures.\nThe main flow of this class looks like:\n\nSUCCESS:\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush was successful\n\nFAILURE\n1. Add event to queue\n2. If threshold met, flush the queue\n3. Flush failed\n4. Add items back into items array\n5. Stop processing queue (maintenance mode)\n5. If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck\n\nHEALTHCHECK SUCCESS\n1. We received a successful healthcheck\n2. Start processing items again (disable maintenance mode)\n\nHEALTHCHECK FAILURE\n1. We received a failed healthcheck, exponential backoff and retry health check", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue<Element>", "key.doc.discussion": [{"Para": "SUCCESS:"}, {"List-Number": ""}, {"Para": "FAILURE"}, {"List-Number": ""}, {"Para": "HEALTHCHECK SUCCESS"}, {"List-Number": ""}, {"Para": "HEALTHCHECK FAILURE"}, {"List-Number": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"51\" column=\"20\"><Name>BatchedRequestQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class BatchedRequestQueue&lt;Element&gt;</Declaration><CommentParts><Abstract><Para>This class attemmpts to strategically batch send requests and batch retry requests on failures. The main flow of this class looks like:</Para></Abstract><Discussion><Para>SUCCESS:</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush was successful</Para></Item></List-Number><Para>FAILURE</Para><List-Number><Item><Para>Add event to queue</Para></Item><Item><Para>If threshold met, flush the queue</Para></Item><Item><Para>Flush failed</Para></Item><Item><Para>Add items back into items array</Para></Item><Item><Para>Stop processing queue (maintenance mode)</Para></Item><Item><Para>If a healthcheck retrier is not currently waiting, create one and start waiting for a successful healthcheck</Para></Item></List-Number><Para>HEALTHCHECK SUCCESS</Para><List-Number><Item><Para>We received a successful healthcheck</Para></Item><Item><Para>Start processing items again (disable maintenance mode)</Para></Item></List-Number><Para>HEALTHCHECK FAILURE</Para><List-Number><Item><Para>We received a failed healthcheck, exponential backoff and retry health check</Para></Item></List-Number></Discussion></CommentParts></Class>", "key.doc.line": 51, "key.doc.name": "BatchedRequestQueue", "key.doc.type": "Class", "key.doclength": 813, "key.docoffset": 651, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BatchedRequestQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\"><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 6452, "key.name": "BatchedRequestQueue", "key.namelength": 19, "key.nameoffset": 1544, "key.offset": 1538, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 276, "key.parsed_scope.start": 51, "key.substructure": [{"key.annotated_decl": "<Declaration>Element</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Element</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 7, "key.name": "Element", "key.namelength": 7, "key.nameoffset": 1564, "key.offset": 1564, "key.parsed_declaration": "public final class BatchedRequestQueue<Element>", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Element.Type", "key.typeusr": "$sxmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7Elementxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.FlushHandler = ([<Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1578}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>FlushHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type>[<ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 80, "key.name": "FlushHandler", "key.namelength": 12, "key.nameoffset": 1595, "key.offset": 1585, "key.parsed_declaration": "public typealias FlushHandler = ([Element], @escaping RequestCompletionHandler) -> Void", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "([Element], @escaping (Response) -> ()) -> ().Type", "key.typeusr": "$sySayxG_y9FritzCore8ResponseOctcmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12FlushHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.HealthcheckHandler = (@escaping (<Type usr=\"s:Sb\">Bool</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1669}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<decl.name>HealthcheckHandler</decl.name> = (<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 65, "key.name": "HealthcheckHandler", "key.namelength": 18, "key.nameoffset": 1686, "key.offset": 1676, "key.parsed_declaration": "public typealias HealthcheckHandler = (@escaping (Bool) -> Void) -> Void", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "(@escaping (Bool) -> ()) -> ().Type", "key.typeusr": "$syySbccmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var batchThreshold: () -&gt; <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1831}], "key.doc.column": 14, "key.doc.comment": "Number of events to store before flushing queue", "key.doc.declaration": "public var batchThreshold: () -> UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"60\" column=\"14\"><Name>batchThreshold</Name><USR>s:9FritzCore19BatchedRequestQueueC14batchThresholdSuycvp</USR><Declaration>public var batchThreshold: () -&gt; UInt</Declaration><CommentParts><Abstract><Para>Number of events to store before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "batchThreshold", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 1777, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>batchThreshold</decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "batchThreshold", "key.namelength": 14, "key.nameoffset": 1842, "key.offset": 1838, "key.parsed_declaration": "public var batchThreshold: () -> UInt", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "() -> UInt", "key.typeusr": "$sSuycD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14batchThresholdSuycvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var flushInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1918}], "key.bodylength": 72, "key.bodyoffset": 1958, "key.doc.column": 14, "key.doc.comment": "Number of seconds before flushing queue", "key.doc.declaration": "public var flushInterval: TimeInterval { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"63\" column=\"14\"><Name>flushInterval</Name><USR>s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp</USR><Declaration>public var flushInterval: TimeInterval { get }</Declaration><CommentParts><Abstract><Para>Number of seconds before flushing queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "flushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 1872, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flushInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 106, "key.name": "flushInterval", "key.namelength": 13, "key.nameoffset": 1929, "key.offset": 1925, "key.parsed_declaration": "public var flushInterval: TimeInterval", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore19BatchedRequestQueueC13flushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2075}], "key.doc.column": 14, "key.doc.comment": "Queue to call delegate methods on", "key.doc.declaration": "public let flushQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"68\" column=\"14\"><Name>flushQueue</Name><USR>s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp</USR><Declaration>public let flushQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to call delegate methods on</Para></Abstract></CommentParts></Other>", "key.doc.line": 68, "key.doc.name": "flushQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 2035, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flushQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "flushQueue", "key.namelength": 10, "key.nameoffset": 2086, "key.offset": 2082, "key.parsed_declaration": "public let flushQueue: DispatchQueue", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "DispatchQueue", "key.typeusr": "$sSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore19BatchedRequestQueueC05flushE0So17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2164}], "key.doc.column": 14, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"71\" column=\"14\"><Name>maxRetries</Name><USR>s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 71, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2115, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 2175, "key.offset": 2171, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore19BatchedRequestQueueC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2233}], "key.doc.column": 14, "key.doc.comment": "Status codes to retry a request", "key.doc.declaration": "public let retryStatusCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"74\" column=\"14\"><Name>retryStatusCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp</USR><Declaration>public let retryStatusCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Status codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 74, "key.doc.name": "retryStatusCodes", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 2195, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryStatusCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "retryStatusCodes", "key.namelength": 16, "key.nameoffset": 2244, "key.offset": 2240, "key.parsed_declaration": "public let retryStatusCodes: Set<Int>", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC16retryStatusCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2311}], "key.doc.column": 14, "key.doc.comment": "Error codes to retry a request", "key.doc.declaration": "public let retryErrorCodes: Set<Int>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"77\" column=\"14\"><Name>retryErrorCodes</Name><USR>s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp</USR><Declaration>public let retryErrorCodes: Set&lt;Int&gt;</Declaration><CommentParts><Abstract><Para>Error codes to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 77, "key.doc.name": "retryErrorCodes", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 2274, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryErrorCodes</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryErrorCodes", "key.namelength": 15, "key.nameoffset": 2322, "key.offset": 2318, "key.parsed_declaration": "public let retryErrorCodes: Set<Int>", "key.parsed_scope.end": 77, "key.parsed_scope.start": 77, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC15retryErrorCodesShySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2390}], "key.doc.column": 14, "key.doc.comment": "Pass through to OperationRetrier", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"80\" column=\"14\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Pass through to OperationRetrier</Para></Abstract></CommentParts></Other>", "key.doc.line": 80, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 2351, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 2401, "key.offset": 2397, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 80, "key.parsed_scope.start": 80, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore19BatchedRequestQueueC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var onFlush: (([Element], @escaping <Type usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2468}], "key.doc.column": 14, "key.doc.comment": "Block to be called on flush", "key.doc.declaration": "public var onFlush: (([Element], @escaping FritzCore.RequestCompletionHandler) -> Void)?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"83\" column=\"14\"><Name>onFlush</Name><USR>s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp</USR><Declaration>public var onFlush: (([Element], @escaping FritzCore.RequestCompletionHandler) -&gt; Void)?</Declaration><CommentParts><Abstract><Para>Block to be called on flush</Para></Abstract></CommentParts></Other>", "key.doc.line": 83, "key.doc.name": "onFlush", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 2434, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>onFlush</decl.name>: <decl.var.type>((<decl.var.parameter><decl.var.parameter.type>[Element]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter>@escaping <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore24RequestCompletionHandlera\">RequestCompletionHandler</ref.typealias></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype>)?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "onFlush", "key.namelength": 7, "key.nameoffset": 2479, "key.offset": 2475, "key.parsed_declaration": "public var onFlush: FlushHandler?", "key.parsed_scope.end": 83, "key.parsed_scope.start": 83, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(([Element], @escaping (Response) -> ()) -> ())?", "key.typeusr": "$sySayxG_y9FritzCore8ResponseOctcSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7onFlushySayxG_yAA8ResponseOctcSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var apiHealthcheck: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;Element&gt;.<Type usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2560}], "key.doc.column": 14, "key.doc.comment": "Block to be called when asking for a healthcheck", "key.doc.declaration": "public var apiHealthcheck: FritzCore.BatchedRequestQueue<Element>.HealthcheckHandler?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"86\" column=\"14\"><Name>apiHealthcheck</Name><USR>s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp</USR><Declaration>public var apiHealthcheck: FritzCore.BatchedRequestQueue&lt;Element&gt;.HealthcheckHandler?</Declaration><CommentParts><Abstract><Para>Block to be called when asking for a healthcheck</Para></Abstract></CommentParts></Other>", "key.doc.line": 86, "key.doc.name": "apiHealthcheck", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 2505, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>apiHealthcheck</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;Element&gt;.<ref.typealias usr=\"s:9FritzCore19BatchedRequestQueueC18HealthcheckHandlera\">HealthcheckHandler</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "apiHealthcheck", "key.namelength": 14, "key.nameoffset": 2571, "key.offset": 2567, "key.parsed_declaration": "public var apiHealthcheck: HealthcheckHandler?", "key.parsed_scope.end": 86, "key.parsed_scope.start": 86, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "(@escaping (Bool) -> ()) -> ()?", "key.typeusr": "$syySbccSgD", "key.usr": "s:9FritzCore19BatchedRequestQueueC14apiHealthcheckyySbccSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var items: [Element] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2646}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2639}], "key.doc.column": 27, "key.doc.comment": "Current items in queue", "key.doc.declaration": "public private(set) var items: [Element] {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"89\" column=\"27\"><Name>items</Name><USR>s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp</USR><Declaration>public private(set) var items: [Element] {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Current items in queue</Para></Abstract></CommentParts></Other>", "key.doc.line": 89, "key.doc.name": "items", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 2610, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>items</decl.name>: <decl.var.type>[Element]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "items", "key.namelength": 5, "key.nameoffset": 2663, "key.offset": 2659, "key.parsed_declaration": "public private(set) var items: [Element] = []", "key.parsed_scope.end": 89, "key.parsed_scope.start": 89, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Element]", "key.typeusr": "$sSayxGD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5itemsSayxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isApiHealthy: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2788}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2781}], "key.doc.column": 27, "key.doc.comment": "If true, we are processing available items, if false we are waiting for API to recover", "key.doc.declaration": "public private(set) var isApiHealthy: Bool {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"92\" column=\"27\"><Name>isApiHealthy</Name><USR>s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp</USR><Declaration>public private(set) var isApiHealthy: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>If true, we are processing available items, if false we are waiting for API to recover</Para></Abstract></CommentParts></Other>", "key.doc.line": 92, "key.doc.name": "isApiHealthy", "key.doc.type": "Other", "key.doclength": 91, "key.docoffset": 2688, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isApiHealthy</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "isApiHealthy", "key.namelength": 12, "key.nameoffset": 2805, "key.offset": 2801, "key.parsed_declaration": "public private(set) var isApiHealthy = true", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore19BatchedRequestQueueC12isApiHealthySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, flushQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type>, getBatchThreshold: @escaping (<Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>) -&gt; <Type usr=\"s:Su\">UInt</Type> = { (session: Session) in\n        return UInt(SessionSettings.settings(for: session).trackRequestBatchSize)\n    }, maxRetries: <Type usr=\"s:Su\">UInt</Type> = defaultMaxRetries, retryStatusCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = defaultRetryStatusCodes, retryErrorCodes: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt; = defaultRetryErrorCodes, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type> = defaultExponentialMultiplier)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3166}], "key.bodylength": 458, "key.bodyoffset": 3624, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>flushQueue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>getBatchThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.function.returntype></decl.var.parameter.type> = { (session: Session) in\n        return UInt(SessionSettings.settings(for: session).trackRequestBatchSize)\n    }</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type> = defaultMaxRetries</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryStatusCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = defaultRetryStatusCodes</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>retryErrorCodes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.parameter.type> = defaultRetryErrorCodes</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type> = defaultExponentialMultiplier</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 910, "key.name": "init(session:flushQueue:getBatchThreshold:maxRetries:retryStatusCodes:retryErrorCodes:exponentialMultiplier:)", "key.namelength": 449, "key.nameoffset": 3173, "key.offset": 3173, "key.parsed_declaration": "public init(\n  session: Session,\n  flushQueue: DispatchQueue,\n  getBatchThreshold: @escaping (Session) -> UInt = { (session: Session) in\n      return UInt(SessionSettings.settings(for: session).trackRequestBatchSize)\n  },\n  maxRetries: UInt = defaultMaxRetries,\n  retryStatusCodes: Set<Int> = defaultRetryStatusCodes,\n  retryErrorCodes: Set<Int> = defaultRetryErrorCodes,\n  exponentialMultiplier: UInt32 = defaultExponentialMultiplier\n)", "key.parsed_scope.end": 125, "key.parsed_scope.start": 103, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>.Type) -> (Session, DispatchQueue, @escaping (Session) -> UInt, UInt, Set<Int>, Set<Int>, UInt32) -> BatchedRequestQueue<Element>", "key.typeusr": "$s7session10flushQueue17getBatchThreshold10maxRetries16retryStatusCodes0i5ErrorK021exponentialMultiplier9FritzCore014BatchedRequestC0CyxGAH7SessionC_So17OS_dispatch_queueCSuAMcSuShySiGAPs6UInt32VtcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC7session05flushE017getBatchThreshold10maxRetries16retryStatusCodes0m5ErrorO021exponentialMultiplierACyxGAA7SessionC_So17OS_dispatch_queueCSuAMcSuShySiGAPs6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 113, "key.bodyoffset": 4095, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 4087, "key.offset": 4087, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 132, "key.parsed_scope.start": 127, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore19BatchedRequestQueueCfd"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func add(_ item: <Type usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4244}], "key.bodylength": 271, "key.bodyoffset": 4278, "key.doc.column": 15, "key.doc.comment": "Add an item to the queue", "key.doc.declaration": "public func add(_ item: Element)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"135\" column=\"15\"><Name>add(_:)</Name><USR>s:9FritzCore19BatchedRequestQueueC3addyyxF</USR><Declaration>public func add(_ item: Element)</Declaration><CommentParts><Abstract><Para>Add an item to the queue</Para></Abstract></CommentParts></Function>", "key.doc.line": 135, "key.doc.name": "add(_:)", "key.doc.type": "Function", "key.doclength": 29, "key.docoffset": 4213, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>add</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>item</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:9FritzCore19BatchedRequestQueueC7Elementxmfp\">Element</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 299, "key.name": "add(_:)", "key.namelength": 20, "key.nameoffset": 4256, "key.offset": 4251, "key.parsed_declaration": "public func add(_ item: Element)", "key.parsed_scope.end": 146, "key.parsed_scope.start": 135, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Element) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC3addyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func flush(force: <Type usr=\"s:Sb\">Bool</Type> = false)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4636}], "key.bodylength": 155, "key.bodyoffset": 4676, "key.doc.column": 15, "key.doc.comment": "Flush all items, if force is true then will flush regardless of healthy api", "key.doc.declaration": "public func flush(force: Bool = false)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"149\" column=\"15\"><Name>flush(force:)</Name><USR>s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF</USR><Declaration>public func flush(force: Bool = false)</Declaration><CommentParts><Abstract><Para>Flush all items, if force is true then will flush regardless of healthy api</Para></Abstract></CommentParts></Function>", "key.doc.line": 149, "key.doc.name": "flush(force:)", "key.doc.type": "Function", "key.doclength": 80, "key.docoffset": 4554, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>flush</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>force</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 189, "key.name": "flush(force:)", "key.namelength": 26, "key.nameoffset": 4648, "key.offset": 4643, "key.parsed_declaration": "public func flush(force: Bool = false)", "key.parsed_scope.end": 157, "key.parsed_scope.start": 149, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19BatchedRequestQueueC5flush33_3CCE68730D8FEA873DE9CED2E1F8F915LL5itemsySayxG_tF\">flush(items:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> (Bool) -> ()", "key.typeusr": "$s5forceySb_tcD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5flush5forceySb_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clear()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4889}], "key.bodylength": 48, "key.bodyoffset": 4910, "key.doc.column": 15, "key.doc.comment": "Clears all items in the queue WITHOUT flushing", "key.doc.declaration": "public func clear()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift\" line=\"160\" column=\"15\"><Name>clear()</Name><USR>s:9FritzCore19BatchedRequestQueueC5clearyyF</USR><Declaration>public func clear()</Declaration><CommentParts><Abstract><Para>Clears all items in the queue WITHOUT flushing</Para></Abstract></CommentParts></Function>", "key.doc.line": 160, "key.doc.name": "clear()", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 4836, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/BatchedRequestQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clear</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "clear()", "key.namelength": 7, "key.nameoffset": 4901, "key.offset": 4896, "key.parsed_declaration": "public func clear()", "key.parsed_scope.end": 164, "key.parsed_scope.start": 160, "key.substructure": [], "key.typename": "<Element> (BatchedRequestQueue<Element>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore19BatchedRequestQueueC5clearyyF"}], "key.typename": "BatchedRequestQueue<Element>.Type", "key.typeusr": "$s9FritzCore19BatchedRequestQueueCyxGmD", "key.usr": "s:9FritzCore19BatchedRequestQueueC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 606, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzConfiguration) public class Configuration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 243}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 182}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 182}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 182}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 182}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 156}], "key.bodylength": 323, "key.bodyoffset": 281, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 271}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Configuration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 355, "key.name": "Configuration", "key.namelength": 13, "key.nameoffset": 256, "key.offset": 250, "key.parsed_declaration": "public class Configuration: NSObject", "key.parsed_scope.end": 25, "key.parsed_scope.start": 11, "key.runtime_name": "FritzConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 285}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "default", "key.namelength": 7, "key.nameoffset": 303, "key.offset": 292, "key.parsed_declaration": "public static let `default` = Configuration(session: .default)", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "s:9FritzCore13ConfigurationC7defaultACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 357}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 351}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 368, "key.offset": 364, "key.parsed_declaration": "@objc public let session: Session", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)session"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 394}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 388}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 405, "key.offset": 401, "key.parsed_declaration": "@objc public let sessionManager: SessionManager", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "SessionManager", "key.typeusr": "$s9FritzCore14SessionManagerCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(py)sessionManager"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSession:) public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 465}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 439}], "key.bodylength": 106, "key.bodyoffset": 496, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Configuration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSession:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 131, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 472, "key.offset": 472, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 24, "key.parsed_scope.start": 20, "key.substructure": [], "key.typename": "(Configuration.Type) -> (Session) -> Configuration", "key.typeusr": "$s7session9FritzCore13ConfigurationCAB7SessionC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration(im)initWithSession:"}], "key.typename": "Configuration.Type", "key.typeusr": "$s9FritzCore13ConfigurationCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzConfiguration"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8775, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct CompressionLevel : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1272}], "key.bodylength": 553, "key.bodyoffset": 1322, "key.doc.column": 15, "key.doc.comment": "Compression level whose rawValue is based on the zlib's constants.", "key.doc.declaration": "public struct CompressionLevel : RawRepresentable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"31\" column=\"15\"><Name>CompressionLevel</Name><USR>s:9FritzCore16CompressionLevelV</USR><Declaration>public struct CompressionLevel : RawRepresentable</Declaration><CommentParts><Abstract><Para>Compression level whose rawValue is based on the zlib\u2019s constants.</Para></Abstract></CommentParts></Class>", "key.doc.line": 31, "key.doc.name": "CompressionLevel", "key.doc.type": "Class", "key.doclength": 71, "key.docoffset": 1201, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 1304}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CompressionLevel</decl.name> : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 597, "key.name": "CompressionLevel", "key.namelength": 16, "key.nameoffset": 1286, "key.offset": 1279, "key.parsed_declaration": "public struct CompressionLevel: RawRepresentable", "key.parsed_scope.end": 52, "key.parsed_scope.start": 31, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rawValue: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1417}], "key.doc.column": 14, "key.doc.comment": "Compression level in the range of `0` (no compression) to `9` (maximum compression).", "key.doc.declaration": "public let rawValue: Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"34\" column=\"14\"><Name>rawValue</Name><USR>s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp</USR><Declaration>public let rawValue: Int32</Declaration><CommentParts><Abstract><Para>Compression level in the range of <codeVoice>0</codeVoice> (no compression) to <codeVoice>9</codeVoice> (maximum compression).</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "rawValue", "key.doc.type": "Other", "key.doclength": 89, "key.docoffset": 1326, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 1428, "key.offset": 1424, "key.overrides": [{"key.usr": "s:SY8rawValue03RawB0Qzvp"}], "key.parsed_declaration": "public let rawValue: Int32", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:9FritzCore16CompressionLevelV8rawValues5Int32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let noCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1447}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>noCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 61, "key.name": "noCompression", "key.namelength": 13, "key.nameoffset": 1465, "key.offset": 1454, "key.parsed_declaration": "public static let noCompression = CompressionLevel(Z_NO_COMPRESSION)", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV02noC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestSpeed: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1518}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestSpeed</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 53, "key.name": "bestSpeed", "key.namelength": 9, "key.nameoffset": 1536, "key.offset": 1525, "key.parsed_declaration": "public static let bestSpeed = CompressionLevel(Z_BEST_SPEED)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV9bestSpeedACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let bestCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1581}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bestCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 65, "key.name": "bestCompression", "key.namelength": 15, "key.nameoffset": 1599, "key.offset": 1588, "key.parsed_declaration": "public static let bestCompression = CompressionLevel(Z_BEST_COMPRESSION)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV04bestC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaultCompression: <Type usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1657}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaultCompression</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore16CompressionLevelV\">CompressionLevel</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaultCompression", "key.namelength": 18, "key.nameoffset": 1675, "key.offset": 1664, "key.parsed_declaration": "public static let defaultCompression = CompressionLevel(Z_DEFAULT_COMPRESSION)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "CompressionLevel", "key.typeusr": "$s9FritzCore16CompressionLevelVD", "key.usr": "s:9FritzCore16CompressionLevelV07defaultC0ACvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1739}], "key.bodylength": 33, "key.bodyoffset": 1769, "key.doc.declaration": "init?(rawValue: Self.RawValue)", "key.doc.discussion": [{"Para": "If there is no value of the type that corresponds with the specified raw value, this initializer returns `nil`. For example:"}, {"CodeListing": ""}, {"Note": ""}], "key.doc.full_as_xml": "<Function><Name>init(rawValue:)</Name><USR>s:SY8rawValuexSg03RawB0Qz_tcfc</USR><Declaration>init?(rawValue: Self.RawValue)</Declaration><CommentParts><Abstract><Para>Creates a new instance with the specified raw value.</Para></Abstract><Parameters><Parameter><Name>rawValue</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The raw value to use for the new instance.</Para></Discussion></Parameter></Parameters><Discussion><Para>If there is no value of the type that corresponds with the specified raw value, this initializer returns <codeVoice>nil</codeVoice>. For example:</Para><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[enum PaperSize: String {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    case A4, A5, Letter, Legal]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Legal\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"Optional(\"PaperSize.Legal\")\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[print(PaperSize(rawValue: \"Tabloid\"))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// Prints \"nil\"]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Note><Para>This documentation comment was inherited from <codeVoice>RawRepresentable</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.name": "init(rawValue:)", "key.doc.parameters": [{"discussion": [{"Para": "The raw value to use for the new instance."}], "name": "rawValue"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 57, "key.name": "init(rawValue:)", "key.namelength": 21, "key.nameoffset": 1746, "key.offset": 1746, "key.overrides": [{"key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}], "key.parsed_declaration": "public init(rawValue: Int32)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelVyACs5Int32Vcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$s8rawValue9FritzCore16CompressionLevelVs5Int32V_tcD", "key.usr": "s:SY8rawValuexSg03RawB0Qz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ rawValue: <Type usr=\"s:s5Int32V\">Int32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1807}], "key.bodylength": 33, "key.bodyoffset": 1839, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>rawValue</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 59, "key.name": "init(_:)", "key.namelength": 23, "key.nameoffset": 1814, "key.offset": 1814, "key.parsed_declaration": "public init(_ rawValue: Int32)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore16CompressionLevelV8rawValueACs5Int32V_tcfc\">init(rawValue:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CompressionLevel.Type) -> (Int32) -> CompressionLevel", "key.typeusr": "$sy9FritzCore16CompressionLevelVs5Int32VcD", "key.usr": "s:9FritzCore16CompressionLevelVyACs5Int32Vcfc"}], "key.typename": "CompressionLevel.Type", "key.typeusr": "$s9FritzCore16CompressionLevelVmD", "key.usr": "s:9FritzCore16CompressionLevelV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct GzipError : Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1943}], "key.bodylength": 1785, "key.bodyoffset": 1981, "key.doc.column": 15, "key.doc.comment": "Errors on gzipping/gunzipping based on the zlib error codes.", "key.doc.declaration": "public struct GzipError : Swift.Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"55\" column=\"15\"><Name>GzipError</Name><USR>s:9FritzCore9GzipErrorV</USR><Declaration>public struct GzipError : Swift.Error</Declaration><CommentParts><Abstract><Para>Errors on gzipping/gunzipping based on the zlib error codes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 55, "key.doc.name": "GzipError", "key.doc.type": "Class", "key.doclength": 65, "key.docoffset": 1878, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 1968}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>GzipError</decl.name> : Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 1817, "key.name": "GzipError", "key.namelength": 9, "key.nameoffset": 1957, "key.offset": 1950, "key.parsed_declaration": "public struct GzipError: Swift.Error", "key.parsed_scope.end": 131, "key.parsed_scope.start": 55, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore9GzipErrorV\">GzipError</Type>.Kind : <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2026}], "key.bodylength": 889, "key.bodyoffset": 2055, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 2044}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore9GzipErrorV\">GzipError</ref.struct>.<decl.name>Kind</decl.name> : <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 912, "key.name": "Kind", "key.namelength": 4, "key.nameoffset": 2038, "key.offset": 2033, "key.parsed_declaration": "public enum Kind: Equatable", "key.parsed_scope.end": 89, "key.parsed_scope.start": 58, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2170, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case stream</Declaration>", "key.doc.column": 10, "key.doc.comment": "The stream structure was inconsistent.\n\n- underlying zlib error: `Z_STREAM_ERROR` (-2)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"62\" column=\"10\"><Name>stream</Name><USR>s:9FritzCore9GzipErrorV4KindO6streamyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The stream structure was inconsistent.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_STREAM_ERROR</codeVoice> (-2)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 62, "key.doc.name": "stream", "key.doc.type": "Other", "key.doclength": 106, "key.docoffset": 2060, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>stream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "stream", "key.namelength": 6, "key.nameoffset": 2175, "key.offset": 2175, "key.parsed_declaration": "case stream", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6streamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2368, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case data</Declaration>", "key.doc.column": 10, "key.doc.comment": "The input data was corrupted\n(input stream not conforming to the zlib format or incorrect check value).\n\n- underlying zlib error: `Z_DATA_ERROR` (-3)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"68\" column=\"10\"><Name>data</Name><USR>s:9FritzCore9GzipErrorV4KindO4datayA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The input data was corrupted (input stream not conforming to the zlib format or incorrect check value).</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_DATA_ERROR</codeVoice> (-3)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 68, "key.doc.name": "data", "key.doc.type": "Other", "key.doclength": 177, "key.docoffset": 2187, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>data</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "data", "key.namelength": 4, "key.nameoffset": 2373, "key.offset": 2373, "key.parsed_declaration": "case data", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO4datayA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2480, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case memory</Declaration>", "key.doc.column": 10, "key.doc.comment": "There was not enough memory.\n\n- underlying zlib error: `Z_MEM_ERROR` (-4)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"73\" column=\"10\"><Name>memory</Name><USR>s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>There was not enough memory.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_MEM_ERROR</codeVoice> (-4)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 73, "key.doc.name": "memory", "key.doc.type": "Other", "key.doclength": 93, "key.docoffset": 2383, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>memory</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "memory", "key.namelength": 6, "key.nameoffset": 2485, "key.offset": 2485, "key.parsed_declaration": "case memory", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6memoryyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2640, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case buffer</Declaration>", "key.doc.column": 10, "key.doc.comment": "No progress is possible or there was not enough room in the output buffer.\n\n- underlying zlib error: `Z_BUF_ERROR` (-5)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"78\" column=\"10\"><Name>buffer</Name><USR>s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>No progress is possible or there was not enough room in the output buffer.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_BUF_ERROR</codeVoice> (-5)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 78, "key.doc.name": "buffer", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 2497, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>buffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "buffer", "key.namelength": 6, "key.nameoffset": 2645, "key.offset": 2645, "key.parsed_declaration": "case buffer", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO6bufferyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2810, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case version</Declaration>", "key.doc.column": 10, "key.doc.comment": "The zlib library version is incompatible with the version assumed by the caller.\n\n- underlying zlib error: `Z_VERSION_ERROR` (-6)", "key.doc.declaration": "", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"83\" column=\"10\"><Name>version</Name><USR>s:9FritzCore9GzipErrorV4KindO7versionyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>The zlib library version is incompatible with the version assumed by the caller.</Para></Abstract><Discussion><List-Bullet><Item><Para>underlying zlib error: <codeVoice>Z_VERSION_ERROR</codeVoice> (-6)</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 83, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 149, "key.docoffset": 2657, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>version</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "version", "key.namelength": 7, "key.nameoffset": 2815, "key.offset": 2815, "key.parsed_declaration": "case version", "key.parsed_scope.end": 83, "key.parsed_scope.start": 83, "key.typename": "(GzipError.Kind.Type) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7versionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2918, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case unknown(code: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.doc.column": 10, "key.doc.comment": "An unknown error occurred.\n\n- parameter code: return error by zlib", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"88\" column=\"10\"><Name>unknown(code:)</Name><USR>s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>An unknown error occurred.</Para></Abstract><Parameters><Parameter><Name>code</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>return error by zlib</Para></Discussion></Parameter></Parameters></CommentParts></Other>", "key.doc.line": 88, "key.doc.name": "unknown(code:)", "key.doc.parameters": [{"discussion": [{"Para": "return error by zlib"}], "name": "code"}], "key.doc.type": "Other", "key.doclength": 86, "key.docoffset": 2828, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unknown</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 18, "key.name": "unknown(code:)", "key.namelength": 18, "key.nameoffset": 2923, "key.offset": 2923, "key.parsed_declaration": "case unknown(code: Int)", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "(GzipError.Kind.Type) -> (Int) -> GzipError.Kind", "key.typeusr": "$sy9FritzCore9GzipErrorV4KindOSi_tcAEmcD", "key.usr": "s:9FritzCore9GzipErrorV4KindO7unknownyAESi_tcAEmF"}]}], "key.typename": "GzipError.Kind.Type", "key.typeusr": "$s9FritzCore9GzipErrorV4KindOmD", "key.usr": "s:9FritzCore9GzipErrorV4KindO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let kind: <Type usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2967}], "key.doc.column": 14, "key.doc.comment": "Error kind.", "key.doc.declaration": "public let kind: Kind", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"92\" column=\"14\"><Name>kind</Name><USR>s:9FritzCore9GzipErrorV4kindAC4KindOvp</USR><Declaration>public let kind: Kind</Declaration><CommentParts><Abstract><Para>Error kind.</Para></Abstract></CommentParts></Other>", "key.doc.line": 92, "key.doc.name": "kind", "key.doc.type": "Other", "key.doclength": 16, "key.docoffset": 2949, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>kind</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore9GzipErrorV4KindO\">Kind</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "kind", "key.namelength": 4, "key.nameoffset": 2978, "key.offset": 2974, "key.parsed_declaration": "public let kind: Kind", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "GzipError.Kind", "key.typeusr": "$s9FritzCore9GzipErrorV4KindOD", "key.usr": "s:9FritzCore9GzipErrorV4kindAC4KindOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let message: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3024}], "key.doc.column": 14, "key.doc.comment": "Returned message by zlib.", "key.doc.declaration": "public let message: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift\" line=\"95\" column=\"14\"><Name>message</Name><USR>s:9FritzCore9GzipErrorV7messageSSvp</USR><Declaration>public let message: String</Declaration><CommentParts><Abstract><Para>Returned message by zlib.</Para></Abstract></CommentParts></Other>", "key.doc.line": 95, "key.doc.name": "message", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 2992, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>message</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "message", "key.namelength": 7, "key.nameoffset": 3035, "key.offset": 3031, "key.parsed_declaration": "public let message: String", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore9GzipErrorV7messageSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var localizedDescription: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3694}], "key.bodylength": 28, "key.bodyoffset": 3735, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Data+Gzip.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>localizedDescription</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 63, "key.name": "localizedDescription", "key.namelength": 20, "key.nameoffset": 3705, "key.offset": 3701, "key.parsed_declaration": "public var localizedDescription: String", "key.parsed_scope.end": 129, "key.parsed_scope.start": 126, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore9GzipErrorV20localizedDescriptionSSvp"}], "key.typename": "GzipError.Type", "key.typeusr": "$s9FritzCore9GzipErrorVmD", "key.usr": "s:9FritzCore9GzipErrorV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1140, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(DeviceOrientationManager) public class DeviceOrientationManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 258}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 226}], "key.bodylength": 831, "key.bodyoffset": 307, "key.doc.column": 14, "key.doc.comment": "Tracks Device Orientation changes.", "key.doc.declaration": "@objc(DeviceOrientationManager) public class DeviceOrientationManager : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift\" line=\"13\" column=\"14\"><Name>DeviceOrientationManager</Name><USR>c:@M@FritzCore@objc(cs)DeviceOrientationManager</USR><Declaration>@objc(DeviceOrientationManager) public class DeviceOrientationManager : NSObject</Declaration><CommentParts><Abstract><Para>Tracks Device Orientation changes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "DeviceOrientationManager", "key.doc.type": "Class", "key.doclength": 39, "key.docoffset": 187, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 297}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(DeviceOrientationManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DeviceOrientationManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 874, "key.name": "DeviceOrientationManager", "key.namelength": 24, "key.nameoffset": 271, "key.offset": 265, "key.parsed_declaration": "public class DeviceOrientationManager: NSObject", "key.parsed_scope.end": 44, "key.parsed_scope.start": 13, "key.runtime_name": "DeviceOrientationManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var orientation: <Type usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 352}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 345}], "key.doc.column": 27, "key.doc.comment": "Current device orientation.", "key.doc.declaration": "public private(set) var orientation: UIDeviceOrientation {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift\" line=\"16\" column=\"27\"><Name>orientation</Name><USR>s:9FritzCore24DeviceOrientationManagerC11orientationSo08UIDeviceD0Vvp</USR><Declaration>public private(set) var orientation: UIDeviceOrientation {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Current device orientation.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 311, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@UIDeviceOrientation\">UIDeviceOrientation</ref.enum></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 369, "key.offset": 365, "key.parsed_declaration": "public private(set) var orientation: UIDeviceOrientation", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UIDeviceOrientation", "key.typeusr": "$sSo19UIDeviceOrientationVD", "key.usr": "s:9FritzCore24DeviceOrientationManagerC11orientationSo08UIDeviceD0Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 412}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 405}], "key.bodylength": 109, "key.bodyoffset": 429, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 421, "key.offset": 421, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 22, "key.parsed_scope.start": 18, "key.substructure": [], "key.typename": "(DeviceOrientationManager.Type) -> () -> DeviceOrientationManager", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCycD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 551, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/DeviceOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 543, "key.offset": 543, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(DeviceOrientationManager) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager(im)dealloc"}], "key.typename": "DeviceOrientationManager.Type", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)DeviceOrientationManager"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2599, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzErrorCode) public enum ErrorCode : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 201}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 179}], "key.bodylength": 119, "key.bodyoffset": 229, "key.doc.column": 13, "key.doc.comment": "The type of error encountered", "key.doc.declaration": "@objc(FritzErrorCode) public enum ErrorCode : Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"11\" column=\"13\"><Name>ErrorCode</Name><USR>c:@M@FritzCore@E@FritzErrorCode</USR><Declaration>@objc(FritzErrorCode) public enum ErrorCode : Int</Declaration><CommentParts><Abstract><Para>The type of error encountered</Para></Abstract></CommentParts></Other>", "key.doc.line": 11, "key.doc.name": "ErrorCode", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 145, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 224}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzErrorCode)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>ErrorCode</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 141, "key.name": "ErrorCode", "key.namelength": 9, "key.nameoffset": 213, "key.offset": 208, "key.parsed_declaration": "public enum ErrorCode: Int", "key.parsed_scope.end": 17, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 232, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompilation</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompilation</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "modelCompilation", "key.namelength": 16, "key.nameoffset": 237, "key.offset": 237, "key.parsed_declaration": "case modelCompilation", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelCompilation"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 256, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryption</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryption</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "modelDecryption", "key.namelength": 15, "key.nameoffset": 261, "key.offset": 261, "key.parsed_declaration": "case modelDecryption", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDecryption"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 279, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownload</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownload</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "modelDownload", "key.namelength": 13, "key.nameoffset": 284, "key.offset": 284, "key.parsed_declaration": "case modelDownload", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelDownload"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 300, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sessionDisabled</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sessionDisabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "sessionDisabled", "key.namelength": 15, "key.nameoffset": 305, "key.offset": 305, "key.parsed_declaration": "case sessionDisabled", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeSessionDisabled"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 24, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 323, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelInitialization</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInitialization</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 19, "key.name": "modelInitialization", "key.namelength": 19, "key.nameoffset": 328, "key.offset": 328, "key.parsed_declaration": "case modelInitialization", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(ErrorCode.Type) -> ErrorCode", "key.typeusr": "$sy9FritzCore9ErrorCodeOACmcD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode@FritzErrorCodeModelInitialization"}]}], "key.typename": "ErrorCode.Type", "key.typeusr": "$s9FritzCore9ErrorCodeOmD", "key.usr": "c:@M@FritzCore@E@FritzErrorCode"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzError) public final class FritzError : <Type usr=\"c:objc(cs)NSError\">NSError</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 641}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 634}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 573}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 573}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 573}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 573}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 17, "key.offset": 555}], "key.bodylength": 1185, "key.bodyoffset": 674, "key.doc.column": 20, "key.doc.comment": "Class representing a Fritz-related error\n\n- Note: You subscribe to a notification to be notified anytime an error is encountered in the SDK.\n\n- SeeAlso: `Notification.Name.fritzError`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError", "key.doc.discussion": [{"Note": ""}, {"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"26\" column=\"20\"><Name>FritzError</Name><USR>c:@M@FritzCore@objc(cs)FritzError</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzError) public final class FritzError : NSError</Declaration><CommentParts><Abstract><Para>Class representing a Fritz-related error</Para></Abstract><Discussion><Note><Para>You subscribe to a notification to be notified anytime an error is encountered in the SDK.</Para></Note><See><Para><codeVoice>Notification.Name.fritzError</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 26, "key.doc.name": "FritzError", "key.doc.type": "Class", "key.doclength": 204, "key.docoffset": 351, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 665}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzError)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzError</decl.name> : <ref.class usr=\"c:objc(cs)NSError\">NSError</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSError"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1213, "key.name": "FritzError", "key.namelength": 10, "key.nameoffset": 653, "key.offset": 647, "key.parsed_declaration": "public final class FritzError: NSError", "key.parsed_scope.end": 66, "key.parsed_scope.start": 26, "key.runtime_name": "FritzError", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 709}], "key.doc.column": 14, "key.doc.comment": "Session error ocurred in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"29\" column=\"14\"><Name>session</Name><USR>s:9FritzCore0A5ErrorC7sessionAA7SessionCvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session error ocurred in</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 678, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 720, "key.offset": 716, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore0A5ErrorC7sessionAA7SessionCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 780}], "key.doc.column": 14, "key.doc.comment": "Model identifier related to error", "key.doc.declaration": "public let modelIdentifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"32\" column=\"14\"><Name>modelIdentifier</Name><USR>s:9FritzCore0A5ErrorC15modelIdentifierSSvp</USR><Declaration>public let modelIdentifier: String</Declaration><CommentParts><Abstract><Para>Model identifier related to error</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 740, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 791, "key.offset": 787, "key.parsed_declaration": "public let modelIdentifier: String", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore0A5ErrorC15modelIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 844}], "key.doc.column": 14, "key.doc.comment": "Actual thrown error", "key.doc.declaration": "public let error: Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"35\" column=\"14\"><Name>error</Name><USR>s:9FritzCore0A5ErrorC5errors0C0_pvp</USR><Declaration>public let error: Error</Declaration><CommentParts><Abstract><Para>Actual thrown error</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "error", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 818, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "error", "key.namelength": 5, "key.nameoffset": 855, "key.offset": 851, "key.parsed_declaration": "public let error: Error", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:9FritzCore0A5ErrorC5errors0C0_pvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func post(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1117}], "key.bodylength": 161, "key.bodyoffset": 1218, "key.doc.column": 22, "key.doc.comment": "Posts a Fritz error to the default notification center", "key.doc.declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"43\" column=\"22\"><Name>post(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ</USR><Declaration>public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Posts a Fritz error to the default notification center</Para></Abstract></CommentParts></Function>", "key.doc.line": 43, "key.doc.name": "post(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 1056, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>post</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 256, "key.name": "post(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1136, "key.offset": 1124, "key.parsed_declaration": "public static func post(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC4post5erroryAC_tFZ\">post(error:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzError\">FritzError</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 130, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1227, "key.offset": 1223, "key.parsed_declaration": "let error = FritzError(", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC5errors0C0_pvp\">error</RelatedName>"}], "key.typename": "FritzError", "key.typeusr": "$s9FritzCore0A5ErrorCD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZAHL0_ACvp"}], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> ()", "key.typeusr": "$s7session15modelIdentifier4code5errory9FritzCore7SessionC_SSAE9ErrorCodeOs0I0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC4post7session15modelIdentifier4code5erroryAA7SessionC_SSAA0C4CodeOs0C0_ptFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>, modelIdentifier: <Type usr=\"s:SS\">String</Type>, code: <Type usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</Type>, error: <Type usr=\"s:s5ErrorP\">Error</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1421}], "key.bodylength": 182, "key.bodyoffset": 1508, "key.doc.column": 10, "key.doc.comment": "Create an internal Fritz error", "key.doc.declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"55\" column=\"10\"><Name>init(session:modelIdentifier:code:error:)</Name><USR>s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc</USR><Declaration>public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)</Declaration><CommentParts><Abstract><Para>Create an internal Fritz error</Para></Abstract></CommentParts></Function>", "key.doc.line": 55, "key.doc.name": "init(session:modelIdentifier:code:error:)", "key.doc.type": "Function", "key.doclength": 35, "key.docoffset": 1384, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelIdentifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>code</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@FritzErrorCode\">ErrorCode</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>error</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 263, "key.name": "init(session:modelIdentifier:code:error:)", "key.namelength": 78, "key.nameoffset": 1428, "key.offset": 1428, "key.parsed_declaration": "public init(session: Session, modelIdentifier: String, code: ErrorCode, error: Error)", "key.parsed_scope.end": 60, "key.parsed_scope.start": 55, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:\">init(coder:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (Session, String, ErrorCode, Error) -> FritzError", "key.typeusr": "$s7session15modelIdentifier4code5error9FritzCore0F5ErrorCAE7SessionC_SSAE0H4CodeOs0H0_ptcD", "key.usr": "s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init?(coder aDecoder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1759}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 1750}], "key.bodylength": 59, "key.bodyoffset": 1798, "key.doc.column": 19, "key.doc.comment": "Do not create an instance of this class directly", "key.doc.declaration": "required public init?(coder aDecoder: NSCoder)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift\" line=\"63\" column=\"19\"><Name>init(coder:)</Name><USR>c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:</USR><Declaration>required public init?(coder aDecoder: NSCoder)</Declaration><CommentParts><Abstract><Para>Do not create an instance of this class directly</Para></Abstract></CommentParts></Function>", "key.doc.line": 63, "key.doc.name": "init(coder:)", "key.doc.type": "Function", "key.doclength": 53, "key.docoffset": 1695, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Errors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder</decl.var.parameter.argument_label> <decl.var.parameter.name>aDecoder</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(coder:)", "key.namelength": 30, "key.nameoffset": 1766, "key.offset": 1766, "key.overrides": [{"key.usr": "c:objc(pl)NSCoding(im)initWithCoder:"}], "key.parsed_declaration": "required public init?(coder aDecoder: NSCoder)", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore0A5ErrorC7session15modelIdentifier4code5errorAcA7SessionC_SSAA0C4CodeOs0C0_ptcfc\">init(session:modelIdentifier:code:error:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzError.Type) -> (NSCoder) -> FritzError?", "key.typeusr": "$s5coder9FritzCore0B5ErrorCSgSo7NSCoderC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError(im)initWithCoder:"}], "key.typename": "FritzError.Type", "key.typeusr": "$s9FritzCore0A5ErrorCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzError"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - JSON", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1865}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8275, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzCore) public class FritzCore : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 741}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 680}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 663}], "key.bodylength": 2465, "key.bodyoffset": 775, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 765}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzCore)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzCore</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2493, "key.name": "FritzCore", "key.namelength": 9, "key.nameoffset": 754, "key.offset": 748, "key.parsed_declaration": "public class FritzCore: NSObject", "key.parsed_scope.end": 98, "key.parsed_scope.start": 23, "key.runtime_name": "FritzCore", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configuration) public static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 950}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 927}], "key.bodylength": 689, "key.bodyoffset": 998, "key.doc.column": 21, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(configuration) public static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"30\" column=\"21\"><Name>configuration</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration</USR><Declaration>@objc(configuration) public static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 900, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configuration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 731, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 968, "key.offset": 957, "key.parsed_declaration": "public static var configuration: Configuration", "key.parsed_scope.end": 47, "key.parsed_scope.start": 30, "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)configuration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(orientationManager) public static var orientationManager: <Type usr=\"c:@M@FritzCore@objc(cs)DeviceOrientationManager\">DeviceOrientationManager</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1747}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 1719}], "key.bodylength": 704, "key.bodyoffset": 1811, "key.doc.column": 21, "key.doc.comment": "Shared configuration", "key.doc.declaration": "@objc(orientationManager) public static var orientationManager: DeviceOrientationManager { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"51\" column=\"21\"><Name>orientationManager</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cpy)orientationManager</USR><Declaration>@objc(orientationManager) public static var orientationManager: DeviceOrientationManager { get }</Declaration><CommentParts><Abstract><Para>Shared configuration</Para></Abstract></CommentParts></Other>", "key.doc.line": 51, "key.doc.name": "orientationManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 1692, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(orientationManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)DeviceOrientationManager\">DeviceOrientationManager</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 762, "key.name": "orientationManager", "key.namelength": 18, "key.nameoffset": 1765, "key.offset": 1754, "key.parsed_declaration": "public static var orientationManager: DeviceOrientationManager", "key.parsed_scope.end": 68, "key.parsed_scope.start": 51, "key.typename": "DeviceOrientationManager", "key.typeusr": "$s9FritzCore24DeviceOrientationManagerCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cpy)orientationManager"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configure) public static func configure()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2569}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 2550}], "key.bodylength": 96, "key.bodyoffset": 2601, "key.doc.column": 22, "key.doc.comment": "Configure the Fritz SDK", "key.doc.declaration": "@objc(configure) public static func configure()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"72\" column=\"22\"><Name>configure()</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configure</USR><Declaration>@objc(configure) public static func configure()</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK</Para></Abstract></CommentParts></Function>", "key.doc.line": 72, "key.doc.name": "configure()", "key.doc.type": "Function", "key.doclength": 28, "key.docoffset": 2520, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configure)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>()</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 122, "key.name": "configure()", "key.namelength": 11, "key.nameoffset": 2588, "key.offset": 2576, "key.parsed_declaration": "public static func configure()", "key.parsed_scope.end": 75, "key.parsed_scope.start": 72, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:\">configure(with:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configure"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(configureWith:) public static func configure(with configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2784}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2760}], "key.bodylength": 101, "key.bodyoffset": 2849, "key.doc.column": 22, "key.doc.comment": "Configure the Fritz SDK with a custom configuration", "key.doc.declaration": "@objc(configureWith:) public static func configure(with configuration: Configuration)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"79\" column=\"22\"><Name>configure(with:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:</USR><Declaration>@objc(configureWith:) public static func configure(with configuration: Configuration)</Declaration><CommentParts><Abstract><Para>Configure the Fritz SDK with a custom configuration</Para></Abstract></CommentParts></Function>", "key.doc.line": 79, "key.doc.name": "configure(with:)", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 2702, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(configureWith:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>configure</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>configuration</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 160, "key.name": "configure(with:)", "key.namelength": 44, "key.nameoffset": 2803, "key.offset": 2791, "key.parsed_declaration": "public static func configure(with configuration: Configuration)", "key.parsed_scope.end": 82, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzCore(cm)configure\">configure()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzCore.Type) -> (Configuration) -> ()", "key.typeusr": "$s4withy9FritzCore13ConfigurationC_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)configureWith:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3156}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 3134}], "key.bodylength": 31, "key.bodyoffset": 3207, "key.doc.column": 22, "key.doc.comment": "Enables Fritz SDK logging\n\n- Parameter level:\n-- 0: Debug logging\n-- 1: Info logging\n-- 2: Warn logging\n-- 3: Error logging\n-- 4: Disable logging", "key.doc.declaration": "@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift\" line=\"95\" column=\"22\"><Name>setLogLevel(_:)</Name><USR>c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:</USR><Declaration>@objc(setLogLevel:) public static func setLogLevel(_ level: LogLevel)</Declaration><CommentParts><Abstract><Para>Enables Fritz SDK logging</Para></Abstract><Parameters><Parameter><Name>level</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para> \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 95, "key.doc.name": "setLogLevel(_:)", "key.doc.parameters": [{"discussion": [{"Para": " \u2013 0: Debug logging \u2013 1: Info logging \u2013 2: Warn logging \u2013 3: Error logging \u2013 4: Disable logging"}], "name": "level"}], "key.doc.type": "Function", "key.doclength": 176, "key.docoffset": 2955, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/FritzCore.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(setLogLevel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setLogLevel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>level</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 76, "key.name": "setLogLevel(_:)", "key.namelength": 30, "key.nameoffset": 3175, "key.offset": 3163, "key.parsed_declaration": "public static func setLogLevel(_ level: LogLevel)", "key.parsed_scope.end": 97, "key.parsed_scope.start": 95, "key.substructure": [], "key.typename": "(FritzCore.Type) -> (LogLevel) -> ()", "key.typeusr": "$syy9FritzCore8LogLevelOcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore(cm)setLogLevel:"}], "key.typename": "FritzCore.Type", "key.typeusr": "$s9FritzCoreAACmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzCore"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Instance Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3246}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Session Identifier", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3742}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - User Agent", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5784}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2099, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum LogLevel : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 348}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 342}], "key.bodylength": 114, "key.bodyoffset": 375, "key.doc.column": 13, "key.doc.comment": "Logging level for the SDK\n\n- debug: log all logs\n- info: log info logs or higher\n- warn: log warning logs or higher\n- error: log error logs only\n- none: disable logging", "key.doc.declaration": "@objc public enum LogLevel : Int", "key.doc.discussion": [{"List-Bullet": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"17\" column=\"13\"><Name>LogLevel</Name><USR>c:@M@FritzCore@E@LogLevel</USR><Declaration>@objc public enum LogLevel : Int</Declaration><CommentParts><Abstract><Para>Logging level for the SDK</Para></Abstract><Discussion><List-Bullet><Item><Para>debug: log all logs</Para></Item><Item><Para>info: log info logs or higher</Para></Item><Item><Para>warn: log warning logs or higher</Para></Item><Item><Para>error: log error logs only</Para></Item><Item><Para>none: disable logging</Para></Item></List-Bullet></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "LogLevel", "key.doc.type": "Other", "key.doclength": 196, "key.docoffset": 146, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 370}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>LogLevel</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 135, "key.name": "LogLevel", "key.namelength": 8, "key.nameoffset": 360, "key.offset": 355, "key.parsed_declaration": "public enum LogLevel: Int", "key.parsed_scope.end": 25, "key.parsed_scope.start": 17, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 378, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case debug = 0</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 391}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>debug</decl.name> = <syntaxtype.number>0</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "debug", "key.namelength": 5, "key.nameoffset": 383, "key.offset": 383, "key.parsed_declaration": "case debug = 0", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelDebug"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 395, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case info</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>info</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "info", "key.namelength": 4, "key.nameoffset": 400, "key.offset": 400, "key.parsed_declaration": "case info", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelInfo"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 407, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case warn</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>warn</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "warn", "key.namelength": 4, "key.nameoffset": 412, "key.offset": 412, "key.parsed_declaration": "case warn", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelWarn"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 419, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 424, "key.offset": 424, "key.parsed_declaration": "case error", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelError"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 432, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case none</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>none</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "none", "key.namelength": 4, "key.nameoffset": 437, "key.offset": 437, "key.parsed_declaration": "case none", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(LogLevel.Type) -> LogLevel", "key.typeusr": "$sy9FritzCore8LogLevelOACmcD", "key.usr": "c:@M@FritzCore@E@LogLevel@LogLevelNone"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var shared: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shared</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 36, "key.name": "shared", "key.namelength": 6, "key.nameoffset": 463, "key.offset": 452, "key.parsed_declaration": "public static var shared: LogLevel = .error", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "LogLevel", "key.typeusr": "$s9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore8LogLevelO6sharedACvpZ"}], "key.typename": "LogLevel.Type", "key.typeusr": "$s9FritzCore8LogLevelOmD", "key.usr": "c:@M@FritzCore@E@LogLevel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Logger</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 492}], "key.bodylength": 1583, "key.bodyoffset": 514, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Logger</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1599, "key.name": "Logger", "key.namelength": 6, "key.nameoffset": 506, "key.offset": 499, "key.parsed_declaration": "public struct Logger", "key.parsed_scope.end": 76, "key.parsed_scope.start": 27, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 518}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>level</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "level", "key.namelength": 5, "key.nameoffset": 529, "key.offset": 525, "key.parsed_declaration": "public let level: LogLevel", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "LogLevel", "key.typeusr": "$s9FritzCore8LogLevelOD", "key.usr": "s:9FritzCore6LoggerV5levelAA8LogLevelOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 548}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 559, "key.offset": 555, "key.parsed_declaration": "public let name: String", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(name: <Type usr=\"s:SS\">String</Type>, level: <Type usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</Type> = .shared)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 575}], "key.bodylength": 47, "key.bodyoffset": 629, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>level</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@M@FritzCore@E@LogLevel\">LogLevel</ref.enum></decl.var.parameter.type> = .shared</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 95, "key.name": "init(name:level:)", "key.namelength": 45, "key.nameoffset": 582, "key.offset": 582, "key.parsed_declaration": "public init(name: String, level: LogLevel = .shared)", "key.parsed_scope.end": 36, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "(Logger.Type) -> (String, LogLevel) -> Logger", "key.typeusr": "$s4name5level9FritzCore6LoggerVSS_AC8LogLevelOtcD", "key.usr": "s:9FritzCore6LoggerV4name5levelACSS_AA8LogLevelOtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func debug(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 726}], "key.bodylength": 171, "key.bodyoffset": 762, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `debug`", "key.doc.declaration": "public func debug(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"39\" column=\"15\"><Name>debug(_:)</Name><USR>s:9FritzCore6LoggerV5debugyyypd_tF</USR><Declaration>public func debug(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>debug</codeVoice></Para></Abstract></CommentParts></Function>", "key.doc.line": 39, "key.doc.name": "debug(_:)", "key.doc.type": "Function", "key.doclength": 43, "key.docoffset": 681, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>debug</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 201, "key.name": "debug(_:)", "key.namelength": 22, "key.nameoffset": 738, "key.offset": 733, "key.parsed_declaration": "public func debug(_ items: Any...)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 39, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 820, "key.offset": 816, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5debugyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func info(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 991}], "key.bodylength": 169, "key.bodyoffset": 1026, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `info` or lower", "key.doc.declaration": "public func info(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"46\" column=\"15\"><Name>info(_:)</Name><USR>s:9FritzCore6LoggerV4infoyyypd_tF</USR><Declaration>public func info(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>info</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "info(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 938, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>info</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "info(_:)", "key.namelength": 21, "key.nameoffset": 1003, "key.offset": 998, "key.parsed_declaration": "public func info(_ items: Any...)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 46, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1083, "key.offset": 1079, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4infoyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func warn(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1253}], "key.bodylength": 169, "key.bodyoffset": 1288, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `warn` or lower", "key.doc.declaration": "public func warn(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"53\" column=\"15\"><Name>warn(_:)</Name><USR>s:9FritzCore6LoggerV4warnyyypd_tF</USR><Declaration>public func warn(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>warn</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "warn(_:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1200, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>warn</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 198, "key.name": "warn(_:)", "key.namelength": 21, "key.nameoffset": 1265, "key.offset": 1260, "key.parsed_declaration": "public func warn(_ items: Any...)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 53, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1345, "key.offset": 1341, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV4warnyyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func error(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1516}], "key.bodylength": 171, "key.bodyoffset": 1552, "key.doc.column": 15, "key.doc.comment": "Prints to stdout when level is `error` or lower", "key.doc.declaration": "public func error(_ items: Any...)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"60\" column=\"15\"><Name>error(_:)</Name><USR>s:9FritzCore6LoggerV5erroryyypd_tF</USR><Declaration>public func error(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout when level is <codeVoice>error</codeVoice> or lower</Para></Abstract></CommentParts></Function>", "key.doc.line": 60, "key.doc.name": "error(_:)", "key.doc.type": "Function", "key.doclength": 52, "key.docoffset": 1462, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>error</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 201, "key.name": "error(_:)", "key.namelength": 22, "key.nameoffset": 1528, "key.offset": 1523, "key.parsed_declaration": "public func error(_ items: Any...)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 60, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1610, "key.offset": 1606, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV5erroryyypd_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func log(_ items: Any...)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1836}], "key.bodylength": 115, "key.bodyoffset": 1870, "key.doc.column": 15, "key.doc.comment": "Prints to stdout\n- Note: Should use one of the functions above that are controlled by log level", "key.doc.declaration": "public func log(_ items: Any...)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift\" line=\"68\" column=\"15\"><Name>log(_:)</Name><USR>s:9FritzCore6LoggerV3logyyypd_tF</USR><Declaration>public func log(_ items: Any...)</Declaration><CommentParts><Abstract><Para>Prints to stdout</Para></Abstract><Discussion><Note><Para>Should use one of the functions above that are controlled by log level</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 68, "key.doc.name": "log(_:)", "key.doc.type": "Function", "key.doclength": 106, "key.docoffset": 1728, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>log</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>items</decl.var.parameter.name>: <decl.var.parameter.type>Any</decl.var.parameter.type>...</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 143, "key.name": "log(_:)", "key.namelength": 20, "key.nameoffset": 1848, "key.offset": 1843, "key.parsed_declaration": "public func log(_ items: Any...)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 68, "key.substructure": [{"key.annotated_decl": "<Declaration>let line: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Logger.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>line</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "line", "key.namelength": 4, "key.nameoffset": 1879, "key.offset": 1875, "key.parsed_declaration": "let line = items.map { String(describing: $0) }.joined(separator: \" \")", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF4lineL_SSvp"}], "key.typename": "(Logger) -> (Any...) -> ()", "key.typeusr": "$syyypd_tcD", "key.usr": "s:9FritzCore6LoggerV3logyyypd_tF"}], "key.typename": "Logger.Type", "key.typeusr": "$s9FritzCore6LoggerVmD", "key.usr": "s:9FritzCore6LoggerV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Notifications.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1301, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2580, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RetryResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 155}], "key.bodylength": 29, "key.bodyoffset": 180, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RetryResult</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 48, "key.name": "RetryResult", "key.namelength": 11, "key.nameoffset": 167, "key.offset": 162, "key.parsed_declaration": "public enum RetryResult", "key.parsed_scope.end": 12, "key.parsed_scope.start": 9, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 183, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case success</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>success</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "success", "key.namelength": 7, "key.nameoffset": 188, "key.offset": 188, "key.parsed_declaration": "case success", "key.parsed_scope.end": 10, "key.parsed_scope.start": 10, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO7successyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 198, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case error</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>error</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 203, "key.offset": 203, "key.parsed_declaration": "case error", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.typename": "(RetryResult.Type) -> RetryResult", "key.typeusr": "$sy9FritzCore11RetryResultOACmcD", "key.usr": "s:9FritzCore11RetryResultO5erroryA2CmF"}]}], "key.typename": "RetryResult.Type", "key.typeusr": "$s9FritzCore11RetryResultOmD", "key.usr": "s:9FritzCore11RetryResultO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct OperationRetryHandler</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 212}], "key.bodylength": 430, "key.bodyoffset": 249, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>OperationRetryHandler</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 461, "key.name": "OperationRetryHandler", "key.namelength": 21, "key.nameoffset": 226, "key.offset": 219, "key.parsed_declaration": "public struct OperationRetryHandler", "key.parsed_scope.end": 27, "key.parsed_scope.start": 14, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retryQueue: <Type usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 296}], "key.doc.column": 14, "key.doc.comment": "Queue to dispatch retry operation on", "key.doc.declaration": "public let retryQueue: DispatchQueue", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"17\" column=\"14\"><Name>retryQueue</Name><USR>s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp</USR><Declaration>public let retryQueue: DispatchQueue</Declaration><CommentParts><Abstract><Para>Queue to dispatch retry operation on</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "retryQueue", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 253, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retryQueue</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)OS_dispatch_queue\">DispatchQueue</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "retryQueue", "key.namelength": 10, "key.nameoffset": 307, "key.offset": 303, "key.parsed_declaration": "public let retryQueue: DispatchQueue", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "DispatchQueue", "key.typeusr": "$sSo17OS_dispatch_queueCD", "key.usr": "s:9FritzCore21OperationRetryHandlerV10retryQueueSo17OS_dispatch_queueCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let retry: (@escaping (<Type usr=\"s:9FritzCore11RetryResultO\">RetryResult</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 407}], "key.doc.column": 14, "key.doc.comment": "Perform a retry and call completion handler with result of retry", "key.doc.declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"20\" column=\"14\"><Name>retry</Name><USR>s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp</USR><Declaration>public let retry: (@escaping (RetryResult) -&gt; Void) -&gt; Void</Declaration><CommentParts><Abstract><Para>Perform a retry and call completion handler with result of retry</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "retry", "key.doc.type": "Other", "key.doclength": 69, "key.docoffset": 336, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>retry</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.enum usr=\"s:9FritzCore11RetryResultO\">RetryResult</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 52, "key.name": "retry", "key.namelength": 5, "key.nameoffset": 418, "key.offset": 414, "key.parsed_declaration": "public let retry: (@escaping (RetryResult) -> Void) -> Void", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(@escaping (RetryResult) -> ()) -> ()", "key.typeusr": "$syyy9FritzCore11RetryResultOccD", "key.usr": "s:9FritzCore21OperationRetryHandlerV5retryyyyAA0D6ResultOccvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onSuccess: () -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 534}], "key.doc.column": 14, "key.doc.comment": "Retrier received a successful retry, will not retry again", "key.doc.declaration": "public let onSuccess: () -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"23\" column=\"14\"><Name>onSuccess</Name><USR>s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp</USR><Declaration>public let onSuccess: () -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier received a successful retry, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "onSuccess", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 470, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onSuccess</decl.name>: <decl.var.type>() -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "onSuccess", "key.namelength": 9, "key.nameoffset": 545, "key.offset": 541, "key.parsed_declaration": "public let onSuccess: () -> Void", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "() -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onSuccessyycvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let onFailure: (<Type usr=\"s:Su\">UInt</Type>) -&gt; <Type usr=\"s:s4Voida\">Void</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 642}], "key.doc.column": 14, "key.doc.comment": "Retrier retried the maximum number of times, will not retry again", "key.doc.declaration": "public let onFailure: (UInt) -> Void", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"26\" column=\"14\"><Name>onFailure</Name><USR>s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp</USR><Declaration>public let onFailure: (UInt) -&gt; Void</Declaration><CommentParts><Abstract><Para>Retrier retried the maximum number of times, will not retry again</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "onFailure", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 570, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>onFailure</decl.name>: <decl.var.type>(<decl.var.parameter><decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 29, "key.name": "onFailure", "key.namelength": 9, "key.nameoffset": 653, "key.offset": 649, "key.parsed_declaration": "public let onFailure: (UInt) -> Void", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(UInt) -> ()", "key.typeusr": "$syySucD", "key.usr": "s:9FritzCore21OperationRetryHandlerV9onFailureyySucvp"}], "key.typename": "OperationRetryHandler.Type", "key.typeusr": "$s9FritzCore21OperationRetryHandlerVmD", "key.usr": "s:9FritzCore21OperationRetryHandlerV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class OperationRetrier</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 689}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 682}], "key.bodylength": 1859, "key.bodyoffset": 719, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OperationRetrier</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1884, "key.name": "OperationRetrier", "key.namelength": 16, "key.nameoffset": 701, "key.offset": 695, "key.parsed_declaration": "public final class OperationRetrier", "key.parsed_scope.end": 98, "key.parsed_scope.start": 29, "key.runtime_name": "_TtC4main16OperationRetrier", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 760}], "key.doc.column": 14, "key.doc.comment": "Delegate to handle retry cases", "key.doc.declaration": "public let handler: OperationRetryHandler", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"32\" column=\"14\"><Name>handler</Name><USR>s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp</USR><Declaration>public let handler: OperationRetryHandler</Declaration><CommentParts><Abstract><Para>Delegate to handle retry cases</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "handler", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 723, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>handler</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "handler", "key.namelength": 7, "key.nameoffset": 771, "key.offset": 767, "key.parsed_declaration": "public let handler: OperationRetryHandler", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "OperationRetryHandler", "key.typeusr": "$s9FritzCore21OperationRetryHandlerVD", "key.usr": "s:9FritzCore16OperationRetrierC7handlerAA0C12RetryHandlerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let maxRetries: <Type usr=\"s:Su\">UInt</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 854}], "key.doc.column": 14, "key.doc.comment": "Maximum number of times to retry a request", "key.doc.declaration": "public let maxRetries: UInt", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"35\" column=\"14\"><Name>maxRetries</Name><USR>s:9FritzCore16OperationRetrierC10maxRetriesSuvp</USR><Declaration>public let maxRetries: UInt</Declaration><CommentParts><Abstract><Para>Maximum number of times to retry a request</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "maxRetries", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 805, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>maxRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "maxRetries", "key.namelength": 10, "key.nameoffset": 865, "key.offset": 861, "key.parsed_declaration": "public let maxRetries: UInt", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore16OperationRetrierC10maxRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 942}], "key.doc.column": 14, "key.doc.comment": "Millisecond multiplier to adjust exponential curve", "key.doc.declaration": "public let exponentialMultiplier: UInt32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"38\" column=\"14\"><Name>exponentialMultiplier</Name><USR>s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp</USR><Declaration>public let exponentialMultiplier: UInt32</Declaration><CommentParts><Abstract><Para>Millisecond multiplier to adjust exponential curve</Para></Abstract></CommentParts></Other>", "key.doc.line": 38, "key.doc.name": "exponentialMultiplier", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 885, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponentialMultiplier</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "exponentialMultiplier", "key.namelength": 21, "key.nameoffset": 953, "key.offset": 949, "key.parsed_declaration": "public let exponentialMultiplier: UInt32", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC21exponentialMultipliers6UInt32Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var isPaused: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1034}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1027}], "key.doc.column": 27, "key.doc.comment": "Is the retry loop currently paused", "key.doc.declaration": "public private(set) var isPaused: Bool {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"41\" column=\"27\"><Name>isPaused</Name><USR>s:9FritzCore16OperationRetrierC8isPausedSbvp</USR><Declaration>public private(set) var isPaused: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Is the retry loop currently paused</Para></Abstract></CommentParts></Other>", "key.doc.line": 41, "key.doc.name": "isPaused", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 986, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isPaused</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "isPaused", "key.namelength": 8, "key.nameoffset": 1051, "key.offset": 1047, "key.parsed_declaration": "public private(set) var isPaused: Bool = true", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore16OperationRetrierC8isPausedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var attemptedRetries: <Type usr=\"s:Su\">UInt</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1117}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1110}], "key.doc.column": 27, "key.doc.comment": "Number of attempted retries", "key.doc.declaration": "public private(set) var attemptedRetries: UInt {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"44\" column=\"27\"><Name>attemptedRetries</Name><USR>s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp</USR><Declaration>public private(set) var attemptedRetries: UInt {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Number of attempted retries</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "attemptedRetries", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1076, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>attemptedRetries</decl.name>: <decl.var.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "attemptedRetries", "key.namelength": 16, "key.nameoffset": 1134, "key.offset": 1130, "key.parsed_declaration": "public private(set) var attemptedRetries: UInt = 0", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "UInt", "key.typeusr": "$sSuD", "key.usr": "s:9FritzCore16OperationRetrierC16attemptedRetriesSuvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(handler: <Type usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</Type>, maxRetries: <Type usr=\"s:Su\">UInt</Type>, exponentialMultiplier: <Type usr=\"s:s6UInt32V\">UInt32</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1164}], "key.bodylength": 118, "key.bodyoffset": 1258, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>handler</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore21OperationRetryHandlerV\">OperationRetryHandler</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxRetries</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Su\">UInt</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>exponentialMultiplier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 206, "key.name": "init(handler:maxRetries:exponentialMultiplier:)", "key.namelength": 85, "key.nameoffset": 1171, "key.offset": 1171, "key.parsed_declaration": "public init(handler: OperationRetryHandler, maxRetries: UInt, exponentialMultiplier: UInt32)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(OperationRetrier.Type) -> (OperationRetryHandler, UInt, UInt32) -> OperationRetrier", "key.typeusr": "$s7handler10maxRetries21exponentialMultiplier9FritzCore16OperationRetrierCAD0H12RetryHandlerV_Sus6UInt32VtcD", "key.usr": "s:9FritzCore16OperationRetrierC7handler10maxRetries21exponentialMultiplierAcA0C12RetryHandlerV_Sus6UInt32Vtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func start()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1408}], "key.bodylength": 88, "key.bodyoffset": 1429, "key.doc.column": 15, "key.doc.comment": "Start the retry loop", "key.doc.declaration": "public func start()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"53\" column=\"15\"><Name>start()</Name><USR>s:9FritzCore16OperationRetrierC5startyyF</USR><Declaration>public func start()</Declaration><CommentParts><Abstract><Para>Start the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 53, "key.doc.name": "start()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1381, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>start</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 103, "key.name": "start()", "key.namelength": 7, "key.nameoffset": 1420, "key.offset": 1415, "key.parsed_declaration": "public func start()", "key.parsed_scope.end": 57, "key.parsed_scope.start": 53, "key.substructure": [], "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore16OperationRetrierC5startyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stop()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1549}], "key.bodylength": 23, "key.bodyoffset": 1569, "key.doc.column": 15, "key.doc.comment": "Stops the retry loop", "key.doc.declaration": "public func stop()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift\" line=\"60\" column=\"15\"><Name>stop()</Name><USR>s:9FritzCore16OperationRetrierC4stopyyF</USR><Declaration>public func stop()</Declaration><CommentParts><Abstract><Para>Stops the retry loop</Para></Abstract></CommentParts></Function>", "key.doc.line": 60, "key.doc.name": "stop()", "key.doc.type": "Function", "key.doclength": 25, "key.docoffset": 1522, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stop</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 37, "key.name": "stop()", "key.namelength": 6, "key.nameoffset": 1561, "key.offset": 1556, "key.parsed_declaration": "public func stop()", "key.parsed_scope.end": 62, "key.parsed_scope.start": 60, "key.typename": "(OperationRetrier) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:9FritzCore16OperationRetrierC4stopyyF"}, {"key.annotated_decl": "<Declaration>let base: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>base</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "base", "key.namelength": 4, "key.nameoffset": 2257, "key.offset": 2253, "key.parsed_declaration": "let base = Double(2)", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg4baseL_Sdvp"}, {"key.annotated_decl": "<Declaration>let exponent: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>exponent</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "exponent", "key.namelength": 8, "key.nameoffset": 2282, "key.offset": 2278, "key.parsed_declaration": "let exponent = Double(attemptedRetries)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 92, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg8exponentL_Sdvp"}, {"key.annotated_decl": "<Declaration>let milliseconds: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>milliseconds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "milliseconds", "key.namelength": 12, "key.nameoffset": 2326, "key.offset": 2322, "key.parsed_declaration": "let milliseconds = pow(base, exponent) * Double(exponentialMultiplier)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg12millisecondsL_Sdvp"}, {"key.annotated_decl": "<Declaration>let millisecondJitter: <Type usr=\"s:s6UInt32V\">UInt32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>millisecondJitter</decl.name>: <decl.var.type><ref.struct usr=\"s:s6UInt32V\">UInt32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 70, "key.name": "millisecondJitter", "key.namelength": 17, "key.nameoffset": 2401, "key.offset": 2397, "key.parsed_declaration": "let millisecondJitter = arc4random_uniform(exponentialMultiplier * 10)", "key.parsed_scope.end": 94, "key.parsed_scope.start": 94, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg17millisecondJitterL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>let waitTime: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/OperationRetrier.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>waitTime</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "waitTime", "key.namelength": 8, "key.nameoffset": 2476, "key.offset": 2472, "key.parsed_declaration": "let waitTime = Int(milliseconds) + Int(millisecondJitter)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:9FritzCore16OperationRetrierC17nextRetryDeadline031_F35CFB88E9AA81B5BD104042725C95L0LL8Dispatch0O4TimeVvg04waitP0L_Sivp"}], "key.typename": "OperationRetrier.Type", "key.typeusr": "$s9FritzCore16OperationRetrierCmD", "key.usr": "s:9FritzCore16OperationRetrierC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2182, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSession) public final class Session : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 785}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 778}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 717}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 697}], "key.bodylength": 1364, "key.bodyoffset": 816, "key.doc.column": 20, "key.doc.comment": "Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.\n\n- Note: By default the SDK will read your App Token from the `FritzToken` line in your apps Info.plist. However, by providing a `Session` when conforming to `BaseIdentifiedModel` you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"14\" column=\"20\"><Name>Session</Name><USR>c:@M@FritzCore@objc(cs)FritzSession</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSession) public final class Session : NSObject</Declaration><CommentParts><Abstract><Para>Encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract><Discussion><Note><Para>By default the SDK will read your App Token from the <codeVoice>FritzToken</codeVoice> line in your apps Info.plist. However, by providing a <codeVoice>Session</codeVoice> when conforming to <codeVoice>BaseIdentifiedModel</codeVoice> you have the ability to use models in your app that are from different Fritz accounts. This is useful if you are an SDK author and want to include Fritz as a dependency in your SDK without affecting the end-develoeprs ability to also use Fritz with their App Token.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "Session", "key.doc.type": "Class", "key.doclength": 551, "key.docoffset": 146, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 806}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Session</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1390, "key.name": "Session", "key.namelength": 7, "key.nameoffset": 797, "key.offset": 791, "key.parsed_declaration": "public final class Session: NSObject", "key.parsed_scope.end": 61, "key.parsed_scope.start": 14, "key.runtime_name": "FritzSession", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>.Info : <Type usr=\"s:Se\">Decodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 820}], "key.bodylength": 96, "key.bodyoffset": 851, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 840}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class>.<decl.name>Info</decl.name> : <ref.protocol usr=\"s:Se\">Decodable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Decodable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 121, "key.name": "Info", "key.namelength": 4, "key.nameoffset": 834, "key.offset": 827, "key.parsed_declaration": "public struct Info: Decodable", "key.parsed_scope.end": 20, "key.parsed_scope.start": 16, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 856}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 867, "key.offset": 863, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 886}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 897, "key.offset": 893, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 916}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 927, "key.offset": 923, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC4InfoV9namespaceSSvp"}], "key.typename": "Session.Info.Type", "key.typeusr": "$s9FritzCore7SessionC4InfoVmD", "key.usr": "s:9FritzCore7SessionC4InfoV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(defaultSession) public static let `default`: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1020}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 996}], "key.doc.column": 21, "key.doc.comment": "Default session to use throughout SDK", "key.doc.declaration": "@objc(defaultSession) public static let `default`: FritzCore.Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"24\" column=\"21\"><Name>default</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession</USR><Declaration>@objc(defaultSession) public static let `default`: FritzCore.Session</Declaration><CommentParts><Abstract><Para>Default session to use throughout SDK</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "default", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 952, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(defaultSession)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>`default`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 404, "key.name": "default", "key.namelength": 7, "key.nameoffset": 1038, "key.offset": 1027, "key.parsed_declaration": "public static let `default`: Session =", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(cpy)defaultSession"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiKey: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1472}], "key.doc.column": 14, "key.doc.comment": "App token sent on all requests", "key.doc.declaration": "public let apiKey: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"34\" column=\"14\"><Name>apiKey</Name><USR>s:9FritzCore7SessionC6apiKeySSvp</USR><Declaration>public let apiKey: String</Declaration><CommentParts><Abstract><Para>App token sent on all requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "apiKey", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 1435, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiKey</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiKey", "key.namelength": 6, "key.nameoffset": 1483, "key.offset": 1479, "key.parsed_declaration": "public let apiKey: String", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC6apiKeySSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiUrl: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1525}], "key.doc.column": 14, "key.doc.comment": "Api to connect to", "key.doc.declaration": "public let apiUrl: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"37\" column=\"14\"><Name>apiUrl</Name><USR>s:9FritzCore7SessionC6apiUrlSSvp</USR><Declaration>public let apiUrl: String</Declaration><CommentParts><Abstract><Para>Api to connect to</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "apiUrl", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 1501, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiUrl</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "apiUrl", "key.namelength": 6, "key.nameoffset": 1536, "key.offset": 1532, "key.parsed_declaration": "public let apiUrl: String", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC6apiUrlSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let namespace: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1603}], "key.doc.column": 14, "key.doc.comment": "Namespace for local storage of Fritz files", "key.doc.declaration": "public let namespace: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"40\" column=\"14\"><Name>namespace</Name><USR>s:9FritzCore7SessionC9namespaceSSvp</USR><Declaration>public let namespace: String</Declaration><CommentParts><Abstract><Para>Namespace for local storage of Fritz files</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "namespace", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1554, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>namespace</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "namespace", "key.namelength": 9, "key.nameoffset": 1614, "key.offset": 1610, "key.parsed_declaration": "public let namespace: String", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore7SessionC9namespaceSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var settings: <Type usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1675}], "key.bodylength": 35, "key.bodyoffset": 1713, "key.doc.column": 14, "key.doc.comment": "Current settings for this session", "key.doc.declaration": "public var settings: SessionSettings { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"43\" column=\"14\"><Name>settings</Name><USR>s:9FritzCore7SessionC8settingsAA0C8SettingsVvp</USR><Declaration>public var settings: SessionSettings { get }</Declaration><CommentParts><Abstract><Para>Current settings for this session</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "settings", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1635, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>settings</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore15SessionSettingsV\">SessionSettings</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 67, "key.name": "settings", "key.namelength": 8, "key.nameoffset": 1686, "key.offset": 1682, "key.parsed_declaration": "public var settings: SessionSettings", "key.parsed_scope.end": 45, "key.parsed_scope.start": 43, "key.typename": "SessionSettings", "key.typeusr": "$s9FritzCore15SessionSettingsVD", "key.usr": "s:9FritzCore7SessionC8settingsAA0C8SettingsVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: <Type usr=\"s:SS\">String</Type>, apiUrl: <Type usr=\"s:SS\">String</Type>, namespace: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1820}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 41, "key.offset": 1776}], "key.bodylength": 101, "key.bodyoffset": 1884, "key.doc.column": 10, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"49\" column=\"10\"><Name>init(apiKey:apiUrl:namespace:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:</USR><Declaration>@objc(initWithAppToken:apiUrl:namespace:) public init(apiKey: String, apiUrl: String, namespace: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 49, "key.doc.name": "init(apiKey:apiUrl:namespace:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 1753, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:apiUrl:namespace:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>apiUrl</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>namespace</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 159, "key.name": "init(apiKey:apiUrl:namespace:)", "key.namelength": 55, "key.nameoffset": 1827, "key.offset": 1827, "key.parsed_declaration": "public init(apiKey: String, apiUrl: String, namespace: String)", "key.parsed_scope.end": 54, "key.parsed_scope.start": 49, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:\">init(apiKey:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String, String, String) -> Session", "key.typeusr": "$s6apiKey0A3Url9namespace9FritzCore7SessionCSS_S2StcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithAppToken:) public convenience init(apiKey: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2047}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2040}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 2013}], "key.bodylength": 97, "key.bodyoffset": 2081, "key.doc.column": 22, "key.doc.comment": "Create a session", "key.doc.declaration": "@objc(initWithAppToken:) public convenience init(apiKey: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift\" line=\"58\" column=\"22\"><Name>init(apiKey:)</Name><USR>c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:</USR><Declaration>@objc(initWithAppToken:) public convenience init(apiKey: String)</Declaration><CommentParts><Abstract><Para>Create a session</Para></Abstract></CommentParts></Function>", "key.doc.line": 58, "key.doc.name": "init(apiKey:)", "key.doc.type": "Function", "key.doclength": 21, "key.docoffset": 1990, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/Session.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithAppToken:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiKey</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 120, "key.name": "init(apiKey:)", "key.namelength": 20, "key.nameoffset": 2059, "key.offset": 2059, "key.parsed_declaration": "public convenience init(apiKey: String)", "key.parsed_scope.end": 60, "key.parsed_scope.start": 58, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:apiUrl:namespace:\">init(apiKey:apiUrl:namespace:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Session.Type) -> (String) -> Session", "key.typeusr": "$s6apiKey9FritzCore7SessionCSS_tcD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession(im)initWithAppToken:"}], "key.typename": "Session.Type", "key.typeusr": "$s9FritzCore7SessionCmD", "key.usr": "c:@M@FritzCore@objc(cs)FritzSession"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1368, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionEvent</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 212}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 151}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 151}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 151}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 151}], "key.bodylength": 1126, "key.bodyoffset": 240, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionEvent</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1148, "key.name": "SessionEvent", "key.namelength": 12, "key.nameoffset": 226, "key.offset": 219, "key.parsed_declaration": "public struct SessionEvent", "key.parsed_scope.end": 41, "key.parsed_scope.start": 10, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>.EventType : <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 244}], "key.bodylength": 805, "key.bodyoffset": 275, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 267}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>.<decl.name>EventType</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 830, "key.name": "EventType", "key.namelength": 9, "key.nameoffset": 256, "key.offset": 251, "key.parsed_declaration": "public enum EventType: String", "key.parsed_scope.end": 27, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 63, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 280, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationDidEnterBackground = &quot;app_did_enter_background&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 317}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidEnterBackground</decl.name> = <syntaxtype.string>&quot;app_did_enter_background&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 58, "key.name": "applicationDidEnterBackground", "key.namelength": 29, "key.nameoffset": 285, "key.offset": 285, "key.parsed_declaration": "case applicationDidEnterBackground = \"app_did_enter_background\"", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO29applicationDidEnterBackgroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 65, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 348, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationWillEnterForeground = &quot;app_will_enter_foreground&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 27, "key.offset": 386}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillEnterForeground</decl.name> = <syntaxtype.string>&quot;app_will_enter_foreground&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 60, "key.name": "applicationWillEnterForeground", "key.namelength": 30, "key.nameoffset": 353, "key.offset": 353, "key.parsed_declaration": "case applicationWillEnterForeground = \"app_will_enter_foreground\"", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO30applicationWillEnterForegroundyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 57, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 418, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationDidBecomeActive = &quot;app_did_become_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 452}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationDidBecomeActive</decl.name> = <syntaxtype.string>&quot;app_did_become_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 52, "key.name": "applicationDidBecomeActive", "key.namelength": 26, "key.nameoffset": 423, "key.offset": 423, "key.parsed_declaration": "case applicationDidBecomeActive = \"app_did_become_active\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO26applicationDidBecomeActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 59, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 480, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case applicationWillResignActive = &quot;app_will_resign_active&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 24, "key.offset": 515}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>applicationWillResignActive</decl.name> = <syntaxtype.string>&quot;app_will_resign_active&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 54, "key.name": "applicationWillResignActive", "key.namelength": 27, "key.nameoffset": 485, "key.offset": 485, "key.parsed_declaration": "case applicationWillResignActive = \"app_will_resign_active\"", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO27applicationWillResignActiveyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 39, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 544, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelInstalled = &quot;model_installed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 17, "key.offset": 566}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelInstalled</decl.name> = <syntaxtype.string>&quot;model_installed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 34, "key.name": "modelInstalled", "key.namelength": 14, "key.nameoffset": 549, "key.offset": 549, "key.parsed_declaration": "case modelInstalled = \"model_installed\"", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO14modelInstalledyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 56, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 588, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownloadCompleted = &quot;model_download_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 26, "key.offset": 618}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadCompleted</decl.name> = <syntaxtype.string>&quot;model_download_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 51, "key.name": "modelDownloadCompleted", "key.namelength": 22, "key.nameoffset": 593, "key.offset": 593, "key.parsed_declaration": "case modelDownloadCompleted = \"model_download_completed\"", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO22modelDownloadCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 50, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 649, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDownloadFailed = &quot;model_download_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 676}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDownloadFailed</decl.name> = <syntaxtype.string>&quot;model_download_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 45, "key.name": "modelDownloadFailed", "key.namelength": 19, "key.nameoffset": 654, "key.offset": 654, "key.parsed_declaration": "case modelDownloadFailed = \"model_download_failed\"", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO19modelDownloadFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 704, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompileCompleted = &quot;model_compile_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 733}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileCompleted</decl.name> = <syntaxtype.string>&quot;model_compile_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelCompileCompleted", "key.namelength": 21, "key.nameoffset": 709, "key.offset": 709, "key.parsed_declaration": "case modelCompileCompleted = \"model_compile_completed\"", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelCompileCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 48, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 763, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelCompileFailed = &quot;model_compile_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 22, "key.offset": 789}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelCompileFailed</decl.name> = <syntaxtype.string>&quot;model_compile_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 43, "key.name": "modelCompileFailed", "key.namelength": 18, "key.nameoffset": 768, "key.offset": 768, "key.parsed_declaration": "case modelCompileFailed = \"model_compile_failed\"", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO18modelCompileFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 60, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 816, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryptionCompleted = &quot;model_decryption_completed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 28, "key.offset": 848}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionCompleted</decl.name> = <syntaxtype.string>&quot;model_decryption_completed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 55, "key.name": "modelDecryptionCompleted", "key.namelength": 24, "key.nameoffset": 821, "key.offset": 821, "key.parsed_declaration": "case modelDecryptionCompleted = \"model_decryption_completed\"", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO24modelDecryptionCompletedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 54, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 881, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case modelDecryptionFailed = &quot;model_decryption_failed&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 910}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>modelDecryptionFailed</decl.name> = <syntaxtype.string>&quot;model_decryption_failed&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 49, "key.name": "modelDecryptionFailed", "key.namelength": 21, "key.nameoffset": 886, "key.offset": 886, "key.parsed_declaration": "case modelDecryptionFailed = \"model_decryption_failed\"", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO21modelDecryptionFailedyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 30, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 940, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case prediction = &quot;prediction&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 12, "key.offset": 958}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>prediction</decl.name> = <syntaxtype.string>&quot;prediction&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 25, "key.name": "prediction", "key.namelength": 10, "key.nameoffset": 945, "key.offset": 945, "key.parsed_declaration": "case prediction = \"prediction\"", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO10predictionyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 46, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 975, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case inputOutputSample = &quot;input_output_sample&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 21, "key.offset": 1000}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>inputOutputSample</decl.name> = <syntaxtype.string>&quot;input_output_sample&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 41, "key.name": "inputOutputSample", "key.namelength": 17, "key.nameoffset": 980, "key.offset": 980, "key.parsed_declaration": "case inputOutputSample = \"input_output_sample\"", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO17inputOutputSampleyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 51, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1026, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case predictionAnnotation = &quot;prediction_annotation&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 23, "key.offset": 1054}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>predictionAnnotation</decl.name> = <syntaxtype.string>&quot;prediction_annotation&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 46, "key.name": "predictionAnnotation", "key.namelength": 20, "key.nameoffset": 1031, "key.offset": 1031, "key.parsed_declaration": "case predictionAnnotation = \"prediction_annotation\"", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(SessionEvent.EventType.Type) -> SessionEvent.EventType", "key.typeusr": "$sy9FritzCore12SessionEventV0D4TypeOAEmcD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO20predictionAnnotationyA2EmF"}]}], "key.typename": "SessionEvent.EventType.Type", "key.typeusr": "$s9FritzCore12SessionEventV0D4TypeOmD", "key.usr": "s:9FritzCore12SessionEventV0D4TypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1085}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>type</decl.name>: <decl.var.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "type", "key.namelength": 4, "key.nameoffset": 1096, "key.offset": 1092, "key.parsed_declaration": "public let type: EventType", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "SessionEvent.EventType", "key.typeusr": "$s9FritzCore12SessionEventV0D4TypeOD", "key.usr": "s:9FritzCore12SessionEventV4typeAC0D4TypeOvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1115}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "data", "key.namelength": 4, "key.nameoffset": 1126, "key.offset": 1122, "key.parsed_declaration": "public let data: RequestOptions", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:9FritzCore12SessionEventV4dataSDySSypGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sessionIdentifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1150}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 51, "key.name": "sessionIdentifier", "key.namelength": 17, "key.nameoffset": 1161, "key.offset": 1157, "key.parsed_declaration": "public let sessionIdentifier = FritzCore.sessionIdentifier", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:9FritzCore12SessionEventV17sessionIdentifierSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let timestamp: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1212}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>timestamp</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "timestamp", "key.namelength": 9, "key.nameoffset": 1223, "key.offset": 1219, "key.parsed_declaration": "public let timestamp = Date().timeIntervalSince1970", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore12SessionEventV9timestampSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(type: <Type usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</Type>, data: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1267}], "key.bodylength": 45, "key.bodyoffset": 1319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionEvent.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>type</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:9FritzCore12SessionEventV0D4TypeO\">EventType</ref.enum></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init(type:data:)", "key.namelength": 43, "key.nameoffset": 1274, "key.offset": 1274, "key.parsed_declaration": "public init(type: EventType, data: RequestOptions)", "key.parsed_scope.end": 40, "key.parsed_scope.start": 37, "key.substructure": [], "key.typename": "(SessionEvent.Type) -> (SessionEvent.EventType, [String : Any]) -> SessionEvent", "key.typeusr": "$s4type4data9FritzCore12SessionEventVAE0F4TypeO_SDySSypGtcD", "key.usr": "s:9FritzCore12SessionEventV4type4dataA2C0D4TypeO_SDySSypGtcfc"}], "key.typename": "SessionEvent.Type", "key.typeusr": "$s9FritzCore12SessionEventVmD", "key.usr": "s:9FritzCore12SessionEventV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 9801, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum SessionManagerError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 173}], "key.bodylength": 17, "key.bodyoffset": 213, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 206}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SessionManagerError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 51, "key.name": "SessionManagerError", "key.namelength": 19, "key.nameoffset": 185, "key.offset": 180, "key.parsed_declaration": "public enum SessionManagerError: Error", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 216, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case disabled</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>disabled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "disabled", "key.namelength": 8, "key.nameoffset": 221, "key.offset": 221, "key.parsed_declaration": "case disabled", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(SessionManagerError.Type) -> SessionManagerError", "key.typeusr": "$sy9FritzCore19SessionManagerErrorOACmcD", "key.usr": "s:9FritzCore19SessionManagerErrorO8disabledyA2CmF"}]}], "key.typename": "SessionManagerError.Type", "key.typeusr": "$s9FritzCore19SessionManagerErrorOmD", "key.usr": "s:9FritzCore19SessionManagerErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class SessionManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 327}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 320}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 259}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 259}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 259}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 259}], "key.bodylength": 2624, "key.bodyoffset": 365, "key.doc.column": 20, "key.doc.comment": "Manages session data.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class SessionManager : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"17\" column=\"20\"><Name>SessionManager</Name><USR>c:@M@FritzCore@objc(cs)SessionManager</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\npublic final class SessionManager : NSObject</Declaration><CommentParts><Abstract><Para>Manages session data.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "SessionManager", "key.doc.type": "Class", "key.doclength": 26, "key.docoffset": 233, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 355}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SessionManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2657, "key.name": "SessionManager", "key.namelength": 14, "key.nameoffset": 339, "key.offset": 333, "key.parsed_declaration": "public final class SessionManager: NSObject", "key.parsed_scope.end": 96, "key.parsed_scope.start": 17, "key.runtime_name": "_TtC4main14SessionManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 403}], "key.doc.column": 14, "key.doc.comment": "Session to make requests in", "key.doc.declaration": "public let session: Session", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"20\" column=\"14\"><Name>session</Name><USR>s:9FritzCore14SessionManagerC7sessionAA0C0Cvp</USR><Declaration>public let session: Session</Declaration><CommentParts><Abstract><Para>Session to make requests in</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "session", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 369, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>session</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "session", "key.namelength": 7, "key.nameoffset": 414, "key.offset": 410, "key.parsed_declaration": "public let session: Session", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Session", "key.typeusr": "$s9FritzCore7SessionCD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAA0C0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiClient: <Type usr=\"s:9FritzCore9APIClientC\">APIClient</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 473}], "key.doc.column": 14, "key.doc.comment": "API client to make requests with", "key.doc.declaration": "public let apiClient: APIClient", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"23\" column=\"14\"><Name>apiClient</Name><USR>s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp</USR><Declaration>public let apiClient: APIClient</Declaration><CommentParts><Abstract><Para>API client to make requests with</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "apiClient", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 434, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiClient</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore9APIClientC\">APIClient</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "apiClient", "key.namelength": 9, "key.nameoffset": 484, "key.offset": 480, "key.parsed_declaration": "public let apiClient: APIClient", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "APIClient", "key.typeusr": "$s9FritzCore9APIClientCD", "key.usr": "s:9FritzCore14SessionManagerC9apiClientAA9APIClientCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestQueue: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;<Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 548}], "key.doc.column": 14, "key.doc.comment": "Queue to batch and retry requests", "key.doc.declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"26\" column=\"14\"><Name>trackRequestQueue</Name><USR>s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp</USR><Declaration>public let trackRequestQueue: BatchedRequestQueue&lt;SessionEvent&gt;</Declaration><CommentParts><Abstract><Para>Queue to batch and retry requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "trackRequestQueue", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 508, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestQueue</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;<ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "trackRequestQueue", "key.namelength": 17, "key.nameoffset": 559, "key.offset": 555, "key.parsed_declaration": "public let trackRequestQueue: BatchedRequestQueue<SessionEvent>", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore14SessionManagerC17trackRequestQueue7flushed17completionHandlerySayAA0C5EventVG_yAA8ResponseOctF\">trackRequestQueue(flushed:completionHandler:)</RelatedName>"}], "key.typename": "BatchedRequestQueue<SessionEvent>", "key.typeusr": "$s9FritzCore19BatchedRequestQueueCyAA12SessionEventVGD", "key.usr": "s:9FritzCore14SessionManagerC17trackRequestQueueAA07BatchedfG0CyAA0C5EventVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let annotationsRequestQueue: <Type usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</Type>&lt;<Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 615}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>annotationsRequestQueue</decl.name>: <decl.var.type><ref.class usr=\"s:9FritzCore19BatchedRequestQueueC\">BatchedRequestQueue</ref.class>&lt;<ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 62, "key.name": "annotationsRequestQueue", "key.namelength": 23, "key.nameoffset": 626, "key.offset": 622, "key.parsed_declaration": "public let annotationsRequestQueue: BatchedRequestQueue<SessionEvent>", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "BatchedRequestQueue<SessionEvent>", "key.typeusr": "$s9FritzCore19BatchedRequestQueueCyAA12SessionEventVGD", "key.usr": "s:9FritzCore14SessionManagerC23annotationsRequestQueueAA07BatchedfG0CyAA0C5EventVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let fileManager: <Type usr=\"c:objc(cs)NSFileManager\">FileManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 715}], "key.doc.column": 14, "key.doc.comment": "Default file manager", "key.doc.declaration": "public let fileManager: FileManager", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"31\" column=\"14\"><Name>fileManager</Name><USR>s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp</USR><Declaration>public let fileManager: FileManager</Declaration><CommentParts><Abstract><Para>Default file manager</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "fileManager", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 688, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fileManager</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)NSFileManager\">FileManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "fileManager", "key.namelength": 11, "key.nameoffset": 726, "key.offset": 722, "key.parsed_declaration": "public let fileManager: FileManager = .default", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "FileManager", "key.typeusr": "$sSo13NSFileManagerCD", "key.usr": "s:9FritzCore14SessionManagerC04fileD0So06NSFileD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let logger: <Type usr=\"s:9FritzCore6LoggerV\">Logger</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 795}], "key.doc.column": 14, "key.doc.comment": "Private logger instance", "key.doc.declaration": "public let logger: FritzCore.Logger", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"34\" column=\"14\"><Name>logger</Name><USR>s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp</USR><Declaration>public let logger: FritzCore.Logger</Declaration><CommentParts><Abstract><Para>Private logger instance</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "logger", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 765, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>logger</decl.name>: <decl.var.type><ref.struct usr=\"s:9FritzCore6LoggerV\">Logger</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "logger", "key.namelength": 6, "key.nameoffset": 806, "key.offset": 802, "key.parsed_declaration": "public let logger = Logger(name: \"SessionManager\")", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "Logger", "key.typeusr": "$s9FritzCore6LoggerVD", "key.usr": "s:9FritzCore14SessionManagerC6loggerAA6LoggerVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(session: <Type usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1200}], "key.bodylength": 1153, "key.bodyoffset": 1231, "key.doc.column": 10, "key.doc.comment": "Required initializer\n- Parameters:\n  - session: session", "key.doc.declaration": "public init(session: Session)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"47\" column=\"10\"><Name>init(session:)</Name><USR>s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc</USR><Declaration>public init(session: Session)</Declaration><CommentParts><Abstract><Para>Required initializer</Para></Abstract><Parameters><Parameter><Name>session</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>session</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "init(session:)", "key.doc.parameters": [{"discussion": [{"Para": "session"}], "name": "session"}], "key.doc.type": "Function", "key.doclength": 72, "key.docoffset": 1126, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>session</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzSession\">Session</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1178, "key.name": "init(session:)", "key.namelength": 22, "key.nameoffset": 1207, "key.offset": 1207, "key.parsed_declaration": "public init(session: Session)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 1714}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1719, "key.offset": 1719, "key.parsed_declaration": "self.trackRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 1892}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 1897, "key.offset": 1897, "key.parsed_declaration": "self.trackRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 2026}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 2031, "key.offset": 2031, "key.parsed_declaration": "self.annotationsRequestQueue.onFlush = { [weak self] events, completionHandler in", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}, {"key.annotated_decl": "<Declaration>weak var `self`: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.weak", "key.length": 4, "key.offset": 2214}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>weak</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>`self`</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 4, "key.name": "self", "key.namelength": 4, "key.nameoffset": 2219, "key.offset": 2219, "key.parsed_declaration": "self.annotationsRequestQueue.apiHealthcheck = { [weak self] completionHandler in", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)self\">self()</RelatedName>"}], "key.typename": "SessionManager?", "key.typeusr": "$s9FritzCore14SessionManagerCSgD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc4selfL_ACSgvp"}], "key.typename": "(SessionManager.Type) -> (Session) -> SessionManager", "key.typeusr": "$s7session9FritzCore14SessionManagerCAB0D0C_tcD", "key.usr": "s:9FritzCore14SessionManagerC7sessionAcA0C0C_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func trackEvent(_ event: <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2450}], "key.bodylength": 125, "key.bodyoffset": 2497, "key.doc.column": 15, "key.doc.comment": "Track an event, taking into account blacklisted events", "key.doc.declaration": "public func trackEvent(_ event: SessionEvent)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"80\" column=\"15\"><Name>trackEvent(_:)</Name><USR>s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF</USR><Declaration>public func trackEvent(_ event: SessionEvent)</Declaration><CommentParts><Abstract><Para>Track an event, taking into account blacklisted events</Para></Abstract></CommentParts></Function>", "key.doc.line": 80, "key.doc.name": "trackEvent(_:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 2389, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackEvent</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>event</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 166, "key.name": "trackEvent(_:)", "key.namelength": 33, "key.nameoffset": 2462, "key.offset": 2457, "key.parsed_declaration": "public func trackEvent(_ event: SessionEvent)", "key.parsed_scope.end": 83, "key.parsed_scope.start": 80, "key.substructure": [], "key.typename": "(SessionManager) -> (SessionEvent) -> ()", "key.typeusr": "$syy9FritzCore12SessionEventVcD", "key.usr": "s:9FritzCore14SessionManagerC10trackEventyyAA0cF0VF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func trackAnnotation(_ event: <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2664}], "key.bodylength": 147, "key.bodyoffset": 2716, "key.doc.column": 15, "key.doc.comment": "Track a prediction annotation.", "key.doc.declaration": "public func trackAnnotation(_ event: SessionEvent)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift\" line=\"86\" column=\"15\"><Name>trackAnnotation(_:)</Name><USR>s:9FritzCore14SessionManagerC15trackAnnotationyyAA0C5EventVF</USR><Declaration>public func trackAnnotation(_ event: SessionEvent)</Declaration><CommentParts><Abstract><Para>Track a prediction annotation.</Para></Abstract></CommentParts></Function>", "key.doc.line": 86, "key.doc.name": "trackAnnotation(_:)", "key.doc.type": "Function", "key.doclength": 35, "key.docoffset": 2627, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>trackAnnotation</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>event</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 193, "key.name": "trackAnnotation(_:)", "key.namelength": 38, "key.nameoffset": 2676, "key.offset": 2671, "key.parsed_declaration": "public func trackAnnotation(_ event: SessionEvent)", "key.parsed_scope.end": 89, "key.parsed_scope.start": 86, "key.substructure": [], "key.typename": "(SessionManager) -> (SessionEvent) -> ()", "key.typeusr": "$syy9FritzCore12SessionEventVcD", "key.usr": "s:9FritzCore14SessionManagerC15trackAnnotationyyAA0C5EventVF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 111, "key.bodyoffset": 2876, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionManager.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 120, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 2868, "key.offset": 2868, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 95, "key.parsed_scope.start": 91, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionManager) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager(im)dealloc"}], "key.typename": "SessionManager.Type", "key.typeusr": "$s9FritzCore14SessionManagerCmD", "key.usr": "c:@M@FritzCore@objc(cs)SessionManager"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Initialize", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2995}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Healthcheck", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5085}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5791}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4099, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct SessionSettings : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 216}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 155}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 155}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 155}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 155}], "key.bodylength": 2623, "key.bodyoffset": 256, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 247}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>SessionSettings</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 2657, "key.name": "SessionSettings", "key.namelength": 15, "key.nameoffset": 230, "key.offset": 223, "key.parsed_declaration": "public struct SessionSettings: Codable", "key.parsed_scope.end": 79, "key.parsed_scope.start": 10, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 309}], "key.doc.column": 14, "key.doc.comment": "If false, no calls will be made to the API", "key.doc.declaration": "public let apiRequestsEnabled: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"13\" column=\"14\"><Name>apiRequestsEnabled</Name><USR>s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp</USR><Declaration>public let apiRequestsEnabled: Bool</Declaration><CommentParts><Abstract><Para>If false, no calls will be made to the API</Para></Abstract></CommentParts></Other>", "key.doc.line": 13, "key.doc.name": "apiRequestsEnabled", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 260, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>apiRequestsEnabled</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "apiRequestsEnabled", "key.namelength": 18, "key.nameoffset": 320, "key.offset": 316, "key.parsed_declaration": "public let apiRequestsEnabled: Bool", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabledSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 380}], "key.doc.column": 14, "key.doc.comment": "Settings refresh interval", "key.doc.declaration": "public let settingsRefreshInterval: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"16\" column=\"14\"><Name>settingsRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp</USR><Declaration>public let settingsRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>Settings refresh interval</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "settingsRefreshInterval", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 348, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>settingsRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "settingsRefreshInterval", "key.namelength": 23, "key.nameoffset": 391, "key.offset": 387, "key.parsed_declaration": "public let settingsRefreshInterval: TimeInterval", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV23settingsRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 485}], "key.doc.column": 14, "key.doc.comment": "Control model I/O sampling based on ratio, 0-1", "key.doc.declaration": "public let modelInputOutputSamplingRatio: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"19\" column=\"14\"><Name>modelInputOutputSamplingRatio</Name><USR>s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp</USR><Declaration>public let modelInputOutputSamplingRatio: Float</Declaration><CommentParts><Abstract><Para>Control model I/O sampling based on ratio, 0-1</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "modelInputOutputSamplingRatio", "key.doc.type": "Other", "key.doclength": 51, "key.docoffset": 432, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelInputOutputSamplingRatio</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "modelInputOutputSamplingRatio", "key.namelength": 29, "key.nameoffset": 496, "key.offset": 492, "key.parsed_declaration": "public let modelInputOutputSamplingRatio: Float", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:9FritzCore15SessionSettingsV29modelInputOutputSamplingRatioSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 579}], "key.doc.column": 14, "key.doc.comment": "Control batch size of track requests", "key.doc.declaration": "public let trackRequestBatchSize: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"22\" column=\"14\"><Name>trackRequestBatchSize</Name><USR>s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp</USR><Declaration>public let trackRequestBatchSize: Int</Declaration><CommentParts><Abstract><Para>Control batch size of track requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "trackRequestBatchSize", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 536, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trackRequestBatchSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "trackRequestBatchSize", "key.namelength": 21, "key.nameoffset": 590, "key.offset": 586, "key.parsed_declaration": "public let trackRequestBatchSize: Int", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:9FritzCore15SessionSettingsV21trackRequestBatchSizeSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 674}], "key.doc.column": 14, "key.doc.comment": "Control if events are gzipped in track response", "key.doc.declaration": "public let gzipTrackEvents: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"25\" column=\"14\"><Name>gzipTrackEvents</Name><USR>s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp</USR><Declaration>public let gzipTrackEvents: Bool</Declaration><CommentParts><Abstract><Para>Control if events are gzipped in track response</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "gzipTrackEvents", "key.doc.type": "Other", "key.doclength": 52, "key.docoffset": 620, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>gzipTrackEvents</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "gzipTrackEvents", "key.namelength": 15, "key.nameoffset": 685, "key.offset": 681, "key.parsed_declaration": "public let gzipTrackEvents: Bool", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore15SessionSettingsV15gzipTrackEventsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let batchFlushInterval: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 756}], "key.doc.column": 14, "key.doc.comment": "Batch request flush interval in seconds", "key.doc.declaration": "public let batchFlushInterval: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"28\" column=\"14\"><Name>batchFlushInterval</Name><USR>s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp</USR><Declaration>public let batchFlushInterval: Double</Declaration><CommentParts><Abstract><Para>Batch request flush interval in seconds</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "batchFlushInterval", "key.doc.type": "Other", "key.doclength": 44, "key.docoffset": 710, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>batchFlushInterval</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "batchFlushInterval", "key.namelength": 18, "key.nameoffset": 767, "key.offset": 763, "key.parsed_declaration": "public let batchFlushInterval: Double", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV18batchFlushIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 838}], "key.doc.column": 14, "key.doc.comment": "List of events we should not track", "key.doc.declaration": "public let eventBlacklist: Set<String>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"31\" column=\"14\"><Name>eventBlacklist</Name><USR>s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp</USR><Declaration>public let eventBlacklist: Set&lt;String&gt;</Declaration><CommentParts><Abstract><Para>List of events we should not track</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "eventBlacklist", "key.doc.type": "Other", "key.doclength": 39, "key.docoffset": 797, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>eventBlacklist</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "eventBlacklist", "key.namelength": 14, "key.nameoffset": 849, "key.offset": 845, "key.parsed_declaration": "public let eventBlacklist: Set<String>", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "Set<String>", "key.typeusr": "$sShySSGD", "key.usr": "s:9FritzCore15SessionSettingsV14eventBlacklistShySSGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 949}], "key.doc.column": 14, "key.doc.comment": "TimeInterval to refresh active model settings from the server.", "key.doc.declaration": "public let activeModelRefreshInterval: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"34\" column=\"14\"><Name>activeModelRefreshInterval</Name><USR>s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp</USR><Declaration>public let activeModelRefreshInterval: TimeInterval</Declaration><CommentParts><Abstract><Para>TimeInterval to refresh active model settings from the server.</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "activeModelRefreshInterval", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 880, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>activeModelRefreshInterval</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 44, "key.name": "activeModelRefreshInterval", "key.namelength": 26, "key.nameoffset": 960, "key.offset": 956, "key.parsed_declaration": "public let activeModelRefreshInterval: TimeInterval", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:9FritzCore15SessionSettingsV26activeModelRefreshIntervalSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let recordAnnotationsEnabled: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1055}], "key.doc.column": 14, "key.doc.comment": "If true, annotations can be sent to the API.", "key.doc.declaration": "public let recordAnnotationsEnabled: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"37\" column=\"14\"><Name>recordAnnotationsEnabled</Name><USR>s:9FritzCore15SessionSettingsV24recordAnnotationsEnabledSbvp</USR><Declaration>public let recordAnnotationsEnabled: Bool</Declaration><CommentParts><Abstract><Para>If true, annotations can be sent to the API.</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "recordAnnotationsEnabled", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 1004, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>recordAnnotationsEnabled</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "recordAnnotationsEnabled", "key.namelength": 24, "key.nameoffset": 1066, "key.offset": 1062, "key.parsed_declaration": "public let recordAnnotationsEnabled: Bool", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:9FritzCore15SessionSettingsV24recordAnnotationsEnabledSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let annotationRequestBatchSize: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1143}], "key.doc.column": 14, "key.doc.comment": "Control batch size of track requests", "key.doc.declaration": "public let annotationRequestBatchSize: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift\" line=\"40\" column=\"14\"><Name>annotationRequestBatchSize</Name><USR>s:9FritzCore15SessionSettingsV26annotationRequestBatchSizeSivp</USR><Declaration>public let annotationRequestBatchSize: Int</Declaration><CommentParts><Abstract><Para>Control batch size of track requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "annotationRequestBatchSize", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 1100, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>annotationRequestBatchSize</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "annotationRequestBatchSize", "key.namelength": 26, "key.nameoffset": 1154, "key.offset": 1150, "key.parsed_declaration": "public let annotationRequestBatchSize: Int", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:9FritzCore15SessionSettingsV26annotationRequestBatchSizeSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(apiRequestsEnabled: <Type usr=\"s:Sb\">Bool</Type> = true, settingsRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 30 * 60, modelInputOutputSamplingRatio: <Type usr=\"s:Sf\">Float</Type> = 0, gzipTrackEvents: <Type usr=\"s:Sb\">Bool</Type> = false, trackRequestBatchSize: <Type usr=\"s:Si\">Int</Type> = 100, batchFlushInterval: <Type usr=\"s:Sd\">Double</Type> = 60.0, eventBlacklist: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt; = [], activeModelRefreshInterval: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 15 * 60, recordAnnotationsEnabled: <Type usr=\"s:Sb\">Bool</Type> = false, annotationRequestBatchSize: <Type usr=\"s:Si\">Int</Type> = 10)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1871}], "key.bodylength": 561, "key.bodyoffset": 2316, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzCore/SessionSettings.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>apiRequestsEnabled</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>settingsRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 30 * 60</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelInputOutputSamplingRatio</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type> = 0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>gzipTrackEvents</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>trackRequestBatchSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 100</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>batchFlushInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 60.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>eventBlacklist</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.parameter.type> = []</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelRefreshInterval</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 15 * 60</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>recordAnnotationsEnabled</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>annotationRequestBatchSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 10</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1000, "key.name": "init(apiRequestsEnabled:settingsRefreshInterval:modelInputOutputSamplingRatio:gzipTrackEvents:trackRequestBatchSize:batchFlushInterval:eventBlacklist:activeModelRefreshInterval:recordAnnotationsEnabled:annotationRequestBatchSize:)", "key.namelength": 436, "key.nameoffset": 1878, "key.offset": 1878, "key.parsed_declaration": "public init(\n  apiRequestsEnabled: Bool = true,\n  settingsRefreshInterval: TimeInterval = 30 * 60,\n  modelInputOutputSamplingRatio: Float = 0,\n  gzipTrackEvents: Bool = false,\n  trackRequestBatchSize: Int = 100,\n  batchFlushInterval: Double = 60.0,\n  eventBlacklist: Set<String> = [],\n  activeModelRefreshInterval: TimeInterval = 15 * 60,\n  recordAnnotationsEnabled: Bool = false,\n  annotationRequestBatchSize: Int = 10\n)", "key.parsed_scope.end": 78, "key.parsed_scope.start": 56, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore15SessionSettingsV4fromACs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(SessionSettings.Type) -> (Bool, Double, Float, Bool, Int, Double, Set<String>, Double, Bool, Int) -> SessionSettings", "key.typeusr": "$s18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushF014eventBlacklist011activeModeleF0017recordAnnotationsC0010annotationpqR09FritzCore15SessionSettingsVSb_SdSfSbSiSdShySSGSdSbSitcD", "key.usr": "s:9FritzCore15SessionSettingsV18apiRequestsEnabled23settingsRefreshInterval29modelInputOutputSamplingRatio15gzipTrackEvents21trackRequestBatchSize010batchFlushJ014eventBlacklist011activeModeliJ0017recordAnnotationsG0010annotationtuV0ACSb_SdSfSbSiSdShySSGSdSbSitcfc"}], "key.typename": "SessionSettings.Type", "key.typeusr": "$s9FritzCore15SessionSettingsVmD", "key.usr": "s:9FritzCore15SessionSettingsV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 14, "key.name": "MARK: - Static", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2885}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 16, "key.name": "MARK: - Sampling", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3599}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Array.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2017, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CGImage+CVPixelBuffer.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5785, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CGImage+RawBytes.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3226, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CGImagePropertyOrientation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2264, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8059, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func createPixelBuffer(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1233}], "key.bodylength": 296, "key.bodyoffset": 1307, "key.doc.column": 13, "key.doc.comment": "Creates a RGB pixel buffer of the specified width and height.", "key.doc.declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"26\" column=\"13\"><Name>createPixelBuffer(width:height:)</Name><USR>s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF</USR><Declaration>public func createPixelBuffer(width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Creates a RGB pixel buffer of the specified width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 26, "key.doc.name": "createPixelBuffer(width:height:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 1167, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>createPixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 364, "key.name": "createPixelBuffer(width:height:)", "key.namelength": 42, "key.nameoffset": 1245, "key.offset": 1240, "key.parsed_declaration": "public func createPixelBuffer(width: Int, height: Int) -> CVPixelBuffer?", "key.parsed_scope.end": 41, "key.parsed_scope.start": 26, "key.substructure": [{"key.annotated_decl": "<Declaration>var pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelBuffer", "key.namelength": 11, "key.nameoffset": 1314, "key.offset": 1310, "key.parsed_declaration": "var pixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF05pixelE0L_AGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 126, "key.name": "status", "key.namelength": 6, "key.nameoffset": 1348, "key.offset": 1344, "key.parsed_declaration": "let status = CVPixelBufferCreate(", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF6statusL_s5Int32Vvp"}], "key.typename": "(Int, Int) -> CVBuffer?", "key.typeusr": "$s5width6heightSo11CVBufferRefaSgSi_SitcD", "key.usr": "s:13CoreMLHelpers17createPixelBuffer5width6heightSo11CVBufferRefaSgSi_SitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, cropX: <Type usr=\"s:Si\">Int</Type>, cropY: <Type usr=\"s:Si\">Int</Type>, cropWidth: <Type usr=\"s:Si\">Int</Type>, cropHeight: <Type usr=\"s:Si\">Int</Type>, scaleWidth: <Type usr=\"s:Si\">Int</Type>, scaleHeight: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1657}], "key.bodylength": 1799, "key.bodyoffset": 1847, "key.doc.column": 13, "key.doc.comment": "First crops the pixel buffer, then resizes it.", "key.doc.declaration": "public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"44\" column=\"13\"><Name>resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF</USR><Declaration>public func resizePixelBuffer(_ srcPixelBuffer: CVPixelBuffer, cropX: Int, cropY: Int, cropWidth: Int, cropHeight: Int, scaleWidth: Int, scaleHeight: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>First crops the pixel buffer, then resizes it.</Para></Abstract></CommentParts></Function>", "key.doc.line": 44, "key.doc.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.doc.type": "Function", "key.doclength": 51, "key.docoffset": 1606, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropX</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropY</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cropHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scaleHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1983, "key.name": "resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)", "key.namelength": 158, "key.nameoffset": 1669, "key.offset": 1664, "key.parsed_declaration": "public func resizePixelBuffer(\n  _ srcPixelBuffer: CVPixelBuffer,\n  cropX: Int,\n  cropY: Int,\n  cropWidth: Int,\n  cropHeight: Int,\n  scaleWidth: Int,\n  scaleHeight: Int\n) -> CVPixelBuffer?", "key.parsed_scope.end": 117, "key.parsed_scope.start": 44, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let flags: <Type usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flags</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 47, "key.name": "flags", "key.namelength": 5, "key.nameoffset": 1854, "key.offset": 1850, "key.parsed_declaration": "let flags = CVPixelBufferLockFlags(rawValue: 0)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "CVPixelBufferLockFlags", "key.typeusr": "$sSo22CVPixelBufferLockFlagsVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF5flagsL_So07CVPixelE9LockFlagsVvp"}, {"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 2229, "key.offset": 2225, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>let offset: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>offset</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "offset", "key.namelength": 6, "key.nameoffset": 2296, "key.offset": 2292, "key.parsed_declaration": "let offset = cropY*srcBytesPerRow + cropX*4", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6offsetL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 185, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 2342, "key.offset": 2338, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 2531, "key.offset": 2527, "key.parsed_declaration": "let destBytesPerRow = scaleWidth*4", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 169, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 2687, "key.offset": 2683, "key.parsed_declaration": "var destBuffer = vImage_Buffer(", "key.parsed_scope.end": 77, "key.parsed_scope.start": 77, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 79, "key.name": "error", "key.namelength": 5, "key.nameoffset": 2860, "key.offset": 2856, "key.parsed_declaration": "let error = vImageScale_ARGB8888(&srcBuffer, &destBuffer, nil, vImage_Flags(0))", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 152, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 3039, "key.offset": 3035, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 91, "key.parsed_scope.start": 91, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$syySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 3195, "key.offset": 3191, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 3263, "key.offset": 3259, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 98, "key.parsed_scope.start": 98, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF03dstdE0L_AKvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 199, "key.name": "status", "key.namelength": 6, "key.nameoffset": 3300, "key.offset": 3296, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, Int, Int, Int, Int, Int, Int) -> CVBuffer?", "key.typeusr": "$s_5cropX0A1Y0A5Width0A6Height05scaleB00dC0So11CVBufferRefaSgAH_S6itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3704}], "key.bodylength": 229, "key.bodyoffset": 3816, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"120\" column=\"13\"><Name>resizePixelBuffer(_:width:height:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 120, "key.doc.name": "resizePixelBuffer(_:width:height:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 3649, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 335, "key.name": "resizePixelBuffer(_:width:height:)", "key.namelength": 80, "key.nameoffset": 3716, "key.offset": 3711, "key.parsed_declaration": "public func resizePixelBuffer(\n  _ pixelBuffer: CVPixelBuffer,\n  width: Int,\n  height: Int\n) -> CVPixelBuffer?", "key.parsed_scope.end": 134, "key.parsed_scope.start": 120, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF\">resizePixelBuffer(_:width:height:output:context:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CVBuffer, Int, Int) -> CVBuffer?", "key.typeusr": "$s_5width6heightSo11CVBufferRefaSgAD_S2itcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildPixelBuffer(from image: <Type usr=\"c:@T@CGImageRef\">CGImage</Type>, in size: <Type usr=\"c:@S@CGSize\">CGSize</Type>? = nil) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4048}], "key.bodylength": 1146, "key.bodyoffset": 4141, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildPixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@T@CGImageRef\">CGImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>in</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1233, "key.name": "buildPixelBuffer(from:in:)", "key.namelength": 61, "key.nameoffset": 4060, "key.offset": 4055, "key.parsed_declaration": "public func buildPixelBuffer(from image: CGImage, in size: CGSize? = nil) -> CVPixelBuffer?", "key.parsed_scope.end": 174, "key.parsed_scope.start": 136, "key.substructure": [{"key.annotated_decl": "<Declaration>let frameSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>frameSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 72, "key.name": "frameSize", "key.namelength": 9, "key.nameoffset": 4148, "key.offset": 4144, "key.parsed_declaration": "let frameSize = size ?? CGSize(width: image.width, height: image.height)", "key.parsed_scope.end": 137, "key.parsed_scope.start": 137, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF9frameSizeL_AKvp"}, {"key.annotated_decl": "<Declaration>var pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "pixelBuffer", "key.namelength": 11, "key.nameoffset": 4224, "key.offset": 4220, "key.parsed_declaration": "var pixelBuffer: CVPixelBuffer? = nil", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF05pixelE0L_AGvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 172, "key.name": "status", "key.namelength": 6, "key.nameoffset": 4264, "key.offset": 4260, "key.parsed_declaration": "let status = CVPixelBufferCreate(", "key.parsed_scope.end": 140, "key.parsed_scope.start": 140, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF6statusL_s5Int32Vvp"}, {"key.annotated_decl": "<Declaration>let data: <Type usr=\"s:Sv\">UnsafeMutableRawPointer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:Sv\">UnsafeMutableRawPointer</ref.struct>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 52, "key.name": "data", "key.namelength": 4, "key.nameoffset": 4581, "key.offset": 4577, "key.parsed_declaration": "let data = CVPixelBufferGetBaseAddress(pixelBuffer!)", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "UnsafeMutableRawPointer?", "key.typeusr": "$sSvSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF4dataL_SvSgvp"}, {"key.annotated_decl": "<Declaration>let rgbColorSpace: <Type usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rgbColorSpace</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CGColorSpaceRef\">CGColorSpace</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "rgbColorSpace", "key.namelength": 13, "key.nameoffset": 4636, "key.offset": 4632, "key.parsed_declaration": "let rgbColorSpace = CGColorSpaceCreateDeviceRGB()", "key.parsed_scope.end": 155, "key.parsed_scope.start": 155, "key.typename": "CGColorSpace", "key.typeusr": "$sSo15CGColorSpaceRefaD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF13rgbColorSpaceL_So07CGColornI0avp"}, {"key.annotated_decl": "<Declaration>let bitmapInfo: <Type usr=\"c:@E@CGBitmapInfo\">CGBitmapInfo</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bitmapInfo</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CGBitmapInfo\">CGBitmapInfo</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 135, "key.name": "bitmapInfo", "key.namelength": 10, "key.nameoffset": 4688, "key.offset": 4684, "key.parsed_declaration": "let bitmapInfo = CGBitmapInfo(", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "CGBitmapInfo", "key.typeusr": "$sSo12CGBitmapInfoVD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF10bitmapInfoL_So08CGBitmapM0Vvp"}, {"key.annotated_decl": "<Declaration>let context: <Type usr=\"c:@T@CGContextRef\">CGContext</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>context</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CGContextRef\">CGContext</ref.class>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 259, "key.name": "context", "key.namelength": 7, "key.nameoffset": 4826, "key.offset": 4822, "key.parsed_declaration": "let context = CGContext(", "key.parsed_scope.end": 159, "key.parsed_scope.start": 159, "key.typename": "CGContext?", "key.typeusr": "$sSo12CGContextRefaSgD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF7contextL_So09CGContextI0aSgvp"}], "key.typename": "(CGImage, CGSize?) -> CVBuffer?", "key.typeusr": "$s4from2inSo11CVBufferRefaSgSo07CGImageD0a_So6CGSizeVSgtcD", "key.usr": "s:13CoreMLHelpers16buildPixelBuffer4from2inSo11CVBufferRefaSgSo07CGImageI0a_So6CGSizeVSgtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func resizePixelBuffer(_ pixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>, output: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5345}], "key.bodylength": 361, "key.bodyoffset": 5486, "key.doc.column": 13, "key.doc.comment": "Resizes a CVPixelBuffer to a new width and height.", "key.doc.declaration": "public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"177\" column=\"13\"><Name>resizePixelBuffer(_:width:height:output:context:)</Name><USR>s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF</USR><Declaration>public func resizePixelBuffer(_ pixelBuffer: CVPixelBuffer, width: Int, height: Int, output: CVPixelBuffer, context: CIContext)</Declaration><CommentParts><Abstract><Para>Resizes a CVPixelBuffer to a new width and height.</Para></Abstract></CommentParts></Function>", "key.doc.line": 177, "key.doc.name": "resizePixelBuffer(_:width:height:output:context:)", "key.doc.type": "Function", "key.doclength": 55, "key.docoffset": 5290, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>resizePixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>output</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 496, "key.name": "resizePixelBuffer(_:width:height:output:context:)", "key.namelength": 127, "key.nameoffset": 5357, "key.offset": 5352, "key.parsed_declaration": "public func resizePixelBuffer(\n  _ pixelBuffer: CVPixelBuffer,\n  width: Int,\n  height: Int,\n  output: CVPixelBuffer,\n  context: CIContext\n)", "key.parsed_scope.end": 190, "key.parsed_scope.start": 177, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5cropX0F1Y0F5Width0F6Height05scaleG00iH0So11CVBufferRefaSgAJ_S6itF\">resizePixelBuffer(_:cropX:cropY:cropWidth:cropHeight:scaleWidth:scaleHeight:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17resizePixelBuffer_5width6heightSo11CVBufferRefaSgAF_S2itF\">resizePixelBuffer(_:width:height:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let ciImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ciImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 49, "key.name": "ciImage", "key.namelength": 7, "key.nameoffset": 5493, "key.offset": 5489, "key.parsed_declaration": "let ciImage = CIImage(cvPixelBuffer: pixelBuffer)", "key.parsed_scope.end": 184, "key.parsed_scope.start": 184, "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF7ciImageL_So7CIImageCvp"}, {"key.annotated_decl": "<Declaration>let sx: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sx</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 69, "key.name": "sx", "key.namelength": 2, "key.nameoffset": 5545, "key.offset": 5541, "key.parsed_declaration": "let sx = CGFloat(width) / CGFloat(CVPixelBufferGetWidth(pixelBuffer))", "key.parsed_scope.end": 185, "key.parsed_scope.start": 185, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2sxL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let sy: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sy</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 71, "key.name": "sy", "key.namelength": 2, "key.nameoffset": 5617, "key.offset": 5613, "key.parsed_declaration": "let sy = CGFloat(height) / CGFloat(CVPixelBufferGetHeight(pixelBuffer))", "key.parsed_scope.end": 186, "key.parsed_scope.start": 186, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF2syL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let scaleTransform: <Type usr=\"c:@S@CGAffineTransform\">CGAffineTransform</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaleTransform</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGAffineTransform\">CGAffineTransform</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaleTransform", "key.namelength": 14, "key.nameoffset": 5691, "key.offset": 5687, "key.parsed_declaration": "let scaleTransform = CGAffineTransform(scaleX: sx, y: sy)", "key.parsed_scope.end": 187, "key.parsed_scope.start": 187, "key.typename": "CGAffineTransform", "key.typeusr": "$sSo17CGAffineTransformVD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF14scaleTransformL_So08CGAffineN0Vvp"}, {"key.annotated_decl": "<Declaration>let scaledImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scaledImage</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "scaledImage", "key.namelength": 11, "key.nameoffset": 5751, "key.offset": 5747, "key.parsed_declaration": "let scaledImage = ciImage.transformed(by: scaleTransform)", "key.parsed_scope.end": 188, "key.parsed_scope.start": 188, "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF11scaledImageL_So7CIImageCvp"}], "key.typename": "(CVBuffer, Int, Int, CVBuffer, CIContext) -> ()", "key.typeusr": "$s_5width6height6output7contextySo11CVBufferRefa_S2iAFSo9CIContextCtcD", "key.usr": "s:13CoreMLHelpers17resizePixelBuffer_5width6height6output7contextySo11CVBufferRefa_S2iAHSo9CIContextCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, factor: <Type usr=\"s:s5UInt8V\">UInt8</Type>) -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5924}], "key.bodylength": 2034, "key.bodyoffset": 6023, "key.doc.column": 13, "key.doc.comment": "Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.", "key.doc.declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift\" line=\"193\" column=\"13\"><Name>rotate90PixelBuffer(_:factor:)</Name><USR>s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF</USR><Declaration>public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Rotates CVPixelBuffer by the provided factor of 90 counterclock-wise.</Para></Abstract></CommentParts></Function>", "key.doc.line": 193, "key.doc.name": "rotate90PixelBuffer(_:factor:)", "key.doc.type": "Function", "key.doclength": 74, "key.docoffset": 5850, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>rotate90PixelBuffer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>srcPixelBuffer</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>factor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 2127, "key.name": "rotate90PixelBuffer(_:factor:)", "key.namelength": 67, "key.nameoffset": 5936, "key.offset": 5931, "key.parsed_declaration": "public func rotate90PixelBuffer(_ srcPixelBuffer: CVPixelBuffer, factor: UInt8) -> CVPixelBuffer?", "key.parsed_scope.end": 268, "key.parsed_scope.start": 193, "key.substructure": [{"key.annotated_decl": "<Declaration>let flags: <Type usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>flags</decl.name>: <decl.var.type><ref.struct usr=\"c:@E@CVPixelBufferLockFlags\">CVPixelBufferLockFlags</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 47, "key.name": "flags", "key.namelength": 5, "key.nameoffset": 6030, "key.offset": 6026, "key.parsed_declaration": "let flags = CVPixelBufferLockFlags(rawValue: 0)", "key.parsed_scope.end": 194, "key.parsed_scope.start": 194, "key.typename": "CVPixelBufferLockFlags", "key.typeusr": "$sSo22CVPixelBufferLockFlagsVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5flagsL_So07CVPixelE9LockFlagsVvp"}, {"key.annotated_decl": "<Declaration>let sourceWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "sourceWidth", "key.namelength": 11, "key.nameoffset": 6405, "key.offset": 6401, "key.parsed_declaration": "let sourceWidth = CVPixelBufferGetWidth(srcPixelBuffer)", "key.parsed_scope.end": 204, "key.parsed_scope.start": 204, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11sourceWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>let sourceHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sourceHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 57, "key.name": "sourceHeight", "key.namelength": 12, "key.nameoffset": 6463, "key.offset": 6459, "key.parsed_declaration": "let sourceHeight = CVPixelBufferGetHeight(srcPixelBuffer)", "key.parsed_scope.end": 205, "key.parsed_scope.start": 205, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF12sourceHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var destWidth: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destWidth", "key.namelength": 9, "key.nameoffset": 6523, "key.offset": 6519, "key.parsed_declaration": "var destWidth = sourceHeight", "key.parsed_scope.end": 206, "key.parsed_scope.start": 206, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF9destWidthL_Sivp"}, {"key.annotated_decl": "<Declaration>var destHeight: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 28, "key.name": "destHeight", "key.namelength": 10, "key.nameoffset": 6554, "key.offset": 6550, "key.parsed_declaration": "var destHeight = sourceWidth", "key.parsed_scope.end": 207, "key.parsed_scope.start": 207, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF10destHeightL_Sivp"}, {"key.annotated_decl": "<Declaration>var color: <Type usr=\"s:s5UInt8V\">UInt8</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 6585, "key.offset": 6581, "key.parsed_declaration": "var color = UInt8(0)", "key.parsed_scope.end": 208, "key.parsed_scope.start": 208, "key.typename": "UInt8", "key.typeusr": "$ss5UInt8VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5colorL_AHvp"}, {"key.annotated_decl": "<Declaration>let srcBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>srcBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "srcBytesPerRow", "key.namelength": 14, "key.nameoffset": 6695, "key.offset": 6691, "key.parsed_declaration": "let srcBytesPerRow = CVPixelBufferGetBytesPerRow(srcPixelBuffer)", "key.parsed_scope.end": 215, "key.parsed_scope.start": 215, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF14srcBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var srcBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>srcBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 168, "key.name": "srcBuffer", "key.namelength": 9, "key.nameoffset": 6762, "key.offset": 6758, "key.parsed_declaration": "var srcBuffer = vImage_Buffer(", "key.parsed_scope.end": 216, "key.parsed_scope.start": 216, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03srcE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let destBytesPerRow: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>destBytesPerRow</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "destBytesPerRow", "key.namelength": 15, "key.nameoffset": 6934, "key.offset": 6930, "key.parsed_declaration": "let destBytesPerRow = destWidth*4", "key.parsed_scope.end": 223, "key.parsed_scope.start": 223, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15destBytesPerRowL_Sivp"}, {"key.annotated_decl": "<Declaration>var destBuffer: <Type usr=\"c:@S@vImage_Buffer\">vImage_Buffer</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>destBuffer</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@vImage_Buffer\">vImage_Buffer</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 167, "key.name": "destBuffer", "key.namelength": 10, "key.nameoffset": 7088, "key.offset": 7084, "key.parsed_declaration": "var destBuffer = vImage_Buffer(", "key.parsed_scope.end": 228, "key.parsed_scope.start": 228, "key.typename": "vImage_Buffer", "key.typeusr": "$sSo13vImage_BufferVD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF04destE0L_So07vImage_E0Vvp"}, {"key.annotated_decl": "<Declaration>let error: <Type usr=\"c:@T@vImage_Error\">vImage_Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@vImage_Error\">vImage_Error</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 93, "key.name": "error", "key.namelength": 5, "key.nameoffset": 7259, "key.offset": 7255, "key.parsed_declaration": "let error = vImageRotate90_ARGB8888(&srcBuffer, &destBuffer, factor, &color, vImage_Flags(0))", "key.parsed_scope.end": 235, "key.parsed_scope.start": 235, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF5errorL_Sivp"}, {"key.annotated_decl": "<Declaration>let releaseCallback: <Type usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>releaseCallback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferReleaseBytesCallback\">CVPixelBufferReleaseBytesCallback</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 152, "key.name": "releaseCallback", "key.namelength": 15, "key.nameoffset": 7452, "key.offset": 7448, "key.parsed_declaration": "let releaseCallback: CVPixelBufferReleaseBytesCallback = { _, ptr in", "key.parsed_scope.end": 242, "key.parsed_scope.start": 242, "key.typename": "@convention(c) (UnsafeMutableRawPointer?, UnsafeRawPointer?) -> ()", "key.typeusr": "$syySvSg_SVSgtXCD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF15releaseCallbackL_yySvSg_SVSgtXCvp"}, {"key.annotated_decl": "<Declaration>let pixelFormat: <Type usr=\"c:@T@OSType\">OSType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelFormat</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@OSType\">OSType</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "pixelFormat", "key.namelength": 11, "key.nameoffset": 7608, "key.offset": 7604, "key.parsed_declaration": "let pixelFormat = CVPixelBufferGetPixelFormatType(srcPixelBuffer)", "key.parsed_scope.end": 248, "key.parsed_scope.start": 248, "key.typename": "UInt32", "key.typeusr": "$ss6UInt32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF11pixelFormatL_s6UInt32Vvp"}, {"key.annotated_decl": "<Declaration>var dstPixelBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>dstPixelBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "dstPixelBuffer", "key.namelength": 14, "key.nameoffset": 7676, "key.offset": 7672, "key.parsed_declaration": "var dstPixelBuffer: CVPixelBuffer?", "key.parsed_scope.end": 249, "key.parsed_scope.start": 249, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF03dstdE0L_AFvp"}, {"key.annotated_decl": "<Declaration>let status: <Type usr=\"c:@T@CVReturn\">CVReturn</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/CVPixelBuffer+Helpers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>status</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVReturn\">CVReturn</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 197, "key.name": "status", "key.namelength": 6, "key.nameoffset": 7713, "key.offset": 7709, "key.parsed_declaration": "let status = CVPixelBufferCreateWithBytes(", "key.parsed_scope.end": 250, "key.parsed_scope.start": 250, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF6statusL_s5Int32Vvp"}], "key.typename": "(CVBuffer, UInt8) -> CVBuffer?", "key.typeusr": "$s_6factorSo11CVBufferRefaSgAC_s5UInt8VtcD", "key.usr": "s:13CoreMLHelpers19rotate90PixelBuffer_6factorSo11CVBufferRefaSgAE_s5UInt8VtF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLFeatureProvider+Helpers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 484, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MLMultiArray+Image.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1377, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1261, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func clamp&lt;T&gt;(_ x: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, min: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>, max: <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</Type> where T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1128}], "key.bodylength": 68, "key.bodyoffset": 1191, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>clamp</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>min</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>max</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp\">T</ref.generic_type_param></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_requirement></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 125, "key.name": "clamp(_:min:max:)", "key.namelength": 44, "key.nameoffset": 1140, "key.offset": 1135, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 25, "key.parsed_scope.start": 21, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1149}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Math.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 13, "key.name": "T", "key.namelength": 1, "key.nameoffset": 1146, "key.offset": 1146, "key.parsed_declaration": "public func clamp<T: Comparable>(_ x: T, min: T, max: T) -> T", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF1TL_xmfp"}], "key.typename": "<T where T : Comparable> (T, min: T, max: T) -> T", "key.typeusr": "$s_3min3maxxx_xxtcSLRzluD", "key.usr": "s:13CoreMLHelpers5clamp_3min3maxxx_xxtSLRzlF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10506, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol MultiArrayType : <Type usr=\"s:SL\">Comparable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1152}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1128}], "key.bodylength": 201, "key.bodyoffset": 1196, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 10, "key.offset": 1184}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>MultiArrayType</decl.name> : <ref.protocol usr=\"s:SL\">Comparable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "Comparable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 239, "key.name": "MultiArrayType", "key.namelength": 14, "key.nameoffset": 1168, "key.offset": 1159, "key.parsed_declaration": "public protocol MultiArrayType: Comparable", "key.parsed_scope.end": 28, "key.parsed_scope.start": 22, "key.runtime_name": "_TtP4main14MultiArrayType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var multiArrayDataType: <Type usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1252, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>multiArrayDataType</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@MLMultiArrayDataType\">MLMultiArrayDataType</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 59, "key.name": "multiArrayDataType", "key.namelength": 18, "key.nameoffset": 1210, "key.offset": 1199, "key.parsed_declaration": "static var multiArrayDataType: MLMultiArrayDataType", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "MLMultiArrayDataType", "key.typeusr": "$sSo20MLMultiArrayDataTypeVD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP05multid4DataE0So07MLMultidgE0VvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func + (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>+ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 44, "key.name": "+(_:_:)", "key.namelength": 24, "key.nameoffset": 1273, "key.offset": 1261, "key.parsed_declaration": "static func + (lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1poiyA2C_SdtFZ\">+ (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1poiyA2B_ABtFZ\">+ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV1poiyA2C_ACtFZ\">+ (_: IndexPath, _: IndexPath) -&gt; IndexPath</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1poiyACyxGAG_AGtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1poiyACyxGAE_AEtFZ\">+ (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1poiyA2G_AGtFZ\">+ (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; OperationQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1poiyA2G_AGtFZ\">+ (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; RunLoop.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_AA0aB8IntervalOtF\">+ (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A4TimeVAD_SdtF\">+ (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">+ (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1poiyAA0A8WallTimeVAD_SdtF\">+ (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1poiyA2G_AGtFZ\">+ (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; DispatchQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1poiyA2C_ACtFZ\">+ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1poiyA2B_ABtFZ\">+ (_: CMTime, _: CMTime) -&gt; CMTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyxx_0C5ValueQztFZ\">+ (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1poiyx0C5ValueQz_xtFZ\">+ (_: Self.RawValue, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sa1poiySayxGAB_ABtFZ\">+ (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Array&lt;Element&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1poiyS2f_SftFZ\">+ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1poiyS2d_SdtFZ\">+ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticPsE1popyxxFZ\">+(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1poiyA2B_ABtFZ\">+ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1poiyA2B_ABtFZ\">+ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1poiyA2B_ABtFZ\">+ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1poiyA2B_ABtFZ\">+ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1poiyA2B_ABtFZ\">+ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1poiyA2B_ABtFZ\">+ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1poiyA2B_ABtFZ\">+ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1poiyA2B_ABtFZ\">+ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1poiyS2u_SutFZ\">+ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1poiyS2i_SitFZ\">+ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyxx_6StrideQztFZ\">+ (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1poiyx6StrideQz_xtFZ\">+ (_: Self.Stride, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Other, _: Self) -&gt; Self where Other : Sequence, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ\">+ &lt;Other&gt;(_: Self, _: Other) -&gt; Self where Other : RangeReplaceableCollection, Self.Element == Other.Element</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS1poiyS2S_SStFZ\">+ (_: String, _: String) -&gt; String</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_xtFZ\">+ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxAD_xtFZ\">+ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1poiyxx_ADtFZ\">+ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1poiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers14MultiArrayTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 44, "key.name": "*(_:_:)", "key.namelength": 24, "key.nameoffset": 1320, "key.offset": 1308, "key.parsed_declaration": "static func * (lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; OperationQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; RunLoop.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; DispatchQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 12, "key.name": "init(_:)", "key.namelength": 12, "key.nameoffset": 1355, "key.offset": 1355, "key.parsed_declaration": "init(_: Int)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.substructure": [], "key.typename": "<Self where Self : MultiArrayType> (Self.Type) -> (Int) -> Self", "key.typeusr": "$syxSicD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypePyxSicfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var toUInt8: <Type usr=\"s:s5UInt8V\">UInt8</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 1390, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>toUInt8</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "toUInt8", "key.namelength": 7, "key.nameoffset": 1374, "key.offset": 1370, "key.parsed_declaration": "var toUInt8: UInt8", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "UInt8", "key.typeusr": "$ss5UInt8VD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP7toUInt8s0G0Vvp"}], "key.typename": "MultiArrayType.Protocol", "key.typeusr": "$s13CoreMLHelpers14MultiArrayType_pmD", "key.usr": "s:13CoreMLHelpers14MultiArrayTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct MultiArray&lt;T&gt; where T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2057}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2033}], "key.bodylength": 3487, "key.bodyoffset": 2102, "key.doc.column": 15, "key.doc.comment": "Wrapper around MLMultiArray to make it more Swifty.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic struct MultiArray<T> where T : CoreMLHelpers.MultiArrayType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"50\" column=\"15\"><Name>MultiArray</Name><USR>s:13CoreMLHelpers10MultiArrayV</USR><Declaration>@available(iOS 11.0, *)\npublic struct MultiArray&lt;T&gt; where T : CoreMLHelpers.MultiArrayType</Declaration><CommentParts><Abstract><Para>Wrapper around MLMultiArray to make it more Swifty.</Para></Abstract></CommentParts></Class>", "key.doc.line": 50, "key.doc.name": "MultiArray", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 1977, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>MultiArray</decl.name>&lt;<decl.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 3526, "key.name": "MultiArray", "key.namelength": 10, "key.nameoffset": 2071, "key.offset": 2064, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 167, "key.parsed_scope.start": 50, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 2085}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:13CoreMLHelpers14MultiArrayTypeP\">MultiArrayType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "MultiArrayType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 17, "key.name": "T", "key.namelength": 1, "key.nameoffset": 2082, "key.offset": 2082, "key.parsed_declaration": "public struct MultiArray<T: MultiArrayType>", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2105}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>array</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "array", "key.namelength": 5, "key.nameoffset": 2116, "key.offset": 2112, "key.parsed_declaration": "public let array: MLMultiArray", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5arraySo07MLMultiD0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let pointer: <Type usr=\"s:Sp\">UnsafeMutablePointer</Type>&lt;<Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2138}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointer</decl.name>: <decl.var.type><ref.struct usr=\"s:Sp\">UnsafeMutablePointer</ref.struct>&lt;<ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "pointer", "key.namelength": 7, "key.nameoffset": 2149, "key.offset": 2145, "key.parsed_declaration": "public let pointer: UnsafeMutablePointer<T>", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "UnsafeMutablePointer<T>", "key.typeusr": "$sSpyxGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7pointerSpyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var strides: [<Type usr=\"s:Si\">Int</Type>] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2198}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2185}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>strides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "strides", "key.namelength": 7, "key.nameoffset": 2209, "key.offset": 2205, "key.parsed_declaration": "private(set) public var strides: [Int]", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV7stridesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var shape: [<Type usr=\"s:Si\">Int</Type>] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2239}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2226}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>shape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "shape", "key.namelength": 5, "key.nameoffset": 2250, "key.offset": 2246, "key.parsed_declaration": "private(set) public var shape: [Int]", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2329}], "key.bodylength": 165, "key.bodyoffset": 2356, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array filled with all zeros.", "key.doc.declaration": "public init(shape: [Int])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"60\" column=\"10\"><Name>init(shape:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc</USR><Declaration>public init(shape: [Int])</Declaration><CommentParts><Abstract><Para>Creates a new multi-array filled with all zeros.</Para></Abstract></CommentParts></Function>", "key.doc.line": 60, "key.doc.name": "init(shape:)", "key.doc.type": "Function", "key.doclength": 60, "key.docoffset": 2266, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(shape:)", "key.namelength": 18, "key.nameoffset": 2336, "key.offset": 2336, "key.parsed_declaration": "public init(shape: [Int])", "key.parsed_scope.end": 64, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let m: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>m</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 85, "key.name": "m", "key.namelength": 1, "key.nameoffset": 2365, "key.offset": 2361, "key.parsed_declaration": "let m = try! MLMultiArray(shape: shape as [NSNumber], dataType: T.multiArrayDataType)", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc1mL_So07MLMultiD0Cvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$s5shape13CoreMLHelpers10MultiArrayVyxGSaySiG_tcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(shape: [<Type usr=\"s:Si\">Int</Type>], initial: <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2604}], "key.bodylength": 89, "key.bodyoffset": 2643, "key.doc.column": 10, "key.doc.comment": "Creates a new multi-array initialized with the specified value.", "key.doc.declaration": "public init(shape: [Int], initial: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"69\" column=\"10\"><Name>init(shape:initial:)</Name><USR>s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc</USR><Declaration>public init(shape: [Int], initial: T)</Declaration><CommentParts><Abstract><Para>Creates a new multi-array initialized with the specified value.</Para></Abstract></CommentParts></Function>", "key.doc.line": 69, "key.doc.name": "init(shape:initial:)", "key.doc.type": "Function", "key.doclength": 75, "key.docoffset": 2526, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>shape</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>initial</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init(shape:initial:)", "key.namelength": 30, "key.nameoffset": 2611, "key.offset": 2611, "key.parsed_declaration": "public init(shape: [Int], initial: T)", "key.parsed_scope.end": 74, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc\">init(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> ([Int], T) -> MultiArray<T>", "key.typeusr": "$s5shape7initial13CoreMLHelpers10MultiArrayVyxGSaySiG_xtcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ array: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2810}], "key.bodylength": 72, "key.bodyoffset": 2846, "key.doc.column": 10, "key.doc.comment": "Creates a multi-array that wraps an existing MLMultiArray.", "key.doc.declaration": "public init(_ array: MLMultiArray)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"79\" column=\"10\"><Name>init(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc</USR><Declaration>public init(_ array: MLMultiArray)</Declaration><CommentParts><Abstract><Para>Creates a multi-array that wraps an existing MLMultiArray.</Para></Abstract></CommentParts></Function>", "key.doc.line": 79, "key.doc.name": "init(_:)", "key.doc.type": "Function", "key.doclength": 70, "key.docoffset": 2737, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 102, "key.name": "init(_:)", "key.namelength": 27, "key.nameoffset": 2817, "key.offset": 2817, "key.parsed_declaration": "public init(_ array: MLMultiArray)", "key.parsed_scope.end": 81, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shapeACyxGSaySiG_tcfc\">init(shape:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayV5shape7initialACyxGSaySiG_xtcfc\">init(shape:initial:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0C_SaySiGAGtcfc\">init(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>.Type) -> (MLMultiArray) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSo07MLMultiD0CcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyACyxGSo07MLMultiD0Ccfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3205}], "key.bodylength": 33, "key.bodyoffset": 3228, "key.doc.column": 14, "key.doc.comment": "Returns the number of elements in the entire array.", "key.doc.declaration": "public var count: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"93\" column=\"14\"><Name>count</Name><USR>s:13CoreMLHelpers10MultiArrayV5countSivp</USR><Declaration>public var count: Int { get }</Declaration><CommentParts><Abstract><Para>Returns the number of elements in the entire array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 93, "key.doc.name": "count", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 3139, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 50, "key.name": "count", "key.namelength": 5, "key.nameoffset": 3216, "key.offset": 3212, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 95, "key.parsed_scope.start": 93, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3266}], "key.bodylength": 67, "key.bodyoffset": 3297, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 92, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 3273, "key.offset": 3273, "key.parsed_declaration": "public subscript(a: Int) -> T", "key.parsed_scope.end": 100, "key.parsed_scope.start": 97, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int) -> T", "key.typeusr": "$syxSicD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSicip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3369}], "key.bodylength": 119, "key.bodyoffset": 3408, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 152, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 3376, "key.offset": 3376, "key.parsed_declaration": "public subscript(a: Int, b: Int) -> T", "key.parsed_scope.end": 105, "key.parsed_scope.start": 102, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int) -> T", "key.typeusr": "$syxSi_SitcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3532}], "key.bodylength": 149, "key.bodyoffset": 3579, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 190, "key.name": "subscript(_:_:_:)", "key.namelength": 33, "key.nameoffset": 3539, "key.offset": 3539, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int) -> T", "key.parsed_scope.end": 110, "key.parsed_scope.start": 107, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int) -> T", "key.typeusr": "$syxSi_S2itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3733}], "key.bodylength": 179, "key.bodyoffset": 3788, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 228, "key.name": "subscript(_:_:_:_:)", "key.namelength": 41, "key.nameoffset": 3740, "key.offset": 3740, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int) -> T", "key.parsed_scope.end": 115, "key.parsed_scope.start": 112, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int) -> T", "key.typeusr": "$syxSi_S3itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(a: <Type usr=\"s:Si\">Int</Type>, b: <Type usr=\"s:Si\">Int</Type>, c: <Type usr=\"s:Si\">Int</Type>, d: <Type usr=\"s:Si\">Int</Type>, e: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3972}], "key.bodylength": 219, "key.bodyoffset": 4035, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>c</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>d</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>e</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 276, "key.name": "subscript(_:_:_:_:_:)", "key.namelength": 49, "key.nameoffset": 3979, "key.offset": 3979, "key.parsed_declaration": "public subscript(a: Int, b: Int, c: Int, d: Int, e: Int) -> T", "key.parsed_scope.end": 122, "key.parsed_scope.start": 117, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSaySiGcip\">subscript(_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> (Int, Int, Int, Int, Int) -> T", "key.typeusr": "$syxSi_S4itcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(indices: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4259}], "key.bodylength": 105, "key.bodyoffset": 4298, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>indices</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:13CoreMLHelpers10MultiArrayV1Txmfp\">T</ref.generic_type_param></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 138, "key.name": "subscript(_:)", "key.namelength": 25, "key.nameoffset": 4266, "key.offset": 4266, "key.parsed_declaration": "public subscript(indices: [Int]) -> T", "key.parsed_scope.end": 127, "key.parsed_scope.start": 124, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSicip\">subscript(_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_Sitcip\">subscript(_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S3itcip\">subscript(_:_:_:_:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers10MultiArrayVyxSi_S4itcip\">subscript(_:_:_:_:_:)</RelatedName>"}], "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : MultiArrayType> ([Int]) -> T", "key.typeusr": "$syxSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayVyxSaySiGcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func transposed(_ order: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4724}], "key.bodylength": 268, "key.bodyoffset": 4778, "key.doc.column": 15, "key.doc.comment": "Returns a transposed version of this array. NOTE: The new array still uses\nthe same underlying storage (the same MLMultiArray object).", "key.doc.declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"141\" column=\"15\"><Name>transposed(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF</USR><Declaration>public func transposed(_ order: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Returns a transposed version of this array. NOTE: The new array still uses the same underlying storage (the same MLMultiArray object).</Para></Abstract></CommentParts></Function>", "key.doc.line": 141, "key.doc.name": "transposed(_:)", "key.doc.type": "Function", "key.doclength": 149, "key.docoffset": 4572, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>transposed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>order</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 316, "key.name": "transposed(_:)", "key.namelength": 26, "key.nameoffset": 4736, "key.offset": 4731, "key.parsed_declaration": "public func transposed(_ order: [Int]) -> MultiArray", "key.parsed_scope.end": 150, "key.parsed_scope.start": 141, "key.substructure": [{"key.annotated_decl": "<Declaration>var newShape: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newShape</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 20, "key.name": "newShape", "key.namelength": 8, "key.nameoffset": 4834, "key.offset": 4830, "key.parsed_declaration": "var newShape = shape", "key.parsed_scope.end": 143, "key.parsed_scope.start": 143, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF8newShapeL_AFvp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 4859, "key.offset": 4855, "key.parsed_declaration": "var newStrides = strides", "key.parsed_scope.end": 144, "key.parsed_scope.start": 144, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV10transposedyACyxGSaySiGF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func reshaped(_ dimensions: [<Type usr=\"s:Si\">Int</Type>]) -&gt; <Type usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5115}], "key.bodylength": 415, "key.bodyoffset": 5172, "key.doc.column": 15, "key.doc.comment": "Changes the number of dimensions and their sizes.", "key.doc.declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift\" line=\"155\" column=\"15\"><Name>reshaped(_:)</Name><USR>s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF</USR><Declaration>public func reshaped(_ dimensions: [Int]) -&gt; MultiArray</Declaration><CommentParts><Abstract><Para>Changes the number of dimensions and their sizes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 155, "key.doc.name": "reshaped(_:)", "key.doc.type": "Function", "key.doclength": 61, "key.docoffset": 5051, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>reshaped</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>dimensions</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:13CoreMLHelpers10MultiArrayV\">MultiArray</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 466, "key.name": "reshaped(_:)", "key.namelength": 29, "key.nameoffset": 5127, "key.offset": 5122, "key.parsed_declaration": "public func reshaped(_ dimensions: [Int]) -> MultiArray", "key.parsed_scope.end": 166, "key.parsed_scope.start": 155, "key.substructure": [{"key.annotated_decl": "<Declaration>let newCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "newCount", "key.namelength": 8, "key.nameoffset": 5181, "key.offset": 5177, "key.parsed_declaration": "let newCount = dimensions.reduce(1, *)", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF8newCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var newStrides: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/MultiArray.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newStrides</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 61, "key.name": "newStrides", "key.namelength": 10, "key.nameoffset": 5305, "key.offset": 5301, "key.parsed_declaration": "var newStrides = [Int](repeating: 0, count: dimensions.count)", "key.parsed_scope.end": 159, "key.parsed_scope.start": 159, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF10newStridesL_AFvp"}], "key.typename": "<T where T : MultiArrayType> (MultiArray<T>) -> ([Int]) -> MultiArray<T>", "key.typeusr": "$sy13CoreMLHelpers10MultiArrayVyxGSaySiGcD", "key.usr": "s:13CoreMLHelpers10MultiArrayV8reshapedyACyxGSaySiGF"}], "key.typename": "MultiArray<T>.Type", "key.typeusr": "$s13CoreMLHelpers10MultiArrayVyxGmD", "key.usr": "s:13CoreMLHelpers10MultiArrayV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6483, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func IOU(_ a: <Type usr=\"c:@S@CGRect\">CGRect</Type>, _ b: <Type usr=\"c:@S@CGRect\">CGRect</Type>) -&gt; <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1202}], "key.bodylength": 497, "key.bodyoffset": 1254, "key.doc.column": 13, "key.doc.comment": "Computes intersection-over-union overlap between two bounding boxes.", "key.doc.declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"22\" column=\"13\"><Name>IOU(_:_:)</Name><USR>s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF</USR><Declaration>public func IOU(_ a: CGRect, _ b: CGRect) -&gt; Float</Declaration><CommentParts><Abstract><Para>Computes intersection-over-union overlap between two bounding boxes.</Para></Abstract></CommentParts></Function>", "key.doc.line": 22, "key.doc.name": "IOU(_:_:)", "key.doc.type": "Function", "key.doclength": 74, "key.docoffset": 1128, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>IOU</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>a</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>b</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 543, "key.name": "IOU(_:_:)", "key.namelength": 29, "key.nameoffset": 1214, "key.offset": 1209, "key.parsed_declaration": "public func IOU(_ a: CGRect, _ b: CGRect) -> Float", "key.parsed_scope.end": 37, "key.parsed_scope.start": 22, "key.substructure": [{"key.annotated_decl": "<Declaration>let areaA: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaA</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaA", "key.namelength": 5, "key.nameoffset": 1261, "key.offset": 1257, "key.parsed_declaration": "let areaA = a.width * a.height", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaAL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let areaB: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areaB</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "areaB", "key.namelength": 5, "key.nameoffset": 1324, "key.offset": 1320, "key.parsed_declaration": "let areaB = b.width * b.height", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF5areaBL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinX", "key.namelength": 16, "key.nameoffset": 1387, "key.offset": 1383, "key.parsed_declaration": "let intersectionMinX = max(a.minX, b.minX)", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMinY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMinY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMinY", "key.namelength": 16, "key.nameoffset": 1432, "key.offset": 1428, "key.parsed_declaration": "let intersectionMinY = max(a.minY, b.minY)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMinYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxX", "key.namelength": 16, "key.nameoffset": 1477, "key.offset": 1473, "key.parsed_declaration": "let intersectionMaxX = min(a.maxX, b.maxX)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxXL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionMaxY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionMaxY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "intersectionMaxY", "key.namelength": 16, "key.nameoffset": 1522, "key.offset": 1518, "key.parsed_declaration": "let intersectionMaxY = min(a.maxY, b.maxY)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionMaxYL_0A8Graphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let intersectionArea: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>intersectionArea</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 116, "key.name": "intersectionArea", "key.namelength": 16, "key.nameoffset": 1567, "key.offset": 1563, "key.parsed_declaration": "let intersectionArea = max(intersectionMaxY - intersectionMinY, 0)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF16intersectionAreaL_0A8Graphics7CGFloatVvp"}], "key.typename": "(CGRect, CGRect) -> Float", "key.typeusr": "$sySfSo6CGRectV_ABtcD", "key.usr": "s:13CoreMLHelpers3IOUySfSo6CGRectV_ADtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias NMSPrediction = (classIndex: <Type usr=\"s:Si\">Int</Type>, score: <Type usr=\"s:Sf\">Float</Type>, rect: <Type usr=\"c:@S@CGRect\">CGRect</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1754}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>NMSPrediction</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>classIndex</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>score</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Sf\">Float</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>rect</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 71, "key.name": "NMSPrediction", "key.namelength": 13, "key.nameoffset": 1771, "key.offset": 1761, "key.parsed_declaration": "public typealias NMSPrediction = (classIndex: Int, score: Float, rect: CGRect)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "(classIndex: Int, score: Float, rect: CGRect).Type", "key.typeusr": "$sSi10classIndex_Sf5scoreSo6CGRectV4recttmD", "key.usr": "s:13CoreMLHelpers13NMSPredictiona"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1932}], "key.bodylength": 159, "key.bodyoffset": 2040, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"43\" column=\"13\"><Name>nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract></CommentParts></Function>", "key.doc.line": 43, "key.doc.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1834, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 261, "key.name": "nonMaxSuppression(predictions:iouThreshold:maxBoxes:)", "key.namelength": 83, "key.nameoffset": 1944, "key.offset": 1939, "key.parsed_declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], iouThreshold: Float, maxBoxes: Int)\n  -> [Int]", "key.parsed_scope.end": 52, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF\">nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], Float, Int) -> [Int]", "key.typeusr": "$s11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppression(predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], indices: [<Type usr=\"s:Si\">Int</Type>], iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxBoxes: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3056}], "key.bodylength": 1015, "key.bodyoffset": 3188, "key.doc.column": 13, "key.doc.comment": "Removes bounding boxes that overlap too much with other boxes that have\na higher score.\n\nBased on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc\n\n- Note: This version of NMS ignores the class of the bounding boxes. Since it\n  selects the bounding boxes in a greedy fashion, if a certain class has many\n  boxes that are selected, then it is possible none of the boxes of the other\n  classes get selected.\n\n- Parameters:\n  - predictions: an array of bounding boxes and their scores\n  - indices: which predictions to look at\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxBoxes: the maximum number of boxes that will be selected\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -> [Int]", "key.doc.discussion": [{"Para": "Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc"}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"71\" column=\"13\"><Name>nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)</Name><USR>s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF</USR><Declaration>public func nonMaxSuppression(predictions: [NMSPrediction], indices: [Int], iouThreshold: Float, maxBoxes: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Removes bounding boxes that overlap too much with other boxes that have a higher score.</Para></Abstract><Parameters><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>indices</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>which predictions to look at</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxBoxes</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Based on code from https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/kernels/non_max_suppression_op.cc</Para><Note><Para>This version of NMS ignores the class of the bounding boxes. Since it selects the bounding boxes in a greedy fashion, if a certain class has many boxes that are selected, then it is possible none of the boxes of the other classes get selected.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 71, "key.doc.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.doc.parameters": [{"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "which predictions to look at"}], "name": "indices"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected"}], "name": "maxBoxes"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 854, "key.docoffset": 2202, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppression</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>indices</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxBoxes</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1141, "key.name": "nonMaxSuppression(predictions:indices:iouThreshold:maxBoxes:)", "key.namelength": 109, "key.nameoffset": 3068, "key.offset": 3063, "key.parsed_declaration": "public func nonMaxSuppression(\n  predictions: [NMSPrediction],\n  indices: [Int],\n  iouThreshold: Float,\n  maxBoxes: Int\n) -> [Int]", "key.parsed_scope.end": 109, "key.parsed_scope.start": 71, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers17nonMaxSuppression11predictions12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_SfSitF\">nonMaxSuppression(predictions:iouThreshold:maxBoxes:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let sortedIndices: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedIndices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "sortedIndices", "key.namelength": 13, "key.nameoffset": 3268, "key.offset": 3264, "key.parsed_declaration": "let sortedIndices = indices.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF13sortedIndicesL_AGvp"}, {"key.annotated_decl": "<Declaration>var selected: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selected</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "selected", "key.namelength": 8, "key.nameoffset": 3356, "key.offset": 3352, "key.parsed_declaration": "var selected: [Int] = []", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF8selectedL_AGvp"}], "key.typename": "([(classIndex: Int, score: Float, rect: CGRect)], [Int], Float, Int) -> [Int]", "key.typeusr": "$s11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AESfSitcD", "key.usr": "s:13CoreMLHelpers17nonMaxSuppression11predictions7indices12iouThreshold8maxBoxesSaySiGSaySi10classIndex_Sf5scoreSo6CGRectV4recttG_AGSfSitF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func nonMaxSuppressionMultiClass(numClasses: <Type usr=\"s:Si\">Int</Type>, predictions: [<Type usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</Type>], scoreThreshold: <Type usr=\"s:Sf\">Float</Type>, iouThreshold: <Type usr=\"s:Sf\">Float</Type>, maxPerClass: <Type usr=\"s:Si\">Int</Type>, maxTotal: <Type usr=\"s:Si\">Int</Type>) -&gt; [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5273}], "key.bodylength": 1020, "key.bodyoffset": 5461, "key.doc.column": 13, "key.doc.comment": "Multi-class version of non maximum suppression.\n\nWhere `nonMaxSuppression()` does not look at the class of the predictions at\nall, the multi-class version first selects the best bounding boxes for each\nclass, and then keeps the best ones of those.\n\nWith this method you can usually expect to see at least one bounding box for\neach class (unless all the scores for a given class are really low).\n\nBased on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py\n\n- Parameters:\n  - numClasses: the number of classes\n  - predictions: an array of bounding boxes and their scores\n  - scoreThreshold: used to only keep bounding boxes with a high enough score\n  - iouThreshold: used to decide whether boxes overlap too much\n  - maxPerClass: the maximum number of boxes that will be selected per class\n  - maxTotal: maximum number of boxes that will be selected over all classes\n\n- Returns: the array indices of the selected bounding boxes", "key.doc.declaration": "public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -> [Int]", "key.doc.discussion": [{"Para": "Where `nonMaxSuppression()` does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those."}, {"Para": "With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low)."}, {"Para": "Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py"}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift\" line=\"131\" column=\"13\"><Name>nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)</Name><USR>s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF</USR><Declaration>public func nonMaxSuppressionMultiClass(numClasses: Int, predictions: [NMSPrediction], scoreThreshold: Float, iouThreshold: Float, maxPerClass: Int, maxTotal: Int) -&gt; [Int]</Declaration><CommentParts><Abstract><Para>Multi-class version of non maximum suppression.</Para></Abstract><Parameters><Parameter><Name>numClasses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the number of classes</Para></Discussion></Parameter><Parameter><Name>predictions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>an array of bounding boxes and their scores</Para></Discussion></Parameter><Parameter><Name>scoreThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to only keep bounding boxes with a high enough score</Para></Discussion></Parameter><Parameter><Name>iouThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>used to decide whether boxes overlap too much</Para></Discussion></Parameter><Parameter><Name>maxPerClass</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the maximum number of boxes that will be selected per class</Para></Discussion></Parameter><Parameter><Name>maxTotal</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>maximum number of boxes that will be selected over all classes</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the array indices of the selected bounding boxes</Para></ResultDiscussion><Discussion><Para>Where <codeVoice>nonMaxSuppression()</codeVoice> does not look at the class of the predictions at all, the multi-class version first selects the best bounding boxes for each class, and then keeps the best ones of those.</Para><Para>With this method you can usually expect to see at least one bounding box for each class (unless all the scores for a given class are really low).</Para><Para>Based on code from: https://github.com/tensorflow/models/blob/master/object_detection/core/post_processing.py</Para></Discussion></CommentParts></Function>", "key.doc.line": 131, "key.doc.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.doc.parameters": [{"discussion": [{"Para": "the number of classes"}], "name": "numClasses"}, {"discussion": [{"Para": "an array of bounding boxes and their scores"}], "name": "predictions"}, {"discussion": [{"Para": "used to only keep bounding boxes with a high enough score"}], "name": "scoreThreshold"}, {"discussion": [{"Para": "used to decide whether boxes overlap too much"}], "name": "iouThreshold"}, {"discussion": [{"Para": "the maximum number of boxes that will be selected per class"}], "name": "maxPerClass"}, {"discussion": [{"Para": "maximum number of boxes that will be selected over all classes"}], "name": "maxTotal"}], "key.doc.result_discussion": [{"Para": "the array indices of the selected bounding boxes"}], "key.doc.type": "Function", "key.doclength": 1067, "key.docoffset": 4206, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>nonMaxSuppressionMultiClass</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>numClasses</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>predictions</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.typealias usr=\"s:13CoreMLHelpers13NMSPredictiona\">NMSPrediction</ref.typealias>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>scoreThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxPerClass</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>maxTotal</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 1202, "key.name": "nonMaxSuppressionMultiClass(numClasses:predictions:scoreThreshold:iouThreshold:maxPerClass:maxTotal:)", "key.namelength": 165, "key.nameoffset": 5285, "key.offset": 5280, "key.parsed_declaration": "public func nonMaxSuppressionMultiClass(\n  numClasses: Int,\n  predictions: [NMSPrediction],\n  scoreThreshold: Float,\n  iouThreshold: Float,\n  maxPerClass: Int,\n  maxTotal: Int\n) -> [Int]", "key.parsed_scope.end": 172, "key.parsed_scope.start": 131, "key.substructure": [{"key.annotated_decl": "<Declaration>var selectedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>selectedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 29, "key.name": "selectedBoxes", "key.namelength": 13, "key.nameoffset": 5468, "key.offset": 5464, "key.parsed_declaration": "var selectedBoxes: [Int] = []", "key.parsed_scope.end": 139, "key.parsed_scope.start": 139, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF13selectedBoxesL_AIvp"}, {"key.annotated_decl": "<Declaration>let sortedBoxes: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/NonMaxSuppression.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedBoxes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 88, "key.name": "sortedBoxes", "key.namelength": 11, "key.nameoffset": 6351, "key.offset": 6347, "key.parsed_declaration": "let sortedBoxes = selectedBoxes.sorted { predictions[$0].score > predictions[$1].score }", "key.parsed_scope.end": 170, "key.parsed_scope.start": 170, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF11sortedBoxesL_AIvp"}], "key.typename": "(Int, [(classIndex: Int, score: Float, rect: CGRect)], Float, Float, Int, Int) -> [Int]", "key.typeusr": "$s10numClasses11predictions14scoreThreshold03iouE011maxPerClass0G5TotalSaySiGSi_SaySi10classIndex_Sf0D0So6CGRectV4recttGS2fS2itcD", "key.usr": "s:13CoreMLHelpers27nonMaxSuppressionMultiClass10numClasses11predictions14scoreThreshold03iouL006maxPerG00N5TotalSaySiGSi_SaySi10classIndex_Sf0K0So6CGRectV4recttGS2fS2itF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1918, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ prob: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:Sd\">Double</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1260}], "key.bodylength": 156, "key.bodyoffset": 1335, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Core ML classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "public func top(_ k: Int, _ prob: [String : Double]) -> [(String, Double)]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift\" line=\"25\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF</USR><Declaration>public func top(_ k: Int, _ prob: [String : Double]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Core ML classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 25, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 117, "key.docoffset": 1143, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>prob</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 225, "key.name": "top(_:_:)", "key.namelength": 39, "key.nameoffset": 1272, "key.offset": 1267, "key.parsed_declaration": "public func top(_ k: Int, _ prob: [String: Double]) -> [(String, Double)]", "key.parsed_scope.end": 31, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF\">top(_: Int, _: [VNClassificationObservation]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [String : Double]) -> [(String, Double)]", "key.typeusr": "$sySaySS_SdtGSi_SDySSSdGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func top(_ k: <Type usr=\"s:Si\">Int</Type>, _ observations: [<Type usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</Type>]) -&gt; [(<Type usr=\"s:SS\">String</Type>, <Type usr=\"s:Sd\">Double</Type>)]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1634}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1610}], "key.bodylength": 186, "key.bodyoffset": 1730, "key.doc.column": 13, "key.doc.comment": "Returns the top `k` predictions from Vision classification results as an\narray of `(String, Double)` pairs.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift\" line=\"36\" column=\"13\"><Name>top(_:_:)</Name><USR>s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF</USR><Declaration>@available(iOS 11.0, *)\npublic func top(_ k: Int, _ observations: [VNClassificationObservation]) -&gt; [(String, Double)]</Declaration><CommentParts><Abstract><Para>Returns the top <codeVoice>k</codeVoice> predictions from Vision classification results as an array of <codeVoice>(String, Double)</codeVoice> pairs.</Para></Abstract></CommentParts></Function>", "key.doc.line": 36, "key.doc.name": "top(_:_:)", "key.doc.type": "Function", "key.doclength": 116, "key.docoffset": 1494, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/Predictions.swift", "key.fully_annotated_decl": "<decl.function.free><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>top</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>k</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>observations</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"c:objc(cs)VNClassificationObservation\">VNClassificationObservation</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<tuple>(<tuple.element><tuple.element.type><ref.struct usr=\"s:SS\">String</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.struct usr=\"s:Sd\">Double</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.function.returntype></decl.function.free>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 276, "key.name": "top(_:_:)", "key.namelength": 60, "key.nameoffset": 1646, "key.offset": 1641, "key.parsed_declaration": "public func top(_ k: Int, _ observations: [VNClassificationObservation]) -> [(String, Double)]", "key.parsed_scope.end": 40, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers3topySaySS_SdtGSi_SDySSSdGtF\">top(_: Int, _: [String : Double]) -&gt; [(String, Double)]</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, [VNClassificationObservation]) -> [(String, Double)]", "key.typeusr": "$sySaySS_SdtGSi_SaySo27VNClassificationObservationCGtcD", "key.usr": "s:13CoreMLHelpers3topySaySS_SdtGSi_SaySo27VNClassificationObservationCGtF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+CVPixelBuffer.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4755, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+Extensions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1781, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/CoreMLHelpers/UIImage+RawBytes.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2354, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 806, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol AnnotationRepresentable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 310}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 286}], "key.bodylength": 203, "key.bodyoffset": 351, "key.doc.column": 17, "key.doc.comment": "A data type that can be represented as annotations that describe a specific type.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol AnnotationRepresentable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift\" line=\"14\" column=\"17\"><Name>AnnotationRepresentable</Name><USR>s:17FritzManagedModel23AnnotationRepresentableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol AnnotationRepresentable</Declaration><CommentParts><Abstract><Para>A data type that can be represented as annotations that describe a specific type.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "AnnotationRepresentable", "key.doc.type": "Class", "key.doclength": 86, "key.docoffset": 200, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>AnnotationRepresentable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 238, "key.name": "AnnotationRepresentable", "key.namelength": 23, "key.nameoffset": 326, "key.offset": 317, "key.parsed_declaration": "public protocol AnnotationRepresentable", "key.parsed_scope.end": 21, "key.parsed_scope.start": 14, "key.runtime_name": "_TtP4main23AnnotationRepresentable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Source</Declaration>", "key.doc.comment": "Type that the `AnnotationType` is for.", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Source</decl.name></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 21, "key.name": "Source", "key.namelength": 6, "key.nameoffset": 448, "key.offset": 433, "key.parsed_declaration": "associatedtype Source", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Self.Source.Type", "key.typeusr": "$s6Source17FritzManagedModel23AnnotationRepresentablePQzmD", "key.usr": "s:17FritzManagedModel23AnnotationRepresentableP6SourceQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Annotation : <Type usr=\"s:17FritzManagedModel14AnnotationTypeP\">AnnotationType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Annotation</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel14AnnotationTypeP\">AnnotationType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 41, "key.name": "Annotation", "key.namelength": 10, "key.nameoffset": 472, "key.offset": 457, "key.parsed_declaration": "associatedtype Annotation: AnnotationType", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Self.Annotation.Type", "key.typeusr": "$s10Annotation17FritzManagedModel0A13RepresentablePQzmD", "key.usr": "s:17FritzManagedModel23AnnotationRepresentableP0D0Qa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func annotations(for input: <Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP6SourceQa\">Source</Type>) -&gt; [<Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP0D0Qa\">Annotation</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationRepresentable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>annotations</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:17FritzManagedModel23AnnotationRepresentableP6SourceQa\">Source</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.associatedtype usr=\"s:17FritzManagedModel23AnnotationRepresentableP0D0Qa\">Annotation</ref.associatedtype>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "annotations(for:)", "key.namelength": 30, "key.nameoffset": 507, "key.offset": 502, "key.parsed_declaration": "func annotations(for input: Source) -> [Annotation]", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.substructure": [], "key.typename": "<Self where Self : AnnotationRepresentable> (Self) -> (Self.Source) -> [Self.Annotation]", "key.typeusr": "$s3forSay10AnnotationQzG6SourceQz_tcD", "key.usr": "s:17FritzManagedModel23AnnotationRepresentableP11annotations3forSay0D0QzG6SourceQz_tF"}], "key.typename": "AnnotationRepresentable.Protocol", "key.typeusr": "$s17FritzManagedModel23AnnotationRepresentable_pmD", "key.usr": "s:17FritzManagedModel23AnnotationRepresentableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 559, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol AnnotationType : <Type usr=\"s:Se\">Decodable</Type>, <Type usr=\"s:SE\">Encodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 242}], "key.bodylength": 148, "key.bodyoffset": 283, "key.doc.column": 17, "key.doc.comment": "A type that represents annotations for an object.", "key.doc.declaration": "public protocol AnnotationType : Decodable, Encodable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift\" line=\"12\" column=\"17\"><Name>AnnotationType</Name><USR>s:17FritzManagedModel14AnnotationTypeP</USR><Declaration>public protocol AnnotationType : Decodable, Encodable</Declaration><CommentParts><Abstract><Para>A type that represents annotations for an object.</Para></Abstract></CommentParts></Class>", "key.doc.line": 12, "key.doc.name": "AnnotationType", "key.doc.type": "Class", "key.doclength": 54, "key.docoffset": 188, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 274}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>AnnotationType</decl.name> : <ref.protocol usr=\"s:Se\">Decodable</ref.protocol>, <ref.protocol usr=\"s:SE\">Encodable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 183, "key.name": "AnnotationType", "key.namelength": 14, "key.nameoffset": 258, "key.offset": 249, "key.parsed_declaration": "public protocol AnnotationType: Codable", "key.parsed_scope.end": 19, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main14AnnotationType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var format: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 307, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "format", "key.namelength": 6, "key.nameoffset": 291, "key.offset": 287, "key.parsed_declaration": "var format: String", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel14AnnotationTypeP6formatSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var requestOptions: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 423, "key.doc.column": 7, "key.doc.comment": "Annotation formatted as `RequestOptions` for passing to server.", "key.doc.declaration": "var requestOptions: RequestOptions { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift\" line=\"17\" column=\"7\"><Name>requestOptions</Name><USR>s:17FritzManagedModel14AnnotationTypeP14requestOptionsSDySSypGvp</USR><Declaration>var requestOptions: RequestOptions { get }</Declaration><CommentParts><Abstract><Para>Annotation formatted as <codeVoice>RequestOptions</codeVoice> for passing to server.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "requestOptions", "key.doc.type": "Other", "key.doclength": 68, "key.docoffset": 317, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requestOptions</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "requestOptions", "key.namelength": 14, "key.nameoffset": 391, "key.offset": 387, "key.parsed_declaration": "var requestOptions: RequestOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel14AnnotationTypeP14requestOptionsSDySSypGvp"}], "key.typename": "AnnotationType.Protocol", "key.typeusr": "$s17FritzManagedModel14AnnotationType_pmD", "key.usr": "s:17FritzManagedModel14AnnotationTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum AnnotationFormat : <Type usr=\"s:SS\">String</Type>, <Type usr=\"s:SY\">RawRepresentable</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 469}], "key.bodylength": 22, "key.bodyoffset": 534, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 499}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 507}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 525}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>AnnotationFormat</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}, {"key.name": "RawRepresentable"}, {"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 81, "key.name": "AnnotationFormat", "key.namelength": 16, "key.nameoffset": 481, "key.offset": 476, "key.parsed_declaration": "public enum AnnotationFormat: String, RawRepresentable, Codable", "key.parsed_scope.end": 24, "key.parsed_scope.start": 22, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 537, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case coco = &quot;coco&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 6, "key.offset": 549}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>coco</decl.name> = <syntaxtype.string>&quot;coco&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "coco", "key.namelength": 4, "key.nameoffset": 542, "key.offset": 542, "key.parsed_declaration": "case coco = \"coco\"", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(AnnotationFormat.Type) -> AnnotationFormat", "key.typeusr": "$sy17FritzManagedModel16AnnotationFormatOACmcD", "key.usr": "s:17FritzManagedModel16AnnotationFormatO4cocoyA2CmF"}]}], "key.typename": "AnnotationFormat.Type", "key.typeusr": "$s17FritzManagedModel16AnnotationFormatOmD", "key.usr": "s:17FritzManagedModel16AnnotationFormatO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 528, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum EncodedFormat : <Type usr=\"s:SS\">String</Type>, <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 186}], "key.bodylength": 24, "key.bodyoffset": 239, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 213}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 221}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>EncodedFormat</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}, {"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 71, "key.name": "EncodedFormat", "key.namelength": 13, "key.nameoffset": 198, "key.offset": 193, "key.parsed_declaration": "public enum EncodedFormat: String, RawRepresentable", "key.parsed_scope.end": 14, "key.parsed_scope.start": 12, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 242, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case image = &quot;image&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 7, "key.offset": 255}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>image</decl.name> = <syntaxtype.string>&quot;image&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "image", "key.namelength": 5, "key.nameoffset": 247, "key.offset": 247, "key.parsed_declaration": "case image = \"image\"", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(EncodedFormat.Type) -> EncodedFormat", "key.typeusr": "$sy17FritzManagedModel13EncodedFormatOACmcD", "key.usr": "s:17FritzManagedModel13EncodedFormatO5imageyA2CmF"}]}], "key.typename": "EncodedFormat.Type", "key.typeusr": "$s17FritzManagedModel13EncodedFormatOmD", "key.usr": "s:17FritzManagedModel13EncodedFormatO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol Base64StringEncodable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 309}], "key.bodylength": 176, "key.bodyoffset": 348, "key.doc.column": 17, "key.doc.comment": "A type that can be encoded to base 64.", "key.doc.declaration": "public protocol Base64StringEncodable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift\" line=\"17\" column=\"17\"><Name>Base64StringEncodable</Name><USR>s:17FritzManagedModel21Base64StringEncodableP</USR><Declaration>public protocol Base64StringEncodable</Declaration><CommentParts><Abstract><Para>A type that can be encoded to base 64.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "Base64StringEncodable", "key.doc.type": "Class", "key.doclength": 43, "key.docoffset": 266, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>Base64StringEncodable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 209, "key.name": "Base64StringEncodable", "key.namelength": 21, "key.nameoffset": 325, "key.offset": 316, "key.parsed_declaration": "public protocol Base64StringEncodable", "key.parsed_scope.end": 24, "key.parsed_scope.start": 17, "key.runtime_name": "_TtP4main21Base64StringEncodable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func encode() throws -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.doc.column": 8, "key.doc.comment": "Encode data as a base64 encoded string.", "key.doc.declaration": "func encode() throws -> String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift\" line=\"20\" column=\"8\"><Name>encode()</Name><USR>s:17FritzManagedModel21Base64StringEncodableP6encodeSSyKF</USR><Declaration>func encode() throws -&gt; String</Declaration><CommentParts><Abstract><Para>Encode data as a base64 encoded string.</Para></Abstract></CommentParts></Function>", "key.doc.line": 20, "key.doc.name": "encode()", "key.doc.type": "Function", "key.doclength": 44, "key.docoffset": 352, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encode</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 30, "key.name": "encode()", "key.namelength": 8, "key.nameoffset": 403, "key.offset": 398, "key.parsed_declaration": "func encode() throws -> String", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "<Self where Self : Base64StringEncodable> (Self) -> () throws -> String", "key.typeusr": "$sSSyKcD", "key.usr": "s:17FritzManagedModel21Base64StringEncodableP6encodeSSyKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func encodedImageDimensions() throws -&gt; <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encodedImageDimensions</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 46, "key.name": "encodedImageDimensions()", "key.namelength": 24, "key.nameoffset": 436, "key.offset": 431, "key.parsed_declaration": "func encodedImageDimensions() throws -> CGSize", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "<Self where Self : Base64StringEncodable> (Self) -> () throws -> CGSize", "key.typeusr": "$sSo6CGSizeVyKcD", "key.usr": "s:17FritzManagedModel21Base64StringEncodableP22encodedImageDimensionsSo6CGSizeVyKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var encodedFormat: <Type usr=\"s:17FritzManagedModel13EncodedFormatO\">EncodedFormat</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 517, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/Base64StringEncodable.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encodedFormat</decl.name>: <decl.var.type><ref.enum usr=\"s:17FritzManagedModel13EncodedFormatO\">EncodedFormat</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "encodedFormat", "key.namelength": 13, "key.nameoffset": 487, "key.offset": 483, "key.parsed_declaration": "var encodedFormat: EncodedFormat", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "EncodedFormat", "key.typeusr": "$s17FritzManagedModel13EncodedFormatOD", "key.usr": "s:17FritzManagedModel21Base64StringEncodableP13encodedFormatAA07EncodedH0Ovp"}], "key.typename": "Base64StringEncodable.Protocol", "key.typeusr": "$s17FritzManagedModel21Base64StringEncodable_pmD", "key.usr": "s:17FritzManagedModel21Base64StringEncodableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1955, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct CocoImageAnnotation : <Type usr=\"s:s7Codablea\">Codable</Type>, <Type usr=\"s:17FritzManagedModel14AnnotationTypeP\">AnnotationType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 215}], "key.bodylength": 1678, "key.bodyoffset": 275, "key.doc.column": 15, "key.doc.comment": "COCO Annotation", "key.doc.declaration": "public struct CocoImageAnnotation : Codable, AnnotationType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"12\" column=\"15\"><Name>CocoImageAnnotation</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV</USR><Declaration>public struct CocoImageAnnotation : Codable, AnnotationType</Declaration><CommentParts><Abstract><Para>COCO Annotation</Para></Abstract></CommentParts></Class>", "key.doc.line": 12, "key.doc.name": "CocoImageAnnotation", "key.doc.type": "Class", "key.doclength": 20, "key.docoffset": 195, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 250}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 14, "key.offset": 259}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>CocoImageAnnotation</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias>, <ref.protocol usr=\"s:17FritzManagedModel14AnnotationTypeP\">AnnotationType</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}, {"key.name": "AnnotationType"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 1732, "key.name": "CocoImageAnnotation", "key.namelength": 19, "key.nameoffset": 229, "key.offset": 222, "key.parsed_declaration": "public struct CocoImageAnnotation: Codable, AnnotationType", "key.parsed_scope.end": 80, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</Type>.BoundingBox : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 298}], "key.bodylength": 280, "key.bodyoffset": 334, "key.doc.column": 17, "key.doc.comment": "Bounding box", "key.doc.declaration": "public struct FritzManagedModel.CocoImageAnnotation.BoundingBox : Codable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"15\" column=\"17\"><Name>BoundingBox</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV</USR><Declaration>public struct FritzManagedModel.CocoImageAnnotation.BoundingBox : Codable</Declaration><CommentParts><Abstract><Para>Bounding box</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "BoundingBox", "key.doc.type": "Class", "key.doclength": 17, "key.docoffset": 279, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 325}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</ref.struct>.<decl.name>BoundingBox</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 310, "key.name": "BoundingBox", "key.namelength": 11, "key.nameoffset": 312, "key.offset": 305, "key.parsed_declaration": "public struct BoundingBox: Codable", "key.parsed_scope.end": 27, "key.parsed_scope.start": 15, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(xmin: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, ymin: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, width: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, height: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 431}], "key.bodylength": 103, "key.bodyoffset": 507, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>xmin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>ymin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 173, "key.name": "init(xmin:ymin:width:height:)", "key.namelength": 67, "key.nameoffset": 438, "key.offset": 438, "key.parsed_declaration": "public init(xmin: CGFloat, ymin: CGFloat, width: CGFloat, height: CGFloat)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV4fromAEs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CocoImageAnnotation.BoundingBox.Type) -> (CGFloat, CGFloat, CGFloat, CGFloat) -> CocoImageAnnotation.BoundingBox", "key.typeusr": "$s4xmin4ymin5width6height17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV12CoreGraphics7CGFloatV_A3LtcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV4xmin4ymin5width6heightAE12CoreGraphics7CGFloatV_A3Ltcfc"}], "key.typename": "CocoImageAnnotation.BoundingBox.Type", "key.typeusr": "$s17FritzManagedModel19CocoImageAnnotationV11BoundingBoxVmD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</Type>.Keypoint : <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 634}], "key.bodylength": 471, "key.bodyoffset": 667, "key.doc.column": 17, "key.doc.comment": "Keypoint", "key.doc.declaration": "public struct FritzManagedModel.CocoImageAnnotation.Keypoint : Codable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"30\" column=\"17\"><Name>Keypoint</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV8KeypointV</USR><Declaration>public struct FritzManagedModel.CocoImageAnnotation.Keypoint : Codable</Declaration><CommentParts><Abstract><Para>Keypoint</Para></Abstract></CommentParts></Class>", "key.doc.line": 30, "key.doc.name": "Keypoint", "key.doc.type": "Class", "key.doclength": 13, "key.docoffset": 619, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 658}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</ref.struct>.<decl.name>Keypoint</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 498, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 648, "key.offset": 641, "key.parsed_declaration": "public struct Keypoint: Codable", "key.parsed_scope.end": 50, "key.parsed_scope.start": 30, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</Type>.<Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</Type>.KeypointVisibility : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 672}], "key.bodylength": 88, "key.bodyoffset": 718, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 704}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 709}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV\">CocoImageAnnotation</ref.struct>.<ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</ref.struct>.<decl.name>KeypointVisibility</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 128, "key.name": "KeypointVisibility", "key.namelength": 18, "key.nameoffset": 684, "key.offset": 679, "key.parsed_declaration": "public enum KeypointVisibility: Int, Codable", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 725, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case notLabeled</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>notLabeled</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "notLabeled", "key.namelength": 10, "key.nameoffset": 730, "key.offset": 730, "key.parsed_declaration": "case notLabeled", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "(CocoImageAnnotation.Keypoint.KeypointVisibility.Type) -> CocoImageAnnotation.Keypoint.KeypointVisibility", "key.typeusr": "$sy17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityOAGmcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO10notLabeledyA2GmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 747, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case labeledButNotVisible</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>labeledButNotVisible</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "labeledButNotVisible", "key.namelength": 20, "key.nameoffset": 752, "key.offset": 752, "key.parsed_declaration": "case labeledButNotVisible", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "(CocoImageAnnotation.Keypoint.KeypointVisibility.Type) -> CocoImageAnnotation.Keypoint.KeypointVisibility", "key.typeusr": "$sy17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityOAGmcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO20labeledButNotVisibleyA2GmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 779, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case labeledAndVisible</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>labeledAndVisible</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "labeledAndVisible", "key.namelength": 17, "key.nameoffset": 784, "key.offset": 784, "key.parsed_declaration": "case labeledAndVisible", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "(CocoImageAnnotation.Keypoint.KeypointVisibility.Type) -> CocoImageAnnotation.Keypoint.KeypointVisibility", "key.typeusr": "$sy17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityOAGmcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO17labeledAndVisibleyA2GmF"}]}], "key.typename": "CocoImageAnnotation.Keypoint.KeypointVisibility.Type", "key.typeusr": "$s17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityOmD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(id: <Type usr=\"s:Si\">Int</Type>, label: <Type usr=\"s:SS\">String</Type>, x: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, y: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, visibility: <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO\">KeypointVisibility</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 914}], "key.bodylength": 127, "key.bodyoffset": 1007, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>id</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>visibility</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV0G10VisibilityO\">KeypointVisibility</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 214, "key.name": "init(id:label:x:y:visibility:)", "key.namelength": 84, "key.nameoffset": 921, "key.offset": 921, "key.parsed_declaration": "public init(id: Int, label: String, x: CGFloat, y: CGFloat, visibility: KeypointVisibility)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV4fromAEs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CocoImageAnnotation.Keypoint.Type) -> (Int, String, CGFloat, CGFloat, CocoImageAnnotation.Keypoint.KeypointVisibility) -> CocoImageAnnotation.Keypoint", "key.typeusr": "$s2id5label1x1y10visibility17FritzManagedModel19CocoImageAnnotationV8KeypointVSi_SS12CoreGraphics7CGFloatVAmJ0J10VisibilityOtcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV2id5label1x1y10visibilityAESi_SS12CoreGraphics7CGFloatVAmE0G10VisibilityOtcfc"}], "key.typename": "CocoImageAnnotation.Keypoint.Type", "key.typeusr": "$s17FritzManagedModel19CocoImageAnnotationV8KeypointVmD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV8KeypointV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let bbox: <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV\">BoundingBox</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1162}], "key.doc.column": 14, "key.doc.comment": "Bounding box", "key.doc.declaration": "public let bbox: BoundingBox", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"53\" column=\"14\"><Name>bbox</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV4bboxAC11BoundingBoxVvp</USR><Declaration>public let bbox: BoundingBox</Declaration><CommentParts><Abstract><Para>Bounding box</Para></Abstract></CommentParts></Other>", "key.doc.line": 53, "key.doc.name": "bbox", "key.doc.type": "Other", "key.doclength": 17, "key.docoffset": 1143, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bbox</decl.name>: <decl.var.type><ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV\">BoundingBox</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "bbox", "key.namelength": 4, "key.nameoffset": 1173, "key.offset": 1169, "key.parsed_declaration": "public let bbox: BoundingBox", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "CocoImageAnnotation.BoundingBox", "key.typeusr": "$s17FritzManagedModel19CocoImageAnnotationV11BoundingBoxVD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV4bboxAC11BoundingBoxVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let keypoints: [<Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1210}], "key.doc.column": 14, "key.doc.comment": "Keypoints", "key.doc.declaration": "public let keypoints: [Keypoint]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"56\" column=\"14\"><Name>keypoints</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV9keypointsSayAC8KeypointVGvp</USR><Declaration>public let keypoints: [Keypoint]</Declaration><CommentParts><Abstract><Para>Keypoints</Para></Abstract></CommentParts></Other>", "key.doc.line": 56, "key.doc.name": "keypoints", "key.doc.type": "Other", "key.doclength": 14, "key.docoffset": 1194, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 1221, "key.offset": 1217, "key.parsed_declaration": "public let keypoints: [Keypoint]", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "[CocoImageAnnotation.Keypoint]", "key.typeusr": "$sSay17FritzManagedModel19CocoImageAnnotationV8KeypointVGD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV9keypointsSayAC8KeypointVGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1246}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 1257, "key.offset": 1253, "key.parsed_declaration": "public let label: String", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV5labelSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let format: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1301}], "key.doc.column": 14, "key.doc.comment": "Format of annotation", "key.doc.declaration": "public let format: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift\" line=\"61\" column=\"14\"><Name>format</Name><USR>s:17FritzManagedModel19CocoImageAnnotationV6formatSSvp</USR><Declaration>public let format: String</Declaration><CommentParts><Abstract><Para>Format of annotation</Para></Abstract></CommentParts></Other>", "key.doc.line": 61, "key.doc.name": "format", "key.doc.type": "Other", "key.doclength": 25, "key.docoffset": 1274, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>format</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 51, "key.name": "format", "key.namelength": 6, "key.nameoffset": 1312, "key.offset": 1308, "key.overrides": [{"key.usr": "s:17FritzManagedModel14AnnotationTypeP6formatSSvp"}], "key.parsed_declaration": "public let format: String = AnnotationFormat.coco.rawValue", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV6formatSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(bbox: <Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV\">BoundingBox</Type>, keypoints: [<Type usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</Type>], label: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1363}], "key.bodylength": 78, "key.bodyoffset": 1433, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>bbox</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV11BoundingBoxV\">BoundingBox</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:17FritzManagedModel19CocoImageAnnotationV8KeypointV\">Keypoint</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(bbox:keypoints:label:)", "key.namelength": 61, "key.nameoffset": 1370, "key.offset": 1370, "key.parsed_declaration": "public init(bbox: BoundingBox, keypoints: [Keypoint], label: String)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel19CocoImageAnnotationV4fromACs7Decoder_p_tKcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(CocoImageAnnotation.Type) -> (CocoImageAnnotation.BoundingBox, [CocoImageAnnotation.Keypoint], String) -> CocoImageAnnotation", "key.typeusr": "$s4bbox9keypoints5label17FritzManagedModel19CocoImageAnnotationVAF11BoundingBoxV_SayAF8KeypointVGSStcD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV4bbox9keypoints5labelA2C11BoundingBoxV_SayAC8KeypointVGSStcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var requestOptions: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1638}], "key.bodylength": 270, "key.bodyoffset": 1681, "key.doc.column": 7, "key.doc.declaration": "var requestOptions: RequestOptions { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/AnnotationType.swift\" line=\"17\" column=\"7\"><Name>requestOptions</Name><USR>s:17FritzManagedModel14AnnotationTypeP14requestOptionsSDySSypGvp</USR><Declaration>var requestOptions: RequestOptions { get }</Declaration><CommentParts><Abstract><Para>Annotation formatted as <codeVoice>RequestOptions</codeVoice> for passing to server.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>AnnotationType</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "requestOptions", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/CocoImageAnnotation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requestOptions</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 307, "key.name": "requestOptions", "key.namelength": 14, "key.nameoffset": 1649, "key.offset": 1645, "key.overrides": [{"key.usr": "s:17FritzManagedModel14AnnotationTypeP14requestOptionsSDySSypGvp"}], "key.parsed_declaration": "public var requestOptions: RequestOptions", "key.parsed_scope.end": 79, "key.parsed_scope.start": 71, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel14AnnotationTypeP14requestOptionsSDySSypGvp"}], "key.typename": "CocoImageAnnotation.Type", "key.typeusr": "$s17FritzManagedModel19CocoImageAnnotationVmD", "key.usr": "s:17FritzManagedModel19CocoImageAnnotationV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1963, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class DataAnnotationRecording&lt;AnnotationRepresentation&gt; where AnnotationRepresentation : <Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</Type>, AnnotationRepresentation.Source : <Type usr=\"s:17FritzManagedModel21Base64StringEncodableP\">Base64StringEncodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 223}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 199}], "key.bodylength": 1588, "key.bodyoffset": 373, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DataAnnotationRecording</decl.name>&lt;<decl.generic_type_param usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\"><decl.generic_type_param.name>AnnotationRepresentation</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>AnnotationRepresentation : <ref.protocol usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>AnnotationRepresentation.Source : <ref.protocol usr=\"s:17FritzManagedModel21Base64StringEncodableP\">Base64StringEncodable</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1732, "key.name": "DataAnnotationRecording", "key.namelength": 23, "key.nameoffset": 236, "key.offset": 230, "key.parsed_declaration": "public class DataAnnotationRecording<AnnotationRepresentation: AnnotationRepresentable>\nwhere AnnotationRepresentation.Source: Base64StringEncodable", "key.parsed_scope.end": 58, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>AnnotationRepresentation : <Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 286}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>AnnotationRepresentation</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "AnnotationRepresentable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 49, "key.name": "AnnotationRepresentation", "key.namelength": 24, "key.nameoffset": 260, "key.offset": 260, "key.parsed_declaration": "public class DataAnnotationRecording<AnnotationRepresentation: AnnotationRepresentable>", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "AnnotationRepresentation.Type", "key.typeusr": "$sxmD", "key.usr": "s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(input: <Type usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</Type>.<Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP6SourceQa\">Source</Type>, modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, predicted predictionRepresentation: <Type usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</Type>, modified modifiedRepresentation: <Type usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 831}], "key.bodylength": 150, "key.bodyoffset": 1067, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>input</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</ref.generic_type_param>.<ref.associatedtype usr=\"s:17FritzManagedModel23AnnotationRepresentableP6SourceQa\">Source</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>predicted</decl.var.parameter.argument_label> <decl.var.parameter.name>predictionRepresentation</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modified</decl.var.parameter.argument_label> <decl.var.parameter.name>modifiedRepresentation</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:17FritzManagedModel23DataAnnotationRecordingC0E14Representationxmfp\">AnnotationRepresentation</ref.generic_type_param>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 380, "key.name": "init(input:modelConfig:predicted:modified:)", "key.namelength": 227, "key.nameoffset": 838, "key.offset": 838, "key.parsed_declaration": "public init(\n  input: AnnotationRepresentation.Source,\n  modelConfig: FritzModelConfiguration,\n  predicted predictionRepresentation: AnnotationRepresentation,\n  modified modifiedRepresentation: AnnotationRepresentation? = nil)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 29, "key.substructure": [], "key.typename": "<AnnotationRepresentation where AnnotationRepresentation : AnnotationRepresentable, AnnotationRepresentation.Source : Base64StringEncodable> (DataAnnotationRecording<AnnotationRepresentation>.Type) -> (AnnotationRepresentation.Source, FritzModelConfiguration, AnnotationRepresentation, AnnotationRepresentation?) -> DataAnnotationRecording<AnnotationRepresentation>", "key.typeusr": "$s5input11modelConfig9predicted8modified17FritzManagedModel23DataAnnotationRecordingCyxG6SourceQz_AE0fH13ConfigurationCxxSgtcD", "key.usr": "s:17FritzManagedModel23DataAnnotationRecordingC5input11modelConfig9predicted8modifiedACyxG6SourceQz_AA0aC13ConfigurationCxxSgtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func event() throws -&gt; <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1271}], "key.bodylength": 644, "key.bodyoffset": 1315, "key.doc.column": 15, "key.doc.comment": "Creates SessionEvent for reporting to API.", "key.doc.declaration": "public func event() throws -> SessionEvent", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift\" line=\"41\" column=\"15\"><Name>event()</Name><USR>s:17FritzManagedModel23DataAnnotationRecordingC5event0A4Core12SessionEventVyKF</USR><Declaration>public func event() throws -&gt; SessionEvent</Declaration><CommentParts><Abstract><Para>Creates SessionEvent for reporting to API.</Para></Abstract></CommentParts></Function>", "key.doc.line": 41, "key.doc.name": "event()", "key.doc.type": "Function", "key.doclength": 47, "key.docoffset": 1222, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>event</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 682, "key.name": "event()", "key.namelength": 7, "key.nameoffset": 1283, "key.offset": 1278, "key.parsed_declaration": "public func event() throws -> SessionEvent", "key.parsed_scope.end": 57, "key.parsed_scope.start": 41, "key.substructure": [{"key.annotated_decl": "<Declaration>var options: <Type usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Annotation/DataAnnotationRecording.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.typealias usr=\"s:9FritzCore14RequestOptionsa\">RequestOptions</ref.typealias></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 428, "key.name": "options", "key.namelength": 7, "key.nameoffset": 1324, "key.offset": 1320, "key.parsed_declaration": "var options: RequestOptions = [", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel23DataAnnotationRecordingC5event0A4Core12SessionEventVyKF7optionsL_SDySSypGvp"}], "key.typename": "<AnnotationRepresentation where AnnotationRepresentation : AnnotationRepresentable, AnnotationRepresentation.Source : Base64StringEncodable> (DataAnnotationRecording<AnnotationRepresentation>) -> () throws -> SessionEvent", "key.typeusr": "$s9FritzCore12SessionEventVyKcD", "key.usr": "s:17FritzManagedModel23DataAnnotationRecordingC5event0A4Core12SessionEventVyKF"}], "key.typename": "DataAnnotationRecording<AnnotationRepresentation>.Type", "key.typeusr": "$s17FritzManagedModel23DataAnnotationRecordingCyxGmD", "key.usr": "s:17FritzManagedModel23DataAnnotationRecordingC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10647, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 318}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 257}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 227}], "key.bodylength": 196, "key.bodyoffset": 353, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"15\" column=\"17\"><Name>ReadModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadModelProvider) public protocol ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "ReadModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 195, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadModelProvider</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 225, "key.name": "ReadModelProvider", "key.namelength": 17, "key.nameoffset": 334, "key.offset": 325, "key.parsed_declaration": "public protocol ReadModelProvider", "key.parsed_scope.end": 23, "key.parsed_scope.start": 15, "key.runtime_name": "FritzReadModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 396, "key.doc.column": 7, "key.doc.comment": "A read model", "key.doc.declaration": "var model: MLModel { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"18\" column=\"7\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model</USR><Declaration>var model: MLModel { get }</Declaration><CommentParts><Abstract><Para>A read model</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 17, "key.docoffset": 357, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "model", "key.namelength": 5, "key.nameoffset": 380, "key.offset": 376, "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: <Type usr=\"s:10Foundation3URLV\">URL</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 493}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 461}], "key.bodylength": 5, "key.bodyoffset": 542, "key.doc.column": 23, "key.doc.comment": "The url of the compiled model url in the bundle.", "key.doc.declaration": "@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: URL { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"22\" column=\"23\"><Name>urlOfModelInThisBundle</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle</USR><Declaration>@objc(urlOfModelInThisBundle) optional static var urlOfModelInThisBundle: URL { get }</Declaration><CommentParts><Abstract><Para>The url of the compiled model url in the bundle.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "urlOfModelInThisBundle", "key.doc.type": "Other", "key.doclength": 53, "key.docoffset": 406, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(urlOfModelInThisBundle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>urlOfModelInThisBundle</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 46, "key.name": "urlOfModelInThisBundle", "key.namelength": 22, "key.nameoffset": 513, "key.offset": 502, "key.parsed_declaration": "optional static var urlOfModelInThisBundle: URL", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "URL", "key.typeusr": "$s10Foundation3URLVD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(cpy)urlOfModelInThisBundle"}], "key.typename": "ReadModelProvider.Protocol", "key.typeusr": "$s17FritzManagedModel04ReadC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 680}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 619}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 619}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 619}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 619}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 584}], "key.bodylength": 60, "key.bodyoffset": 739, "key.doc.column": 17, "key.doc.comment": "Manages an MLModel instance", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : FritzManagedModel.ReadModelProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"28\" column=\"17\"><Name>ReadWriteModelProvider</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzReadWriteModelProvider) public protocol ReadWriteModelProvider : FritzManagedModel.ReadModelProvider</Declaration><CommentParts><Abstract><Para>Manages an MLModel instance</Para></Abstract></CommentParts></Class>", "key.doc.line": 28, "key.doc.name": "ReadWriteModelProvider", "key.doc.type": "Class", "key.doclength": 32, "key.docoffset": 552, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 720}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzReadWriteModelProvider)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ReadWriteModelProvider</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 113, "key.name": "ReadWriteModelProvider", "key.namelength": 22, "key.nameoffset": 696, "key.offset": 687, "key.parsed_declaration": "public protocol ReadWriteModelProvider: ReadModelProvider", "key.parsed_scope.end": 32, "key.parsed_scope.start": 28, "key.runtime_name": "FritzReadWriteModelProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 788, "key.doc.column": 7, "key.doc.comment": "A read-write model", "key.doc.declaration": "var model: MLModel { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"31\" column=\"7\"><Name>model</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model</USR><Declaration>var model: MLModel { get set }</Declaration><CommentParts><Abstract><Para>A read-write model</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 743, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "model", "key.namelength": 5, "key.nameoffset": 772, "key.offset": 768, "key.overrides": [{"key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider(py)model"}], "key.parsed_declaration": "var model: MLModel", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider(py)model"}], "key.typename": "ReadWriteModelProvider.Protocol", "key.typeusr": "$s17FritzManagedModel09ReadWriteC8Provider_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 12, "key.name": "MARK: - Base", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 805}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1293}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1232}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1232}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1232}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1232}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1200}], "key.bodylength": 1855, "key.bodyoffset": 1356, "key.doc.column": 17, "key.doc.comment": "This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.\n\n- SeeAlso:\n`SwiftIdentifiedModel`\n`ObjcIdentifiedModel`\n\n- Note: You should not conform your generated class to this protocol directly, instead conform to either `SwiftIdentifiedModel` when using Swift, or `ObjcIdentifiedModel` when using Objective-C.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, FritzManagedModel.ReadModelProvider", "key.doc.discussion": [{"See": ""}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"45\" column=\"17\"><Name>BaseIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzBaseIdentifiedModel) public protocol BaseIdentifiedModel : AnyObject, FritzManagedModel.ReadModelProvider</Declaration><CommentParts><Abstract><Para>This is the main entry point to exposing Fritz functionality on your Xcode-generated model classes.</Para></Abstract><Discussion><See><Para> <codeVoice>SwiftIdentifiedModel</codeVoice> <codeVoice>ObjcIdentifiedModel</codeVoice></Para></See><Note><Para>You should not conform your generated class to this protocol directly, instead conform to either <codeVoice>SwiftIdentifiedModel</codeVoice> when using Swift, or <codeVoice>ObjcIdentifiedModel</codeVoice> when using Objective-C.</Para></Note></Discussion></CommentParts></Class>", "key.doc.line": 45, "key.doc.name": "BaseIdentifiedModel", "key.doc.type": "Class", "key.doclength": 381, "key.docoffset": 819, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1330}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1337}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzBaseIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>BaseIdentifiedModel</decl.name> : AnyObject, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadModelProvider\">ReadModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}, {"key.name": "ReadModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 1912, "key.name": "BaseIdentifiedModel", "key.namelength": 19, "key.nameoffset": 1309, "key.offset": 1300, "key.parsed_declaration": "public protocol BaseIdentifiedModel: class, ReadModelProvider", "key.parsed_scope.end": 89, "key.parsed_scope.start": 45, "key.runtime_name": "FritzBaseIdentifiedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1499}], "key.bodylength": 5, "key.bodyoffset": 1565, "key.doc.column": 14, "key.doc.comment": "The Fritz model identifier that matches this class.\n\n- Note: You should copy this identifier from the Fritz dashboard", "key.doc.declaration": "@objc(fritzModelIdentifier) static var modelIdentifier: String { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"53\" column=\"14\"><Name>modelIdentifier</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier</USR><Declaration>@objc(fritzModelIdentifier) static var modelIdentifier: String { get }</Declaration><CommentParts><Abstract><Para>The Fritz model identifier that matches this class.</Para></Abstract><Discussion><Note><Para>You should copy this identifier from the Fritz dashboard</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 53, "key.doc.name": "modelIdentifier", "key.doc.type": "Other", "key.doclength": 136, "key.docoffset": 1360, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzModelIdentifier)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelIdentifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "modelIdentifier", "key.namelength": 15, "key.nameoffset": 1540, "key.offset": 1529, "key.parsed_declaration": "static var modelIdentifier: String", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzModelIdentifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 2166}], "key.bodylength": 5, "key.bodyoffset": 2239, "key.doc.column": 14, "key.doc.comment": "This is the version of the model that is packaged with your application at submission time.\n\n- Note: As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.", "key.doc.declaration": "@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"61\" column=\"14\"><Name>packagedModelVersion</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion</USR><Declaration>@objc(fritzPackagedModelVersion) static var packagedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>This is the version of the model that is packaged with your application at submission time.</Para></Abstract><Discussion><Note><Para>As you upload newer versions of your model to the Fritz dashboard, clients will download those versions and begin using them automatically. This version is specifically for tracking the version that is installed on the device when they first download the app from the App Store. In order to maintain accurate tracking you should update this version number when you package a later version of a model into your app and resubmit to the App Store with that later version.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 61, "key.doc.name": "packagedModelVersion", "key.doc.type": "Other", "key.doclength": 588, "key.docoffset": 1575, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzPackagedModelVersion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>packagedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 44, "key.name": "packagedModelVersion", "key.namelength": 20, "key.nameoffset": 2212, "key.offset": 2201, "key.parsed_declaration": "static var packagedModelVersion: Int", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE08packagedC7VersionSivp\">packagedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPackagedModelVersion"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzPinnedModelVersion) optional static var pinnedModelVersion: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2515}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 2482}], "key.bodylength": 5, "key.bodyoffset": 2560, "key.doc.column": 23, "key.doc.comment": "The specific version of the model requested by the SDK.\n\n- Note: Specifying a pinned version will override usage of the the packaged version, granting the SDK flexibility in regards to downloading different models.", "key.doc.declaration": "@objc(fritzPinnedModelVersion) optional static var pinnedModelVersion: Int { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"69\" column=\"23\"><Name>pinnedModelVersion</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPinnedModelVersion</USR><Declaration>@objc(fritzPinnedModelVersion) optional static var pinnedModelVersion: Int { get }</Declaration><CommentParts><Abstract><Para>The specific version of the model requested by the SDK.</Para></Abstract><Discussion><Note><Para>Specifying a pinned version will override usage of the the packaged version, granting the SDK flexibility in regards to downloading different models.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "pinnedModelVersion", "key.doc.type": "Other", "key.doclength": 230, "key.docoffset": 2249, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzPinnedModelVersion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pinnedModelVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "pinnedModelVersion", "key.namelength": 18, "key.nameoffset": 2535, "key.offset": 2524, "key.parsed_declaration": "optional static var pinnedModelVersion: Int", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE06pinnedC7VersionSiSgvp\">pinnedModelVersion</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzPinnedModelVersion"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2663}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 2634}], "key.bodylength": 5, "key.bodyoffset": 2708, "key.doc.column": 23, "key.doc.comment": "Signifies whether or not the model is encrypted.", "key.doc.declaration": "@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"75\" column=\"23\"><Name>encryptionSeed</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed</USR><Declaration>@objc(fritzEncryptionSeed) optional static var encryptionSeed: [UInt8] { get }</Declaration><CommentParts><Abstract><Para>Signifies whether or not the model is encrypted.</Para></Abstract></CommentParts></Other>", "key.doc.line": 75, "key.doc.name": "encryptionSeed", "key.doc.type": "Other", "key.doclength": 61, "key.docoffset": 2570, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzEncryptionSeed)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encryptionSeed</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 42, "key.name": "encryptionSeed", "key.namelength": 14, "key.nameoffset": 2683, "key.offset": 2672, "key.parsed_declaration": "optional static var encryptionSeed: [UInt8]", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE14encryptionSeedSays5UInt8VGSgvp\">encryptionSeed</RelatedName>"}], "key.typename": "[UInt8]", "key.typeusr": "$sSays5UInt8VGD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzEncryptionSeed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzConfiguration) optional static var configuration: <Type usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 2876}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 2848}], "key.bodylength": 5, "key.bodyoffset": 2926, "key.doc.column": 23, "key.doc.comment": "A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.", "key.doc.declaration": "@objc(fritzConfiguration) optional static var configuration: Configuration { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"81\" column=\"23\"><Name>configuration</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration</USR><Declaration>@objc(fritzConfiguration) optional static var configuration: Configuration { get }</Declaration><CommentParts><Abstract><Para>A Fritz configuration encapsualtes your App Token and the Environment in which to send all Fritz-related requests.</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "configuration", "key.doc.type": "Other", "key.doclength": 127, "key.docoffset": 2718, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>configuration</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)FritzConfiguration\">Configuration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 47, "key.name": "configuration", "key.namelength": 13, "key.nameoffset": 2896, "key.offset": 2885, "key.parsed_declaration": "optional static var configuration: Configuration", "key.parsed_scope.end": 81, "key.parsed_scope.start": 81, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE13configuration0A4Core13ConfigurationCvp\">configuration</RelatedName>"}], "key.typename": "Configuration", "key.typeusr": "$s9FritzCore13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzConfiguration"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.optional", "key.length": 8, "key.offset": 3152}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 3114}], "key.bodylength": 5, "key.bodyoffset": 3203, "key.doc.column": 23, "key.doc.comment": "Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.", "key.doc.declaration": "@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"87\" column=\"23\"><Name>wifiRequiredForDownload</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload</USR><Declaration>@objc(fritzWifiRequiredForDownload) optional static var wifiRequiredForDownload: Bool { get }</Declaration><CommentParts><Abstract><Para>Specifies whether or not phone must be connected to wifi for model downloads to happen. If not set, defaults to false, models will download over cell connections.</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "wifiRequiredForDownload", "key.doc.type": "Other", "key.doclength": 175, "key.docoffset": 2936, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fritzWifiRequiredForDownload)</syntaxtype.attribute.builtin> <syntaxtype.keyword>optional</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 48, "key.name": "wifiRequiredForDownload", "key.namelength": 23, "key.nameoffset": 3172, "key.offset": 3161, "key.parsed_declaration": "optional static var wifiRequiredForDownload: Bool", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel014BaseIdentifiedC0PAAE23wifiRequiredForDownloadSbvp\">wifiRequiredForDownload</RelatedName>"}], "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel(cpy)fritzWifiRequiredForDownload"}], "key.typename": "BaseIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel014BaseIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 13, "key.name": "MARK: - Swift", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5030}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>, <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5273}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5212}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5212}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5212}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 5212}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 5179}], "key.bodylength": 0, "key.bodyoffset": 5356, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : FritzManagedModel.BaseIdentifiedModel, FritzManagedModel.ReadWriteModelProvider", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"150\" column=\"17\"><Name>SwiftIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzSwiftIdentifiedModel) public protocol SwiftIdentifiedModel : FritzManagedModel.BaseIdentifiedModel, FritzManagedModel.ReadWriteModelProvider</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Swift class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 150, "key.doc.name": "SwiftIdentifiedModel", "key.doc.type": "Class", "key.doclength": 134, "key.docoffset": 5045, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 5311}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 5332}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSwiftIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SwiftIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>, <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzReadWriteModelProvider\">ReadWriteModelProvider</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}, {"key.name": "ReadWriteModelProvider"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 77, "key.name": "SwiftIdentifiedModel", "key.namelength": 20, "key.nameoffset": 5289, "key.offset": 5280, "key.parsed_declaration": "public protocol SwiftIdentifiedModel: BaseIdentifiedModel, ReadWriteModelProvider", "key.parsed_scope.end": 150, "key.parsed_scope.start": 150, "key.runtime_name": "FritzSwiftIdentifiedModel", "key.typename": "SwiftIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel015SwiftIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 19, "key.name": "MARK: - Objective-C", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 8020}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8213}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 8181}], "key.bodylength": 0, "key.bodyoffset": 8271, "key.doc.column": 17, "key.doc.comment": "Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality\n\n- SeeAlso: `BaseIdentifiedModel`", "key.doc.declaration": "@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : FritzManagedModel.BaseIdentifiedModel", "key.doc.discussion": [{"See": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift\" line=\"238\" column=\"17\"><Name>ObjcIdentifiedModel</Name><USR>c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel</USR><Declaration>@objc(FritzObjcIdentifiedModel) public protocol ObjcIdentifiedModel : FritzManagedModel.BaseIdentifiedModel</Declaration><CommentParts><Abstract><Para>Conform your Xcode-generated Objective-C class to this protocol to expose Fritz functionality</Para></Abstract><Discussion><See><Para><codeVoice>BaseIdentifiedModel</codeVoice></Para></See></Discussion></CommentParts></Class>", "key.doc.line": 238, "key.doc.name": "ObjcIdentifiedModel", "key.doc.type": "Class", "key.doclength": 140, "key.docoffset": 8041, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 19, "key.offset": 8250}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Fritz+IdentifiedModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzObjcIdentifiedModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ObjcIdentifiedModel</decl.name> : <ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "BaseIdentifiedModel"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 52, "key.name": "ObjcIdentifiedModel", "key.namelength": 19, "key.nameoffset": 8229, "key.offset": 8220, "key.parsed_declaration": "public protocol ObjcIdentifiedModel: BaseIdentifiedModel", "key.parsed_scope.end": 238, "key.parsed_scope.start": 238, "key.runtime_name": "FritzObjcIdentifiedModel", "key.typename": "ObjcIdentifiedModel.Protocol", "key.typeusr": "$s17FritzManagedModel014ObjcIdentifiedC0_pmD", "key.usr": "c:@M@FritzManagedModel@objc(pl)FritzObjcIdentifiedModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4681, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzMLModel) public final class FritzMLModel : <Type usr=\"c:objc(cs)MLModel\">MLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 339}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 332}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 271}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 19, "key.offset": 251}], "key.bodylength": 4305, "key.bodyoffset": 374, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 365}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzMLModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzMLModel</decl.name> : <ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "MLModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4335, "key.name": "FritzMLModel", "key.namelength": 12, "key.nameoffset": 351, "key.offset": 345, "key.parsed_declaration": "public final class FritzMLModel: MLModel", "key.parsed_scope.end": 143, "key.parsed_scope.start": 16, "key.runtime_name": "FritzMLModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public private(set) var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 393}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 386}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 378}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 46, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 410, "key.offset": 406, "key.parsed_declaration": "public private(set) var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 456}], "key.bodylength": 48, "key.bodyoffset": 479, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "id", "key.namelength": 2, "key.nameoffset": 467, "key.offset": 463, "key.parsed_declaration": "public var id: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel0A7MLModelC2idSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 532}], "key.bodylength": 45, "key.bodyoffset": 557, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "version", "key.namelength": 7, "key.nameoffset": 543, "key.offset": 539, "key.parsed_declaration": "public var version: Int", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:17FritzManagedModel0A7MLModelC7versionSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>unowned public let sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 652}, {"key.attribute": "source.decl.attribute.weak", "key.length": 7, "key.offset": 644}], "key.doc.column": 22, "key.doc.comment": "Model manager for api requests", "key.doc.declaration": "unowned public let sessionManager: SessionManager", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"30\" column=\"22\"><Name>sessionManager</Name><USR>s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0Cvp</USR><Declaration>unowned public let sessionManager: SessionManager</Declaration><CommentParts><Abstract><Para>Model manager for api requests</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "sessionManager", "key.doc.type": "Other", "key.doclength": 35, "key.docoffset": 607, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>unowned</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sessionManager</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "sessionManager", "key.namelength": 14, "key.nameoffset": 663, "key.offset": 659, "key.parsed_declaration": "unowned public let sessionManager: SessionManager", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "SessionManager", "key.typeusr": "$s9FritzCore14SessionManagerCD", "key.usr": "s:17FritzManagedModel0A7MLModelC14sessionManager0A4Core07SessionF0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 739}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 732}], "key.doc.column": 27, "key.doc.comment": "Model to use for predictions", "key.doc.declaration": "public private(set) var model: MLModel {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"33\" column=\"27\"><Name>model</Name><USR>s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp</USR><Declaration>public private(set) var model: MLModel {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Model to use for predictions</Para></Abstract></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "model", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 697, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "model", "key.namelength": 5, "key.nameoffset": 756, "key.offset": 752, "key.parsed_declaration": "public private(set) var model: MLModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "MLModel", "key.typeusr": "$sSo7MLModelCD", "key.usr": "s:17FritzManagedModel0A7MLModelC5modelSo0D0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: <Type usr=\"c:objc(cs)MLModel\">MLModel</Type>, activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1140}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 1084}], "key.bodylength": 329, "key.bodyoffset": 1261, "key.doc.column": 10, "key.doc.comment": "Initialize model with an model type.\n\nListens for active model updates and reloads model if active version different than existing.", "key.doc.declaration": "@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)", "key.doc.discussion": [{"Para": "Listens for active model updates and reloads model if active version different than existing."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"46\" column=\"10\"><Name>init(model:activeModelConfig:sessionManager:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:</USR><Declaration>@objc(initWithIdentifiedModel:config:sessionManager:) public init(model: MLModel, activeModelConfig: FritzModelConfiguration, sessionManager: SessionManager)</Declaration><CommentParts><Abstract><Para>Initialize model with an model type.</Para></Abstract><Discussion><Para>Listens for active model updates and reloads model if active version different than existing.</Para></Discussion></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "init(model:activeModelConfig:sessionManager:)", "key.doc.type": "Function", "key.doclength": 147, "key.docoffset": 935, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:config:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLModel\">MLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>activeModelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 444, "key.name": "init(model:activeModelConfig:sessionManager:)", "key.namelength": 112, "key.nameoffset": 1147, "key.offset": 1147, "key.parsed_declaration": "public init(\n  model: MLModel,\n  activeModelConfig: FritzModelConfiguration,\n  sessionManager: SessionManager\n)", "key.parsed_scope.end": 63, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(FritzMLModel.Type) -> (MLModel, FritzModelConfiguration, SessionManager) -> FritzMLModel", "key.typeusr": "$s5model17activeModelConfig14sessionManager012FritzManagedC00G7MLModelCSo0I0C_AD0gC13ConfigurationC0G4Core07SessionF0CtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)initWithIdentifiedModel:config:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 1603, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 1595, "key.offset": 1595, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 67, "key.parsed_scope.start": 65, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)MLModel(im)dealloc\">deinit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzMLModel) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)dealloc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var modelDescription: <Type usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2740}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2733}], "key.bodylength": 37, "key.bodyoffset": 2791, "key.doc.column": 23, "key.doc.comment": "Proxy model description", "key.doc.declaration": "public override var modelDescription: MLModelDescription { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"95\" column=\"23\"><Name>modelDescription</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription</USR><Declaration>public override var modelDescription: MLModelDescription { get }</Declaration><CommentParts><Abstract><Para>Proxy model description</Para></Abstract></CommentParts></Other>", "key.doc.line": 95, "key.doc.name": "modelDescription", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 2703, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelDescription</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLModelDescription\">MLModelDescription</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 80, "key.name": "modelDescription", "key.namelength": 16, "key.nameoffset": 2753, "key.offset": 2749, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(py)modelDescription"}], "key.parsed_declaration": "public override var modelDescription: MLModelDescription", "key.parsed_scope.end": 97, "key.parsed_scope.start": 95, "key.typename": "MLModelDescription", "key.typeusr": "$sSo18MLModelDescriptionCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(py)modelDescription"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2947}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2940}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 2901}], "key.bodylength": 280, "key.bodyoffset": 3032, "key.doc.column": 24, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"101\" column=\"24\"><Name>prediction(from:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:</USR><Declaration>@objc(predictionFromFeatures:error:) public override func prediction(from input: MLFeatureProvider) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 101, "key.doc.name": "prediction(from:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 2833, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 357, "key.name": "prediction(from:)", "key.namelength": 41, "key.nameoffset": 2961, "key.offset": 2956, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider) throws -> MLFeatureProvider", "key.parsed_scope.end": 106, "key.parsed_scope.start": 101, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:\">prediction(from:options:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 95, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3041, "key.offset": 3037, "key.parsed_declaration": "let result = PredictionResult(input: input, options: nil) { try model.prediction(from: input) }", "key.parsed_scope.end": 102, "key.parsed_scope.start": 102, "key.typename": "PredictionResult", "key.typeusr": "$s17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4fromSo17MLFeatureProvider_pSoAF_p_tKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider) throws -> MLFeatureProvider", "key.typeusr": "$s4fromSo17MLFeatureProvider_pSoAB_p_tKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type>, options: <Type usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</Type>) throws -&gt; <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3439}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3432}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 3385}], "key.bodylength": 313, "key.bodyoffset": 3560, "key.doc.column": 24, "key.doc.comment": "Override prediction method and pass input/output to analytics", "key.doc.declaration": "@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -> MLFeatureProvider", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift\" line=\"110\" column=\"24\"><Name>prediction(from:options:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:</USR><Declaration>@objc(predictionFromFeatures:options:error:) public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions) throws -&gt; MLFeatureProvider</Declaration><CommentParts><Abstract><Para>Override prediction method and pass input/output to analytics</Para></Abstract></CommentParts></Function>", "key.doc.line": 110, "key.doc.name": "prediction(from:options:)", "key.doc.type": "Function", "key.doclength": 66, "key.docoffset": 3317, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predictionFromFeatures:options:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>prediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLPredictionOptions\">MLPredictionOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 426, "key.name": "prediction(from:options:)", "key.namelength": 71, "key.nameoffset": 3453, "key.offset": 3448, "key.overrides": [{"key.usr": "c:objc(cs)MLModel(im)predictionFromFeatures:options:error:"}], "key.parsed_declaration": "public override func prediction(from input: MLFeatureProvider, options: MLPredictionOptions)\n  throws -> MLFeatureProvider", "key.parsed_scope.end": 120, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:error:\">prediction(from:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:17FritzManagedModel16PredictionResultC\">PredictionResult</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 128, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3569, "key.offset": 3565, "key.parsed_declaration": "let result = PredictionResult(input: input, options: options)", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "PredictionResult", "key.typeusr": "$s17FritzManagedModel16PredictionResultCD", "key.usr": "s:17FritzManagedModel0A7MLModelC10prediction4from7optionsSo17MLFeatureProvider_pSoAG_p_So19MLPredictionOptionsCtKF6resultL_AA16PredictionResultCvp"}], "key.typename": "(FritzMLModel) -> (MLFeatureProvider, MLPredictionOptions) throws -> MLFeatureProvider", "key.typeusr": "$s4from7optionsSo17MLFeatureProvider_pSoAC_p_So19MLPredictionOptionsCtKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel(im)predictionFromFeatures:options:error:"}, {"key.annotated_decl": "<Declaration>let installs: [<Type usr=\"s:SS\">String</Type> : Any]?</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]?</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 73, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 4014, "key.offset": 4010, "key.parsed_declaration": "let installs = UserDefaults.standard.dictionary(forKey: reportInstallKey)", "key.parsed_scope.end": 125, "key.parsed_scope.start": 125, "key.typename": "[String : Any]?", "key.typeusr": "$sSDySSypGSgD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvg8installsL_SDySSypGSgvp"}, {"key.annotated_decl": "<Declaration>var installs: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzMLModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>installs</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "installs", "key.namelength": 8, "key.nameoffset": 4145, "key.offset": 4141, "key.parsed_declaration": "var installs = UserDefaults.standard.dictionary(forKey: reportInstallKey) ?? [String: Int]()", "key.parsed_scope.end": 129, "key.parsed_scope.start": 129, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel0A7MLModelC26lastReportedInstallVersion33_2E2EB9CEF819E7AE4E387836067337F3LLSiSgvs8installsL_SDySSypGvp"}], "key.typename": "FritzMLModel.Type", "key.typeusr": "$s17FritzManagedModel0A7MLModelCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzMLModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 18698, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzManagedModelError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 192}], "key.bodylength": 32, "key.bodyoffset": 235, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 228}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzManagedModelError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 69, "key.name": "FritzManagedModelError", "key.namelength": 22, "key.nameoffset": 204, "key.offset": 199, "key.parsed_declaration": "public enum FritzManagedModelError: Error", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 28, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 238, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case loadingSavedModelFailed</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingSavedModelFailed</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 23, "key.name": "loadingSavedModelFailed", "key.namelength": 23, "key.nameoffset": 243, "key.offset": 243, "key.parsed_declaration": "case loadingSavedModelFailed", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(FritzManagedModelError.Type) -> FritzManagedModelError", "key.typeusr": "$sy17FritzManagedModel0abC5ErrorOACmcD", "key.usr": "s:17FritzManagedModel0abC5ErrorO012loadingSavedC6FailedyA2CmF"}]}], "key.typename": "FritzManagedModelError.Type", "key.typeusr": "$s17FritzManagedModel0abC5ErrorOmD", "key.usr": "s:17FritzManagedModel0abC5ErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class FritzManagedModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 401}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 340}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 340}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 340}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 340}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 327}], "key.bodylength": 5756, "key.bodyoffset": 443, "key.doc.column": 14, "key.doc.comment": "Coordinates tasks for interacting with Fritz Models.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"18\" column=\"14\"><Name>FritzManagedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objcMembers public class FritzManagedModel : NSObject</Declaration><CommentParts><Abstract><Para>Coordinates tasks for interacting with Fritz Models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 18, "key.doc.name": "FritzManagedModel", "key.doc.type": "Class", "key.doclength": 57, "key.docoffset": 270, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 433}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzManagedModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 5792, "key.name": "FritzManagedModel", "key.namelength": 17, "key.nameoffset": 414, "key.offset": 408, "key.parsed_declaration": "public class FritzManagedModel: NSObject", "key.parsed_scope.end": 160, "key.parsed_scope.start": 18, "key.runtime_name": "_TtC4main17FritzManagedModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var activeModelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 722}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 715}], "key.doc.column": 27, "key.doc.comment": "Currenly active model configuration.\n\nNote this this is a globally active config for a model.  If you have multiple FritzManagedModel\ninstances and a new version is downloaded, all instances will be updated with the latest\nconfiguration..", "key.doc.declaration": "public private(set) var activeModelConfig: FritzModelConfiguration {\n    get\n    }", "key.doc.discussion": [{"Para": "Note this this is a globally active config for a model.  If you have multiple FritzManagedModel instances and a new version is downloaded, all instances will be updated with the latest configuration.."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"25\" column=\"27\"><Name>activeModelConfig</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig</USR><Declaration>public private(set) var activeModelConfig: FritzModelConfiguration {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Currenly active model configuration.</Para></Abstract><Discussion><Para>Note this this is a globally active config for a model.  If you have multiple FritzManagedModel instances and a new version is downloaded, all instances will be updated with the latest configuration..</Para></Discussion></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "activeModelConfig", "key.doc.type": "Other", "key.doclength": 266, "key.docoffset": 447, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>activeModelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 46, "key.name": "activeModelConfig", "key.namelength": 17, "key.nameoffset": 739, "key.offset": 735, "key.parsed_declaration": "public private(set) var activeModelConfig: FritzModelConfiguration", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)activeModelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var id: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1482}], "key.bodylength": 48, "key.bodyoffset": 1505, "key.doc.column": 14, "key.doc.comment": "Model Identifier of active model.", "key.doc.declaration": "public var id: String { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"43\" column=\"14\"><Name>id</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id</USR><Declaration>public var id: String { get }</Declaration><CommentParts><Abstract><Para>Model Identifier of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "id", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1442, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>id</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "id", "key.namelength": 2, "key.nameoffset": 1493, "key.offset": 1489, "key.parsed_declaration": "public var id: String", "key.parsed_scope.end": 45, "key.parsed_scope.start": 43, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)id"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var version: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1602}], "key.bodylength": 45, "key.bodyoffset": 1627, "key.doc.column": 14, "key.doc.comment": "Model Version number of active model.", "key.doc.declaration": "public var version: Int { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"48\" column=\"14\"><Name>version</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version</USR><Declaration>public var version: Int { get }</Declaration><CommentParts><Abstract><Para>Model Version number of active model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 48, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 1558, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1613, "key.offset": 1609, "key.parsed_declaration": "public var version: Int", "key.parsed_scope.end": 50, "key.parsed_scope.start": 48, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isVersionDownloaded: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1739}], "key.bodylength": 269, "key.bodyoffset": 1777, "key.doc.column": 14, "key.doc.comment": "If true, the active model config version is downloaded.", "key.doc.declaration": "public var isVersionDownloaded: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"53\" column=\"14\"><Name>isVersionDownloaded</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded</USR><Declaration>public var isVersionDownloaded: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, the active model config version is downloaded.</Para></Abstract></CommentParts></Other>", "key.doc.line": 53, "key.doc.name": "isVersionDownloaded", "key.doc.type": "Other", "key.doclength": 60, "key.docoffset": 1677, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isVersionDownloaded</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 301, "key.name": "isVersionDownloaded", "key.namelength": 19, "key.nameoffset": 1750, "key.offset": 1746, "key.parsed_declaration": "public var isVersionDownloaded: Bool", "key.parsed_scope.end": 63, "key.parsed_scope.start": 53, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)isVersionDownloaded"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var hasDownloadedModel: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2112}], "key.bodylength": 191, "key.bodyoffset": 2149, "key.doc.column": 14, "key.doc.comment": "If true, there is at least one active model downloaded", "key.doc.declaration": "public var hasDownloadedModel: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"66\" column=\"14\"><Name>hasDownloadedModel</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel</USR><Declaration>public var hasDownloadedModel: Bool { get }</Declaration><CommentParts><Abstract><Para>If true, there is at least one active model downloaded</Para></Abstract></CommentParts></Other>", "key.doc.line": 66, "key.doc.name": "hasDownloadedModel", "key.doc.type": "Other", "key.doclength": 59, "key.docoffset": 2051, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hasDownloadedModel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 222, "key.name": "hasDownloadedModel", "key.namelength": 18, "key.nameoffset": 2123, "key.offset": 2119, "key.parsed_declaration": "public var hasDownloadedModel: Bool", "key.parsed_scope.end": 72, "key.parsed_scope.start": 66, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)hasDownloadedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2578}], "key.doc.column": 14, "key.doc.comment": "The type of the identified model, if initialized from a conformed model.\nStoring this gives us access to the url of the identified model, so you can call\nself.loadModel() and load the model included in the package.", "key.doc.declaration": "public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"77\" column=\"14\"><Name>packagedIdentifiedModelType</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType</USR><Declaration>public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?</Declaration><CommentParts><Abstract><Para>The type of the identified model, if initialized from a conformed model. Storing this gives us access to the url of the identified model, so you can call self.loadModel() and load the model included in the package.</Para></Abstract></CommentParts></Other>", "key.doc.line": 77, "key.doc.name": "packagedIdentifiedModelType", "key.doc.type": "Other", "key.doclength": 231, "key.docoffset": 2345, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>packagedIdentifiedModelType</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "packagedIdentifiedModelType", "key.namelength": 27, "key.nameoffset": 2589, "key.offset": 2585, "key.parsed_declaration": "public let packagedIdentifiedModelType: BaseIdentifiedModel.Type?", "key.parsed_scope.end": 77, "key.parsed_scope.start": 77, "key.typename": "BaseIdentifiedModel.Type?", "key.typeusr": "$s17FritzManagedModel014BaseIdentifiedC0_pXpSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(py)packagedIdentifiedModelType"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>deinit</Declaration>", "key.bodylength": 55, "key.bodyoffset": 2655, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.destructor><syntaxtype.keyword>deinit</syntaxtype.keyword></decl.function.destructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "deinit", "key.namelength": 6, "key.nameoffset": 2647, "key.offset": 2647, "key.parsed_declaration": "deinit", "key.parsed_scope.end": 81, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)dealloc\">deinit</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)dealloc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type>, sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = nil, loadActiveFromDisk: <Type usr=\"s:Sb\">Bool</Type> = true, packagedIdentifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3236}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 71, "key.offset": 3162}], "key.bodylength": 973, "key.bodyoffset": 3441, "key.doc.column": 10, "key.doc.comment": "Creates FritzManagedModel from model configuration.\n\n- Parameters:\n  - modelConfig: Specifies which model class is operating on.\n  - sessionManager: Optional SessionManager. If not included uses default globally shared SessionManager.\n  - loadActiveFromDisk: If true (default) will load latest model downloaded over the air.\n  - packagedIdentifiedModelType: Optional identified model type packaged in app.", "key.doc.declaration": "@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"91\" column=\"10\"><Name>init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:</USR><Declaration>@objc(initWithModelConfig:sessionManager:loadActive:packagedModelType:) public init(modelConfig: FritzModelConfiguration, sessionManager: SessionManager? = nil, loadActiveFromDisk: Bool = true, packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from model configuration.</Para></Abstract><Parameters><Parameter><Name>modelConfig</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Specifies which model class is operating on.</Para></Discussion></Parameter><Parameter><Name>sessionManager</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional SessionManager. If not included uses default globally shared SessionManager.</Para></Discussion></Parameter><Parameter><Name>loadActiveFromDisk</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>If true (default) will load latest model downloaded over the air.</Para></Discussion></Parameter><Parameter><Name>packagedIdentifiedModelType</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional identified model type packaged in app.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 91, "key.doc.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Specifies which model class is operating on."}], "name": "modelConfig"}, {"discussion": [{"Para": "Optional SessionManager. If not included uses default globally shared SessionManager."}], "name": "sessionManager"}, {"discussion": [{"Para": "If true (default) will load latest model downloaded over the air."}], "name": "loadActiveFromDisk"}, {"discussion": [{"Para": "Optional identified model type packaged in app."}], "name": "packagedIdentifiedModelType"}], "key.doc.type": "Function", "key.doclength": 445, "key.docoffset": 2715, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModelConfig:sessionManager:loadActive:packagedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>modelConfig</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>loadActiveFromDisk</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = true</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>packagedIdentifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1172, "key.name": "init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)", "key.namelength": 196, "key.nameoffset": 3243, "key.offset": 3243, "key.parsed_declaration": "public init(\n  modelConfig: FritzModelConfiguration,\n  sessionManager: SessionManager? = nil,\n  loadActiveFromDisk: Bool = true,\n  packagedIdentifiedModelType: BaseIdentifiedModel.Type? = nil\n)", "key.parsed_scope.end": 118, "key.parsed_scope.start": 91, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzManagedModel.Type) -> (FritzModelConfiguration, SessionManager?, Bool, BaseIdentifiedModel.Type?) -> FritzManagedModel", "key.typeusr": "$s11modelConfig14sessionManager18loadActiveFromDisk27packagedIdentifiedModelType012FritzManagedK0AECAE0mK13ConfigurationC_0M4Core07SessionD0CSgSbAE04BasejK0_pXpSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4670}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4663}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 4629}], "key.bodylength": 254, "key.bodyoffset": 4726, "key.doc.column": 22, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModel: Included MLModel class.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"124\" column=\"22\"><Name>init(identifiedModel:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(identifiedModel: BaseIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Included MLModel class.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 124, "key.doc.name": "init(identifiedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Included MLModel class."}], "name": "identifiedModel"}], "key.doc.type": "Function", "key.doclength": 208, "key.docoffset": 4419, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 299, "key.name": "init(identifiedModel:)", "key.namelength": 42, "key.nameoffset": 4682, "key.offset": 4682, "key.parsed_declaration": "public convenience init(identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 131, "key.parsed_scope.start": 124, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:\">init(identifiedModelType:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 4735, "key.offset": 4731, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModel)", "key.parsed_scope.end": 125, "key.parsed_scope.start": 125, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC0AbA014BaseIdentifiedC0_p_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel) -> FritzManagedModel", "key.typeusr": "$s15identifiedModel012FritzManagedB0ABCAB014BaseIdentifiedB0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5245}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5238}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 5200}], "key.bodylength": 264, "key.bodyoffset": 5310, "key.doc.column": 22, "key.doc.comment": "Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.\n\n- Parameter identifiedModelType: Type of conformed model.", "key.doc.declaration": "@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"137\" column=\"22\"><Name>init(identifiedModelType:)</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:</USR><Declaration>@objc(initWithIdentifiedModelType:) public convenience init(identifiedModelType: BaseIdentifiedModel.Type)</Declaration><CommentParts><Abstract><Para>Creates FritzManagedModel from a packaged MLModel with BaseIdentifiedModel extension.  Used when model is included in application package.</Para></Abstract><Parameters><Parameter><Name>identifiedModelType</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Type of conformed model.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 137, "key.doc.name": "init(identifiedModelType:)", "key.doc.parameters": [{"discussion": [{"Para": "Type of conformed model."}], "name": "identifiedModelType"}], "key.doc.type": "Function", "key.doclength": 213, "key.docoffset": 4985, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModelType</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 318, "key.name": "init(identifiedModelType:)", "key.namelength": 51, "key.nameoffset": 5257, "key.offset": 5257, "key.parsed_declaration": "public convenience init(identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 144, "key.parsed_scope.start": 137, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithModelConfig:sessionManager:loadActive:packagedModelType:\">init(modelConfig:sessionManager:loadActiveFromDisk:packagedIdentifiedModelType:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModel:\">init(identifiedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 5319, "key.offset": 5315, "key.parsed_declaration": "let modelConfig = FritzModelConfiguration(from: identifiedModelType)", "key.parsed_scope.end": 138, "key.parsed_scope.start": 138, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:17FritzManagedModelAAC010identifiedC4TypeAbA014BaseIdentifiedC0_pXp_tcfc11modelConfigL_AA0aC13ConfigurationCvp"}], "key.typename": "(FritzManagedModel.Type) -> (BaseIdentifiedModel.Type) -> FritzManagedModel", "key.typeusr": "$s19identifiedModelType012FritzManagedB0ABCAB014BaseIdentifiedB0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)initWithIdentifiedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func delete() throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5756}], "key.bodylength": 129, "key.bodyoffset": 5785, "key.doc.column": 15, "key.doc.comment": "Deletes all state relating to managed model version.\n\nThis removes all downloaded versions for this model identifier and any cached\nserver values for it.", "key.doc.declaration": "public func delete() throws", "key.doc.discussion": [{"Para": "This removes all downloaded versions for this model identifier and any cached server values for it."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift\" line=\"150\" column=\"15\"><Name>delete()</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)deleteAndReturnError:</USR><Declaration>public func delete() throws</Declaration><CommentParts><Abstract><Para>Deletes all state relating to managed model version.</Para></Abstract><Discussion><Para>This removes all downloaded versions for this model identifier and any cached server values for it.</Para></Discussion></CommentParts></Function>", "key.doc.line": 150, "key.doc.name": "delete()", "key.doc.type": "Function", "key.doclength": 175, "key.docoffset": 5579, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzManagedModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>delete</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 152, "key.name": "delete()", "key.namelength": 8, "key.nameoffset": 5768, "key.offset": 5763, "key.parsed_declaration": "public func delete() throws", "key.parsed_scope.end": 153, "key.parsed_scope.start": 150, "key.substructure": [], "key.typename": "(FritzManagedModel) -> () throws -> ()", "key.typeusr": "$syyKcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel(im)deleteAndReturnError:"}], "key.typename": "FritzManagedModel.Type", "key.typeusr": "$s17FritzManagedModelAACmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzManagedModel"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Handle Active Model Changes", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6205}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 35, "key.name": "MARK: - Load Model internal methods", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 7126}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 21, "key.name": "MARK: - Decrypt Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 15202}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11950, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct ActiveServerModels : <Type usr=\"s:s7Codablea\">Codable</Type>, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 245}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 184}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 184}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 184}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 184}], "key.bodylength": 37, "key.bodyoffset": 299, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 279}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 288}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ActiveServerModels</decl.name> : <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.struct>", "key.inheritedtypes": [{"key.name": "Codable"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.struct", "key.length": 85, "key.name": "ActiveServerModels", "key.namelength": 18, "key.nameoffset": 259, "key.offset": 252, "key.parsed_declaration": "public struct ActiveServerModels: Codable, Equatable", "key.parsed_scope.end": 15, "key.parsed_scope.start": 13, "key.substructure": [], "key.typename": "ActiveServerModels.Type", "key.typeusr": "$s17FritzManagedModel18ActiveServerModelsVmD", "key.usr": "s:17FritzManagedModel18ActiveServerModelsV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ModelMetadata = [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 339}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ModelMetadata</decl.name> = [<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "ModelMetadata", "key.namelength": 13, "key.nameoffset": 356, "key.offset": 346, "key.parsed_declaration": "public typealias ModelMetadata = [String: String]", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "[String : String].Type", "key.typeusr": "$sSDyS2SGmD", "key.usr": "s:17FritzManagedModel0C8Metadataa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzModelConfiguration) public class FritzModelConfiguration : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:s7Codablea\">Codable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1095}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 1064}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1003}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1003}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1003}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1003}], "key.bodylength": 9085, "key.bodyoffset": 1152, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1133}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 7, "key.offset": 1143}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzModelConfiguration)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzModelConfiguration</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.typealias usr=\"s:s7Codablea\">Codable</ref.typealias></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "Codable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 9136, "key.name": "FritzModelConfiguration", "key.namelength": 23, "key.nameoffset": 1108, "key.offset": 1102, "key.parsed_declaration": "public class FritzModelConfiguration: NSObject, Codable", "key.parsed_scope.end": 352, "key.parsed_scope.start": 46, "key.runtime_name": "FritzModelConfiguration", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let identifier: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1516}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1510}], "key.doc.column": 20, "key.doc.comment": "The unique id of this model", "key.doc.declaration": "@objc public let identifier: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"63\" column=\"20\"><Name>identifier</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)identifier</USR><Declaration>@objc public let identifier: String</Declaration><CommentParts><Abstract><Para>The unique id of this model</Para></Abstract></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "identifier", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 1476, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>identifier</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "identifier", "key.namelength": 10, "key.nameoffset": 1527, "key.offset": 1523, "key.parsed_declaration": "@objc public let identifier: String", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)identifier"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let version: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1594}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1588}], "key.doc.column": 20, "key.doc.comment": "The latest version of this model", "key.doc.declaration": "@objc public let version: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"66\" column=\"20\"><Name>version</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)version</USR><Declaration>@objc public let version: Int</Declaration><CommentParts><Abstract><Para>The latest version of this model</Para></Abstract></CommentParts></Other>", "key.doc.line": 66, "key.doc.name": "version", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 1549, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>version</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "version", "key.namelength": 7, "key.nameoffset": 1605, "key.offset": 1601, "key.parsed_declaration": "@objc public let version: Int", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)version\">version()</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)version"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var pinnedVersion: <Type usr=\"s:Si\">Int</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1670}], "key.doc.column": 14, "key.doc.comment": "The targeted version of this model, if any", "key.doc.declaration": "public var pinnedVersion: Int?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"69\" column=\"14\"><Name>pinnedVersion</Name><USR>s:17FritzManagedModel0aC13ConfigurationC13pinnedVersionSiSgvp</USR><Declaration>public var pinnedVersion: Int?</Declaration><CommentParts><Abstract><Para>The targeted version of this model, if any</Para></Abstract></CommentParts></Other>", "key.doc.line": 69, "key.doc.name": "pinnedVersion", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 1621, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>pinnedVersion</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "pinnedVersion", "key.namelength": 13, "key.nameoffset": 1681, "key.offset": 1677, "key.parsed_declaration": "public var pinnedVersion: Int?", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int?", "key.typeusr": "$sSiSgD", "key.usr": "s:17FritzManagedModel0aC13ConfigurationC13pinnedVersionSiSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1879}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1873}], "key.bodylength": 537, "key.bodyoffset": 1907, "key.doc.column": 20, "key.doc.comment": "Tags data set in webapp.  Pulls from most recently updated active server response if one exists.", "key.doc.declaration": "@objc public var tags: [String]? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"75\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags</USR><Declaration>@objc public var tags: [String]? { get set }</Declaration><CommentParts><Abstract><Para>Tags data set in webapp.  Pulls from most recently updated active server response if one exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 75, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 1770, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 559, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 1890, "key.offset": 1886, "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 89, "key.parsed_scope.start": 75, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2628}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2622}], "key.bodylength": 549, "key.bodyoffset": 2665, "key.doc.column": 20, "key.doc.comment": "Model Metadata set in webapp. Uses cached server model info if it exists.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"96\" column=\"20\"><Name>metadata</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get set }</Declaration><CommentParts><Abstract><Para>Model Metadata set in webapp. Uses cached server model info if it exists.</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 78, "key.docoffset": 2542, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 580, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2639, "key.offset": 2635, "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 110, "key.parsed_scope.start": 96, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3264}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3258}], "key.bodylength": 134, "key.bodyoffset": 3311, "key.doc.column": 20, "key.doc.comment": "Model downloads will only happen", "key.doc.declaration": "@objc public var wifiRequiredForModelDownload: Bool { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"113\" column=\"20\"><Name>wifiRequiredForModelDownload</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload</USR><Declaration>@objc public var wifiRequiredForModelDownload: Bool { get set }</Declaration><CommentParts><Abstract><Para>Model downloads will only happen</Para></Abstract></CommentParts></Other>", "key.doc.line": 113, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 37, "key.docoffset": 3219, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 175, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 3275, "key.offset": 3271, "key.parsed_declaration": "@objc public var wifiRequiredForModelDownload: Bool", "key.parsed_scope.end": 120, "key.parsed_scope.start": 113, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3574}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3568}], "key.bodylength": 38, "key.bodyoffset": 3606, "key.doc.column": 20, "key.doc.comment": "Whether or not this model should use CPU and GPU only (not using the ANE).", "key.doc.declaration": "@objc public var cpuAndGPUOnly: Bool { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift\" line=\"125\" column=\"20\"><Name>cpuAndGPUOnly</Name><USR>c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly</USR><Declaration>@objc public var cpuAndGPUOnly: Bool { get }</Declaration><CommentParts><Abstract><Para>Whether or not this model should use CPU and GPU only (not using the ANE).</Para></Abstract></CommentParts></Other>", "key.doc.line": 125, "key.doc.name": "cpuAndGPUOnly", "key.doc.type": "Other", "key.doclength": 79, "key.docoffset": 3487, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cpuAndGPUOnly</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "cpuAndGPUOnly", "key.namelength": 13, "key.nameoffset": 3585, "key.offset": 3581, "key.parsed_declaration": "@objc public var cpuAndGPUOnly: Bool", "key.parsed_scope.end": 127, "key.parsed_scope.start": 125, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)cpuAndGPUOnly"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var isOTA: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3696}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3690}], "key.bodylength": 25, "key.bodyoffset": 3720, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isOTA</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "isOTA", "key.namelength": 5, "key.nameoffset": 3707, "key.offset": 3703, "key.parsed_declaration": "@objc public var isOTA: Bool", "key.parsed_scope.end": 133, "key.parsed_scope.start": 131, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)isOTA"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3759}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3750}], "key.bodylength": 151, "key.bodyoffset": 3791, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 177, "key.name": "description", "key.namelength": 11, "key.nameoffset": 3770, "key.offset": 3766, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "override public var description: String", "key.parsed_scope.end": 138, "key.parsed_scope.start": 135, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:) public init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]?, src: <Type usr=\"s:10Foundation3URLV\">URL</Type>?, tags: [<Type usr=\"s:SS\">String</Type>]?, wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type>, metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>?, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4561}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 151, "key.offset": 4407}], "key.bodylength": 274, "key.bodyoffset": 4781, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>encryptionSeed</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>src</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>metadata</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 488, "key.name": "init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)", "key.namelength": 211, "key.nameoffset": 4568, "key.offset": 4568, "key.parsed_declaration": "public init(\n  identifier: String,\n  version: Int,\n  encryptionSeed: [UInt8]?,\n  src: URL?,\n  tags: [String]?,\n  wifiRequiredForModelDownload: Bool,\n  metadata: ModelMetadata?,\n  cpuAndGPUOnly: Bool\n)", "key.parsed_scope.end": 179, "key.parsed_scope.start": 161, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, [UInt8]?, URL?, [String]?, Bool, [String : String]?, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version14encryptionSeed3src4tags28wifiRequiredForModelDownload8metadata13cpuAndGPUOnly012FritzManagedJ00pJ13ConfigurationCSS_SiSays5UInt8VGSg10Foundation3URLVSgSaySSGSgSbSDyS2SGSgSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:) public init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, pinnedVersion: <Type usr=\"s:Si\">Int</Type>, encryptionSeed: [<Type usr=\"s:s5UInt8V\">UInt8</Type>]?, src: <Type usr=\"s:10Foundation3URLV\">URL</Type>?, tags: [<Type usr=\"s:SS\">String</Type>]?, wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type>, metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>?, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5233}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 170, "key.offset": 5060}], "key.bodylength": 284, "key.bodyoffset": 5477, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pinnedVersion</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>encryptionSeed</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>src</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>metadata</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 522, "key.name": "init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)", "key.namelength": 235, "key.nameoffset": 5240, "key.offset": 5240, "key.parsed_declaration": "public init(\n  identifier: String,\n  version: Int,\n  pinnedVersion: Int,\n  encryptionSeed: [UInt8]?,\n  src: URL?,\n  tags: [String]?,\n  wifiRequiredForModelDownload: Bool,\n  metadata: ModelMetadata?,\n  cpuAndGPUOnly: Bool\n)", "key.parsed_scope.end": 211, "key.parsed_scope.start": 192, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, Int, [UInt8]?, URL?, [String]?, Bool, [String : String]?, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version13pinnedVersion14encryptionSeed3src4tags28wifiRequiredForModelDownload8metadata13cpuAndGPUOnly012FritzManagedL00rL13ConfigurationCSS_S2iSays5UInt8VGSg10Foundation3URLVSgSaySSGSgSbSDyS2SGSgSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:cpuAndGPUOnly:) public convenience init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> = false)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 5824}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5817}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 48, "key.offset": 5766}], "key.bodylength": 237, "key.bodyoffset": 5905, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 307, "key.name": "init(identifier:version:cpuAndGPUOnly:)", "key.namelength": 67, "key.nameoffset": 5836, "key.offset": 5836, "key.parsed_declaration": "public convenience init(identifier: String, version: Int, cpuAndGPUOnly: Bool = false)", "key.parsed_scope.end": 225, "key.parsed_scope.start": 214, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version13cpuAndGPUOnly17FritzManagedModel0fH13ConfigurationCSS_SiSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:) public convenience init(identifier: <Type usr=\"s:SS\">String</Type>, version: <Type usr=\"s:Si\">Int</Type>, pinnedVersion: <Type usr=\"s:Si\">Int</Type>, cpuAndGPUOnly: <Type usr=\"s:Sb\">Bool</Type> = false)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 6219}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6212}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 62, "key.offset": 6147}], "key.bodylength": 273, "key.bodyoffset": 6340, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifier</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>version</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>pinnedVersion</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>cpuAndGPUOnly</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 383, "key.name": "init(identifier:version:pinnedVersion:cpuAndGPUOnly:)", "key.namelength": 107, "key.nameoffset": 6231, "key.offset": 6231, "key.parsed_declaration": "public convenience init(\n  identifier: String,\n  version: Int,\n  pinnedVersion: Int,\n  cpuAndGPUOnly: Bool = false\n)", "key.parsed_scope.end": 245, "key.parsed_scope.start": 228, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (String, Int, Int, Bool) -> FritzModelConfiguration", "key.typeusr": "$s10identifier7version13pinnedVersion13cpuAndGPUOnly17FritzManagedModel0hJ13ConfigurationCSS_S2iSbtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModel:) public convenience init(from identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 6659}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6652}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 6618}], "key.bodylength": 838, "key.bodyoffset": 6720, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModel</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 888, "key.name": "init(from:)", "key.namelength": 47, "key.nameoffset": 6671, "key.offset": 6671, "key.parsed_declaration": "public convenience init(from identifiedModel: BaseIdentifiedModel)", "key.parsed_scope.end": 273, "key.parsed_scope.start": 248, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:\">init(from: BaseIdentifiedModel.Type)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel) -> FritzModelConfiguration", "key.typeusr": "$s4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_p_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initFromIdentifiedModelType:) public convenience init(from identifiedModelType: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</Type>.Type)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 7608}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7601}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 7563}], "key.bodylength": 882, "key.bodyoffset": 7678, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initFromIdentifiedModelType:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>identifiedModelType</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzBaseIdentifiedModel\">BaseIdentifiedModel</ref.protocol>.Type</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 941, "key.name": "init(from:)", "key.namelength": 56, "key.nameoffset": 7620, "key.offset": 7620, "key.parsed_declaration": "public convenience init(from identifiedModelType: BaseIdentifiedModel.Type)", "key.parsed_scope.end": 301, "key.parsed_scope.start": 276, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:encryptionSeed:src:tags:isWifiRequiredForDownloads:metadata:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:encryptionSeed:src:tags:wifiRequiredForModelDownload:metadata:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:cpuAndGPUOnly:\">init(identifier:version:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initWithIdentifier:version:pinnedVersion:cpuAndGPUOnly:\">init(identifier:version:pinnedVersion:cpuAndGPUOnly:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModel:\">init(from: BaseIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from06activeC6ConfigAcA05LocalC4InfoV_ACtcfc\">init(from:activeModelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4from11modelConfigAcA012ActiveServerC0V_ACtcfc\">init(from:modelConfig:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0aC13ConfigurationC4fromACs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration.Type) -> (BaseIdentifiedModel.Type) -> FritzModelConfiguration", "key.typeusr": "$s4from17FritzManagedModel0bD13ConfigurationCAB014BaseIdentifiedD0_pXp_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)initFromIdentifiedModelType:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(isEqual:) override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9587}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 9578}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 15, "key.offset": 9560}], "key.bodylength": 419, "key.bodyoffset": 9632, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(isEqual:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 458, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 9599, "key.offset": 9594, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 346, "key.parsed_scope.start": 336, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzModelConfiguration) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(im)isEqual:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public var hash: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10065}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 10056}], "key.bodylength": 148, "key.bodyoffset": 10087, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/FritzModelConfiguration.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>hash</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 164, "key.name": "hash", "key.namelength": 4, "key.nameoffset": 10076, "key.offset": 10072, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)hash"}], "key.parsed_declaration": "override public var hash: Int", "key.parsed_scope.end": 351, "key.parsed_scope.start": 348, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)hash\">hash()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE4hash4intoys6HasherVz_tF\">hash(into:)</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration(py)hash"}], "key.typename": "FritzModelConfiguration.Type", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/LocalModelManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8227, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Stored ActiveModel", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2162}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 22, "key.name": "MARK: - LocalModelInfo", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3447}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 31, "key.name": "MARK: - Stored ServerModelCache", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6938}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/MLFeatureProvider+JSON.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1779, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1459, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct ModelDebugOutput&lt;T&gt; where T : <Type usr=\"s:SY\">RawRepresentable</Type>, T.RawValue == <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 239}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 215}], "key.bodylength": 1138, "key.bodyoffset": 319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>ModelDebugOutput</decl.name>&lt;<decl.generic_type_param usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T : <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>T.RawValue == <ref.struct usr=\"s:SS\">String</ref.struct></decl.generic_type_requirement></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 1212, "key.name": "ModelDebugOutput", "key.namelength": 16, "key.nameoffset": 253, "key.offset": 246, "key.parsed_declaration": "public struct ModelDebugOutput<T: RawRepresentable> where T.RawValue == String", "key.parsed_scope.end": 68, "key.parsed_scope.start": 14, "key.substructure": [{"key.annotated_decl": "<Declaration>T : <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 273}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 19, "key.name": "T", "key.namelength": 1, "key.nameoffset": 270, "key.offset": 270, "key.parsed_declaration": "public struct ModelDebugOutput<T: RawRepresentable> where T.RawValue == String", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let prefix: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>prefix</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "prefix", "key.namelength": 6, "key.nameoffset": 365, "key.offset": 361, "key.parsed_declaration": "public let prefix: String", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6prefixSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(prefix: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 383}], "key.bodylength": 28, "key.bodyoffset": 412, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>prefix</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "init(prefix:)", "key.namelength": 20, "key.nameoffset": 390, "key.offset": 390, "key.parsed_declaration": "public init(prefix: String)", "key.parsed_scope.end": 20, "key.parsed_scope.start": 18, "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>.Type) -> (String) -> ModelDebugOutput<T>", "key.typeusr": "$s6prefix17FritzManagedModel0D11DebugOutputVyxGSS_tcD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6prefixACyxGSS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(key: <Type usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\">T</Type>) -&gt; Any? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.bodylength": 83, "key.bodyoffset": 479, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>key</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:17FritzManagedModel0C11DebugOutputV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>Any?</decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 111, "key.name": "subscript(_:)", "key.namelength": 17, "key.nameoffset": 452, "key.offset": 452, "key.parsed_declaration": "public subscript(key: T) -> Any?", "key.parsed_scope.end": 25, "key.parsed_scope.start": 22, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (T) -> Any?", "key.typeusr": "$syypSgxcD", "key.usr": "s:17FritzManagedModel0C11DebugOutputVyypSgxcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 567}], "key.bodylength": 107, "key.bodyoffset": 595, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 129, "key.name": "image", "key.namelength": 5, "key.nameoffset": 578, "key.offset": 574, "key.parsed_declaration": "public var image: UIImage?", "key.parsed_scope.end": 34, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "UIImage?", "key.typeusr": "$sSo7UIImageCSgD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func write()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 968}], "key.bodylength": 166, "key.bodyoffset": 989, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>write</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 181, "key.name": "write()", "key.namelength": 7, "key.nameoffset": 980, "key.offset": 975, "key.parsed_declaration": "public func write()", "key.parsed_scope.end": 54, "key.parsed_scope.start": 47, "key.substructure": [], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV5writeyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toData() -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1160}], "key.bodylength": 264, "key.bodyoffset": 1191, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toData</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 289, "key.name": "toData()", "key.namelength": 8, "key.nameoffset": 1172, "key.offset": 1167, "key.parsed_declaration": "public func toData() -> Data?", "key.parsed_scope.end": 67, "key.parsed_scope.start": 56, "key.substructure": [{"key.annotated_decl": "<Declaration>var encodedData: [<Type usr=\"s:SS\">String</Type> : Any]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>encodedData</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : Any]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 27, "key.name": "encodedData", "key.namelength": 11, "key.nameoffset": 1200, "key.offset": 1196, "key.parsed_declaration": "var encodedData = self.data", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.typename": "[String : Any]", "key.typeusr": "$sSDySSypGD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6toData10Foundation0G0VSgyF07encodedG0L_SDySSypGvp"}], "key.typename": "<T where T : RawRepresentable, T.RawValue == String> (ModelDebugOutput<T>) -> () -> Data?", "key.typeusr": "$s10Foundation4DataVSgycD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV6toData10Foundation0G0VSgyF"}], "key.typename": "ModelDebugOutput<T>.Type", "key.typeusr": "$s17FritzManagedModel0C11DebugOutputVyxGmD", "key.usr": "s:17FritzManagedModel0C11DebugOutputV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelDownloader.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4079, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3285, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelTagManager) public class ModelTagManager : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 550}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 527}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 466}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 466}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 466}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 466}], "key.bodylength": 2693, "key.bodyoffset": 590, "key.doc.column": 14, "key.doc.comment": "Manages interacting with models using tags created in the webapp.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"23\" column=\"14\"><Name>ModelTagManager</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(ModelTagManager) public class ModelTagManager : NSObject</Declaration><CommentParts><Abstract><Para>Manages interacting with models using tags created in the webapp.</Para></Abstract></CommentParts></Class>", "key.doc.line": 23, "key.doc.name": "ModelTagManager", "key.doc.type": "Class", "key.doclength": 70, "key.docoffset": 396, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 580}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelTagManager)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelTagManager</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2727, "key.name": "ModelTagManager", "key.namelength": 15, "key.nameoffset": 563, "key.offset": 557, "key.parsed_declaration": "public class ModelTagManager: NSObject", "key.parsed_scope.end": 91, "key.parsed_scope.start": 23, "key.runtime_name": "ModelTagManager", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let tags: [<Type usr=\"s:SS\">String</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 643}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 637}], "key.doc.column": 20, "key.doc.comment": "Tags applied to models to query for.", "key.doc.declaration": "@objc public let tags: [String]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"26\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags</USR><Declaration>@objc public let tags: [String]</Declaration><CommentParts><Abstract><Para>Tags applied to models to query for.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 41, "key.docoffset": 594, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 654, "key.offset": 650, "key.parsed_declaration": "@objc public let tags: [String]", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "[String]", "key.typeusr": "$sSaySSGD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(py)tags"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithTags:sessionManager:) public init(tags: [<Type usr=\"s:SS\">String</Type>], sessionManager: <Type usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 757}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 719}], "key.bodylength": 124, "key.bodyoffset": 825, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithTags:sessionManager:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>tags</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sessionManager</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzCore@objc(cs)SessionManager\">SessionManager</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(tags:sessionManager:)", "key.namelength": 59, "key.nameoffset": 764, "key.offset": 764, "key.parsed_declaration": "public init(tags: [String], sessionManager: SessionManager? = nil)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(ModelTagManager.Type) -> ([String], SessionManager?) -> ModelTagManager", "key.typeusr": "$s4tags14sessionManager17FritzManagedModel0f3TagC0CSaySSG_0D4Core07SessionC0CSgtcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)initWithTags:sessionManager:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false) -&gt; [<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1425}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 40, "key.offset": 1382}], "key.bodylength": 739, "key.bodyoffset": 1537, "key.doc.column": 15, "key.doc.comment": "Gets managed models matching tags, pulling from data already queries from API.\n\nDoes not query the API, only checks model data stored locally. To update tags with latest known data,\nuse `fetchModelsForTags`.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n- Returns: List of FritzManagedModel matching tags.", "key.doc.declaration": "@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -> [FritzManagedModel]", "key.doc.discussion": [{"Para": "Does not query the API, only checks model data stored locally. To update tags with latest known data, use `fetchModelsForTags`."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"46\" column=\"15\"><Name>getManagedModelsForTags(wifiRequiredForModelDownload:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:</USR><Declaration>@objc(getModelsForTagsWithWifiRequired:) public func getManagedModelsForTags(wifiRequiredForModelDownload: Bool = false) -&gt; [FritzManagedModel]</Declaration><CommentParts><Abstract><Para>Gets managed models matching tags, pulling from data already queries from API.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>List of FritzManagedModel matching tags.</Para></ResultDiscussion><Discussion><Para>Does not query the API, only checks model data stored locally. To update tags with latest known data, use <codeVoice>fetchModelsForTags</codeVoice>.</Para></Discussion></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}], "key.doc.result_discussion": [{"Para": "List of FritzManagedModel matching tags."}], "key.doc.type": "Function", "key.doclength": 426, "key.docoffset": 954, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(getModelsForTagsWithWifiRequired:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 845, "key.name": "getManagedModelsForTags(wifiRequiredForModelDownload:)", "key.namelength": 75, "key.nameoffset": 1437, "key.offset": 1432, "key.parsed_declaration": "public func getManagedModelsForTags(\n  wifiRequiredForModelDownload: Bool = false\n) -> [FritzManagedModel]", "key.parsed_scope.end": 69, "key.parsed_scope.start": 46, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool) -> [FritzManagedModel]", "key.typeusr": "$s28wifiRequiredForModelDownloadSay012FritzManagedD0ABCGSb_tcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)getModelsForTagsWithWifiRequired:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> = false, completionHandler: @escaping ([<Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2731}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 60, "key.offset": 2668}], "key.bodylength": 386, "key.bodyoffset": 2895, "key.doc.column": 15, "key.doc.comment": "Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it\nwill query local store and return existing models that match models.\n\n- Parameters:\n  - wifiRequiredForModelDownload: Optional value to require wifi when downloading models loaded from tags.\n  - completionHandler: Called after models for tags are loaded.", "key.doc.declaration": "@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift\" line=\"78\" column=\"15\"><Name>fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)</Name><USR>c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:</USR><Declaration>@objc(fetchModelsForTagsWithWifiRequired:completionHandler:) public func fetchManagedModelsForTags(wifiRequiredForModelDownload: Bool = false, completionHandler: @escaping ([FritzManagedModel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch FritzManagedModels from Fritz API that match tags. If the request fails for any reason, it will query local store and return existing models that match models.</Para></Abstract><Parameters><Parameter><Name>wifiRequiredForModelDownload</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional value to require wifi when downloading models loaded from tags.</Para></Discussion></Parameter><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Called after models for tags are loaded.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 78, "key.doc.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "Optional value to require wifi when downloading models loaded from tags."}], "name": "wifiRequiredForModelDownload"}, {"discussion": [{"Para": "Called after models for tags are loaded."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 385, "key.docoffset": 2281, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ModelTagManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelsForTagsWithWifiRequired:completionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchManagedModelsForTags</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>wifiRequiredForModelDownload</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.parameter.type> = false</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 544, "key.name": "fetchManagedModelsForTags(wifiRequiredForModelDownload:completionHandler:)", "key.namelength": 150, "key.nameoffset": 2743, "key.offset": 2738, "key.parsed_declaration": "public func fetchManagedModelsForTags(\n  wifiRequiredForModelDownload: Bool = false,\n  completionHandler: @escaping ([FritzManagedModel]?, Error?) -> Void\n)", "key.parsed_scope.end": 90, "key.parsed_scope.start": 78, "key.substructure": [], "key.typename": "(ModelTagManager) -> (Bool, @escaping ([FritzManagedModel]?, Error?) -> ()) -> ()", "key.typeusr": "$s28wifiRequiredForModelDownload17completionHandlerySb_ySay012FritzManagedD0ACCGSg_s5Error_pSgtctcD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager(im)fetchModelsForTagsWithWifiRequired:completionHandler:"}], "key.typename": "ModelTagManager.Type", "key.typeusr": "$s17FritzManagedModel0C10TagManagerCmD", "key.usr": "c:@M@FritzManagedModel@objc(cs)ModelTagManager"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/Obfuscator.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2311, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/PredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1558, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 26418, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol RNCryptorType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1756}], "key.bodylength": 557, "key.bodyoffset": 1787, "key.doc.column": 17, "key.doc.comment": "The `RNCryptorType` protocol defines generic API to a mutable,\nincremental, password-based encryptor or decryptor. Its generic\nusage is as follows:\n\n    let cryptor = Encryptor(password: \"mypassword\")\n    // or Decryptor()\n\n    var result = Data()\n    for data in datas {\n        result.appendData(try cryptor.update(data))\n    }\n    result.appendData(try cryptor.final())\n\n After calling `finalData()`, the cryptor is no longer valid.", "key.doc.declaration": "public protocol RNCryptorType", "key.doc.discussion": [{"CodeListing": ""}, {"Para": "After calling `finalData()`, the cryptor is no longer valid."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"44\" column=\"17\"><Name>RNCryptorType</Name><USR>s:17FritzManagedModel13RNCryptorTypeP</USR><Declaration>public protocol RNCryptorType</Declaration><CommentParts><Abstract><Para>The <codeVoice>RNCryptorType</codeVoice> protocol defines generic API to a mutable, incremental, password-based encryptor or decryptor. Its generic usage is as follows:</Para></Abstract><Discussion><CodeListing language=\"swift\"><zCodeLineNumbered><![CDATA[let cryptor = Encryptor(password: \"mypassword\")]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[// or Decryptor()]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered><zCodeLineNumbered><![CDATA[var result = Data()]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[for data in datas {]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[    result.appendData(try cryptor.update(data))]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[}]]></zCodeLineNumbered><zCodeLineNumbered><![CDATA[result.appendData(try cryptor.final())]]></zCodeLineNumbered><zCodeLineNumbered></zCodeLineNumbered></CodeListing><Para>After calling <codeVoice>finalData()</codeVoice>, the cryptor is no longer valid.</Para></Discussion></CommentParts></Class>", "key.doc.line": 44, "key.doc.name": "RNCryptorType", "key.doc.type": "Class", "key.doclength": 489, "key.docoffset": 1267, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>RNCryptorType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 582, "key.name": "RNCryptorType", "key.namelength": 13, "key.nameoffset": 1772, "key.offset": 1763, "key.parsed_declaration": "public protocol RNCryptorType", "key.parsed_scope.end": 63, "key.parsed_scope.start": 44, "key.runtime_name": "_TtP4main13RNCryptorType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.doc.column": 3, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "init(password: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"49\" column=\"3\"><Name>init(password:)</Name><USR>s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc</USR><Declaration>init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 49, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 132, "key.docoffset": 1791, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 22, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 1925, "key.offset": 1925, "key.parsed_declaration": "init(password: String)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.substructure": [], "key.typename": "<Self where Self : RNCryptorType> (Self.Type) -> (String) -> Self", "key.typeusr": "$s8passwordxSS_tcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.doc.column": 8, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- throws: `Error`\n- returns: Processed data. May be empty.", "key.doc.declaration": "func update(withData data: Data) throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"56\" column=\"8\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF</USR><Declaration>func update(withData data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 56, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 190, "key.docoffset": 1951, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 47, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 2148, "key.offset": 2143, "key.parsed_declaration": "func update(withData data: Data) throws -> Data", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.substructure": [], "key.typename": "<Self where Self : RNCryptorType> (Self) -> (Data) throws -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tKcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func finalData() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.doc.column": 8, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- throws: `Error`\n- returns: Trailing data", "key.doc.declaration": "func finalData() throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"62\" column=\"8\"><Name>finalData()</Name><USR>s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF</USR><Declaration>func finalData() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 62, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 116, "key.docoffset": 2194, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 31, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 2317, "key.offset": 2312, "key.parsed_declaration": "func finalData() throws -> Data", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "<Self where Self : RNCryptorType> (Self) -> () throws -> Data", "key.typeusr": "$s10Foundation4DataVyKcD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.typename": "RNCryptorType.Protocol", "key.typeusr": "$s17FritzManagedModel13RNCryptorType_pmD", "key.usr": "s:17FritzManagedModel13RNCryptorTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum RNCryptor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2935}], "key.bodylength": 5093, "key.bodyoffset": 2958, "key.doc.column": 13, "key.doc.comment": "RNCryptor encryption/decryption interface.", "key.doc.declaration": "public enum RNCryptor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"81\" column=\"13\"><Name>RNCryptor</Name><USR>s:17FritzManagedModel9RNCryptorO</USR><Declaration>public enum RNCryptor</Declaration><CommentParts><Abstract><Para>RNCryptor encryption/decryption interface.</Para></Abstract></CommentParts></Other>", "key.doc.line": 81, "key.doc.name": "RNCryptor", "key.doc.type": "Other", "key.doclength": 47, "key.docoffset": 2888, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>RNCryptor</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 5110, "key.name": "RNCryptor", "key.namelength": 9, "key.nameoffset": 2947, "key.offset": 2942, "key.parsed_declaration": "public enum RNCryptor", "key.parsed_scope.end": 227, "key.parsed_scope.start": 81, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Error : <Type usr=\"s:Si\">Int</Type>, Swift.<Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3002}], "key.bodylength": 589, "key.bodyoffset": 3039, "key.doc.column": 15, "key.doc.comment": "Errors thrown by `RNCryptorType`.", "key.doc.declaration": "public enum FritzManagedModel.RNCryptor.Error : Int, Swift.Error", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"84\" column=\"15\"><Name>Error</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO</USR><Declaration>public enum FritzManagedModel.RNCryptor.Error : Int, Swift.Error</Declaration><CommentParts><Abstract><Para>Errors thrown by <codeVoice>RNCryptorType</codeVoice>.</Para></Abstract></CommentParts></Other>", "key.doc.line": 84, "key.doc.name": "Error", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 2962, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 3021}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 11, "key.offset": 3026}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Error</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, Swift.<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Swift.Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 620, "key.name": "Error", "key.namelength": 5, "key.nameoffset": 3014, "key.offset": 3009, "key.parsed_declaration": "public enum Error: Int, Swift.Error", "key.parsed_scope.end": 100, "key.parsed_scope.start": 84, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3187, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case hmacMismatch = 1</Declaration>", "key.doc.column": 10, "key.doc.comment": "Ciphertext was corrupt or password was incorrect.\nIt is not possible to distinguish between these cases in the v3 data format.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"87\" column=\"10\"><Name>hmacMismatch</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO12hmacMismatchyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Ciphertext was corrupt or password was incorrect. It is not possible to distinguish between these cases in the v3 data format.</Para></Abstract></CommentParts></Other>", "key.doc.line": 87, "key.doc.name": "hmacMismatch", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 3044, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 3207}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>hmacMismatch</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "hmacMismatch", "key.namelength": 12, "key.nameoffset": 3192, "key.offset": 3192, "key.parsed_declaration": "case hmacMismatch = 1", "key.parsed_scope.end": 87, "key.parsed_scope.start": 87, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO12hmacMismatchyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3288, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case unknownHeader = 2</Declaration>", "key.doc.column": 10, "key.doc.comment": "Unrecognized data format. Usually this means the data is corrupt.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"90\" column=\"10\"><Name>unknownHeader</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO13unknownHeaderyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Unrecognized data format. Usually this means the data is corrupt.</Para></Abstract></CommentParts></Other>", "key.doc.line": 90, "key.doc.name": "unknownHeader", "key.doc.type": "Other", "key.doclength": 70, "key.docoffset": 3214, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 3309}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unknownHeader</decl.name> = <syntaxtype.number>2</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "unknownHeader", "key.namelength": 13, "key.nameoffset": 3293, "key.offset": 3293, "key.parsed_declaration": "case unknownHeader = 2", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO13unknownHeaderyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3402, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case messageTooShort</Declaration>", "key.doc.column": 10, "key.doc.comment": "`final()` was called before sufficient data was passed to `update(withData:)`", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"93\" column=\"10\"><Name>messageTooShort</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO15messageTooShortyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para><codeVoice>final()</codeVoice> was called before sufficient data was passed to <codeVoice>update(withData:)</codeVoice></Para></Abstract></CommentParts></Other>", "key.doc.line": 93, "key.doc.name": "messageTooShort", "key.doc.type": "Other", "key.doclength": 82, "key.docoffset": 3316, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>messageTooShort</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "messageTooShort", "key.namelength": 15, "key.nameoffset": 3407, "key.offset": 3407, "key.parsed_declaration": "case messageTooShort", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO15messageTooShortyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3489, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case memoryFailure</Declaration>", "key.doc.column": 10, "key.doc.comment": "Memory allocation failure. This should never happen.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"96\" column=\"10\"><Name>memoryFailure</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO13memoryFailureyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Memory allocation failure. This should never happen.</Para></Abstract></CommentParts></Other>", "key.doc.line": 96, "key.doc.name": "memoryFailure", "key.doc.type": "Other", "key.doclength": 57, "key.docoffset": 3428, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>memoryFailure</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "memoryFailure", "key.namelength": 13, "key.nameoffset": 3494, "key.offset": 3494, "key.parsed_declaration": "case memoryFailure", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO13memoryFailureyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 26, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 3599, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidCredentialType</Declaration>", "key.doc.column": 10, "key.doc.comment": "A password-based decryptor was used on a key-based ciphertext, or vice-versa.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"99\" column=\"10\"><Name>invalidCredentialType</Name><USR>s:17FritzManagedModel9RNCryptorO5ErrorO21invalidCredentialTypeyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>A password-based decryptor was used on a key-based ciphertext, or vice-versa.</Para></Abstract></CommentParts></Other>", "key.doc.line": 99, "key.doc.name": "invalidCredentialType", "key.doc.type": "Other", "key.doclength": 82, "key.docoffset": 3513, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidCredentialType</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 21, "key.name": "invalidCredentialType", "key.namelength": 21, "key.nameoffset": 3604, "key.offset": 3604, "key.parsed_declaration": "case invalidCredentialType", "key.parsed_scope.end": 99, "key.parsed_scope.start": 99, "key.typename": "(RNCryptor.Error.Type) -> RNCryptor.Error", "key.typeusr": "$sy17FritzManagedModel9RNCryptorO5ErrorOAEmcD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO21invalidCredentialTypeyA2EmF"}]}], "key.typename": "RNCryptor.Error.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO5ErrorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO5ErrorO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func encrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>, withPassword password: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3694}], "key.bodylength": 64, "key.bodyoffset": 3773, "key.doc.column": 22, "key.doc.comment": "Encrypt data using password and return encrypted data.", "key.doc.declaration": "public static func encrypt(data: Data, withPassword password: String) -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"103\" column=\"22\"><Name>encrypt(data:withPassword:)</Name><USR>s:17FritzManagedModel9RNCryptorO7encrypt4data12withPassword10Foundation4DataVAI_SStFZ</USR><Declaration>public static func encrypt(data: Data, withPassword password: String) -&gt; Data</Declaration><CommentParts><Abstract><Para>Encrypt data using password and return encrypted data.</Para></Abstract></CommentParts></Function>", "key.doc.line": 103, "key.doc.name": "encrypt(data:withPassword:)", "key.doc.type": "Function", "key.doclength": 59, "key.docoffset": 3633, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withPassword</decl.var.parameter.argument_label> <decl.var.parameter.name>password</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 137, "key.name": "encrypt(data:withPassword:)", "key.namelength": 50, "key.nameoffset": 3713, "key.offset": 3701, "key.parsed_declaration": "public static func encrypt(data: Data, withPassword password: String) -> Data", "key.parsed_scope.end": 105, "key.parsed_scope.start": 103, "key.substructure": [], "key.typename": "(RNCryptor.Type) -> (Data, String) -> Data", "key.typeusr": "$s4data12withPassword10Foundation4DataVAE_SStcD", "key.usr": "s:17FritzManagedModel9RNCryptorO7encrypt4data12withPassword10Foundation4DataVAI_SStFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func decrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>, withPassword password: <Type usr=\"s:SS\">String</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4002}], "key.bodylength": 68, "key.bodyoffset": 4088, "key.doc.column": 22, "key.doc.comment": "Decrypt data using password and return decrypted data. Throws if\npassword is incorrect or ciphertext is in the wrong format.\n- throws `Error`", "key.doc.declaration": "public static func decrypt(data: Data, withPassword password: String) throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"110\" column=\"22\"><Name>decrypt(data:withPassword:)</Name><USR>s:17FritzManagedModel9RNCryptorO7decrypt4data12withPassword10Foundation4DataVAI_SStKFZ</USR><Declaration>public static func decrypt(data: Data, withPassword password: String) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Decrypt data using password and return decrypted data. Throws if password is incorrect or ciphertext is in the wrong format.</Para></Abstract><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 110, "key.doc.name": "decrypt(data:withPassword:)", "key.doc.type": "Function", "key.doclength": 158, "key.docoffset": 3842, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withPassword</decl.var.parameter.argument_label> <decl.var.parameter.name>password</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 148, "key.name": "decrypt(data:withPassword:)", "key.namelength": 50, "key.nameoffset": 4021, "key.offset": 4009, "key.parsed_declaration": "public static func decrypt(data: Data, withPassword password: String) throws -> Data", "key.parsed_scope.end": 112, "key.parsed_scope.start": 110, "key.substructure": [], "key.typename": "(RNCryptor.Type) -> (Data, String) throws -> Data", "key.typeusr": "$s4data12withPassword10Foundation4DataVAE_SStKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO7decrypt4data12withPassword10Foundation4DataVAI_SStKFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func randomData(ofLength length: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4325}], "key.bodylength": 314, "key.bodyoffset": 4386, "key.doc.column": 22, "key.doc.comment": "Generates random Data of given length\nCrashes if `length` is larger than allocatable memory, or if the system random number generator is not available.", "key.doc.declaration": "public static func randomData(ofLength length: Int) -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"116\" column=\"22\"><Name>randomData(ofLength:)</Name><USR>s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ</USR><Declaration>public static func randomData(ofLength length: Int) -&gt; Data</Declaration><CommentParts><Abstract><Para>Generates random Data of given length Crashes if <codeVoice>length</codeVoice> is larger than allocatable memory, or if the system random number generator is not available.</Para></Abstract></CommentParts></Function>", "key.doc.line": 116, "key.doc.name": "randomData(ofLength:)", "key.doc.type": "Function", "key.doclength": 162, "key.docoffset": 4161, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>randomData</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>ofLength</decl.var.parameter.argument_label> <decl.var.parameter.name>length</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 369, "key.name": "randomData(ofLength:)", "key.namelength": 32, "key.nameoffset": 4344, "key.offset": 4332, "key.parsed_declaration": "public static func randomData(ofLength length: Int) -> Data", "key.parsed_scope.end": 125, "key.parsed_scope.start": 116, "key.substructure": [{"key.annotated_decl": "<Declaration>var data: <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>data</decl.name>: <decl.var.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 30, "key.name": "data", "key.namelength": 4, "key.nameoffset": 4395, "key.offset": 4391, "key.parsed_declaration": "var data = Data(count: length)", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "Data", "key.typeusr": "$s10Foundation4DataVD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ4dataL_AHvp"}, {"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 117, "key.name": "result", "key.namelength": 6, "key.nameoffset": 4430, "key.offset": 4426, "key.parsed_declaration": "let result = data.withUnsafeMutableBytes", "key.parsed_scope.end": 118, "key.parsed_scope.start": 118, "key.typename": "Int32", "key.typeusr": "$ss5Int32VD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ6resultL_s5Int32Vvp"}], "key.typename": "(RNCryptor.Type) -> (Int) -> Data", "key.typeusr": "$s8ofLength10Foundation4DataVSi_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO10randomData8ofLength10Foundation0F0VSi_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Encryptor : <Type usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 4926}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4919}], "key.bodylength": 1004, "key.bodyoffset": 4964, "key.doc.column": 22, "key.doc.comment": "A encryptor for the latest data format. If compatibility with other RNCryptor\nimplementations is required, you may wish to use the specific encryptor version rather\nthan accepting \"latest.\"", "key.doc.declaration": "public final class FritzManagedModel.RNCryptor.Encryptor : RNCryptorType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"131\" column=\"22\"><Name>Encryptor</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC</USR><Declaration>public final class FritzManagedModel.RNCryptor.Encryptor : RNCryptorType</Declaration><CommentParts><Abstract><Para>A encryptor for the latest data format. If compatibility with other RNCryptor implementations is required, you may wish to use the specific encryptor version rather than accepting \u201clatest.\u201d</Para></Abstract></CommentParts></Class>", "key.doc.line": 131, "key.doc.name": "Encryptor", "key.doc.type": "Class", "key.doclength": 212, "key.docoffset": 4705, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 4949}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Encryptor</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "RNCryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1037, "key.name": "Encryptor", "key.namelength": 9, "key.nameoffset": 4938, "key.offset": 4932, "key.parsed_declaration": "public final class Encryptor: RNCryptorType", "key.parsed_scope.end": 162, "key.parsed_scope.start": 131, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5149}], "key.bodylength": 90, "key.bodyoffset": 5180, "key.doc.column": 12, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public init(password: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"137\" column=\"12\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC8passwordAESS_tcfc</USR><Declaration>public init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 137, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 136, "key.docoffset": 5009, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 115, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 5156, "key.offset": 5156, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public init(password: String)", "key.parsed_scope.end": 140, "key.parsed_scope.start": 137, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor.Type) -> (String) -> RNCryptor.Encryptor", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO9EncryptorCSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5453}], "key.bodylength": 51, "key.bodyoffset": 5502, "key.doc.column": 17, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"146\" column=\"17\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC6update8withData10Foundation0H0VAJ_tF</USR><Declaration>public func update(withData data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 146, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 172, "key.docoffset": 5277, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 5465, "key.offset": 5460, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) -> Data", "key.parsed_scope.end": 148, "key.parsed_scope.start": 146, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> (Data) -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC6update8withData10Foundation0H0VAJ_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5660}], "key.bodylength": 40, "key.bodyoffset": 5693, "key.doc.column": 17, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- returns: Trailing data", "key.doc.declaration": "public func finalData() -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"153\" column=\"17\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC9finalData10Foundation0G0VyF</USR><Declaration>public func finalData() -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 153, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 96, "key.docoffset": 5560, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 67, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 5672, "key.offset": 5667, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() -> Data", "key.parsed_scope.end": 155, "key.parsed_scope.start": 153, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> () -> Data", "key.typeusr": "$s10Foundation4DataVycD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC9finalData10Foundation0G0VyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func encrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5875}], "key.bodylength": 48, "key.bodyoffset": 5916, "key.doc.column": 17, "key.doc.comment": "Simplified, generic interface to `RNCryptorType`. Takes a data,\nreturns a processed data, and invalidates the cryptor.", "key.doc.declaration": "public func encrypt(data: Data) -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"159\" column=\"17\"><Name>encrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO9EncryptorC7encrypt4data10Foundation4DataVAJ_tF</USR><Declaration>public func encrypt(data: Data) -&gt; Data</Declaration><CommentParts><Abstract><Para>Simplified, generic interface to <codeVoice>RNCryptorType</codeVoice>. Takes a data, returns a processed data, and invalidates the cryptor.</Para></Abstract></CommentParts></Function>", "key.doc.line": 159, "key.doc.name": "encrypt(data:)", "key.doc.type": "Function", "key.doclength": 131, "key.docoffset": 5740, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>encrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 83, "key.name": "encrypt(data:)", "key.namelength": 19, "key.nameoffset": 5887, "key.offset": 5882, "key.parsed_declaration": "public func encrypt(data: Data) -> Data", "key.parsed_scope.end": 161, "key.parsed_scope.start": 159, "key.substructure": [], "key.typename": "(RNCryptor.Encryptor) -> (Data) -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC7encrypt4data10Foundation4DataVAJ_tF"}], "key.typename": "RNCryptor.Encryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO9EncryptorCmD", "key.usr": "s:17FritzManagedModel9RNCryptorO9EncryptorC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</Type>.Decryptor : <Type usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 6049}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6042}], "key.bodylength": 1962, "key.bodyoffset": 6087, "key.doc.column": 22, "key.doc.comment": "Password-based decryptor that can handle any supported format.", "key.doc.declaration": "public final class FritzManagedModel.RNCryptor.Decryptor : RNCryptorType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"165\" column=\"22\"><Name>Decryptor</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC</USR><Declaration>public final class FritzManagedModel.RNCryptor.Decryptor : RNCryptorType</Declaration><CommentParts><Abstract><Para>Password-based decryptor that can handle any supported format.</Para></Abstract></CommentParts></Class>", "key.doc.line": 165, "key.doc.name": "Decryptor", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 5973, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 6072}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.enum usr=\"s:17FritzManagedModel9RNCryptorO\">RNCryptor</ref.enum>.<decl.name>Decryptor</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel13RNCryptorTypeP\">RNCryptorType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "RNCryptorType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1995, "key.name": "Decryptor", "key.namelength": 9, "key.nameoffset": 6061, "key.offset": 6055, "key.parsed_declaration": "public final class Decryptor: RNCryptorType", "key.parsed_scope.end": 226, "key.parsed_scope.start": 165, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(password: <Type usr=\"s:SS\">String</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6420}], "key.bodylength": 65, "key.bodyoffset": 6451, "key.doc.column": 12, "key.doc.comment": "Creates and returns a cryptor.\n\n- parameter password: Non-empty password string. This will be interpretted as UTF-8.", "key.doc.declaration": "public init(password: String)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"175\" column=\"12\"><Name>init(password:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC8passwordAESS_tcfc</USR><Declaration>public init(password: String)</Declaration><CommentParts><Abstract><Para>Creates and returns a cryptor.</Para></Abstract><Parameters><Parameter><Name>password</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Non-empty password string. This will be interpretted as UTF-8.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 175, "key.doc.name": "init(password:)", "key.doc.parameters": [{"discussion": [{"Para": "Non-empty password string. This will be interpretted as UTF-8."}], "name": "password"}], "key.doc.type": "Function", "key.doclength": 136, "key.docoffset": 6280, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>password</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 90, "key.name": "init(password:)", "key.namelength": 22, "key.nameoffset": 6427, "key.offset": 6427, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP8passwordxSS_tcfc"}], "key.parsed_declaration": "public init(password: String)", "key.parsed_scope.end": 178, "key.parsed_scope.start": 175, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor.Type) -> (String) -> RNCryptor.Decryptor", "key.typeusr": "$s8password17FritzManagedModel9RNCryptorO9DecryptorCSS_tcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC8passwordAESS_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decrypt(data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6713}], "key.bodylength": 42, "key.bodyoffset": 6761, "key.doc.column": 17, "key.doc.comment": "Decrypt data using password and return decrypted data, invalidating decryptor. Throws if\npassword is incorrect or ciphertext is in the wrong format.\n- throws `Error`", "key.doc.declaration": "public func decrypt(data: Data) throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"183\" column=\"17\"><Name>decrypt(data:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC7decrypt4data10Foundation4DataVAJ_tKF</USR><Declaration>public func decrypt(data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Decrypt data using password and return decrypted data, invalidating decryptor. Throws if password is incorrect or ciphertext is in the wrong format.</Para></Abstract><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 183, "key.doc.name": "decrypt(data:)", "key.doc.type": "Function", "key.doclength": 186, "key.docoffset": 6523, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decrypt</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>data</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 84, "key.name": "decrypt(data:)", "key.namelength": 19, "key.nameoffset": 6725, "key.offset": 6720, "key.parsed_declaration": "public func decrypt(data: Data) throws -> Data", "key.parsed_scope.end": 185, "key.parsed_scope.start": 183, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor) -> (Data) throws -> Data", "key.typeusr": "$s4data10Foundation4DataVAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC7decrypt4data10Foundation4DataVAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(withData data: <Type usr=\"s:10Foundation4DataV\">Data</Type>) throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7012}], "key.bodylength": 689, "key.bodyoffset": 7068, "key.doc.column": 17, "key.doc.comment": "Updates cryptor with data and returns processed data.\n\n- parameter data: Data to process. May be empty.\n- throws: `Error`\n- returns: Processed data. May be empty.", "key.doc.declaration": "public func update(withData data: Data) throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"192\" column=\"17\"><Name>update(withData:)</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF</USR><Declaration>public func update(withData data: Data) throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Updates cryptor with data and returns processed data.</Para></Abstract><Parameters><Parameter><Name>data</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Data to process. May be empty.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Processed data. May be empty.</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 192, "key.doc.name": "update(withData:)", "key.doc.parameters": [{"discussion": [{"Para": "Data to process. May be empty."}], "name": "data"}], "key.doc.result_discussion": [{"Para": "Processed data. May be empty."}], "key.doc.type": "Function", "key.doclength": 198, "key.docoffset": 6810, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withData</decl.var.parameter.argument_label> <decl.var.parameter.name>data</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 739, "key.name": "update(withData:)", "key.namelength": 27, "key.nameoffset": 7024, "key.offset": 7019, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP6update8withData10Foundation0H0VAH_tKF"}], "key.parsed_declaration": "public func update(withData data: Data) throws -> Data", "key.parsed_scope.end": 214, "key.parsed_scope.start": 192, "key.substructure": [{"key.annotated_decl": "<Declaration>let toCheck: [<Type usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</Type>.Type]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>toCheck</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LLP\">VersionedDecryptorType</ref.protocol>.Type]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "toCheck", "key.namelength": 7, "key.nameoffset": 7188, "key.offset": 7184, "key.parsed_declaration": "let toCheck: [VersionedDecryptorType.Type]", "key.parsed_scope.end": 199, "key.parsed_scope.start": 199, "key.typename": "[VersionedDecryptorType.Type]", "key.typeusr": "$sSay17FritzManagedModel22VersionedDecryptorType33_30CD210D7F9E836762940C5CC44C7C81LL_pXpGD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF7toCheckL_SayAA09VersionedE4Type33_30CD210D7F9E836762940C5CC44C7C81LL_pXpGvp"}], "key.typename": "(RNCryptor.Decryptor) -> (Data) throws -> Data", "key.typeusr": "$s8withData10Foundation0B0VAD_tKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC6update8withData10Foundation0H0VAJ_tKF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func finalData() throws -&gt; <Type usr=\"s:10Foundation4DataV\">Data</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7890}], "key.bodylength": 115, "key.bodyoffset": 7930, "key.doc.column": 17, "key.doc.comment": "Returns trailing data and invalidates the cryptor.\n\n- throws: `Error`\n- returns: Trailing data", "key.doc.declaration": "public func finalData() throws -> Data", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift\" line=\"220\" column=\"17\"><Name>finalData()</Name><USR>s:17FritzManagedModel9RNCryptorO9DecryptorC9finalData10Foundation0G0VyKF</USR><Declaration>public func finalData() throws -&gt; Data</Declaration><CommentParts><Abstract><Para>Returns trailing data and invalidates the cryptor.</Para></Abstract><ResultDiscussion><Para>Trailing data</Para></ResultDiscussion><ThrowsDiscussion><Para><codeVoice>Error</codeVoice></Para></ThrowsDiscussion></CommentParts></Function>", "key.doc.line": 220, "key.doc.name": "finalData()", "key.doc.result_discussion": [{"Para": "Trailing data"}], "key.doc.type": "Function", "key.doclength": 122, "key.docoffset": 7764, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/RNCryptor/RNCryptor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>finalData</decl.name>() <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.struct usr=\"s:10Foundation4DataV\">Data</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 149, "key.name": "finalData()", "key.namelength": 11, "key.nameoffset": 7902, "key.offset": 7897, "key.overrides": [{"key.usr": "s:17FritzManagedModel13RNCryptorTypeP9finalData10Foundation0G0VyKF"}], "key.parsed_declaration": "public func finalData() throws -> Data", "key.parsed_scope.end": 225, "key.parsed_scope.start": 220, "key.substructure": [], "key.typename": "(RNCryptor.Decryptor) -> () throws -> Data", "key.typeusr": "$s10Foundation4DataVyKcD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC9finalData10Foundation0G0VyKF"}], "key.typename": "RNCryptor.Decryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorO9DecryptorCmD", "key.usr": "s:17FritzManagedModel9RNCryptorO9DecryptorC"}], "key.typename": "RNCryptor.Type", "key.typeusr": "$s17FritzManagedModel9RNCryptorOmD", "key.usr": "s:17FritzManagedModel9RNCryptorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/ServerModelCache.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2148, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager/SessionManager+FritzMLModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2116, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Measure", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 327}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 15, "key.name": "MARK: - Install", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1638}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzManagedModel/SessionManager/SessionManager+FritzManagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 12311, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Analytics", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 906}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1641}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: - Read Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 4279}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 32, "key.name": "MARK: - Download / Compile Model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5511}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1438, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class BasePredictor : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A15MLModelReadTypeP\">FritzMLModelReadType</Type>, <Type usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 205}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 181}], "key.bodylength": 1150, "key.bodyoffset": 286, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 231}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 20, "key.offset": 241}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 263}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BasePredictor</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A15MLModelReadTypeP\">FritzMLModelReadType</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzMLModelReadType"}, {"key.name": "FritzManagedModelType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1227, "key.name": "BasePredictor", "key.namelength": 13, "key.nameoffset": 216, "key.offset": 210, "key.parsed_declaration": "open class BasePredictor: NSObject, FritzMLModelReadType, FritzManagedModelType", "key.parsed_scope.end": 56, "key.parsed_scope.start": 12, "key.runtime_name": "_TtC4main13BasePredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 290}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "model", "key.namelength": 5, "key.nameoffset": 301, "key.offset": 297, "key.overrides": [{"key.usr": "s:11FritzVision0A15MLModelReadTypeP5model0A12ManagedModel0aC0Cvp"}], "key.parsed_declaration": "public let model: FritzMLModel", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "FritzMLModel", "key.typeusr": "$s17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision13BasePredictorC5model0A12ManagedModel0A7MLModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 330}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 324}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 341, "key.offset": 337, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 485}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 461}], "key.bodylength": 209, "key.bodyoffset": 519, "key.doc.column": 10, "key.doc.comment": "Initialize model with FritzMLModel\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:) public init(model: FritzMLModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift\" line=\"22\" column=\"10\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 22, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 83, "key.docoffset": 376, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 237, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 492, "key.offset": 492, "key.parsed_declaration": "public init(model: FritzMLModel)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 22, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(BasePredictor.Type) -> (FritzMLModel) -> BasePredictor", "key.typeusr": "$s5model11FritzVision13BasePredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 855}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 818}], "key.bodylength": 63, "key.bodyoffset": 922, "key.doc.column": 10, "key.doc.comment": "Initialize model with FritzMLModel\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:managedModel:) public init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift\" line=\"36\" column=\"10\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:</USR><Declaration>@objc(initWithModel:managedModel:) public init(model: FritzMLModel, managedModel: FritzManagedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 36, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 83, "key.docoffset": 733, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 862, "key.offset": 862, "key.parsed_declaration": "public init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(BasePredictor.Type) -> (FritzMLModel, FritzManagedModel) -> BasePredictor", "key.typeusr": "$s5model12managedModel11FritzVision13BasePredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1024}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 990}], "key.bodylength": 123, "key.bodyoffset": 1066, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 159, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1031, "key.offset": 1031, "key.parsed_declaration": "public init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BasePredictor.Type) -> (SwiftIdentifiedModel) -> BasePredictor", "key.typeusr": "$s5model11FritzVision13BasePredictorC0B12ManagedModel015SwiftIdentifiedG0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var metadata: <Type usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</Type>? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1236}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1230}], "key.bodylength": 47, "key.bodyoffset": 1273, "key.doc.column": 20, "key.doc.comment": "Model metadata set in webapp.", "key.doc.declaration": "@objc public var metadata: ModelMetadata? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift\" line=\"48\" column=\"20\"><Name>metadata</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(py)metadata</USR><Declaration>@objc public var metadata: ModelMetadata? { get }</Declaration><CommentParts><Abstract><Para>Model metadata set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 48, "key.doc.name": "metadata", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 1194, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.typealias usr=\"s:17FritzManagedModel0C8Metadataa\">ModelMetadata</ref.typealias>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 78, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 1247, "key.offset": 1243, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP8metadataSDyS2SGSgvp"}], "key.parsed_declaration": "@objc public var metadata: ModelMetadata?", "key.parsed_scope.end": 50, "key.parsed_scope.start": 48, "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)metadata"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1363}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1357}], "key.bodylength": 43, "key.bodyoffset": 1391, "key.doc.column": 20, "key.doc.comment": "Model tags set in webapp.", "key.doc.declaration": "@objc public var tags: [String]? { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift\" line=\"53\" column=\"20\"><Name>tags</Name><USR>c:@M@FritzVision@objc(cs)BasePredictor(py)tags</USR><Declaration>@objc public var tags: [String]? { get }</Declaration><CommentParts><Abstract><Para>Model tags set in webapp.</Para></Abstract></CommentParts></Other>", "key.doc.line": 53, "key.doc.name": "tags", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 1325, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/BasePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 65, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 1374, "key.offset": 1370, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP4tagsSaySSGSgvp"}], "key.parsed_declaration": "@objc public var tags: [String]?", "key.parsed_scope.end": 55, "key.parsed_scope.start": 53, "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(py)tags"}], "key.typename": "BasePredictor.Type", "key.typeusr": "$s11FritzVision13BasePredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)BasePredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/CVPixelBufferExtension.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3711, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthDataImageProcessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11812, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4297, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionDepthModelOptions) public final class FritzVisionDepthModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 277}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 270}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 234}], "key.bodylength": 1026, "key.bodyoffset": 348, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 319}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 329}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionDepthModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDepthModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1092, "key.name": "FritzVisionDepthModelOptions", "key.namelength": 28, "key.nameoffset": 289, "key.offset": 283, "key.parsed_declaration": "public final class FritzVisionDepthModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 33, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionDepthModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 352}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 370, "key.offset": 359, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionDepthModelOptions()", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17DepthModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 496}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 490}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"19\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 434, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 507, "key.offset": 503, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 752}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 746}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"23\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 571, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 763, "key.offset": 759, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1327}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1321}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"32\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 801, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1338, "key.offset": 1334, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions(py)forceVisionPrediction"}], "key.typename": "FritzVisionDepthModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17DepthModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionDepthModel) public final class FritzVisionDepthModel : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1510}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1503}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1479}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 1450}], "key.bodylength": 1802, "key.bodyoffset": 1604, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 1545}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1560}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1585}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionDepthModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDepthModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1891, "key.name": "FritzVisionDepthModel", "key.namelength": 21, "key.nameoffset": 1522, "key.offset": 1516, "key.parsed_declaration": "public final class FritzVisionDepthModel: BasePredictor, CoreMLOrVisionPredictor, DownloadableModel", "key.parsed_scope.end": 96, "key.parsed_scope.start": 40, "key.runtime_name": "FritzVisionDepthModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1614}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1608}], "key.bodylength": 46, "key.bodyoffset": 1665, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 1632, "key.offset": 1621, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 45, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1716}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 145, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 1734, "key.offset": 1723, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB10DepthModelC11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1878}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1872}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 1896, "key.offset": 1885, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1966}], "key.bodylength": 64, "key.bodyoffset": 2076, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModel\">FritzVisionDepthModel</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 168, "key.name": "fetchModel(completionHandler:)", "key.namelength": 89, "key.nameoffset": 1985, "key.offset": 1973, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionDepthModel?, Error?) -> Void\n)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 54, "key.substructure": [], "key.typename": "(FritzVisionDepthModel.Type) -> (@escaping (FritzVisionDepthModel?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD10DepthModelCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB10DepthModelC05fetchD017completionHandleryyACSg_s5Error_pSgtc_tFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</Type> = .init(), completion: (<Type usr=\"c:objc(cs)AVDepthData\">AVDepthData</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3182}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3145}], "key.bodylength": 65, "key.bodyoffset": 3339, "key.doc.column": 15, "key.doc.comment": "Run image segmentation on a FritzVisionDepthMap.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.\n      Contains a FritzVisionDepthMap or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionDepthModelOptions = .init(), completion: (AVDepthData?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift\" line=\"89\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionDepthModelOptions = .init(), completion: (AVDepthData?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionDepthMap.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request. Contains a FritzVisionDepthMap or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request. Contains a FritzVisionDepthMap or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 310, "key.docoffset": 2833, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/DepthEstimation/DepthEstimation.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionDepthModelOptions\">FritzVisionDepthModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVDepthData\">AVDepthData</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 216, "key.name": "predict(_:options:completion:)", "key.namelength": 143, "key.nameoffset": 3194, "key.offset": 3189, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionDepthModelOptions = .init(),\n  completion: (AVDepthData?, Error?) -> Void\n)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 89, "key.substructure": [], "key.typename": "(FritzVisionDepthModel) -> (FritzVisionImage, FritzVisionDepthModelOptions, (AVDepthData?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17DepthModelOptionsCySo11AVDepthDataCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel(im)predict:options:completion:"}], "key.typename": "FritzVisionDepthModel.Type", "key.typeusr": "$s11FritzVision0aB10DepthModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionDepthModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionError.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 314, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 190}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 184}], "key.bodylength": 80, "key.bodyoffset": 232, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 220}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 225}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 116, "key.name": "FritzVisionError", "key.namelength": 16, "key.nameoffset": 202, "key.offset": 197, "key.parsed_declaration": "@objc public enum FritzVisionError: Int, Error", "key.parsed_scope.end": 15, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 235, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidImageBuffer</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidImageBuffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 18, "key.name": "invalidImageBuffer", "key.namelength": 18, "key.nameoffset": 240, "key.offset": 240, "key.parsed_declaration": "case invalidImageBuffer", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorInvalidImageBuffer"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 261, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case errorProcessingImage</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>errorProcessingImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "errorProcessingImage", "key.namelength": 20, "key.nameoffset": 266, "key.offset": 266, "key.parsed_declaration": "case errorProcessingImage", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorErrorProcessingImage"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 289, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case imageNotEncodable</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionError.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>imageNotEncodable</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "imageNotEncodable", "key.namelength": 17, "key.nameoffset": 294, "key.offset": 294, "key.parsed_declaration": "case imageNotEncodable", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(FritzVisionError.Type) -> FritzVisionError", "key.typeusr": "$sy11FritzVision0aB5ErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionError@FritzVisionErrorImageNotEncodable"}]}], "key.typename": "FritzVisionError.Type", "key.typeusr": "$s11FritzVision0aB5ErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionError"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6225, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class CIImagePipeline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 308}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 225}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 201}], "key.bodylength": 1838, "key.bodyoffset": 348, "key.doc.comment": "Pipeline for appling image transformation functions to a CIImage.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 338}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>CIImagePipeline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1872, "key.name": "CIImagePipeline", "key.namelength": 15, "key.nameoffset": 321, "key.offset": 315, "key.parsed_declaration": "public class CIImagePipeline: NSObject", "key.parsed_scope.end": 78, "key.parsed_scope.start": 15, "key.runtime_name": "_TtC4main15CIImagePipeline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ResizeSamplingMethod) public enum <Type usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</Type>.ResizeSamplingMethod : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 426}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 396}], "key.bodylength": 225, "key.bodyoffset": 465, "key.doc.column": 15, "key.doc.comment": "Sampling method used to resize image.", "key.doc.declaration": "@objc(ResizeSamplingMethod) public enum FritzVision.CIImagePipeline.ResizeSamplingMethod : Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"19\" column=\"15\"><Name>ResizeSamplingMethod</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO</USR><Declaration>@objc(ResizeSamplingMethod) public enum FritzVision.CIImagePipeline.ResizeSamplingMethod : Int</Declaration><CommentParts><Abstract><Para>Sampling method used to resize image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "ResizeSamplingMethod", "key.doc.type": "Other", "key.doclength": 42, "key.docoffset": 352, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 460}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ResizeSamplingMethod)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</ref.class>.<decl.name>ResizeSamplingMethod</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 258, "key.name": "ResizeSamplingMethod", "key.namelength": 20, "key.nameoffset": 438, "key.offset": 433, "key.parsed_declaration": "public enum ResizeSamplingMethod: Int", "key.parsed_scope.end": 28, "key.parsed_scope.start": 19, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 502, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case lanczos</Declaration>", "key.doc.column": 10, "key.doc.comment": "Lanczos Sampling method", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"21\" column=\"10\"><Name>lanczos</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7lanczosyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Lanczos Sampling method</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "lanczos", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 470, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>lanczos</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "lanczos", "key.namelength": 7, "key.nameoffset": 507, "key.offset": 507, "key.parsed_declaration": "case lanczos", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7lanczosyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 553, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case bicubic</Declaration>", "key.doc.column": 10, "key.doc.comment": "Bicubic Sampling method.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"24\" column=\"10\"><Name>bicubic</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7bicubicyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Bicubic Sampling method.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "bicubic", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 520, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bicubic</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "bicubic", "key.namelength": 7, "key.nameoffset": 558, "key.offset": 558, "key.parsed_declaration": "case bicubic", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO7bicubicyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 676, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case affine</Declaration>", "key.doc.column": 10, "key.doc.comment": "Affine transformation resampling. This is the fastest method but results in more edge artifacts.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"27\" column=\"10\"><Name>affine</Name><USR>s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO6affineyA2EmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Affine transformation resampling. This is the fastest method but results in more edge artifacts.</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "affine", "key.doc.type": "Other", "key.doclength": 101, "key.docoffset": 571, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>affine</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "affine", "key.namelength": 6, "key.nameoffset": 681, "key.offset": 681, "key.parsed_declaration": "case affine", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(CIImagePipeline.ResizeSamplingMethod.Type) -> CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$sy11FritzVision15CIImagePipelineC20ResizeSamplingMethodOAEmcD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO6affineyA2EmF"}]}], "key.typename": "CIImagePipeline.ResizeSamplingMethod.Type", "key.typeusr": "$s11FritzVision15CIImagePipelineC20ResizeSamplingMethodOmD", "key.usr": "s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var image: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 796}], "key.doc.column": 14, "key.doc.comment": "Current CIImage.", "key.doc.declaration": "public var image: CIImage", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"34\" column=\"14\"><Name>image</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(py)image</USR><Declaration>public var image: CIImage</Declaration><CommentParts><Abstract><Para>Current CIImage.</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "image", "key.doc.type": "Other", "key.doclength": 21, "key.docoffset": 773, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "image", "key.namelength": 5, "key.nameoffset": 807, "key.offset": 803, "key.parsed_declaration": "public var image: CIImage", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "CIImage", "key.typeusr": "$sSo7CIImageCD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(py)image"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var resizeSamplingMethod: <Type usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</Type>.<Type usr=\"s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO\">ResizeSamplingMethod</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 951}], "key.doc.column": 14, "key.doc.comment": "Sampling method use when resizing images.  Defaults to `.affine`, which is the fastest but produces the most artifacts.", "key.doc.declaration": "public var resizeSamplingMethod: FritzVision.CIImagePipeline.ResizeSamplingMethod", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"37\" column=\"14\"><Name>resizeSamplingMethod</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(py)resizeSamplingMethod</USR><Declaration>public var resizeSamplingMethod: FritzVision.CIImagePipeline.ResizeSamplingMethod</Declaration><CommentParts><Abstract><Para>Sampling method use when resizing images.  Defaults to <codeVoice>.affine</codeVoice>, which is the fastest but produces the most artifacts.</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "resizeSamplingMethod", "key.doc.type": "Other", "key.doclength": 124, "key.docoffset": 825, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resizeSamplingMethod</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)CIImagePipeline\">CIImagePipeline</ref.class>.<ref.enum usr=\"s:11FritzVision15CIImagePipelineC20ResizeSamplingMethodO\">ResizeSamplingMethod</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 56, "key.name": "resizeSamplingMethod", "key.namelength": 20, "key.nameoffset": 962, "key.offset": 958, "key.parsed_declaration": "public var resizeSamplingMethod: ResizeSamplingMethod = .affine", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "CIImagePipeline.ResizeSamplingMethod", "key.typeusr": "$s11FritzVision15CIImagePipelineC20ResizeSamplingMethodOD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(py)resizeSamplingMethod"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(_ image: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type>, context: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1247}], "key.bodylength": 87, "key.bodyoffset": 1305, "key.doc.column": 10, "key.doc.comment": "Create `CIImagePipeline`\n- Parameter image: Input CIImage\n- Parameter context: CIImage context. If not provided, uses FritzVisionImage shared context.", "key.doc.declaration": "public init(_ image: CIImage, context: CIContext? = nil)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"44\" column=\"10\"><Name>init(_:context:)</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(im)init:context:</USR><Declaration>public init(_ image: CIImage, context: CIContext? = nil)</Declaration><CommentParts><Abstract><Para>Create <codeVoice>CIImagePipeline</codeVoice></Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Input CIImage</Para></Discussion></Parameter><Parameter><Name>context</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CIImage context. If not provided, uses FritzVisionImage shared context.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 44, "key.doc.name": "init(_:context:)", "key.doc.parameters": [{"discussion": [{"Para": "Input CIImage"}], "name": "image"}, {"discussion": [{"Para": "CIImage context. If not provided, uses FritzVisionImage shared context."}], "name": "context"}], "key.doc.type": "Function", "key.doclength": 167, "key.docoffset": 1078, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>context</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 139, "key.name": "init(_:context:)", "key.namelength": 49, "key.nameoffset": 1254, "key.offset": 1254, "key.parsed_declaration": "public init(_ image: CIImage, context: CIContext? = nil)", "key.parsed_scope.end": 47, "key.parsed_scope.start": 44, "key.substructure": [], "key.typename": "(CIImagePipeline.Type) -> (CIImage, CIContext?) -> CIImagePipeline", "key.typeusr": "$s_7context11FritzVision15CIImagePipelineCSo0D0C_So9CIContextCSgtcD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(im)init:context:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func render() -&gt; <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1441}], "key.bodylength": 121, "key.bodyoffset": 1481, "key.doc.column": 15, "key.doc.comment": "Render current CIImage to pixelBuffer", "key.doc.declaration": "public func render() -> CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift\" line=\"50\" column=\"15\"><Name>render()</Name><USR>c:@M@FritzVision@objc(cs)CIImagePipeline(im)render</USR><Declaration>public func render() -&gt; CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>Render current CIImage to pixelBuffer</Para></Abstract></CommentParts></Function>", "key.doc.line": 50, "key.doc.name": "render()", "key.doc.type": "Function", "key.doclength": 42, "key.docoffset": 1397, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/CIImagePipeline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>render</decl.name>() -&gt; <decl.function.returntype><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "render()", "key.namelength": 8, "key.nameoffset": 1453, "key.offset": 1448, "key.parsed_declaration": "public func render() -> CVPixelBuffer?", "key.parsed_scope.end": 54, "key.parsed_scope.start": 50, "key.substructure": [], "key.typename": "(CIImagePipeline) -> () -> CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgycD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline(im)render"}], "key.typename": "CIImagePipeline.Type", "key.typeusr": "$s11FritzVision15CIImagePipelineCmD", "key.usr": "c:@M@FritzVision@objc(cs)CIImagePipeline"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 24, "key.name": "MARK: - Image Processing", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2192}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2680, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzImageOrientation : <Type usr=\"s:s5Int32V\">Int32</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 486}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 480}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 456}], "key.bodylength": 133, "key.bodyoffset": 528, "key.doc.column": 13, "key.doc.comment": "Describes the orientation of the image. The orientations match the [CGImagePropertyOrientation](https://developer.apple.com/documentation/imageio/cgimagepropertyorientation) Enumeration from Apple. Refer to that documentation for clear descriptions of each case.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift\" line=\"14\" column=\"13\"><Name>FritzImageOrientation</Name><USR>c:@M@FritzVision@E@FritzImageOrientation</USR><Declaration>@available(iOS 11.0, *)\n@objc public enum FritzImageOrientation : Int32</Declaration><CommentParts><Abstract><Para>Describes the orientation of the image. The orientations match the <Link href=\"https://developer.apple.com/documentation/imageio/cgimagepropertyorientation\">CGImagePropertyOrientation</Link> Enumeration from Apple. Refer to that documentation for clear descriptions of each case.</Para></Abstract></CommentParts></Other>", "key.doc.line": 14, "key.doc.name": "FritzImageOrientation", "key.doc.type": "Other", "key.doclength": 267, "key.docoffset": 189, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 521}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzImageOrientation</decl.name> : <ref.struct usr=\"s:s5Int32V\">Int32</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int32"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 169, "key.name": "FritzImageOrientation", "key.namelength": 21, "key.nameoffset": 498, "key.offset": 493, "key.parsed_declaration": "public enum FritzImageOrientation: Int32", "key.parsed_scope.end": 25, "key.parsed_scope.start": 14, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 532, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case up = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 542}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>up</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "up", "key.namelength": 2, "key.nameoffset": 537, "key.offset": 537, "key.parsed_declaration": "case up = 1", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUp"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 546, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case upMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>upMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "upMirrored", "key.namelength": 10, "key.nameoffset": 551, "key.offset": 551, "key.parsed_declaration": "case upMirrored", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationUpMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 564, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case down</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>down</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "down", "key.namelength": 4, "key.nameoffset": 569, "key.offset": 569, "key.parsed_declaration": "case down", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDown"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 576, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case downMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>downMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "downMirrored", "key.namelength": 12, "key.nameoffset": 581, "key.offset": 581, "key.parsed_declaration": "case downMirrored", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationDownMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 596, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftMirrored", "key.namelength": 12, "key.nameoffset": 601, "key.offset": 601, "key.parsed_declaration": "case leftMirrored", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeftMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 616, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case right</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>right</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "right", "key.namelength": 5, "key.nameoffset": 621, "key.offset": 621, "key.parsed_declaration": "case right", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRight"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 629, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightMirrored</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightMirrored</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightMirrored", "key.namelength": 13, "key.nameoffset": 634, "key.offset": 634, "key.parsed_declaration": "case rightMirrored", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationRightMirrored"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 650, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case left</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzImageOrientation.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>left</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "left", "key.namelength": 4, "key.nameoffset": 655, "key.offset": 655, "key.parsed_declaration": "case left", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(FritzImageOrientation.Type) -> FritzImageOrientation", "key.typeusr": "$sy11FritzVision0A16ImageOrientationOACmcD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation@FritzImageOrientationLeft"}]}], "key.typename": "FritzImageOrientation.Type", "key.typeusr": "$s11FritzVision0A16ImageOrientationOmD", "key.usr": "c:@M@FritzVision@E@FritzImageOrientation"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11638, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionCropAndScale) public enum FritzVisionCropAndScale : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 52}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 21}], "key.bodylength": 1188, "key.bodyoffset": 94, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 89}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionCropAndScale)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionCropAndScale</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1224, "key.name": "FritzVisionCropAndScale", "key.namelength": 23, "key.nameoffset": 64, "key.offset": 59, "key.parsed_declaration": "public enum FritzVisionCropAndScale: Int", "key.parsed_scope.end": 39, "key.parsed_scope.start": 4, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 97, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case centerCrop = 1</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 115}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>centerCrop</decl.name> = <syntaxtype.number>1</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 14, "key.name": "centerCrop", "key.namelength": 10, "key.nameoffset": 102, "key.offset": 102, "key.parsed_declaration": "case centerCrop = 1", "key.parsed_scope.end": 5, "key.parsed_scope.start": 5, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleCenterCrop"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 119, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case scaleFill = 2</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 136}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFill</decl.name> = <syntaxtype.number>2</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "scaleFill", "key.namelength": 9, "key.nameoffset": 124, "key.offset": 124, "key.parsed_declaration": "case scaleFill = 2", "key.parsed_scope.end": 6, "key.parsed_scope.start": 6, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFill"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 140, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case scaleFit = 3</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 1, "key.offset": 156}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>scaleFit</decl.name> = <syntaxtype.number>3</syntaxtype.number></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "scaleFit", "key.namelength": 8, "key.nameoffset": 145, "key.offset": 145, "key.parsed_declaration": "case scaleFit = 3", "key.parsed_scope.end": 7, "key.parsed_scope.start": 7, "key.typename": "(FritzVisionCropAndScale.Type) -> FritzVisionCropAndScale", "key.typeusr": "$sy11FritzVision0aB12CropAndScaleOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale@FritzVisionCropAndScaleScaleFit"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var visionOption: <Type usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 161}], "key.bodylength": 219, "key.bodyoffset": 213, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>visionOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@VNImageCropAndScaleOption\">VNImageCropAndScaleOption</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 265, "key.name": "visionOption", "key.namelength": 12, "key.nameoffset": 172, "key.offset": 168, "key.parsed_declaration": "public var visionOption: VNImageCropAndScaleOption", "key.parsed_scope.end": 15, "key.parsed_scope.start": 9, "key.typename": "VNImageCropAndScaleOption", "key.typeusr": "$sSo25VNImageCropAndScaleOptionVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO12visionOptionSo07VNImagecdeG0Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getCenterCropRect(forImageToScaleSize size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 437}], "key.bodylength": 760, "key.bodyoffset": 519, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getCenterCropRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>forImageToScaleSize</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 836, "key.name": "getCenterCropRect(forImageToScaleSize:)", "key.namelength": 51, "key.nameoffset": 456, "key.offset": 444, "key.parsed_declaration": "public static func getCenterCropRect(forImageToScaleSize size: CGSize) -> CGRect", "key.parsed_scope.end": 37, "key.parsed_scope.start": 17, "key.substructure": [{"key.annotated_decl": "<Declaration>let widthDifference: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>widthDifference</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 46, "key.name": "widthDifference", "key.namelength": 15, "key.nameoffset": 1032, "key.offset": 1028, "key.parsed_declaration": "let widthDifference = size.width - size.height", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ15widthDifferenceL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let targetSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>targetSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 64, "key.name": "targetSize", "key.namelength": 10, "key.nameoffset": 1083, "key.offset": 1079, "key.parsed_declaration": "let targetSize = CGSize(width: size.height, height: size.height)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ06targetL0L0_AIvp"}, {"key.annotated_decl": "<Declaration>let xStart: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xStart</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "xStart", "key.namelength": 6, "key.nameoffset": 1152, "key.offset": 1148, "key.parsed_declaration": "let xStart = widthDifference / 2", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ6xStartL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let origin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>origin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "origin", "key.namelength": 6, "key.nameoffset": 1189, "key.offset": 1185, "key.parsed_declaration": "let origin = CGPoint(x: xStart, y: 0.0)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ6originL0_So7CGPointVvp"}], "key.typename": "(FritzVisionCropAndScale.Type) -> (CGSize) -> CGRect", "key.typeusr": "$s19forImageToScaleSizeSo6CGRectVSo6CGSizeV_tcD", "key.usr": "s:11FritzVision0aB12CropAndScaleO09getCenterC4Rect010forImageToE4SizeSo6CGRectVSo6CGSizeV_tFZ"}], "key.typename": "FritzVisionCropAndScale.Type", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionCropAndScale"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImage) public class FritzVisionImage : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1426}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1365}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1365}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1365}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 1365}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 1341}], "key.bodylength": 3947, "key.bodyoffset": 1467, "key.doc.column": 14, "key.doc.comment": "An image or image buffer used in vision detection.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"45\" column=\"14\"><Name>FritzVisionImage</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionImage) public class FritzVisionImage : NSObject</Declaration><CommentParts><Abstract><Para>An image or image buffer used in vision detection.</Para></Abstract></CommentParts></Class>", "key.doc.line": 45, "key.doc.name": "FritzVisionImage", "key.doc.type": "Class", "key.doclength": 55, "key.docoffset": 1286, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1457}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImage)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImage</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3982, "key.name": "FritzVisionImage", "key.namelength": 16, "key.nameoffset": 1439, "key.offset": 1433, "key.parsed_declaration": "public class FritzVisionImage: NSObject", "key.parsed_scope.end": 177, "key.parsed_scope.start": 45, "key.runtime_name": "FritzVisionImage", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sharedContext: <Type usr=\"c:objc(cs)CIContext\">CIContext</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1502}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1494}], "key.doc.column": 21, "key.doc.comment": "Shared CIContext", "key.doc.declaration": "@objc public static let sharedContext: CIContext", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"49\" column=\"21\"><Name>sharedContext</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImage(cpy)sharedContext</USR><Declaration>@objc public static let sharedContext: CIContext</Declaration><CommentParts><Abstract><Para>Shared CIContext</Para></Abstract></CommentParts></Other>", "key.doc.line": 49, "key.doc.name": "sharedContext", "key.doc.type": "Other", "key.doclength": 21, "key.docoffset": 1471, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sharedContext</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)CIContext\">CIContext</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 76, "key.name": "sharedContext", "key.namelength": 13, "key.nameoffset": 1520, "key.offset": 1509, "key.parsed_declaration": "public static let sharedContext = CIContext(options: [.useSoftwareRenderer: false])", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "CIContext", "key.typeusr": "$sSo9CIContextCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(cpy)sharedContext"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1619}], "key.doc.column": 14, "key.doc.comment": "CVPixelBuffer of image.", "key.doc.declaration": "public let imageBuffer: CVPixelBuffer?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift\" line=\"52\" column=\"14\"><Name>imageBuffer</Name><USR>s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp</USR><Declaration>public let imageBuffer: CVPixelBuffer?</Declaration><CommentParts><Abstract><Para>CVPixelBuffer of image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 52, "key.doc.name": "imageBuffer", "key.doc.type": "Other", "key.doclength": 28, "key.docoffset": 1589, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imageBuffer</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "imageBuffer", "key.namelength": 11, "key.nameoffset": 1630, "key.offset": 1626, "key.parsed_declaration": "public let imageBuffer: CVPixelBuffer?", "key.parsed_scope.end": 52, "key.parsed_scope.start": 52, "key.typename": "CVBuffer?", "key.typeusr": "$sSo11CVBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC11imageBufferSo11CVBufferRefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1661}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sampleBuffer</decl.name>: <decl.var.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "sampleBuffer", "key.namelength": 12, "key.nameoffset": 1672, "key.offset": 1668, "key.parsed_declaration": "public let sampleBuffer: CMSampleBuffer?", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.typename": "CMSampleBuffer?", "key.typeusr": "$sSo17CMSampleBufferRefaSgD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBufferSo08CMSampleE3RefaSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1704}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "image", "key.namelength": 5, "key.nameoffset": 1715, "key.offset": 1711, "key.parsed_declaration": "public let image: UIImage?", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "UIImage?", "key.typeusr": "$sSo7UIImageCSgD", "key.usr": "s:11FritzVision0aB5ImageC5imageSo7UIImageCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1734}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 1745, "key.offset": 1741, "key.parsed_declaration": "public var metadata: FritzVisionImageMetadata?", "key.parsed_scope.end": 57, "key.parsed_scope.start": 57, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionImageMetadata?", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCSgD", "key.usr": "s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithBuffer:) public init(buffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1809}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 22, "key.offset": 1784}], "key.bodylength": 82, "key.bodyoffset": 1846, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(buffer:)", "key.namelength": 28, "key.nameoffset": 1816, "key.offset": 1816, "key.parsed_declaration": "public init(buffer: CMSampleBuffer)", "key.parsed_scope.end": 64, "key.parsed_scope.start": 60, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer) -> FritzVisionImage", "key.typeusr": "$s6buffer11FritzVision0bC5ImageCSo17CMSampleBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1963}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 1933}], "key.bodylength": 87, "key.bodyoffset": 2004, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init(imageBuffer:)", "key.namelength": 32, "key.nameoffset": 1970, "key.offset": 1970, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 67, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer) -> FritzVisionImage", "key.typeusr": "$s11imageBuffer11FritzVision0cD5ImageCSo11CVBufferRefa_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithCIImage:) convenience public init(ciImage: <Type usr=\"c:objc(cs)CIImage\">CIImage</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2134}, {"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2122}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 2096}], "key.bodylength": 51, "key.bodyoffset": 2165, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithCIImage:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>ciImage</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CIImage\">CIImage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 76, "key.name": "init(ciImage:)", "key.namelength": 22, "key.nameoffset": 2141, "key.offset": 2141, "key.parsed_declaration": "convenience public init(ciImage: CIImage)", "key.parsed_scope.end": 76, "key.parsed_scope.start": 74, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (CIImage) -> FritzVisionImage", "key.typeusr": "$s7ciImage11FritzVision0cdB0CSo7CIImageC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2245}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2221}], "key.bodylength": 81, "key.bodyoffset": 2274, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 104, "key.name": "init(image:)", "key.namelength": 20, "key.nameoffset": 2252, "key.offset": 2252, "key.parsed_declaration": "public init(image: UIImage)", "key.parsed_scope.end": 83, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionImage.Type) -> (UIImage) -> FritzVisionImage", "key.typeusr": "$s5image11FritzVision0bC5ImageCSo7UIImageC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImage:orientation:) public init(image: <Type usr=\"c:objc(cs)UIImage\">UIImage</Type>, orientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2396}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 2360}], "key.bodylength": 239, "key.bodyoffset": 2466, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImage:orientation:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIImage\">UIImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 303, "key.name": "init(image:orientation:)", "key.namelength": 61, "key.nameoffset": 2403, "key.offset": 2403, "key.parsed_declaration": "public init(image: UIImage, orientation: CGImagePropertyOrientation)", "key.parsed_scope.end": 93, "key.parsed_scope.start": 86, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2553, "key.offset": 2549, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 90, "key.parsed_scope.start": 90, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC5image11orientationACSo7UIImageC_So26CGImagePropertyOrientationVtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (UIImage, CGImagePropertyOrientation) -> FritzVisionImage", "key.typeusr": "$s5image11orientation11FritzVision0cD5ImageCSo7UIImageC_So26CGImagePropertyOrientationVtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithImageBuffer:orientation:) public init(imageBuffer: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>, orientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2752}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 2710}], "key.bodylength": 245, "key.bodyoffset": 2834, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithImageBuffer:orientation:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>imageBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>orientation</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 321, "key.name": "init(imageBuffer:orientation:)", "key.namelength": 73, "key.nameoffset": 2759, "key.offset": 2759, "key.parsed_declaration": "public init(imageBuffer: CVPixelBuffer, orientation: CGImagePropertyOrientation)", "key.parsed_scope.end": 103, "key.parsed_scope.start": 96, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:\">init(sampleBuffer:connection:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 2927, "key.offset": 2923, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 100, "key.parsed_scope.start": 100, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC11imageBuffer11orientationACSo11CVBufferRefa_So26CGImagePropertyOrientationVtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (CVBuffer, CGImagePropertyOrientation) -> FritzVisionImage", "key.typeusr": "$s11imageBuffer11orientation11FritzVision0dE5ImageCSo11CVBufferRefa_So26CGImagePropertyOrientationVtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSampleBuffer:connection:) public init(sampleBuffer: <Type usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</Type>, connection: <Type usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3126}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 3084}], "key.bodylength": 230, "key.bodyoffset": 3202, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSampleBuffer:connection:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sampleBuffer</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@T@CMSampleBufferRef\">CMSampleBuffer</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>connection</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVCaptureConnection\">AVCaptureConnection</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 300, "key.name": "init(sampleBuffer:connection:)", "key.namelength": 67, "key.nameoffset": 3133, "key.offset": 3133, "key.parsed_declaration": "public init(sampleBuffer: CMSampleBuffer, connection: AVCaptureConnection)", "key.parsed_scope.end": 113, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithBuffer:\">init(buffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:\">init(imageBuffer:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithCIImage:\">init(ciImage:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:\">init(image:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImage:orientation:\">init(image:orientation:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithImageBuffer:orientation:\">init(imageBuffer:orientation:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let metadata: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImageMetadata\">FritzVisionImageMetadata</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 41, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 3296, "key.offset": 3292, "key.parsed_declaration": "let metadata = FritzVisionImageMetadata()", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5ImageC8metadataAA0abC8MetadataCSgvp\">metadata</RelatedName>"}], "key.typename": "FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCD", "key.usr": "s:11FritzVision0aB5ImageC12sampleBuffer10connectionACSo08CMSampleE3Refa_So19AVCaptureConnectionCtcfc8metadataL_AA0abC8MetadataCvp"}], "key.typename": "(FritzVisionImage.Type) -> (CMSampleBuffer, AVCaptureConnection) -> FritzVisionImage", "key.typeusr": "$s12sampleBuffer10connection11FritzVision0dE5ImageCSo08CMSampleB3Refa_So19AVCaptureConnectionCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage(im)initWithSampleBuffer:connection:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func buildImageRequestHandler() -&gt; <Type usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3562}], "key.bodylength": 1784, "key.bodyoffset": 3628, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildImageRequestHandler</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)VNImageRequestHandler\">VNImageRequestHandler</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1844, "key.name": "buildImageRequestHandler()", "key.namelength": 26, "key.nameoffset": 3574, "key.offset": 3569, "key.parsed_declaration": "public func buildImageRequestHandler() -> VNImageRequestHandler?", "key.parsed_scope.end": 176, "key.parsed_scope.start": 120, "key.substructure": [], "key.typename": "(FritzVisionImage) -> () -> VNImageRequestHandler?", "key.typeusr": "$sSo21VNImageRequestHandlerCSgycD", "key.usr": "s:11FritzVision0aB5ImageC05buildC14RequestHandlerSo07VNImageeF0CSgyF"}], "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImage"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 38, "key.name": "MARK: - Image Size Computed Properties", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 5420}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 29, "key.name": "MARK: - Image Type Conversion", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6580}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzVisionImageError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10023}], "key.bodylength": 650, "key.bodyoffset": 10065, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 10058}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionImageError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 686, "key.name": "FritzVisionImageError", "key.namelength": 21, "key.nameoffset": 10035, "key.offset": 10030, "key.parsed_declaration": "public enum FritzVisionImageError: Error", "key.parsed_scope.end": 348, "key.parsed_scope.start": 324, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10068, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidCIImage</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidCIImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 14, "key.name": "invalidCIImage", "key.namelength": 14, "key.nameoffset": 10073, "key.offset": 10073, "key.parsed_declaration": "case invalidCIImage", "key.parsed_scope.end": 325, "key.parsed_scope.start": 325, "key.typename": "(FritzVisionImageError.Type) -> FritzVisionImageError", "key.typeusr": "$sy11FritzVision0aB10ImageErrorOACmcD", "key.usr": "s:11FritzVision0aB10ImageErrorO14invalidCIImageyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 19, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10090, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidUIImage</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidUIImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 14, "key.name": "invalidUIImage", "key.namelength": 14, "key.nameoffset": 10095, "key.offset": 10095, "key.parsed_declaration": "case invalidUIImage", "key.parsed_scope.end": 326, "key.parsed_scope.start": 326, "key.typename": "(FritzVisionImageError.Type) -> FritzVisionImageError", "key.typeusr": "$sy11FritzVision0aB10ImageErrorOACmcD", "key.usr": "s:11FritzVision0aB10ImageErrorO14invalidUIImageyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10112, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidCVPixelBuffer</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidCVPixelBuffer</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "invalidCVPixelBuffer", "key.namelength": 20, "key.nameoffset": 10117, "key.offset": 10117, "key.parsed_declaration": "case invalidCVPixelBuffer", "key.parsed_scope.end": 327, "key.parsed_scope.start": 327, "key.typename": "(FritzVisionImageError.Type) -> FritzVisionImageError", "key.typeusr": "$sy11FritzVision0aB10ImageErrorOACmcD", "key.usr": "s:11FritzVision0aB10ImageErrorO20invalidCVPixelBufferyA2CmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func message() -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 10141}], "key.bodylength": 539, "key.bodyoffset": 10174, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImage.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>message</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 566, "key.name": "message()", "key.namelength": 9, "key.nameoffset": 10153, "key.offset": 10148, "key.parsed_declaration": "public func message() -> String", "key.parsed_scope.end": 347, "key.parsed_scope.start": 329, "key.substructure": [], "key.typename": "(FritzVisionImageError) -> () -> String", "key.typeusr": "$sSSycD", "key.usr": "s:11FritzVision0aB10ImageErrorO7messageSSyF"}], "key.typename": "FritzVisionImageError.Type", "key.typeusr": "$s11FritzVision0aB10ImageErrorOmD", "key.usr": "s:11FritzVision0aB10ImageErrorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1212, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionImageMetadata) public class FritzVisionImageMetadata : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 233}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 209}], "key.bodylength": 896, "key.bodyoffset": 314, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 304}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionImageMetadata)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionImageMetadata</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 939, "key.name": "FritzVisionImageMetadata", "key.namelength": 24, "key.nameoffset": 278, "key.offset": 272, "key.parsed_declaration": "public class FritzVisionImageMetadata: NSObject", "key.parsed_scope.end": 42, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionImageMetadata", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 324}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 317}], "key.bodylength": 14, "key.bodyoffset": 341, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 23, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 333, "key.offset": 333, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public override init()", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(FritzVisionImageMetadata.Type) -> () -> FritzVisionImageMetadata", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCycD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var orientation: <Type usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 507}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 501}], "key.doc.column": 20, "key.doc.comment": "Orientation defaults to `FritzImageOrientation.right` which should work for rear facing cameras with a device orientation of Portrait.", "key.doc.declaration": "@objc public var orientation: FritzVision.FritzImageOrientation", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift\" line=\"19\" column=\"20\"><Name>orientation</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation</USR><Declaration>@objc public var orientation: FritzVision.FritzImageOrientation</Declaration><CommentParts><Abstract><Para>Orientation defaults to <codeVoice>FritzImageOrientation.right</codeVoice> which should work for rear facing cameras with a device orientation of Portrait.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "orientation", "key.doc.type": "Other", "key.doclength": 139, "key.docoffset": 360, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzImageOrientation\">FritzImageOrientation</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "orientation", "key.namelength": 11, "key.nameoffset": 518, "key.offset": 514, "key.parsed_declaration": "@objc public var orientation: FritzImageOrientation = .right", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOrientation", "key.typeusr": "$s11FritzVision0A16ImageOrientationOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)orientation"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var cgOrientation: <Type usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 571}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 565}], "key.bodylength": 582, "key.bodyoffset": 625, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/FritzVisionImageMetadata.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>cgOrientation</decl.name>: <decl.var.type><ref.enum usr=\"c:@E@CGImagePropertyOrientation\">CGImagePropertyOrientation</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 630, "key.name": "cgOrientation", "key.namelength": 13, "key.nameoffset": 582, "key.offset": 578, "key.parsed_declaration": "@objc public var cgOrientation: CGImagePropertyOrientation", "key.parsed_scope.end": 40, "key.parsed_scope.start": 21, "key.typename": "CGImagePropertyOrientation", "key.typeusr": "$sSo26CGImagePropertyOrientationVD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata(py)cgOrientation"}], "key.typename": "FritzVisionImageMetadata.Type", "key.typeusr": "$s11FritzVision0aB13ImageMetadataCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionImageMetadata"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionImage/UIImage+Extensions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 464, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 822, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabel) public class FritzVisionLabel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 306}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 245}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 245}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 245}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 245}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 221}], "key.bodylength": 450, "key.bodyoffset": 370, "key.doc.column": 14, "key.doc.comment": "Represents a label for an image.", "key.doc.declaration": "@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift\" line=\"14\" column=\"14\"><Name>FritzVisionLabel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel</USR><Declaration>@available(OSX 10.13, iOS 11.0, tvOS 11.0, watchOS 4.0, *)\n@objc(FritzVisionLabel) public class FritzVisionLabel : NSObject, FritzPredictionResult</Declaration><CommentParts><Abstract><Para>Represents a label for an image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionLabel", "key.doc.type": "Class", "key.doclength": 37, "key.docoffset": 184, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 337}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 347}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 508, "key.name": "FritzVisionLabel", "key.namelength": 16, "key.nameoffset": 319, "key.offset": 313, "key.parsed_declaration": "public class FritzVisionLabel: NSObject, FritzPredictionResult", "key.parsed_scope.end": 32, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionLabel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 427}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 421}], "key.doc.column": 20, "key.doc.comment": "Human readable string of detected label.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift\" line=\"17\" column=\"20\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Human readable string of detected label.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 374, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 438, "key.offset": 434, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let confidence: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 518}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 512}], "key.doc.column": 20, "key.doc.comment": "Prediction confidence for label in range of [0, 1]", "key.doc.declaration": "@objc public let confidence: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift\" line=\"20\" column=\"20\"><Name>confidence</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence</USR><Declaration>@objc public let confidence: Double</Declaration><CommentParts><Abstract><Para>Prediction confidence for label in range of [0, 1]</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "confidence", "key.doc.type": "Other", "key.doclength": 55, "key.docoffset": 455, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 529, "key.offset": 525, "key.parsed_declaration": "@objc public let confidence: Double", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 558}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 551}], "key.bodylength": 62, "key.bodyoffset": 592, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 88, "key.name": "description", "key.namelength": 11, "key.nameoffset": 571, "key.offset": 567, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 24, "key.parsed_scope.start": 22, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:confidence:) public init(label: <Type usr=\"s:SS\">String</Type>, confidence: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 694}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 659}], "key.bodylength": 76, "key.bodyoffset": 742, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionLabel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:confidence:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>confidence</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 118, "key.name": "init(label:confidence:)", "key.namelength": 39, "key.nameoffset": 701, "key.offset": 701, "key.parsed_declaration": "public init(label: String, confidence: Double)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 27, "key.substructure": [], "key.typename": "(FritzVisionLabel.Type) -> (String, Double) -> FritzVisionLabel", "key.typeusr": "$s5label10confidence11FritzVision0cD5LabelCSS_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel(im)initWithLabel:confidence:"}], "key.typename": "FritzVisionLabel.Type", "key.typeusr": "$s11FritzVision0aB5LabelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzPredictionRequest.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1458, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3058, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class FritzVideoView : <Type usr=\"c:objc(cs)UIView\">UIView</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 203}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 179}], "key.bodylength": 2551, "key.bodyoffset": 238, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 230}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVideoView</decl.name> : <ref.class usr=\"c:objc(cs)UIView\">UIView</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "UIView"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2582, "key.name": "FritzVideoView", "key.namelength": 14, "key.nameoffset": 214, "key.offset": 208, "key.parsed_declaration": "open class FritzVideoView: UIView", "key.parsed_scope.end": 105, "key.parsed_scope.start": 12, "key.runtime_name": "_TtC4main14FritzVideoView", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var fritzVideo: <Type usr=\"s:11FritzVision0aB5VideoC\">FritzVisionVideo</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 335}], "key.bodylength": 55, "key.bodyoffset": 383, "key.doc.column": 14, "key.doc.comment": "The video to play and apply filters on.\nPrepares view for playback upon setting.", "key.doc.declaration": "public var fritzVideo: FritzVision.FritzVisionVideo? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"16\" column=\"14\"><Name>fritzVideo</Name><USR>s:11FritzVision0A9VideoViewC05fritzC0AA0abC0CSgvp</USR><Declaration>public var fritzVideo: FritzVision.FritzVisionVideo? { get set }</Declaration><CommentParts><Abstract><Para>The video to play and apply filters on. Prepares view for playback upon setting.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "fritzVideo", "key.doc.type": "Other", "key.doclength": 91, "key.docoffset": 242, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>fritzVideo</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision0aB5VideoC\">FritzVisionVideo</ref.class>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 97, "key.name": "fritzVideo", "key.namelength": 10, "key.nameoffset": 346, "key.offset": 342, "key.parsed_declaration": "public var fritzVideo: FritzVisionVideo? = nil", "key.parsed_scope.end": 19, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionVideo?", "key.typeusr": "$s11FritzVision0aB5VideoCSgD", "key.usr": "s:11FritzVision0A9VideoViewC05fritzC0AA0abC0CSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isPlaying: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 443}], "key.bodylength": 101, "key.bodyoffset": 471, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isPlaying</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 123, "key.name": "isPlaying", "key.namelength": 9, "key.nameoffset": 454, "key.offset": 450, "key.parsed_declaration": "public var isPlaying: Bool", "key.parsed_scope.end": 24, "key.parsed_scope.start": 21, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0A9VideoViewC9isPlayingSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init?(coder: <Type usr=\"c:objc(cs)NSCoder\">NSCoder</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 584}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 577}], "key.bodylength": 32, "key.bodyoffset": 616, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>coder</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)NSCoder\">NSCoder</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 56, "key.name": "init(coder:)", "key.namelength": 21, "key.nameoffset": 593, "key.offset": 593, "key.overrides": [{"key.usr": "c:objc(cs)UIView(im)initWithCoder:"}, {"key.usr": "c:objc(pl)NSCoding(im)initWithCoder:"}], "key.parsed_declaration": "public required init?(coder: NSCoder)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVideoView(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A9VideoViewC6sourceAcA0abC0C_tcfc\">init(source:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVideoView.Type) -> (NSCoder) -> FritzVideoView?", "key.typeusr": "$s5coder11FritzVision0B9VideoViewCSgSo7NSCoderC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVideoView(im)initWithCoder:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 688}], "key.bodylength": 32, "key.bodyoffset": 703, "key.doc.column": 10, "key.doc.comment": "Initialize as an empty view.", "key.doc.declaration": "public init()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"31\" column=\"10\"><Name>init()</Name><USR>c:@M@FritzVision@objc(cs)FritzVideoView(im)init</USR><Declaration>public init()</Declaration><CommentParts><Abstract><Para>Initialize as an empty view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "init()", "key.doc.type": "Function", "key.doclength": 33, "key.docoffset": 653, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 41, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 695, "key.offset": 695, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "public init()", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVideoView(im)initWithCoder:\">init(coder:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A9VideoViewC6sourceAcA0abC0C_tcfc\">init(source:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVideoView.Type) -> () -> FritzVideoView", "key.typeusr": "$s11FritzVision0A9VideoViewCycD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVideoView(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(source: <Type usr=\"s:11FritzVision0aB5VideoC\">FritzVisionVideo</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 859}], "key.bodylength": 61, "key.bodyoffset": 898, "key.doc.column": 10, "key.doc.comment": "Initializes with an existing FritzVisionVideo.\n\n- Parameters:\n  - source: the video to preview.", "key.doc.declaration": "public init(source: FritzVisionVideo)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"39\" column=\"10\"><Name>init(source:)</Name><USR>s:11FritzVision0A9VideoViewC6sourceAcA0abC0C_tcfc</USR><Declaration>public init(source: FritzVisionVideo)</Declaration><CommentParts><Abstract><Para>Initializes with an existing FritzVisionVideo.</Para></Abstract><Parameters><Parameter><Name>source</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the video to preview.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 39, "key.doc.name": "init(source:)", "key.doc.parameters": [{"discussion": [{"Para": "the video to preview."}], "name": "source"}], "key.doc.type": "Function", "key.doclength": 117, "key.docoffset": 740, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>source</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB5VideoC\">FritzVisionVideo</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "init(source:)", "key.namelength": 30, "key.nameoffset": 866, "key.offset": 866, "key.parsed_declaration": "public init(source: FritzVisionVideo)", "key.parsed_scope.end": 42, "key.parsed_scope.start": 39, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVideoView(im)initWithCoder:\">init(coder:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVideoView(im)init\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVideoView.Type) -> (FritzVisionVideo) -> FritzVideoView", "key.typeusr": "$s6source11FritzVision0B9VideoViewCAB0bcD0C_tcD", "key.usr": "s:11FritzVision0A9VideoViewC6sourceAcA0abC0C_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func play()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1018}], "key.bodylength": 141, "key.bodyoffset": 1038, "key.doc.column": 15, "key.doc.comment": "Plays the video using configured video options.", "key.doc.declaration": "public func play()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"45\" column=\"15\"><Name>play()</Name><USR>s:11FritzVision0A9VideoViewC4playyyF</USR><Declaration>public func play()</Declaration><CommentParts><Abstract><Para>Plays the video using configured video options.</Para></Abstract></CommentParts></Function>", "key.doc.line": 45, "key.doc.name": "play()", "key.doc.type": "Function", "key.doclength": 52, "key.docoffset": 964, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>play</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "play()", "key.namelength": 6, "key.nameoffset": 1030, "key.offset": 1025, "key.parsed_declaration": "public func play()", "key.parsed_scope.end": 49, "key.parsed_scope.start": 45, "key.substructure": [], "key.typename": "(FritzVideoView) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:11FritzVision0A9VideoViewC4playyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func pause()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1208}], "key.bodylength": 87, "key.bodyoffset": 1229, "key.doc.column": 15, "key.doc.comment": "Pauses the video.", "key.doc.declaration": "public func pause()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"52\" column=\"15\"><Name>pause()</Name><USR>s:11FritzVision0A9VideoViewC5pauseyyF</USR><Declaration>public func pause()</Declaration><CommentParts><Abstract><Para>Pauses the video.</Para></Abstract></CommentParts></Function>", "key.doc.line": 52, "key.doc.name": "pause()", "key.doc.type": "Function", "key.doclength": 22, "key.docoffset": 1184, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>pause</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 102, "key.name": "pause()", "key.namelength": 7, "key.nameoffset": 1220, "key.offset": 1215, "key.parsed_declaration": "public func pause()", "key.parsed_scope.end": 55, "key.parsed_scope.start": 52, "key.substructure": [], "key.typename": "(FritzVideoView) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:11FritzVision0A9VideoViewC5pauseyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stop()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1383}], "key.bodylength": 29, "key.bodyoffset": 1403, "key.doc.column": 15, "key.doc.comment": "Stops the video and removes all components of the view.", "key.doc.declaration": "public func stop()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"58\" column=\"15\"><Name>stop()</Name><USR>s:11FritzVision0A9VideoViewC4stopyyF</USR><Declaration>public func stop()</Declaration><CommentParts><Abstract><Para>Stops the video and removes all components of the view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 58, "key.doc.name": "stop()", "key.doc.type": "Function", "key.doclength": 60, "key.docoffset": 1321, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stop</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 43, "key.name": "stop()", "key.namelength": 6, "key.nameoffset": 1395, "key.offset": 1390, "key.parsed_declaration": "public func stop()", "key.parsed_scope.end": 60, "key.parsed_scope.start": 58, "key.typename": "(FritzVideoView) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "s:11FritzVision0A9VideoViewC4stopyyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func seek(to time: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1545}], "key.bodylength": 310, "key.bodyoffset": 1586, "key.doc.column": 15, "key.doc.comment": "Seeks to the desired time of the video.\n\n- Parameters:\n  - time: the time to seek to", "key.doc.declaration": "public func seek(to time: TimeInterval)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift\" line=\"66\" column=\"15\"><Name>seek(to:)</Name><USR>s:11FritzVision0A9VideoViewC4seek2toySd_tF</USR><Declaration>public func seek(to time: TimeInterval)</Declaration><CommentParts><Abstract><Para>Seeks to the desired time of the video.</Para></Abstract><Parameters><Parameter><Name>time</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the time to seek to</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 66, "key.doc.name": "seek(to:)", "key.doc.parameters": [{"discussion": [{"Para": "the time to seek to"}], "name": "time"}], "key.doc.type": "Function", "key.doclength": 106, "key.docoffset": 1437, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVideoView.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>seek</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>time</decl.var.parameter.name>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 345, "key.name": "seek(to:)", "key.namelength": 27, "key.nameoffset": 1557, "key.offset": 1552, "key.parsed_declaration": "public func seek(to time: TimeInterval)", "key.parsed_scope.end": 76, "key.parsed_scope.start": 66, "key.substructure": [], "key.typename": "(FritzVideoView) -> (Double) -> ()", "key.typeusr": "$s2toySd_tcD", "key.usr": "s:11FritzVision0A9VideoViewC4seek2toySd_tF"}], "key.typename": "FritzVideoView.Type", "key.typeusr": "$s11FritzVision0A9VideoViewCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVideoView"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2294, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzVisionImageFilter</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 211}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 187}], "key.bodylength": 398, "key.bodyoffset": 251, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzVisionImageFilter</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 432, "key.name": "FritzVisionImageFilter", "key.namelength": 22, "key.nameoffset": 227, "key.offset": 218, "key.parsed_declaration": "public protocol FritzVisionImageFilter", "key.parsed_scope.end": 25, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main22FritzVisionImageFilter_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>typealias <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>.FritzVisionFilterResult = <Type usr=\"s:s6ResultO\">Result</Type>&lt;<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, <Type usr=\"s:s5ErrorP\">Error</Type>&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol>.<decl.name>FritzVisionFilterResult</decl.name> = <ref.enum usr=\"s:s6ResultO\">Result</ref.enum>&lt;<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>&gt;</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 67, "key.name": "FritzVisionFilterResult", "key.namelength": 23, "key.nameoffset": 265, "key.offset": 255, "key.parsed_declaration": "typealias FritzVisionFilterResult = Result<FritzVisionImage, Error>", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Result<FritzVisionImage, Error>.Type", "key.typeusr": "$ss6ResultOy11FritzVision0bC5ImageCs5Error_pGmD", "key.usr": "s:11FritzVision0aB11ImageFilterP0abD6Resulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 417, "key.doc.column": 7, "key.doc.comment": "How predictors are chosen by the filter.", "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 326, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 50, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 377, "key.offset": 373, "key.parsed_declaration": "var compositionMode: FilterCompositionMode", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.doc.column": 8, "key.doc.comment": "Processes the image with a prediction.\n\n- Parameters:\n  - image: the image to process\n- Returns: the result of the prediction", "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.doclength": 153, "key.docoffset": 427, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 66, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 587, "key.offset": 582, "key.parsed_declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "<Self where Self : FritzVisionImageFilter> (Self) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionImageFilter.Protocol", "key.typeusr": "$s11FritzVision0aB11ImageFilter_pmD", "key.usr": "s:11FritzVision0aB11ImageFilterP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FilterCompositionMode</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 700}], "key.bodylength": 307, "key.bodyoffset": 735, "key.doc.column": 13, "key.doc.comment": "Specifies how a filter chooses a predictor.", "key.doc.declaration": "public enum FilterCompositionMode", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"28\" column=\"13\"><Name>FilterCompositionMode</Name><USR>s:11FritzVision21FilterCompositionModeO</USR><Declaration>public enum FilterCompositionMode</Declaration><CommentParts><Abstract><Para>Specifies how a filter chooses a predictor.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "FilterCompositionMode", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 652, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FilterCompositionMode</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 336, "key.name": "FilterCompositionMode", "key.namelength": 21, "key.nameoffset": 712, "key.offset": 707, "key.parsed_declaration": "public enum FilterCompositionMode", "key.parsed_scope.end": 37, "key.parsed_scope.start": 28, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 31, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 841, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case compoundWithPreviousOutput</Declaration>", "key.doc.column": 8, "key.doc.comment": "Use the previous image as a predictor.\nThe output image will be the result of the filter.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"32\" column=\"8\"><Name>compoundWithPreviousOutput</Name><USR>s:11FritzVision21FilterCompositionModeO26compoundWithPreviousOutputyA2CmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Use the previous image as a predictor. The output image will be the result of the filter.</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "compoundWithPreviousOutput", "key.doc.type": "Other", "key.doclength": 100, "key.docoffset": 739, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>compoundWithPreviousOutput</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 26, "key.name": "compoundWithPreviousOutput", "key.namelength": 26, "key.nameoffset": 846, "key.offset": 846, "key.parsed_declaration": "case compoundWithPreviousOutput", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "(FilterCompositionMode.Type) -> FilterCompositionMode", "key.typeusr": "$sy11FritzVision21FilterCompositionModeOACmcD", "key.usr": "s:11FritzVision21FilterCompositionModeO26compoundWithPreviousOutputyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 27, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1014, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case overlayOnOriginalImage</Declaration>", "key.doc.column": 8, "key.doc.comment": "Use the original image as a predictor.\nThe output image will be the result of the filter overlayed on top of the input image.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"36\" column=\"8\"><Name>overlayOnOriginalImage</Name><USR>s:11FritzVision21FilterCompositionModeO22overlayOnOriginalImageyA2CmF</USR><Declaration></Declaration><CommentParts><Abstract><Para>Use the original image as a predictor. The output image will be the result of the filter overlayed on top of the input image.</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "overlayOnOriginalImage", "key.doc.type": "Other", "key.doclength": 136, "key.docoffset": 876, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>overlayOnOriginalImage</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 22, "key.name": "overlayOnOriginalImage", "key.namelength": 22, "key.nameoffset": 1019, "key.offset": 1019, "key.parsed_declaration": "case overlayOnOriginalImage", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "(FilterCompositionMode.Type) -> FilterCompositionMode", "key.typeusr": "$sy11FritzVision21FilterCompositionModeOACmcD", "key.usr": "s:11FritzVision21FilterCompositionModeO22overlayOnOriginalImageyA2CmF"}]}], "key.typename": "FilterCompositionMode.Type", "key.typeusr": "$s11FritzVision21FilterCompositionModeOmD", "key.usr": "s:11FritzVision21FilterCompositionModeO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10544, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionVideo</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 240}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 216}], "key.bodylength": 3184, "key.bodyoffset": 271, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionVideo</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 3209, "key.name": "FritzVisionVideo", "key.namelength": 16, "key.nameoffset": 253, "key.offset": 247, "key.parsed_declaration": "public class FritzVisionVideo", "key.parsed_scope.end": 114, "key.parsed_scope.start": 15, "key.runtime_name": "_TtC4main16FritzVisionVideo", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let filters: [<Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 389}], "key.doc.column": 14, "key.doc.comment": "The filters to apply on every frame of the video.\n- Note: filters are applied in chronological order.", "key.doc.declaration": "public let filters: [FritzVisionImageFilter]", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"19\" column=\"14\"><Name>filters</Name><USR>s:11FritzVision0aB5VideoC7filtersSayAA0aB11ImageFilter_pGvp</USR><Declaration>public let filters: [FritzVisionImageFilter]</Declaration><CommentParts><Abstract><Para>The filters to apply on every frame of the video.</Para></Abstract><Discussion><Note><Para>filters are applied in chronological order.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "filters", "key.doc.type": "Other", "key.doclength": 112, "key.docoffset": 275, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>filters</decl.name>: <decl.var.type>[<ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "filters", "key.namelength": 7, "key.nameoffset": 400, "key.offset": 396, "key.parsed_declaration": "public let filters: [FritzVisionImageFilter]", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "[FritzVisionImageFilter]", "key.typeusr": "$sSay11FritzVision0aB11ImageFilter_pGD", "key.usr": "s:11FritzVision0aB5VideoC7filtersSayAA0aB11ImageFilter_pGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let player: <Type usr=\"c:objc(cs)AVPlayer\">AVPlayer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 461}], "key.doc.column": 14, "key.doc.comment": "The video source.", "key.doc.declaration": "public let player: AVPlayer", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"22\" column=\"14\"><Name>player</Name><USR>s:11FritzVision0aB5VideoC6playerSo8AVPlayerCvp</USR><Declaration>public let player: AVPlayer</Declaration><CommentParts><Abstract><Para>The video source.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "player", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 437, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>player</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)AVPlayer\">AVPlayer</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "player", "key.namelength": 6, "key.nameoffset": 472, "key.offset": 468, "key.parsed_declaration": "public let player: AVPlayer", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "AVPlayer", "key.typeusr": "$sSo8AVPlayerCD", "key.usr": "s:11FritzVision0aB5VideoC6playerSo8AVPlayerCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var frameRateScale: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 530}], "key.doc.column": 14, "key.doc.comment": "Factor to scale the frame rate.", "key.doc.declaration": "public var frameRateScale: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"25\" column=\"14\"><Name>frameRateScale</Name><USR>s:11FritzVision0aB5VideoC14frameRateScaleSfvp</USR><Declaration>public var frameRateScale: Float</Declaration><CommentParts><Abstract><Para>Factor to scale the frame rate.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "frameRateScale", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 492, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>frameRateScale</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "frameRateScale", "key.namelength": 14, "key.nameoffset": 541, "key.offset": 537, "key.parsed_declaration": "public var frameRateScale: Float = 1.0", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:11FritzVision0aB5VideoC14frameRateScaleSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var loop: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 620}], "key.doc.column": 14, "key.doc.comment": "If the video should loop when previewing.", "key.doc.declaration": "public var loop: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"28\" column=\"14\"><Name>loop</Name><USR>s:11FritzVision0aB5VideoC4loopSbvp</USR><Declaration>public var loop: Bool</Declaration><CommentParts><Abstract><Para>If the video should loop when previewing.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "loop", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 572, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>loop</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 15, "key.name": "loop", "key.namelength": 4, "key.nameoffset": 631, "key.offset": 627, "key.parsed_declaration": "public var loop = true", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB5VideoC4loopSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var duration: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 694}], "key.bodylength": 48, "key.bodyoffset": 729, "key.doc.column": 14, "key.doc.comment": "The total length of the video in seconds.", "key.doc.declaration": "public var duration: TimeInterval { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"31\" column=\"14\"><Name>duration</Name><USR>s:11FritzVision0aB5VideoC8durationSdvp</USR><Declaration>public var duration: TimeInterval { get }</Declaration><CommentParts><Abstract><Para>The total length of the video in seconds.</Para></Abstract></CommentParts></Other>", "key.doc.line": 31, "key.doc.name": "duration", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 646, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>duration</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "duration", "key.namelength": 8, "key.nameoffset": 705, "key.offset": 701, "key.parsed_declaration": "public var duration: TimeInterval", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision0aB5VideoC8durationSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(player: <Type usr=\"c:objc(cs)AVPlayer\">AVPlayer</Type>, applyingFilters filters: [<Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>] = [])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1118}], "key.bodylength": 177, "key.bodyoffset": 1205, "key.doc.column": 10, "key.doc.comment": "Initializes with an AVPlayer.\n\n- Parameters:\n  - player: the video player\n  - filters: the filters to apply on the video", "key.doc.declaration": "public init(player: AVPlayer, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"46\" column=\"10\"><Name>init(player:applyingFilters:)</Name><USR>s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc</USR><Declaration>public init(player: AVPlayer, applyingFilters filters: [FritzVisionImageFilter] = [])</Declaration><CommentParts><Abstract><Para>Initializes with an AVPlayer.</Para></Abstract><Parameters><Parameter><Name>player</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the video player</Para></Discussion></Parameter><Parameter><Name>filters</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the filters to apply on the video</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "init(player:applyingFilters:)", "key.doc.parameters": [{"discussion": [{"Para": "the video player"}], "name": "player"}, {"discussion": [{"Para": "the filters to apply on the video"}], "name": "filters"}], "key.doc.type": "Function", "key.doclength": 148, "key.docoffset": 968, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>player</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVPlayer\">AVPlayer</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>applyingFilters</decl.var.parameter.argument_label> <decl.var.parameter.name>filters</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol>]</decl.var.parameter.type> = []</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 258, "key.name": "init(player:applyingFilters:)", "key.namelength": 78, "key.nameoffset": 1125, "key.offset": 1125, "key.parsed_declaration": "public init(player: AVPlayer, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.parsed_scope.end": 53, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc\">init(player:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc\">init(url:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc\">init(url:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc\">init(path:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc\">init(path:withFilter:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (AVPlayer, [FritzVisionImageFilter]) -> FritzVisionVideo", "key.typeusr": "$s6player15applyingFilters11FritzVision0dE5VideoCSo8AVPlayerC_SayAC0dE11ImageFilter_pGtcD", "key.usr": "s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(player: <Type usr=\"c:objc(cs)AVPlayer\">AVPlayer</Type>, withFilter filter: <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1394}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1387}], "key.bodylength": 60, "key.bodyoffset": 1473, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>player</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVPlayer\">AVPlayer</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withFilter</decl.var.parameter.argument_label> <decl.var.parameter.name>filter</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 128, "key.name": "init(player:withFilter:)", "key.namelength": 65, "key.nameoffset": 1406, "key.offset": 1406, "key.parsed_declaration": "public convenience init(player: AVPlayer, withFilter filter: FritzVisionImageFilter)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 55, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc\">init(player:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc\">init(url:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc\">init(url:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc\">init(path:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc\">init(path:withFilter:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (AVPlayer, FritzVisionImageFilter) -> FritzVisionVideo", "key.typeusr": "$s6player10withFilter11FritzVision0dE5VideoCSo8AVPlayerC_AC0de5ImageC0_ptcD", "key.usr": "s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(url: <Type usr=\"s:10Foundation3URLV\">URL</Type>, applyingFilters filters: [<Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>] = [])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1749}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1742}], "key.bodylength": 71, "key.bodyoffset": 1833, "key.doc.column": 22, "key.doc.comment": "Initializes a video from an URL.\nURL can point to a file locally or online.\n\n- Parameters:\n  - url: location of the video\n  - filters: the filters to apply on the video", "key.doc.declaration": "public convenience init(url: URL, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"65\" column=\"22\"><Name>init(url:applyingFilters:)</Name><USR>s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc</USR><Declaration>public convenience init(url: URL, applyingFilters filters: [FritzVisionImageFilter] = [])</Declaration><CommentParts><Abstract><Para>Initializes a video from an URL. URL can point to a file locally or online.</Para></Abstract><Parameters><Parameter><Name>url</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>location of the video</Para></Discussion></Parameter><Parameter><Name>filters</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the filters to apply on the video</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 65, "key.doc.name": "init(url:applyingFilters:)", "key.doc.parameters": [{"discussion": [{"Para": "location of the video"}], "name": "url"}, {"discussion": [{"Para": "the filters to apply on the video"}], "name": "filters"}], "key.doc.type": "Function", "key.doclength": 202, "key.docoffset": 1538, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>url</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>applyingFilters</decl.var.parameter.argument_label> <decl.var.parameter.name>filters</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol>]</decl.var.parameter.type> = []</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 144, "key.name": "init(url:applyingFilters:)", "key.namelength": 70, "key.nameoffset": 1761, "key.offset": 1761, "key.parsed_declaration": "public convenience init(url: URL, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.parsed_scope.end": 67, "key.parsed_scope.start": 65, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc\">init(player:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc\">init(player:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc\">init(url:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc\">init(path:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc\">init(path:withFilter:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (URL, [FritzVisionImageFilter]) -> FritzVisionVideo", "key.typeusr": "$s3url15applyingFilters11FritzVision0dE5VideoC10Foundation3URLV_SayAC0dE11ImageFilter_pGtcD", "key.usr": "s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(url: <Type usr=\"s:10Foundation3URLV\">URL</Type>, withFilter filter: <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1916}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1909}], "key.bodylength": 54, "key.bodyoffset": 1987, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>url</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:10Foundation3URLV\">URL</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withFilter</decl.var.parameter.argument_label> <decl.var.parameter.name>filter</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 114, "key.name": "init(url:withFilter:)", "key.namelength": 57, "key.nameoffset": 1928, "key.offset": 1928, "key.parsed_declaration": "public convenience init(url: URL, withFilter filter: FritzVisionImageFilter)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 69, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc\">init(player:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc\">init(player:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc\">init(url:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc\">init(path:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc\">init(path:withFilter:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (URL, FritzVisionImageFilter) -> FritzVisionVideo", "key.typeusr": "$s3url10withFilter11FritzVision0dE5VideoC10Foundation3URLV_AC0de5ImageC0_ptcD", "key.usr": "s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(path: <Type usr=\"s:SS\">String</Type>, applyingFilters filters: [<Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>] = [])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2256}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2249}], "key.bodylength": 171, "key.bodyoffset": 2344, "key.doc.column": 22, "key.doc.comment": "Initializes a video from a file path.\nPath must conform to a URI file scheme.\n\n- Parameters:\n  - path: path to the video\n  - filters: the filters to apply on the video", "key.doc.declaration": "public convenience init(path: String, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"79\" column=\"22\"><Name>init(path:applyingFilters:)</Name><USR>s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc</USR><Declaration>public convenience init(path: String, applyingFilters filters: [FritzVisionImageFilter] = [])</Declaration><CommentParts><Abstract><Para>Initializes a video from a file path. Path must conform to a URI file scheme.</Para></Abstract><Parameters><Parameter><Name>path</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>path to the video</Para></Discussion></Parameter><Parameter><Name>filters</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the filters to apply on the video</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 79, "key.doc.name": "init(path:applyingFilters:)", "key.doc.parameters": [{"discussion": [{"Para": "path to the video"}], "name": "path"}, {"discussion": [{"Para": "the filters to apply on the video"}], "name": "filters"}], "key.doc.type": "Function", "key.doclength": 201, "key.docoffset": 2046, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>applyingFilters</decl.var.parameter.argument_label> <decl.var.parameter.name>filters</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol>]</decl.var.parameter.type> = []</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 248, "key.name": "init(path:applyingFilters:)", "key.namelength": 74, "key.nameoffset": 2268, "key.offset": 2268, "key.parsed_declaration": "public convenience init(path: String, applyingFilters filters: [FritzVisionImageFilter] = [])", "key.parsed_scope.end": 83, "key.parsed_scope.start": 79, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc\">init(player:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc\">init(player:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc\">init(url:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc\">init(url:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc\">init(path:withFilter:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (String, [FritzVisionImageFilter]) -> FritzVisionVideo", "key.typeusr": "$s4path15applyingFilters11FritzVision0dE5VideoCSS_SayAC0dE11ImageFilter_pGtcD", "key.usr": "s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public convenience init(path: <Type usr=\"s:SS\">String</Type>, withFilter filter: <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 2527}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2520}], "key.bodylength": 56, "key.bodyoffset": 2602, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>path</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>withFilter</decl.var.parameter.argument_label> <decl.var.parameter.name>filter</decl.var.parameter.name>: <decl.var.parameter.type><ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 120, "key.name": "init(path:withFilter:)", "key.namelength": 61, "key.nameoffset": 2539, "key.offset": 2539, "key.parsed_declaration": "public convenience init(path: String, withFilter filter: FritzVisionImageFilter)", "key.parsed_scope.end": 87, "key.parsed_scope.start": 85, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player15applyingFiltersACSo8AVPlayerC_SayAA0aB11ImageFilter_pGtcfc\">init(player:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC6player10withFilterACSo8AVPlayerC_AA0ab5ImageF0_ptcfc\">init(player:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url15applyingFiltersAC10Foundation3URLV_SayAA0aB11ImageFilter_pGtcfc\">init(url:applyingFilters:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC3url10withFilterAC10Foundation3URLV_AA0ab5ImageF0_ptcfc\">init(url:withFilter:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB5VideoC4path15applyingFiltersACSS_SayAA0aB11ImageFilter_pGtcfc\">init(path:applyingFilters:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionVideo.Type) -> (String, FritzVisionImageFilter) -> FritzVisionVideo", "key.typeusr": "$s4path10withFilter11FritzVision0dE5VideoCSS_AC0de5ImageC0_ptcD", "key.usr": "s:11FritzVision0aB5VideoC4path10withFilterACSS_AA0ab5ImageF0_ptcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func stitch(with asset: <Type usr=\"c:objc(cs)AVAsset\">AVAsset</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2784}], "key.bodylength": 621, "key.bodyoffset": 2832, "key.doc.column": 15, "key.doc.comment": "Appends video content to the current video.\n\n- Parameters:\n  - asset: the video content to append", "key.doc.declaration": "public func stitch(with asset: AVAsset) throws", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift\" line=\"93\" column=\"15\"><Name>stitch(with:)</Name><USR>s:11FritzVision0aB5VideoC6stitch4withySo7AVAssetC_tKF</USR><Declaration>public func stitch(with asset: AVAsset) throws</Declaration><CommentParts><Abstract><Para>Appends video content to the current video.</Para></Abstract><Parameters><Parameter><Name>asset</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the video content to append</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 93, "key.doc.name": "stitch(with:)", "key.doc.parameters": [{"discussion": [{"Para": "the video content to append"}], "name": "asset"}], "key.doc.type": "Function", "key.doclength": 119, "key.docoffset": 2663, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>stitch</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>asset</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)AVAsset\">AVAsset</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 663, "key.name": "stitch(with:)", "key.namelength": 27, "key.nameoffset": 2796, "key.offset": 2791, "key.parsed_declaration": "public func stitch(with asset: AVAsset) throws", "key.parsed_scope.end": 113, "key.parsed_scope.start": 93, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3235, "key.offset": 3235, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 106, "key.parsed_scope.start": 106, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB5VideoC6stitch4withySo7AVAssetC_tKF5errorL_s5Error_pvp"}, {"key.annotated_decl": "<Declaration>let item: <Type usr=\"c:objc(cs)AVPlayerItem\">AVPlayerItem</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>item</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)AVPlayerItem\">AVPlayerItem</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "item", "key.namelength": 4, "key.nameoffset": 3276, "key.offset": 3272, "key.parsed_declaration": "let item = AVPlayerItem(asset: composition)", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.typename": "AVPlayerItem", "key.typeusr": "$sSo12AVPlayerItemCD", "key.usr": "s:11FritzVision0aB5VideoC6stitch4withySo7AVAssetC_tKF4itemL_So12AVPlayerItemCvp"}], "key.typename": "(FritzVisionVideo) -> (AVAsset) throws -> ()", "key.typeusr": "$s4withySo7AVAssetC_tKcD", "key.usr": "s:11FritzVision0aB5VideoC6stitch4withySo7AVAssetC_tKF"}], "key.typename": "FritzVisionVideo.Type", "key.typeusr": "$s11FritzVision0aB5VideoCmD", "key.usr": "s:11FritzVision0aB5VideoC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzVisionVideoError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9144}], "key.bodylength": 1356, "key.bodyoffset": 9186, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 9179}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionVideoError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1392, "key.name": "FritzVisionVideoError", "key.namelength": 21, "key.nameoffset": 9156, "key.offset": 9151, "key.parsed_declaration": "public enum FritzVisionVideoError: Error", "key.parsed_scope.end": 330, "key.parsed_scope.start": 282, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9189, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidVideo</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidVideo</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "invalidVideo", "key.namelength": 12, "key.nameoffset": 9194, "key.offset": 9194, "key.parsed_declaration": "case invalidVideo", "key.parsed_scope.end": 283, "key.parsed_scope.start": 283, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO07invalidC0yA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9209, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidUrl</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidUrl</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "invalidUrl", "key.namelength": 10, "key.nameoffset": 9214, "key.offset": 9214, "key.parsed_declaration": "case invalidUrl", "key.parsed_scope.end": 284, "key.parsed_scope.start": 284, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO10invalidUrlyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9227, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidExportSession</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidExportSession</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "invalidExportSession", "key.namelength": 20, "key.nameoffset": 9232, "key.offset": 9232, "key.parsed_declaration": "case invalidExportSession", "key.parsed_scope.end": 285, "key.parsed_scope.start": 285, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO20invalidExportSessionyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9255, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case invalidPrediction</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>invalidPrediction</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "invalidPrediction", "key.namelength": 17, "key.nameoffset": 9260, "key.offset": 9260, "key.parsed_declaration": "case invalidPrediction", "key.parsed_scope.end": 286, "key.parsed_scope.start": 286, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO17invalidPredictionyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9280, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case incompleteExport</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>incompleteExport</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "incompleteExport", "key.namelength": 16, "key.nameoffset": 9285, "key.offset": 9285, "key.parsed_declaration": "case incompleteExport", "key.parsed_scope.end": 287, "key.parsed_scope.start": 287, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO16incompleteExportyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 25, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9304, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case incompleteExtraction</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>incompleteExtraction</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 20, "key.name": "incompleteExtraction", "key.namelength": 20, "key.nameoffset": 9309, "key.offset": 9309, "key.parsed_declaration": "case incompleteExtraction", "key.parsed_scope.end": 288, "key.parsed_scope.start": 288, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO20incompleteExtractionyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 23, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9332, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case unauthorizedExport</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>unauthorizedExport</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 18, "key.name": "unauthorizedExport", "key.namelength": 18, "key.nameoffset": 9337, "key.offset": 9337, "key.parsed_declaration": "case unauthorizedExport", "key.parsed_scope.end": 289, "key.parsed_scope.start": 289, "key.typename": "(FritzVisionVideoError.Type) -> FritzVisionVideoError", "key.typeusr": "$sy11FritzVision0aB10VideoErrorOACmcD", "key.usr": "s:11FritzVision0aB10VideoErrorO18unauthorizedExportyA2CmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func message() -&gt; <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 9359}], "key.bodylength": 1148, "key.bodyoffset": 9392, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionVideo.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>message</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:SS\">String</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1175, "key.name": "message()", "key.namelength": 9, "key.nameoffset": 9371, "key.offset": 9366, "key.parsed_declaration": "public func message() -> String", "key.parsed_scope.end": 329, "key.parsed_scope.start": 291, "key.substructure": [], "key.typename": "(FritzVisionVideoError) -> () -> String", "key.typeusr": "$sSSycD", "key.usr": "s:11FritzVision0aB10VideoErrorO7messageSSyF"}], "key.typename": "FritzVisionVideoError.Type", "key.typeusr": "$s11FritzVision0aB10VideoErrorOmD", "key.usr": "s:11FritzVision0aB10VideoErrorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3114, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionDrawBoxesCompoundFilter : <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 260}], "key.bodylength": 2755, "key.bodyoffset": 357, "key.doc.column": 14, "key.doc.comment": "Draws boxes surrounding detected objects.", "key.doc.declaration": "@available(iOS 12.0, *)\npublic class FritzVisionDrawBoxesCompoundFilter : FritzVisionImageFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift\" line=\"14\" column=\"14\"><Name>FritzVisionDrawBoxesCompoundFilter</Name><USR>s:11FritzVision0aB23DrawBoxesCompoundFilterC</USR><Declaration>@available(iOS 12.0, *)\npublic class FritzVisionDrawBoxesCompoundFilter : FritzVisionImageFilter</Declaration><CommentParts><Abstract><Para>Draws boxes surrounding detected objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionDrawBoxesCompoundFilter", "key.doc.type": "Class", "key.doclength": 46, "key.docoffset": 214, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 333}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDrawBoxesCompoundFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionImageFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2822, "key.name": "FritzVisionDrawBoxesCompoundFilter", "key.namelength": 34, "key.nameoffset": 297, "key.offset": 291, "key.parsed_declaration": "public class FritzVisionDrawBoxesCompoundFilter: FritzVisionImageFilter", "key.parsed_scope.end": 99, "key.parsed_scope.start": 14, "key.runtime_name": "_TtC4main34FritzVisionDrawBoxesCompoundFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 361}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 372, "key.offset": 368, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.compoundWithPreviousOutput", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 441}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "model", "key.namelength": 5, "key.nameoffset": 452, "key.offset": 448, "key.parsed_declaration": "public let model: FritzVisionObjectPredictor", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionObjectPredictor", "key.typeusr": "$s11FritzVision0aB15ObjectPredictorCD", "key.usr": "s:11FritzVision0aB23DrawBoxesCompoundFilterC5modelAA0aB15ObjectPredictorCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 488}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "options", "key.namelength": 7, "key.nameoffset": 499, "key.offset": 495, "key.parsed_declaration": "public let options: FritzVisionObjectModelOptions", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzVisionObjectModelOptions", "key.typeusr": "$s11FritzVision0aB18ObjectModelOptionsCD", "key.usr": "s:11FritzVision0aB23DrawBoxesCompoundFilterC7optionsAA0aB18ObjectModelOptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 661}], "key.bodylength": 70, "key.bodyoffset": 771, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 174, "key.name": "init(model:options:)", "key.namelength": 101, "key.nameoffset": 668, "key.offset": 668, "key.parsed_declaration": "public init(\n  model: FritzVisionObjectPredictor,\n  options: FritzVisionObjectModelOptions = .init()\n)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 23, "key.substructure": [], "key.typename": "(FritzVisionDrawBoxesCompoundFilter.Type) -> (FritzVisionObjectPredictor, FritzVisionObjectModelOptions) -> FritzVisionDrawBoxesCompoundFilter", "key.typeusr": "$s5model7options11FritzVision0cD23DrawBoxesCompoundFilterCAC0cD15ObjectPredictorC_AC0cdI12ModelOptionsCtcD", "key.usr": "s:11FritzVision0aB23DrawBoxesCompoundFilterC5model7optionsAcA0aB15ObjectPredictorC_AA0abI12ModelOptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 846}], "key.bodylength": 238, "key.bodyoffset": 921, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 307, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 858, "key.offset": 853, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 40, "key.parsed_scope.start": 32, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawBoxesCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1114, "key.offset": 1114, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB23DrawBoxesCompoundFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionDrawBoxesCompoundFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionDrawBoxesCompoundFilter.Type", "key.typeusr": "$s11FritzVision0aB23DrawBoxesCompoundFilterCmD", "key.usr": "s:11FritzVision0aB23DrawBoxesCompoundFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1119, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionDrawSkeletonCompoundFilter : <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 277}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 253}], "key.bodylength": 764, "key.bodyoffset": 353, "key.doc.column": 14, "key.doc.comment": "Draws human pose skeletons on detected people.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionDrawSkeletonCompoundFilter : FritzVisionImageFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionDrawSkeletonCompoundFilter</Name><USR>s:11FritzVision0aB26DrawSkeletonCompoundFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionDrawSkeletonCompoundFilter : FritzVisionImageFilter</Declaration><CommentParts><Abstract><Para>Draws human pose skeletons on detected people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionDrawSkeletonCompoundFilter", "key.doc.type": "Class", "key.doclength": 51, "key.docoffset": 202, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 329}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionDrawSkeletonCompoundFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionImageFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 834, "key.name": "FritzVisionDrawSkeletonCompoundFilter", "key.namelength": 37, "key.nameoffset": 290, "key.offset": 284, "key.parsed_declaration": "public class FritzVisionDrawSkeletonCompoundFilter: FritzVisionImageFilter", "key.parsed_scope.end": 40, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main37FritzVisionDrawSkeletonCompoundFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 357}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 368, "key.offset": 364, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.compoundWithPreviousOutput", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 437}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "model", "key.namelength": 5, "key.nameoffset": 448, "key.offset": 444, "key.parsed_declaration": "public let model: FritzVisionHumanPosePredictor", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionHumanPosePredictor", "key.typeusr": "$s11FritzVision0aB18HumanPosePredictorCD", "key.usr": "s:11FritzVision0aB26DrawSkeletonCompoundFilterC5modelAA0aB18HumanPosePredictorCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 487}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "options", "key.namelength": 7, "key.nameoffset": 498, "key.offset": 494, "key.parsed_declaration": "public let options: FritzVisionPoseModelOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCD", "key.usr": "s:11FritzVision0aB26DrawSkeletonCompoundFilterC7optionsAA0aB16PoseModelOptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 538}], "key.bodylength": 53, "key.bodyoffset": 649, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 158, "key.name": "init(model:options:)", "key.namelength": 102, "key.nameoffset": 545, "key.offset": 545, "key.parsed_declaration": "public init(\n  model: FritzVisionHumanPosePredictor,\n  options: FritzVisionPoseModelOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionDrawSkeletonCompoundFilter.Type) -> (FritzVisionHumanPosePredictor, FritzVisionPoseModelOptions) -> FritzVisionDrawSkeletonCompoundFilter", "key.typeusr": "$s5model7options11FritzVision0cD26DrawSkeletonCompoundFilterCAC0cD18HumanPosePredictorC_AC0cdJ12ModelOptionsCtcD", "key.usr": "s:11FritzVision0aB26DrawSkeletonCompoundFilterC5model7optionsAcA0aB18HumanPosePredictorC_AA0abJ12ModelOptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 707}], "key.bodylength": 333, "key.bodyoffset": 782, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 402, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 719, "key.offset": 714, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 39, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionDrawSkeletonCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1070, "key.offset": 1070, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB26DrawSkeletonCompoundFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionDrawSkeletonCompoundFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionDrawSkeletonCompoundFilter.Type", "key.typeusr": "$s11FritzVision0aB26DrawSkeletonCompoundFilterCmD", "key.usr": "s:11FritzVision0aB26DrawSkeletonCompoundFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 972, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionStylizeImageCompoundFilter : <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 240}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 216}], "key.bodylength": 654, "key.bodyoffset": 316, "key.doc.column": 14, "key.doc.comment": "Stylizes the input image.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionStylizeImageCompoundFilter : FritzVisionImageFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionStylizeImageCompoundFilter</Name><USR>s:11FritzVision0aB26StylizeImageCompoundFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionStylizeImageCompoundFilter : FritzVisionImageFilter</Declaration><CommentParts><Abstract><Para>Stylizes the input image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionStylizeImageCompoundFilter", "key.doc.type": "Class", "key.doclength": 30, "key.docoffset": 186, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 292}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStylizeImageCompoundFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionImageFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 724, "key.name": "FritzVisionStylizeImageCompoundFilter", "key.namelength": 37, "key.nameoffset": 253, "key.offset": 247, "key.parsed_declaration": "public class FritzVisionStylizeImageCompoundFilter: FritzVisionImageFilter", "key.parsed_scope.end": 35, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main37FritzVisionStylizeImageCompoundFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 320}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 331, "key.offset": 327, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.compoundWithPreviousOutput", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 400}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "model", "key.namelength": 5, "key.nameoffset": 411, "key.offset": 407, "key.parsed_declaration": "public let model: FritzVisionStylePredictor", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionStylePredictor", "key.typeusr": "$s11FritzVision0aB14StylePredictorCD", "key.usr": "s:11FritzVision0aB26StylizeImageCompoundFilterC5modelAA0aB14StylePredictorCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 446}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "options", "key.namelength": 7, "key.nameoffset": 457, "key.offset": 453, "key.parsed_declaration": "public let options: FritzVisionStyleModelOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionStyleModelOptions", "key.typeusr": "$s11FritzVision0aB17StyleModelOptionsCD", "key.usr": "s:11FritzVision0aB26StylizeImageCompoundFilterC7optionsAA0aB17StyleModelOptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 498}], "key.bodylength": 53, "key.bodyoffset": 606, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "init(model:options:)", "key.namelength": 99, "key.nameoffset": 505, "key.offset": 505, "key.parsed_declaration": "public init(\n  model: FritzVisionStylePredictor,\n  options: FritzVisionStyleModelOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionStylizeImageCompoundFilter.Type) -> (FritzVisionStylePredictor, FritzVisionStyleModelOptions) -> FritzVisionStylizeImageCompoundFilter", "key.typeusr": "$s5model7options11FritzVision0cD26StylizeImageCompoundFilterCAC0cD14StylePredictorC_AC0cdI12ModelOptionsCtcD", "key.usr": "s:11FritzVision0aB26StylizeImageCompoundFilterC5model7optionsAcA0aB14StylePredictorC_AA0abI12ModelOptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 664}], "key.bodylength": 229, "key.bodyoffset": 739, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 298, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 676, "key.offset": 671, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 34, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/FritzVisionStylizeImageCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 923, "key.offset": 923, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB26StylizeImageCompoundFilterC7processys6ResultOyAA0abD0Cs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionStylizeImageCompoundFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionStylizeImageCompoundFilter.Type", "key.typeusr": "$s11FritzVision0aB26StylizeImageCompoundFilterCmD", "key.usr": "s:11FritzVision0aB26StylizeImageCompoundFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1337, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionBlendHairCompoundFilter : <Type usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 270}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 246}], "key.bodylength": 985, "key.bodyoffset": 350, "key.doc.column": 14, "key.doc.comment": "Creates a blended mask of a person's hair.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionBlendHairCompoundFilter : FritzVisionSegmentationFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionBlendHairCompoundFilter</Name><USR>s:11FritzVision0aB23BlendHairCompoundFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionBlendHairCompoundFilter : FritzVisionSegmentationFilter</Declaration><CommentParts><Abstract><Para>Creates a blended mask of a person\u2019s hair.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionBlendHairCompoundFilter", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 199, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 319}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionBlendHairCompoundFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1059, "key.name": "FritzVisionBlendHairCompoundFilter", "key.namelength": 34, "key.nameoffset": 283, "key.offset": 277, "key.parsed_declaration": "public class FritzVisionBlendHairCompoundFilter: FritzVisionSegmentationFilter", "key.parsed_scope.end": 48, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main34FritzVisionBlendHairCompoundFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 70, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 365, "key.offset": 361, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.compoundWithPreviousOutput", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 434}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "model", "key.namelength": 5, "key.nameoffset": 445, "key.offset": 441, "key.overrides": [{"key.usr": "s:11FritzVision0aB18SegmentationFilterP5modelAA0abC5ModelCvp"}], "key.parsed_declaration": "public let model: FritzVisionSegmentationModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionSegmentationModel", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCD", "key.usr": "s:11FritzVision0aB23BlendHairCompoundFilterC5modelAA0aB17SegmentationModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 483}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "options", "key.namelength": 7, "key.nameoffset": 494, "key.offset": 490, "key.parsed_declaration": "public let options: FritzVisionSegmentationMaskOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionSegmentationMaskOptions", "key.typeusr": "$s11FritzVision0aB23SegmentationMaskOptionsCD", "key.usr": "s:11FritzVision0aB23BlendHairCompoundFilterC7optionsAA0aB23SegmentationMaskOptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}], "key.bodylength": 53, "key.bodyoffset": 666, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 172, "key.name": "init(model:options:)", "key.namelength": 116, "key.nameoffset": 548, "key.offset": 548, "key.parsed_declaration": "public init(\n  model: FritzVisionHairSegmentationPredictor,\n  options: FritzVisionSegmentationMaskOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionBlendHairCompoundFilter.Type) -> (FritzVisionHairSegmentationPredictor, FritzVisionSegmentationMaskOptions) -> FritzVisionBlendHairCompoundFilter", "key.typeusr": "$s5model7options11FritzVision0cD23BlendHairCompoundFilterCAC0cdF21SegmentationPredictorC_AC0cdI11MaskOptionsCtcD", "key.usr": "s:11FritzVision0aB23BlendHairCompoundFilterC5model7optionsAcA0abD21SegmentationPredictorC_AA0abI11MaskOptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 724}], "key.bodylength": 534, "key.bodyoffset": 799, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 603, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 736, "key.offset": 731, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 47, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionBlendHairCompoundFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1288, "key.offset": 1288, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB23BlendHairCompoundFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionBlendHairCompoundFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionBlendHairCompoundFilter.Type", "key.typeusr": "$s11FritzVision0aB23BlendHairCompoundFilterCmD", "key.usr": "s:11FritzVision0aB23BlendHairCompoundFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1283, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionCutOutPeopleOverlayFilter : <Type usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 279}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 255}], "key.bodylength": 920, "key.bodyoffset": 361, "key.doc.column": 14, "key.doc.comment": "Cuts out all detected people from the background.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionCutOutPeopleOverlayFilter : FritzVisionSegmentationFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionCutOutPeopleOverlayFilter</Name><USR>s:11FritzVision0aB25CutOutPeopleOverlayFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionCutOutPeopleOverlayFilter : FritzVisionSegmentationFilter</Declaration><CommentParts><Abstract><Para>Cuts out all detected people from the background.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionCutOutPeopleOverlayFilter", "key.doc.type": "Class", "key.doclength": 54, "key.docoffset": 201, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 330}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionCutOutPeopleOverlayFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 996, "key.name": "FritzVisionCutOutPeopleOverlayFilter", "key.namelength": 36, "key.nameoffset": 292, "key.offset": 286, "key.parsed_declaration": "public class FritzVisionCutOutPeopleOverlayFilter: FritzVisionSegmentationFilter", "key.parsed_scope.end": 44, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main36FritzVisionCutOutPeopleOverlayFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 367}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 66, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 378, "key.offset": 374, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.overlayOnOriginalImage", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 443}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "model", "key.namelength": 5, "key.nameoffset": 454, "key.offset": 450, "key.overrides": [{"key.usr": "s:11FritzVision0aB18SegmentationFilterP5modelAA0abC5ModelCvp"}], "key.parsed_declaration": "public let model: FritzVisionSegmentationModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionSegmentationModel", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCD", "key.usr": "s:11FritzVision0aB25CutOutPeopleOverlayFilterC5modelAA0aB17SegmentationModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 492}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "options", "key.namelength": 7, "key.nameoffset": 503, "key.offset": 499, "key.parsed_declaration": "public let options: FritzVisionSegmentationMaskOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionSegmentationMaskOptions", "key.typeusr": "$s11FritzVision0aB23SegmentationMaskOptionsCD", "key.usr": "s:11FritzVision0aB25CutOutPeopleOverlayFilterC7optionsAA0aB23SegmentationMaskOptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 552}], "key.bodylength": 53, "key.bodyoffset": 679, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 174, "key.name": "init(model:options:)", "key.namelength": 118, "key.nameoffset": 559, "key.offset": 559, "key.parsed_declaration": "public init(\n  model: FritzVisionPeopleSegmentationPredictor,\n  options: FritzVisionSegmentationMaskOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionCutOutPeopleOverlayFilter.Type) -> (FritzVisionPeopleSegmentationPredictor, FritzVisionSegmentationMaskOptions) -> FritzVisionCutOutPeopleOverlayFilter", "key.typeusr": "$s5model7options11FritzVision0cD25CutOutPeopleOverlayFilterCAC0cdG21SegmentationPredictorC_AC0cdJ11MaskOptionsCtcD", "key.usr": "s:11FritzVision0aB25CutOutPeopleOverlayFilterC5model7optionsAcA0abE21SegmentationPredictorC_AA0abJ11MaskOptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 739}], "key.bodylength": 465, "key.bodyoffset": 814, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 534, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 751, "key.offset": 746, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 43, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionCutOutPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1234, "key.offset": 1234, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB25CutOutPeopleOverlayFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionCutOutPeopleOverlayFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionCutOutPeopleOverlayFilter.Type", "key.typeusr": "$s11FritzVision0aB25CutOutPeopleOverlayFilterCmD", "key.usr": "s:11FritzVision0aB25CutOutPeopleOverlayFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1187, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionMaskHairOverlayFilter : <Type usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 236}], "key.bodylength": 847, "key.bodyoffset": 338, "key.doc.column": 14, "key.doc.comment": "Creates a mask of a person's hair.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionMaskHairOverlayFilter : FritzVisionSegmentationFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionMaskHairOverlayFilter</Name><USR>s:11FritzVision0aB21MaskHairOverlayFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionMaskHairOverlayFilter : FritzVisionSegmentationFilter</Declaration><CommentParts><Abstract><Para>Creates a mask of a person\u2019s hair.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionMaskHairOverlayFilter", "key.doc.type": "Class", "key.doclength": 39, "key.docoffset": 197, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 307}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionMaskHairOverlayFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 919, "key.name": "FritzVisionMaskHairOverlayFilter", "key.namelength": 32, "key.nameoffset": 273, "key.offset": 267, "key.parsed_declaration": "public class FritzVisionMaskHairOverlayFilter: FritzVisionSegmentationFilter", "key.parsed_scope.end": 42, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main32FritzVisionMaskHairOverlayFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 344}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 66, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 355, "key.offset": 351, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.overlayOnOriginalImage", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 420}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "model", "key.namelength": 5, "key.nameoffset": 431, "key.offset": 427, "key.overrides": [{"key.usr": "s:11FritzVision0aB18SegmentationFilterP5modelAA0abC5ModelCvp"}], "key.parsed_declaration": "public let model: FritzVisionSegmentationModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionSegmentationModel", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCD", "key.usr": "s:11FritzVision0aB21MaskHairOverlayFilterC5modelAA0aB17SegmentationModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 469}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "options", "key.namelength": 7, "key.nameoffset": 480, "key.offset": 476, "key.parsed_declaration": "public let options: FritzVisionSegmentationMaskOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionSegmentationMaskOptions", "key.typeusr": "$s11FritzVision0aB23SegmentationMaskOptionsCD", "key.usr": "s:11FritzVision0aB21MaskHairOverlayFilterC7optionsAA0ab12SegmentationC7OptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 529}], "key.bodylength": 53, "key.bodyoffset": 654, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 172, "key.name": "init(model:options:)", "key.namelength": 116, "key.nameoffset": 536, "key.offset": 536, "key.parsed_declaration": "public init(\n  model: FritzVisionHairSegmentationPredictor,\n  options: FritzVisionSegmentationMaskOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionMaskHairOverlayFilter.Type) -> (FritzVisionHairSegmentationPredictor, FritzVisionSegmentationMaskOptions) -> FritzVisionMaskHairOverlayFilter", "key.typeusr": "$s5model7options11FritzVision0cD21MaskHairOverlayFilterCAC0cdF21SegmentationPredictorC_AC0cdiE7OptionsCtcD", "key.usr": "s:11FritzVision0aB21MaskHairOverlayFilterC5model7optionsAcA0abD21SegmentationPredictorC_AA0abiC7OptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 714}], "key.bodylength": 394, "key.bodyoffset": 789, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 463, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 726, "key.offset": 721, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 41, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskHairOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1138, "key.offset": 1138, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB21MaskHairOverlayFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionMaskHairOverlayFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionMaskHairOverlayFilter.Type", "key.typeusr": "$s11FritzVision0aB21MaskHairOverlayFilterCmD", "key.usr": "s:11FritzVision0aB21MaskHairOverlayFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1203, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionMaskPeopleOverlayFilter : <Type usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 268}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 244}], "key.bodylength": 853, "key.bodyoffset": 348, "key.doc.column": 14, "key.doc.comment": "Creates a mask over all detected people.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionMaskPeopleOverlayFilter : FritzVisionSegmentationFilter", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift\" line=\"13\" column=\"14\"><Name>FritzVisionMaskPeopleOverlayFilter</Name><USR>s:11FritzVision0aB23MaskPeopleOverlayFilterC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionMaskPeopleOverlayFilter : FritzVisionSegmentationFilter</Declaration><CommentParts><Abstract><Para>Creates a mask over all detected people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionMaskPeopleOverlayFilter", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 199, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 317}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionMaskPeopleOverlayFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB18SegmentationFilterP\">FritzVisionSegmentationFilter</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationFilter"}], "key.kind": "source.lang.swift.decl.class", "key.length": 927, "key.name": "FritzVisionMaskPeopleOverlayFilter", "key.namelength": 34, "key.nameoffset": 281, "key.offset": 275, "key.parsed_declaration": "public class FritzVisionMaskPeopleOverlayFilter: FritzVisionSegmentationFilter", "key.parsed_scope.end": 42, "key.parsed_scope.start": 13, "key.runtime_name": "_TtC4main34FritzVisionMaskPeopleOverlayFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let compositionMode: <Type usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}], "key.doc.column": 7, "key.doc.declaration": "var compositionMode: FilterCompositionMode { get }", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"17\" column=\"7\"><Name>compositionMode</Name><USR>s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp</USR><Declaration>var compositionMode: FilterCompositionMode { get }</Declaration><CommentParts><Abstract><Para>How predictors are chosen by the filter.</Para></Abstract><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "compositionMode", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>compositionMode</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision21FilterCompositionModeO\">FilterCompositionMode</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 66, "key.name": "compositionMode", "key.namelength": 15, "key.nameoffset": 365, "key.offset": 361, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}], "key.parsed_declaration": "public let compositionMode = FilterCompositionMode.overlayOnOriginalImage", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FilterCompositionMode", "key.typeusr": "$s11FritzVision21FilterCompositionModeOD", "key.usr": "s:11FritzVision0aB11ImageFilterP15compositionModeAA0d11CompositionF0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 430}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "model", "key.namelength": 5, "key.nameoffset": 441, "key.offset": 437, "key.overrides": [{"key.usr": "s:11FritzVision0aB18SegmentationFilterP5modelAA0abC5ModelCvp"}], "key.parsed_declaration": "public let model: FritzVisionSegmentationModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionSegmentationModel", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCD", "key.usr": "s:11FritzVision0aB23MaskPeopleOverlayFilterC5modelAA0aB17SegmentationModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 479}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "options", "key.namelength": 7, "key.nameoffset": 490, "key.offset": 486, "key.parsed_declaration": "public let options: FritzVisionSegmentationMaskOptions", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzVisionSegmentationMaskOptions", "key.typeusr": "$s11FritzVision0aB23SegmentationMaskOptionsCD", "key.usr": "s:11FritzVision0aB23MaskPeopleOverlayFilterC7optionsAA0ab12SegmentationC7OptionsCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 539}], "key.bodylength": 53, "key.bodyoffset": 666, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions\">FritzVisionSegmentationMaskOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 174, "key.name": "init(model:options:)", "key.namelength": 118, "key.nameoffset": 546, "key.offset": 546, "key.parsed_declaration": "public init(\n  model: FritzVisionPeopleSegmentationPredictor,\n  options: FritzVisionSegmentationMaskOptions = .init()\n)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "(FritzVisionMaskPeopleOverlayFilter.Type) -> (FritzVisionPeopleSegmentationPredictor, FritzVisionSegmentationMaskOptions) -> FritzVisionMaskPeopleOverlayFilter", "key.typeusr": "$s5model7options11FritzVision0cD23MaskPeopleOverlayFilterCAC0cdF21SegmentationPredictorC_AC0cdiE7OptionsCtcD", "key.usr": "s:11FritzVision0aB23MaskPeopleOverlayFilterC5model7optionsAcA0abD21SegmentationPredictorC_AA0abiC7OptionsCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>) -&gt; <Type usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 726}], "key.bodylength": 398, "key.bodyoffset": 801, "key.doc.column": 8, "key.doc.declaration": "func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/FritzVisionImageFilter.swift\" line=\"24\" column=\"8\"><Name>process(_:)</Name><USR>s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF</USR><Declaration>func process(_ image: FritzVisionImage) -&gt; FritzVisionFilterResult</Declaration><CommentParts><Abstract><Para>Processes the image with a prediction.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>the image to process</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>the result of the prediction</Para></ResultDiscussion><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>FritzVisionImageFilter</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 24, "key.doc.name": "process(_:)", "key.doc.parameters": [{"discussion": [{"Para": "the image to process"}], "name": "image"}], "key.doc.result_discussion": [{"Para": "the result of the prediction"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:11FritzVision0aB11ImageFilterP0abD6Resulta\">FritzVisionFilterResult</ref.typealias></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 467, "key.name": "process(_:)", "key.namelength": 34, "key.nameoffset": 738, "key.offset": 733, "key.overrides": [{"key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.parsed_declaration": "public func process(_ image: FritzVisionImage) -> FritzVisionFilterResult", "key.parsed_scope.end": 41, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionMaskPeopleOverlayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 1154, "key.offset": 1154, "key.parsed_declaration": "} catch let error", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "Error", "key.typeusr": "$ss5Error_pD", "key.usr": "s:11FritzVision0aB23MaskPeopleOverlayFilterC7processys6ResultOyAA0aB5ImageCs5Error_pGAHF5errorL_sAI_pvp"}], "key.typename": "(FritzVisionMaskPeopleOverlayFilter) -> (FritzVisionImage) -> Result<FritzVisionImage, Error>", "key.typeusr": "$sys6ResultOy11FritzVision0bC5ImageCs5Error_pGAEcD", "key.usr": "s:11FritzVision0aB11ImageFilterP7processys6ResultOyAA0abC0Cs5Error_pGAHF"}], "key.typename": "FritzVisionMaskPeopleOverlayFilter.Type", "key.typeusr": "$s11FritzVision0aB23MaskPeopleOverlayFilterCmD", "key.usr": "s:11FritzVision0aB23MaskPeopleOverlayFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionSegmentationFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 343, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzVisionSegmentationFilter : <Type usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 194}], "key.bodylength": 52, "key.bodyoffset": 289, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 22, "key.offset": 265}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionSegmentationFilter.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzVisionSegmentationFilter</decl.name> : <ref.protocol usr=\"s:11FritzVision0aB11ImageFilterP\">FritzVisionImageFilter</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzVisionImageFilter"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 117, "key.name": "FritzVisionSegmentationFilter", "key.namelength": 29, "key.nameoffset": 234, "key.offset": 225, "key.parsed_declaration": "public protocol FritzVisionSegmentationFilter: FritzVisionImageFilter", "key.parsed_scope.end": 15, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main29FritzVisionSegmentationFilter_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 334, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/FritzVisionVideo/VideoFilters/ImageSegmentation/FritzVisionSegmentationFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "model", "key.namelength": 5, "key.nameoffset": 297, "key.offset": 293, "key.parsed_declaration": "var model: FritzVisionSegmentationModel", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "FritzVisionSegmentationModel", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCD", "key.usr": "s:11FritzVision0aB18SegmentationFilterP5modelAA0abC5ModelCvp"}], "key.typename": "FritzVisionSegmentationFilter.Protocol", "key.typeusr": "$s11FritzVision0aB18SegmentationFilter_pmD", "key.usr": "s:11FritzVision0aB18SegmentationFilterP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageInputFeatureProvider.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 719, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1136, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModelFast) public final class FritzVisionLabelModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 247}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 240}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 216}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 183}], "key.bodylength": 802, "key.bodyoffset": 332, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 286}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 313}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionLabelPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 882, "key.name": "FritzVisionLabelModelFast", "key.namelength": 25, "key.nameoffset": 259, "key.offset": 253, "key.parsed_declaration": "public final class FritzVisionLabelModelFast: FritzVisionLabelPredictor, DownloadableModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionLabelModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 342}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 336}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 167, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 360, "key.offset": 349, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 526}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 520}], "key.bodylength": 46, "key.bodyoffset": 577, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 544, "key.offset": 533, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 694}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 688}], "key.doc.column": 27, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift\" line=\"26\" column=\"27\"><Name>wifiRequiredForModelDownload</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast(cpy)wifiRequiredForModelDownload</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 628, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 712, "key.offset": 701, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast\">FritzVisionLabelModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 961}], "key.bodylength": 57, "key.bodyoffset": 1075, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionLabelModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift\" line=\"31\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>s:11FritzVision0aB14LabelModelFastC05fetchD017completionHandleryyACSg_s5Error_pSgtc_tFZ</USR><Declaration>public static func fetchModel(completionHandler: @escaping (FritzVisionLabelModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 782, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelModelFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast\">FritzVisionLabelModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 165, "key.name": "fetchModel(completionHandler:)", "key.namelength": 93, "key.nameoffset": 980, "key.offset": 968, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionLabelModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(FritzVisionLabelModelFast.Type) -> (@escaping (FritzVisionLabelModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD14LabelModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB14LabelModelFastC05fetchD017completionHandleryyACSg_s5Error_pSgtc_tFZ"}], "key.typename": "FritzVisionLabelModelFast.Type", "key.typeusr": "$s11FritzVision0aB14LabelModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3579, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLabelModelOptions) public final class FritzVisionLabelModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 271}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 264}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 228}], "key.bodylength": 1193, "key.bodyoffset": 342, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 313}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 323}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLabelModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1259, "key.name": "FritzVisionLabelModelOptions", "key.namelength": 28, "key.nameoffset": 283, "key.offset": 277, "key.parsed_declaration": "public final class FritzVisionLabelModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 38, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionLabelModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 346}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 364, "key.offset": 353, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionLabelModelOptions()", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17LabelModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 524}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 518}], "key.doc.column": 20, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift\" line=\"19\" column=\"20\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 428, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 535, "key.offset": 531, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 743}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 737}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift\" line=\"23\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 562, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 754, "key.offset": 750, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1318}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1312}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift\" line=\"32\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 792, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1329, "key.offset": 1325, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1422}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1416}], "key.doc.column": 20, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift\" line=\"35\" column=\"20\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 1368, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 1433, "key.offset": 1429, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1463}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1457}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 1474, "key.offset": 1470, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions(py)imageCropAndScaleOption"}], "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public enum FritzVisionLabelError : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1544}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1538}], "key.bodylength": 22, "key.bodyoffset": 1591, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 1579}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 1584}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionLabelError</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 63, "key.name": "FritzVisionLabelError", "key.namelength": 21, "key.nameoffset": 1556, "key.offset": 1551, "key.parsed_declaration": "@objc public enum FritzVisionLabelError: Int, Error", "key.parsed_scope.end": 42, "key.parsed_scope.start": 40, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1594, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case noVisionModel</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noVisionModel</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "noVisionModel", "key.namelength": 13, "key.nameoffset": 1599, "key.offset": 1599, "key.parsed_declaration": "case noVisionModel", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "(FritzVisionLabelError.Type) -> FritzVisionLabelError", "key.typeusr": "$sy11FritzVision0aB10LabelErrorOACmcD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError@FritzVisionLabelErrorNoVisionModel"}]}], "key.typename": "FritzVisionLabelError.Type", "key.typeusr": "$s11FritzVision0aB10LabelErrorOmD", "key.usr": "c:@M@FritzVision@E@FritzVisionLabelError"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class FritzVisionLabelPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 1640}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1616}], "key.bodylength": 1859, "key.bodyoffset": 1718, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 1678}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1693}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLabelPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLOrVisionPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1933, "key.name": "FritzVisionLabelPredictor", "key.namelength": 25, "key.nameoffset": 1651, "key.offset": 1645, "key.parsed_declaration": "open class FritzVisionLabelPredictor: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 96, "key.parsed_scope.start": 45, "key.runtime_name": "_TtC4main25FritzVisionLabelPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1722}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 1739, "key.offset": 1729, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB14LabelPredictorC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1776}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 1793, "key.offset": 1783, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionLabelModelOptions", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "FritzVisionLabelModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17LabelModelOptionsCmD", "key.usr": "s:11FritzVision0aB14LabelPredictorC12ModelOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</Type>.PredictionResult = [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1839}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor\">FritzVisionLabelPredictor</ref.class>.<decl.name>PredictionResult</decl.name> = [<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 47, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 1856, "key.offset": 1846, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = [FritzVisionLabel]", "key.parsed_scope.end": 49, "key.parsed_scope.start": 49, "key.typename": "[FritzVisionLabel].Type", "key.typeusr": "$sSay11FritzVision0aB5LabelCGmD", "key.usr": "s:11FritzVision0aB14LabelPredictorC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</Type> = .init(), completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3346}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 3309}], "key.bodylength": 65, "key.bodyoffset": 3510, "key.doc.column": 15, "key.doc.comment": "Predict poses from a FritzImage.\n\n- Parameters:\n  - input: The image to use to dectect poses.\n  - options: The options used to configure the pose results.\n  - completion: Handler to call back on the main thread with poses or error.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift\" line=\"89\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionLabelModelOptions = .init(), completion: ([FritzVisionLabel]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Predict poses from a FritzImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The image to use to dectect poses.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The options used to configure the pose results.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Handler to call back on the main thread with poses or error.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 89, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "The image to use to dectect poses."}], "name": "input"}, {"discussion": [{"Para": "The options used to configure the pose results."}], "name": "options"}, {"discussion": [{"Para": "Handler to call back on the main thread with poses or error."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 265, "key.docoffset": 3042, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageLabeling/LabelPredictor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelOptions\">FritzVisionLabelModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 223, "key.name": "predict(_:options:completion:)", "key.namelength": 150, "key.nameoffset": 3358, "key.offset": 3353, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionLabelModelOptions = .init(),\n  completion: ([FritzVisionLabel]?, Error?) -> Void\n)", "key.parsed_scope.end": 95, "key.parsed_scope.start": 89, "key.substructure": [], "key.typename": "(FritzVisionLabelPredictor) -> (FritzVisionImage, FritzVisionLabelModelOptions, ([FritzVisionLabel]?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17LabelModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor(im)predict:options:completion:"}], "key.typename": "FritzVisionLabelPredictor.Type", "key.typeusr": "$s11FritzVision0aB14LabelPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLabelPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks+Deprecated.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 266, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10154, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 26, "key.name": "MARK: - Segmentation Masks", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2960}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionSegmentationMaskOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3012}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2988}], "key.bodylength": 539, "key.bodyoffset": 3071, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3061}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationMaskOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 592, "key.name": "FritzVisionSegmentationMaskOptions", "key.namelength": 34, "key.nameoffset": 3025, "key.offset": 3019, "key.parsed_declaration": "public class FritzVisionSegmentationMaskOptions: NSObject", "key.parsed_scope.end": 117, "key.parsed_scope.start": 100, "key.runtime_name": "_TtC4main34FritzVisionSegmentationMaskOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var clippingScoresAbove: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3235}], "key.doc.column": 14, "key.doc.comment": "Scores output from model greater than this value will be set as 1.\nLowering this value will make the mask more intense for lower confidence values.", "key.doc.declaration": "public var clippingScoresAbove: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift\" line=\"104\" column=\"14\"><Name>clippingScoresAbove</Name><USR>s:11FritzVision0aB23SegmentationMaskOptionsC19clippingScoresAboveSdvp</USR><Declaration>public var clippingScoresAbove: Double</Declaration><CommentParts><Abstract><Para>Scores output from model greater than this value will be set as 1. Lowering this value will make the mask more intense for lower confidence values.</Para></Abstract></CommentParts></Other>", "key.doc.line": 104, "key.doc.name": "clippingScoresAbove", "key.doc.type": "Other", "key.doclength": 158, "key.docoffset": 3075, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>clippingScoresAbove</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "clippingScoresAbove", "key.namelength": 19, "key.nameoffset": 3246, "key.offset": 3242, "key.parsed_declaration": "public var clippingScoresAbove: Double = 0.7", "key.parsed_scope.end": 104, "key.parsed_scope.start": 104, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision0aB23SegmentationMaskOptionsC19clippingScoresAboveSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var zeroingScoresBelow: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3347}], "key.doc.column": 14, "key.doc.comment": "Values lower than this value will not appear in the mask.", "key.doc.declaration": "public var zeroingScoresBelow: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift\" line=\"107\" column=\"14\"><Name>zeroingScoresBelow</Name><USR>s:11FritzVision0aB23SegmentationMaskOptionsC18zeroingScoresBelowSdvp</USR><Declaration>public var zeroingScoresBelow: Double</Declaration><CommentParts><Abstract><Para>Values lower than this value will not appear in the mask.</Para></Abstract></CommentParts></Other>", "key.doc.line": 107, "key.doc.name": "zeroingScoresBelow", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 3283, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>zeroingScoresBelow</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 36, "key.name": "zeroingScoresBelow", "key.namelength": 18, "key.nameoffset": 3358, "key.offset": 3354, "key.parsed_declaration": "public var zeroingScoresBelow: Double = 0.3", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision0aB23SegmentationMaskOptionsC18zeroingScoresBelowSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var maxAlpha: <Type usr=\"s:s5UInt8V\">UInt8</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3425}], "key.doc.column": 14, "key.doc.comment": "Alpha value of the mask.", "key.doc.declaration": "public var maxAlpha: UInt8", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift\" line=\"110\" column=\"14\"><Name>maxAlpha</Name><USR>s:11FritzVision0aB23SegmentationMaskOptionsC8maxAlphas5UInt8Vvp</USR><Declaration>public var maxAlpha: UInt8</Declaration><CommentParts><Abstract><Para>Alpha value of the mask.</Para></Abstract></CommentParts></Other>", "key.doc.line": 110, "key.doc.name": "maxAlpha", "key.doc.type": "Other", "key.doclength": 29, "key.docoffset": 3394, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxAlpha</decl.name>: <decl.var.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "maxAlpha", "key.namelength": 8, "key.nameoffset": 3436, "key.offset": 3432, "key.parsed_declaration": "public var maxAlpha: UInt8 = 255", "key.parsed_scope.end": 110, "key.parsed_scope.start": 110, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "UInt8", "key.typeusr": "$ss5UInt8VD", "key.usr": "s:11FritzVision0aB23SegmentationMaskOptionsC8maxAlphas5UInt8Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var maskColor: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3486}], "key.doc.column": 14, "key.doc.comment": "Color of the mask.", "key.doc.declaration": "public var maskColor: UIColor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift\" line=\"113\" column=\"14\"><Name>maskColor</Name><USR>s:11FritzVision0aB23SegmentationMaskOptionsC9maskColorSo7UIColorCvp</USR><Declaration>public var maskColor: UIColor</Declaration><CommentParts><Abstract><Para>Color of the mask.</Para></Abstract></CommentParts></Other>", "key.doc.line": 113, "key.doc.name": "maskColor", "key.doc.type": "Other", "key.doclength": 23, "key.docoffset": 3461, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maskColor</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "maskColor", "key.namelength": 9, "key.nameoffset": 3497, "key.offset": 3493, "key.parsed_declaration": "public var maskColor: UIColor = .blue", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "UIColor", "key.typeusr": "$sSo7UIColorCD", "key.usr": "s:11FritzVision0aB23SegmentationMaskOptionsC9maskColorSo7UIColorCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var blurRadius: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3575}], "key.doc.column": 14, "key.doc.comment": "The radius to blur the edges of the mask.", "key.doc.declaration": "public var blurRadius: CGFloat", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift\" line=\"116\" column=\"14\"><Name>blurRadius</Name><USR>s:11FritzVision0aB23SegmentationMaskOptionsC10blurRadius12CoreGraphics7CGFloatVvp</USR><Declaration>public var blurRadius: CGFloat</Declaration><CommentParts><Abstract><Para>The radius to blur the edges of the mask.</Para></Abstract></CommentParts></Other>", "key.doc.line": 116, "key.doc.name": "blurRadius", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 3527, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationMasks.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>blurRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "blurRadius", "key.namelength": 10, "key.nameoffset": 3586, "key.offset": 3582, "key.parsed_declaration": "public var blurRadius: CGFloat = 0", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision0aB23SegmentationMaskOptionsC10blurRadius12CoreGraphics7CGFloatVvp"}], "key.typename": "FritzVisionSegmentationMaskOptions.Type", "key.typeusr": "$s11FritzVision0aB23SegmentationMaskOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationMaskOptions"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4450, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModelOptions) public final class FritzVisionSegmentationModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 294}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 287}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 244}], "key.bodylength": 1033, "key.bodyoffset": 372, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 343}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 353}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1106, "key.name": "FritzVisionSegmentationModelOptions", "key.namelength": 35, "key.nameoffset": 306, "key.offset": 300, "key.parsed_declaration": "public final class FritzVisionSegmentationModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 34, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionSegmentationModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 376}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 78, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 394, "key.offset": 383, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionSegmentationModelOptions()", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB24SegmentationModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 527}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 521}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"20\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 465, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 538, "key.offset": 534, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 783}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 777}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"24\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 602, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 794, "key.offset": 790, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1358}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1352}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"33\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 33, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 832, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1369, "key.offset": 1365, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions(py)forceVisionPrediction"}], "key.typename": "FritzVisionSegmentationModelOptions.Type", "key.typeusr": "$s11FritzVision0aB24SegmentationModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(ModelSegmentationClass) public class ModelSegmentationClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1438}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 1408}], "key.bodylength": 319, "key.bodyoffset": 1485, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1475}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(ModelSegmentationClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ModelSegmentationClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 360, "key.name": "ModelSegmentationClass", "key.namelength": 22, "key.nameoffset": 1451, "key.offset": 1445, "key.parsed_declaration": "public class ModelSegmentationClass: NSObject", "key.parsed_scope.end": 52, "key.parsed_scope.start": 37, "key.runtime_name": "ModelSegmentationClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1535}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1529}], "key.doc.column": 20, "key.doc.comment": "Index in output array from model.", "key.doc.declaration": "@objc public let index: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"40\" column=\"20\"><Name>index</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index</USR><Declaration>@objc public let index: Int</Declaration><CommentParts><Abstract><Para>Index in output array from model.</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "index", "key.doc.type": "Other", "key.doclength": 38, "key.docoffset": 1489, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 1546, "key.offset": 1542, "key.parsed_declaration": "@objc public let index: Int", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)index"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let label: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1613}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1607}], "key.doc.column": 20, "key.doc.comment": "Label name for Model Segmentation Class.", "key.doc.declaration": "@objc public let label: String", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"43\" column=\"20\"><Name>label</Name><USR>c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label</USR><Declaration>@objc public let label: String</Declaration><CommentParts><Abstract><Para>Label name for Model Segmentation Class.</Para></Abstract></CommentParts></Other>", "key.doc.line": 43, "key.doc.name": "label", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1560, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "label", "key.namelength": 5, "key.nameoffset": 1624, "key.offset": 1620, "key.parsed_declaration": "@objc public let label: String", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1641}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>color</decl.name>: <decl.var.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 20, "key.name": "color", "key.namelength": 5, "key.nameoffset": 1652, "key.offset": 1648, "key.parsed_declaration": "public let color: rgbaValue", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.typeusr": "$ss5UInt8V1r_AB1gAB1bAB1atD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5colors5UInt8V1r_AF1gAF1bAF1atvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(label: <Type usr=\"s:SS\">String</Type>, index: <Type usr=\"s:Si\">Int</Type>, color: <Type usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1672}], "key.bodylength": 72, "key.bodyoffset": 1730, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"s:11FritzVision9rgbaValuea\">rgbaValue</ref.typealias></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 124, "key.name": "init(label:index:color:)", "key.namelength": 49, "key.nameoffset": 1679, "key.offset": 1679, "key.parsed_declaration": "public init(label: String, index: Int, color: rgbaValue)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 47, "key.substructure": [], "key.typename": "(ModelSegmentationClass.Type) -> (String, Int, (r: UInt8, g: UInt8, b: UInt8, a: UInt8)) -> ModelSegmentationClass", "key.typeusr": "$s5label5index5color11FritzVision22ModelSegmentationClassCSS_Sis5UInt8V1r_AH1gAH1bAH1attcD", "key.usr": "s:11FritzVision22ModelSegmentationClassC5label5index5colorACSS_Sis5UInt8V1r_AH1gAH1bAH1attcfc"}], "key.typename": "ModelSegmentationClass.Type", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)ModelSegmentationClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationModel) open class FritzVisionSegmentationModel : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 1867}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1843}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1807}], "key.bodylength": 2429, "key.bodyoffset": 1948, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 1908}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 1923}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLOrVisionPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2506, "key.name": "FritzVisionSegmentationModel", "key.namelength": 28, "key.nameoffset": 1878, "key.offset": 1872, "key.parsed_declaration": "open class FritzVisionSegmentationModel: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 133, "key.parsed_scope.start": 56, "key.runtime_name": "FritzVisionSegmentationModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let name: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1958}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1952}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "name", "key.namelength": 4, "key.nameoffset": 1969, "key.offset": 1965, "key.parsed_declaration": "@objc public let name: String", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)name"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1991}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1985}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 2002, "key.offset": 1998, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:name:classes:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2134}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2097}], "key.bodylength": 80, "key.bodyoffset": 2217, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 157, "key.name": "init(model:name:classes:)", "key.namelength": 74, "key.nameoffset": 2141, "key.offset": 2141, "key.parsed_declaration": "public init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 69, "key.parsed_scope.start": 65, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (FritzMLModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG00D7MLModelC_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:name:classes:managedModel:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>], managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2352}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 2302}], "key.bodylength": 108, "key.bodyoffset": 2488, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:name:classes:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 238, "key.name": "init(model:name:classes:managedModel:)", "key.namelength": 127, "key.nameoffset": 2359, "key.offset": 2359, "key.parsed_declaration": "public init(\n  model: FritzMLModel,\n  name: String,\n  classes: [ModelSegmentationClass],\n  managedModel: FritzManagedModel\n)", "key.parsed_scope.end": 81, "key.parsed_scope.start": 72, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (FritzMLModel, String, [ModelSegmentationClass], FritzManagedModel) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes12managedModel11FritzVision0fg12SegmentationE0C0f7ManagedE00F7MLModelC_SSSayAE0eH5ClassCGA2HCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:name:classes:) public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, name: <Type usr=\"s:SS\">String</Type>, classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2648}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 2601}], "key.bodylength": 80, "key.bodyoffset": 2739, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:name:classes:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classes</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 165, "key.name": "init(model:name:classes:)", "key.namelength": 82, "key.nameoffset": 2655, "key.offset": 2655, "key.parsed_declaration": "public init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])", "key.parsed_scope.end": 88, "key.parsed_scope.start": 84, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel.Type) -> (SwiftIdentifiedModel, String, [ModelSegmentationClass]) -> FritzVisionSegmentationModel", "key.typeusr": "$s5model4name7classes11FritzVision0dE17SegmentationModelC0d7ManagedG0015SwiftIdentifiedG0_p_SSSayAD0gF5ClassCGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)initWithIdentifiedModel:name:classes:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</Type> = .init(), completion: (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4128}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4091}], "key.bodylength": 65, "key.bodyoffset": 4310, "key.doc.column": 15, "key.doc.comment": "Run image segmentation on a FritzVisionImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift\" line=\"126\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionSegmentationModelOptions = .init(), completion: (FritzVisionSegmentationResult?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run image segmentation on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 126, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request.  Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 306, "key.docoffset": 3783, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModelOptions\">FritzVisionSegmentationModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult\">FritzVisionSegmentationResult</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 241, "key.name": "predict(_:options:completion:)", "key.namelength": 168, "key.nameoffset": 4140, "key.offset": 4135, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionSegmentationModelOptions = .init(),\n  completion: (FritzVisionSegmentationResult?, Error?) -> Void\n)", "key.parsed_scope.end": 132, "key.parsed_scope.start": 126, "key.substructure": [], "key.typename": "(FritzVisionSegmentationModel) -> (FritzVisionImage, FritzVisionSegmentationModelOptions, (FritzVisionSegmentationResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD24SegmentationModelOptionsCyAC0cdF6ResultCSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel(im)predict:options:completion:"}], "key.typename": "FritzVisionSegmentationModel.Type", "key.typeusr": "$s11FritzVision0aB17SegmentationModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias rgbaValue = (r: <Type usr=\"s:s5UInt8V\">UInt8</Type>, g: <Type usr=\"s:s5UInt8V\">UInt8</Type>, b: <Type usr=\"s:s5UInt8V\">UInt8</Type>, a: <Type usr=\"s:s5UInt8V\">UInt8</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4380}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationModel.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>rgbaValue</decl.name> = <tuple>(<tuple.element><tuple.element.argument_label>r</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>g</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>b</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>a</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:s5UInt8V\">UInt8</ref.struct></tuple.element.type></tuple.element>)</tuple></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 62, "key.name": "rgbaValue", "key.namelength": 9, "key.nameoffset": 4397, "key.offset": 4387, "key.parsed_declaration": "public typealias rgbaValue = (r: UInt8, g: UInt8, b: UInt8, a: UInt8)", "key.parsed_scope.end": 135, "key.parsed_scope.start": 135, "key.typename": "(r: UInt8, g: UInt8, b: UInt8, a: UInt8).Type", "key.typeusr": "$ss5UInt8V1r_AB1gAB1bAB1atmD", "key.usr": "s:11FritzVision9rgbaValuea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Blending.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2553, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4071, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzSegmentationRegion) public enum SegmentationRegion : <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2671}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 2640}], "key.bodylength": 215, "key.bodyoffset": 2708, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 2703}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzSegmentationRegion)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>SegmentationRegion</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 246, "key.name": "SegmentationRegion", "key.namelength": 18, "key.nameoffset": 2683, "key.offset": 2678, "key.parsed_declaration": "public enum SegmentationRegion: Int", "key.parsed_scope.end": 101, "key.parsed_scope.start": 95, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2806, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case foreground</Declaration>", "key.doc.column": 8, "key.doc.comment": "Foreground is the region of the image where the alpha value of a mask is greater than 0.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift\" line=\"97\" column=\"8\"><Name>foreground</Name><USR>c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionForeground</USR><Declaration></Declaration><CommentParts><Abstract><Para>Foreground is the region of the image where the alpha value of a mask is greater than 0.</Para></Abstract></CommentParts></Other>", "key.doc.line": 97, "key.doc.name": "foreground", "key.doc.type": "Other", "key.doclength": 93, "key.docoffset": 2711, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>foreground</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "foreground", "key.namelength": 10, "key.nameoffset": 2811, "key.offset": 2811, "key.parsed_declaration": "case foreground", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "(SegmentationRegion.Type) -> SegmentationRegion", "key.typeusr": "$sy11FritzVision18SegmentationRegionOACmcD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionForeground"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2907, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case background</Declaration>", "key.doc.column": 8, "key.doc.comment": "Background is the region of the image where the alpha value of a mask is 0.", "key.doc.declaration": "", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift\" line=\"100\" column=\"8\"><Name>background</Name><USR>c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionBackground</USR><Declaration></Declaration><CommentParts><Abstract><Para>Background is the region of the image where the alpha value of a mask is 0.</Para></Abstract></CommentParts></Other>", "key.doc.line": 100, "key.doc.name": "background", "key.doc.type": "Other", "key.doclength": 80, "key.docoffset": 2825, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult+Mask.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>background</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "background", "key.namelength": 10, "key.nameoffset": 2912, "key.offset": 2912, "key.parsed_declaration": "case background", "key.parsed_scope.end": 100, "key.parsed_scope.start": 100, "key.typename": "(SegmentationRegion.Type) -> SegmentationRegion", "key.typeusr": "$sy11FritzVision18SegmentationRegionOACmcD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion@FritzSegmentationRegionBackground"}]}], "key.typename": "SegmentationRegion.Type", "key.typeusr": "$s11FritzVision18SegmentationRegionOmD", "key.usr": "c:@M@FritzVision@E@FritzSegmentationRegion"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4987, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 27, "key.name": "MARK: - Segmentation Result", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 256}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSegmentationResult) public class FritzVisionSegmentationResult : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 382}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 345}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}, {"key.attribute": "source.decl.attribute.available", "key.length": 60, "key.offset": 284}], "key.bodylength": 4526, "key.bodyoffset": 459, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 426}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 436}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSegmentationResult)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSegmentationResult</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4597, "key.name": "FritzVisionSegmentationResult", "key.namelength": 29, "key.nameoffset": 395, "key.offset": 389, "key.parsed_declaration": "public class FritzVisionSegmentationResult: NSObject, FritzPredictionResult", "key.parsed_scope.end": 147, "key.parsed_scope.start": 16, "key.runtime_name": "FritzVisionSegmentationResult", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let height: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 505}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 499}], "key.doc.column": 20, "key.doc.comment": "Height of model output array.", "key.doc.declaration": "@objc public let height: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"19\" column=\"20\"><Name>height</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height</USR><Declaration>@objc public let height: Int</Declaration><CommentParts><Abstract><Para>Height of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "height", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 463, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 15, "key.name": "height", "key.namelength": 6, "key.nameoffset": 516, "key.offset": 512, "key.parsed_declaration": "@objc public let height: Int", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)height"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let width: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 572}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 566}], "key.doc.column": 20, "key.doc.comment": "Width of model output array.", "key.doc.declaration": "@objc public let width: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"22\" column=\"20\"><Name>width</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width</USR><Declaration>@objc public let width: Int</Declaration><CommentParts><Abstract><Para>Width of model output array.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "width", "key.doc.type": "Other", "key.doclength": 33, "key.docoffset": 531, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "width", "key.namelength": 5, "key.nameoffset": 583, "key.offset": 579, "key.parsed_declaration": "@objc public let width: Int", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)width"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let classes: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 624}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 618}], "key.doc.column": 20, "key.doc.comment": "Model classes.", "key.doc.declaration": "@objc public let classes: [ModelSegmentationClass]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"25\" column=\"20\"><Name>classes</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes</USR><Declaration>@objc public let classes: [ModelSegmentationClass]</Declaration><CommentParts><Abstract><Para>Model classes.</Para></Abstract></CommentParts></Other>", "key.doc.line": 25, "key.doc.name": "classes", "key.doc.type": "Other", "key.doclength": 19, "key.docoffset": 597, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>classes</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "classes", "key.namelength": 7, "key.nameoffset": 635, "key.offset": 631, "key.parsed_declaration": "@objc public let classes: [ModelSegmentationClass]", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)classes"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let predictionResult: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 719}], "key.doc.column": 20, "key.doc.comment": "Raw MLMultiArray result from prediction.", "key.doc.declaration": "@objc public let predictionResult: MLMultiArray", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"28\" column=\"20\"><Name>predictionResult</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult</USR><Declaration>@objc public let predictionResult: MLMultiArray</Declaration><CommentParts><Abstract><Para>Raw MLMultiArray result from prediction.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "predictionResult", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 672, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>predictionResult</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "predictionResult", "key.namelength": 16, "key.nameoffset": 736, "key.offset": 732, "key.parsed_declaration": "@objc public let predictionResult: MLMultiArray", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "MLMultiArray", "key.typeusr": "$sSo12MLMultiArrayCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult(py)predictionResult"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: <Type usr=\"s:Sd\">Double</Type> = 0.0) -&gt; [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3136}], "key.bodylength": 373, "key.bodyoffset": 3256, "key.doc.column": 15, "key.doc.comment": "Gets a height * width length array with each entry the most likely class for that pixel.\n\nOptionally choose the minimum acceptable confidence score for a class to be chosen.\n\n- Parameter minimumConfidence: Minimum confidence score needed for class to be chosen.\n- Returns: 1D-Array of length [height x width].", "key.doc.declaration": "public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: Double = 0.0) -> [Int32]", "key.doc.discussion": [{"Para": "Optionally choose the minimum acceptable confidence score for a class to be chosen."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift\" line=\"102\" column=\"15\"><Name>getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)</Name><USR>s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF</USR><Declaration>public func getArrayOfMostLikelyClasses(withMinimumConfidenceScore minimumConfidence: Double = 0.0) -&gt; [Int32]</Declaration><CommentParts><Abstract><Para>Gets a height * width length array with each entry the most likely class for that pixel.</Para></Abstract><Parameters><Parameter><Name>minimumConfidence</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Minimum confidence score needed for class to be chosen.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>1D-Array of length [height x width].</Para></ResultDiscussion><Discussion><Para>Optionally choose the minimum acceptable confidence score for a class to be chosen.</Para></Discussion></CommentParts></Function>", "key.doc.line": 102, "key.doc.name": "getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)", "key.doc.parameters": [{"discussion": [{"Para": "Minimum confidence score needed for class to be chosen."}], "name": "minimumConfidence"}], "key.doc.result_discussion": [{"Para": "1D-Array of length [height x width]."}], "key.doc.type": "Function", "key.doclength": 342, "key.docoffset": 2792, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getArrayOfMostLikelyClasses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>withMinimumConfidenceScore</decl.var.parameter.argument_label> <decl.var.parameter.name>minimumConfidence</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 487, "key.name": "getArrayOfMostLikelyClasses(withMinimumConfidenceScore:)", "key.namelength": 95, "key.nameoffset": 3148, "key.offset": 3143, "key.parsed_declaration": "public func getArrayOfMostLikelyClasses(\n  withMinimumConfidenceScore minimumConfidence: Double = 0.0\n) -> [Int32]", "key.parsed_scope.end": 111, "key.parsed_scope.start": 102, "key.substructure": [{"key.annotated_decl": "<Declaration>let pixelCount: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pixelCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "pixelCount", "key.namelength": 10, "key.nameoffset": 3265, "key.offset": 3261, "key.parsed_declaration": "let pixelCount = height * width", "key.parsed_scope.end": 105, "key.parsed_scope.start": 105, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF10pixelCountL_Sivp"}, {"key.annotated_decl": "<Declaration>var bytes: [<Type usr=\"s:Sf\">Float</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bytes</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sf\">Float</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 68, "key.name": "bytes", "key.namelength": 5, "key.nameoffset": 3301, "key.offset": 3297, "key.parsed_declaration": "var bytes = [Float](repeating: 0, count: pixelCount * classes.count)", "key.parsed_scope.end": 106, "key.parsed_scope.start": 106, "key.typename": "[Float]", "key.typeusr": "$sSaySfGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF5bytesL_SaySfGvp"}, {"key.annotated_decl": "<Declaration>var reducedMask: [<Type usr=\"s:s5Int32V\">Int32</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/SegmentationResult.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>reducedMask</decl.name>: <decl.var.type>[<ref.struct usr=\"s:s5Int32V\">Int32</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "reducedMask", "key.namelength": 11, "key.nameoffset": 3374, "key.offset": 3370, "key.parsed_declaration": "var reducedMask = [Int32](repeating: 0, count: pixelCount)", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.typename": "[Int32]", "key.typeusr": "$sSays5Int32VGD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF11reducedMaskL_AHvp"}], "key.typename": "(FritzVisionSegmentationResult) -> (Double) -> [Int32]", "key.typeusr": "$s26withMinimumConfidenceScoreSays5Int32VGSd_tcD", "key.usr": "s:11FritzVision0aB18SegmentationResultC27getArrayOfMostLikelyClasses26withMinimumConfidenceScoreSays5Int32VGSd_tF"}], "key.typename": "FritzVisionSegmentationResult.Type", "key.typeusr": "$s11FritzVision0aB18SegmentationResultCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSegmentationResult"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/UIColor+rgbaValue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 802, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1161, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationModelAccurate) public final class FritzVisionHairSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 272}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 217}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 193}], "key.bodylength": 774, "key.bodyoffset": 385, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 36, "key.offset": 326}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 366}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHairSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 882, "key.name": "FritzVisionHairSegmentationModelAccurate", "key.namelength": 40, "key.nameoffset": 284, "key.offset": 278, "key.parsed_declaration": "public final class FritzVisionHairSegmentationModelAccurate: FritzVisionHairSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 38, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHairSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 395}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 389}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 413, "key.offset": 402, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 554}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 548}], "key.bodylength": 46, "key.bodyoffset": 605, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 572, "key.offset": 561, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 662}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 656}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 680, "key.offset": 669, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate\">FritzVisionHairSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 971}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 929}], "key.bodylength": 57, "key.bodyoffset": 1100, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift\" line=\"33\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 33, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 750, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate\">FritzVisionHairSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 180, "key.name": "fetchModel(completionHandler:)", "key.namelength": 108, "key.nameoffset": 990, "key.offset": 978, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHairSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModelAccurate.Type) -> (@escaping (FritzVisionHairSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD29HairSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionHairSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB29HairSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1145, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationModelFast) public final class FritzVisionHairSegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 264}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 257}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 213}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 189}], "key.bodylength": 770, "key.bodyoffset": 373, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 36, "key.offset": 314}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 354}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHairSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 874, "key.name": "FritzVisionHairSegmentationModelFast", "key.namelength": 36, "key.nameoffset": 276, "key.offset": 270, "key.parsed_declaration": "public final class FritzVisionHairSegmentationModelFast: FritzVisionHairSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 38, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHairSegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 383}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 377}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 401, "key.offset": 390, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 542}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 536}], "key.bodylength": 46, "key.bodyoffset": 593, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 560, "key.offset": 549, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 650}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 644}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 668, "key.offset": 657, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast\">FritzVisionHairSegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 959}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 917}], "key.bodylength": 57, "key.bodyoffset": 1084, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift\" line=\"33\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 33, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 738, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast\">FritzVisionHairSegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 176, "key.name": "fetchModel(completionHandler:)", "key.namelength": 104, "key.nameoffset": 978, "key.offset": 966, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHairSegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModelFast.Type) -> (@escaping (FritzVisionHairSegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD25HairSegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionHairSegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB25HairSegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1503, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairClass) public class FritzVisionHairClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 268}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 27, "key.offset": 240}], "key.bodylength": 373, "key.bodyoffset": 313, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionHairPredictor", "key.doc.declaration": "@objc(FritzVisionHairClass) public class FritzVisionHairClass : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift\" line=\"13\" column=\"14\"><Name>FritzVisionHairClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairClass</USR><Declaration>@objc(FritzVisionHairClass) public class FritzVisionHairClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionHairPredictor</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionHairClass", "key.doc.type": "Class", "key.doclength": 46, "key.docoffset": 194, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 303}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 412, "key.name": "FritzVisionHairClass", "key.namelength": 20, "key.nameoffset": 281, "key.offset": 275, "key.parsed_declaration": "public class FritzVisionHairClass: NSObject", "key.parsed_scope.end": 29, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHairClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 322}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 316}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 340, "key.offset": 329, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let hair: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 440}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 434}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>hair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 104, "key.name": "hair", "key.namelength": 4, "key.nameoffset": 458, "key.offset": 447, "key.parsed_declaration": "@objc public static let hair = ModelSegmentationClass(", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairClass(cpy)hair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 561}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 555}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 117, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 579, "key.offset": 568, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairClass(cpy)allClasses"}], "key.typename": "FritzVisionHairClass.Type", "key.typeusr": "$s11FritzVision0aB9HairClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationPredictor) open class FritzVisionHairSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 812}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 768}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 744}], "key.bodylength": 610, "key.bodyoffset": 891, "key.doc.column": 12, "key.doc.comment": "Predictor that takes predicts pixels that are Hair", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionHairSegmentationPredictor) open class FritzVisionHairSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift\" line=\"34\" column=\"12\"><Name>FritzVisionHairSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionHairSegmentationPredictor) open class FritzVisionHairSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Predictor that takes predicts pixels that are Hair</Para></Abstract></CommentParts></Class>", "key.doc.line": 34, "key.doc.name": "FritzVisionHairSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 55, "key.docoffset": 689, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 861}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 685, "key.name": "FritzVisionHairSegmentationPredictor", "key.namelength": 36, "key.nameoffset": 823, "key.offset": 817, "key.parsed_declaration": "open class FritzVisionHairSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 56, "key.parsed_scope.start": 34, "key.runtime_name": "FritzVisionHairSegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 926}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 919}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 895}], "key.bodylength": 87, "key.bodyoffset": 965, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 115, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 938, "key.offset": 938, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 37, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionHairSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC25HairSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1098}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1091}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1057}], "key.bodylength": 87, "key.bodyoffset": 1145, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 123, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1110, "key.offset": 1110, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionHairSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC25HairSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedH0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1281}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1274}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1237}], "key.bodylength": 145, "key.bodyoffset": 1353, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 206, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1293, "key.offset": 1293, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 54, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionHairSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE25HairSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionHairSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB25HairSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1149, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHairSegmentationModelSmall) public final class FritzVisionHairSegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 266}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 259}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 44, "key.offset": 214}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 190}], "key.bodylength": 771, "key.bodyoffset": 376, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 36, "key.offset": 317}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 357}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHairSegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHairSegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationPredictor\">FritzVisionHairSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHairSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 876, "key.name": "FritzVisionHairSegmentationModelSmall", "key.namelength": 37, "key.nameoffset": 278, "key.offset": 272, "key.parsed_declaration": "public final class FritzVisionHairSegmentationModelSmall: FritzVisionHairSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 38, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHairSegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 386}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 380}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 404, "key.offset": 393, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 545}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 539}], "key.bodylength": 46, "key.bodyoffset": 596, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 563, "key.offset": 552, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 653}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 647}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 671, "key.offset": 660, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall\">FritzVisionHairSegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 962}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 920}], "key.bodylength": 57, "key.bodyoffset": 1088, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift\" line=\"33\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionHairSegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 33, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 741, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Hair/HairSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall\">FritzVisionHairSegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 177, "key.name": "fetchModel(completionHandler:)", "key.namelength": 105, "key.nameoffset": 981, "key.offset": 969, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHairSegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "(FritzVisionHairSegmentationModelSmall.Type) -> (@escaping (FritzVisionHairSegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD26HairSegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionHairSegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB26HairSegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1258, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModelAccurate) public final class FritzVisionLivingRoomSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 351}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 344}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 290}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 266}], "key.bodylength": 780, "key.bodyoffset": 476, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common living room objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelAccurate) public final class FritzVisionLivingRoomSegmentationModelAccurate : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionLivingRoomSegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelAccurate) public final class FritzVisionLivingRoomSegmentationModelAccurate : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionLivingRoomSegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 199, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 42, "key.offset": 411}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 457}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionLivingRoomSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 900, "key.name": "FritzVisionLivingRoomSegmentationModelAccurate", "key.namelength": 46, "key.nameoffset": 363, "key.offset": 357, "key.parsed_declaration": "public final class FritzVisionLivingRoomSegmentationModelAccurate: FritzVisionLivingRoomSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 486}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 480}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 504, "key.offset": 493, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 645}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 639}], "key.bodylength": 46, "key.bodyoffset": 696, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 663, "key.offset": 652, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 753}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 747}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 771, "key.offset": 760, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate\">FritzVisionLivingRoomSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1062}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1020}], "key.bodylength": 57, "key.bodyoffset": 1197, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 841, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate\">FritzVisionLivingRoomSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 186, "key.name": "fetchModel(completionHandler:)", "key.namelength": 114, "key.nameoffset": 1081, "key.offset": 1069, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModelAccurate.Type) -> (@escaping (FritzVisionLivingRoomSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD35LivingRoomSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLivingRoomSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB35LivingRoomSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1242, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModelFast) public final class FritzVisionLivingRoomSegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 343}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 336}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 49, "key.offset": 286}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 262}], "key.bodylength": 776, "key.bodyoffset": 464, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common living room objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelFast) public final class FritzVisionLivingRoomSegmentationModelFast : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift\" line=\"14\" column=\"20\"><Name>FritzVisionLivingRoomSegmentationModelFast</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelFast) public final class FritzVisionLivingRoomSegmentationModelFast : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionLivingRoomSegmentationModelFast", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 195, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 42, "key.offset": 399}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 445}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionLivingRoomSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 892, "key.name": "FritzVisionLivingRoomSegmentationModelFast", "key.namelength": 42, "key.nameoffset": 355, "key.offset": 349, "key.parsed_declaration": "public final class FritzVisionLivingRoomSegmentationModelFast: FritzVisionLivingRoomSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 474}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 468}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 492, "key.offset": 481, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 633}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 627}], "key.bodylength": 46, "key.bodyoffset": 684, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 651, "key.offset": 640, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 741}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 735}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 759, "key.offset": 748, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast\">FritzVisionLivingRoomSegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1050}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1008}], "key.bodylength": 57, "key.bodyoffset": 1181, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 829, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast\">FritzVisionLivingRoomSegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 182, "key.name": "fetchModel(completionHandler:)", "key.namelength": 110, "key.nameoffset": 1069, "key.offset": 1057, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModelFast.Type) -> (@escaping (FritzVisionLivingRoomSegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD31LivingRoomSegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLivingRoomSegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB31LivingRoomSegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3188, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomClass) public class FritzVisionLivingRoomClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 268}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 234}], "key.bodylength": 1953, "key.bodyoffset": 319, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 309}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1998, "key.name": "FritzVisionLivingRoomClass", "key.namelength": 26, "key.nameoffset": 281, "key.offset": 275, "key.parsed_declaration": "public class FritzVisionLivingRoomClass: NSObject", "key.parsed_scope.end": 82, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionLivingRoomClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 328}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 322}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 346, "key.offset": 335, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let chair: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 446}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 440}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>chair</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 110, "key.name": "chair", "key.namelength": 5, "key.nameoffset": 464, "key.offset": 453, "key.parsed_declaration": "@objc public static let chair = ModelSegmentationClass(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)chair"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let wall: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 572}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 566}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>wall</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 106, "key.name": "wall", "key.namelength": 4, "key.nameoffset": 590, "key.offset": 579, "key.parsed_declaration": "@objc public static let wall = ModelSegmentationClass(", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)wall"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let coffeeTable: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 694}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 688}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>coffeeTable</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 123, "key.name": "coffeeTable", "key.namelength": 11, "key.nameoffset": 712, "key.offset": 701, "key.parsed_declaration": "@objc public static let coffeeTable = ModelSegmentationClass(", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)coffeeTable"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ceiling: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 833}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 827}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ceiling</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "ceiling", "key.namelength": 7, "key.nameoffset": 851, "key.offset": 840, "key.parsed_declaration": "@objc public static let ceiling = ModelSegmentationClass(", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)ceiling"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let floor: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 965}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 959}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>floor</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 111, "key.name": "floor", "key.namelength": 5, "key.nameoffset": 983, "key.offset": 972, "key.parsed_declaration": "@objc public static let floor = ModelSegmentationClass(", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)floor"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bed: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1092}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1086}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bed</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "bed", "key.namelength": 3, "key.nameoffset": 1110, "key.offset": 1099, "key.parsed_declaration": "@objc public static let bed = ModelSegmentationClass(", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)bed"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let lamp: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1215}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1209}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lamp</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 109, "key.name": "lamp", "key.namelength": 4, "key.nameoffset": 1233, "key.offset": 1222, "key.parsed_declaration": "@objc public static let lamp = ModelSegmentationClass(", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)lamp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sofa: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1340}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1334}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sofa</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 124, "key.name": "sofa", "key.namelength": 4, "key.nameoffset": 1358, "key.offset": 1347, "key.parsed_declaration": "@objc public static let sofa = ModelSegmentationClass(", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)sofa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let windowpane: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1480}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1474}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>windowpane</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 120, "key.name": "windowpane", "key.namelength": 10, "key.nameoffset": 1498, "key.offset": 1487, "key.parsed_declaration": "@objc public static let windowpane = ModelSegmentationClass(", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)windowpane"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pillow: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1616}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1610}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pillow</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 114, "key.name": "pillow", "key.namelength": 6, "key.nameoffset": 1634, "key.offset": 1623, "key.parsed_declaration": "@objc public static let pillow = ModelSegmentationClass(", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)pillow"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1747}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1741}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 517, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 1765, "key.offset": 1754, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass(cpy)allClasses"}], "key.typename": "FritzVisionLivingRoomClass.Type", "key.typeusr": "$s11FritzVision0aB15LivingRoomClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationPredictor) public class FritzVisionLivingRoomSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2412}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 49, "key.offset": 2362}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2338}], "key.bodylength": 687, "key.bodyoffset": 2499, "key.doc.column": 14, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationPredictor) public class FritzVisionLivingRoomSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift\" line=\"87\" column=\"14\"><Name>FritzVisionLivingRoomSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionLivingRoomSegmentationPredictor) public class FritzVisionLivingRoomSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 87, "key.doc.name": "FritzVisionLivingRoomSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 2275, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 2469}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 768, "key.name": "FritzVisionLivingRoomSegmentationPredictor", "key.namelength": 42, "key.nameoffset": 2425, "key.offset": 2419, "key.parsed_declaration": "public class FritzVisionLivingRoomSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 116, "key.parsed_scope.start": 87, "key.runtime_name": "FritzVisionLivingRoomSegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2534}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2527}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 2503}], "key.bodylength": 124, "key.bodyoffset": 2570, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 152, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 2543, "key.offset": 2543, "key.parsed_declaration": "public required init(model: FritzMLModel)", "key.parsed_scope.end": 96, "key.parsed_scope.start": 90, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionLivingRoomSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC31LivingRoomSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2740}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2733}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 2699}], "key.bodylength": 124, "key.bodyoffset": 2784, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 160, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 2749, "key.offset": 2749, "key.parsed_declaration": "public required init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 105, "key.parsed_scope.start": 99, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionLivingRoomSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC31LivingRoomSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedI0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2957}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2950}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2913}], "key.bodylength": 158, "key.bodyoffset": 3026, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 219, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2966, "key.offset": 2966, "key.parsed_declaration": "public required init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 115, "key.parsed_scope.start": 108, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionLivingRoomSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE31LivingRoomSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionLivingRoomSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB31LivingRoomSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1246, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionLivingRoomSegmentationModelSmall) public final class FritzVisionLivingRoomSegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 345}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 338}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 287}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 263}], "key.bodylength": 777, "key.bodyoffset": 467, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common living room objects.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelSmall) public final class FritzVisionLivingRoomSegmentationModelSmall : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift\" line=\"14\" column=\"20\"><Name>FritzVisionLivingRoomSegmentationModelSmall</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionLivingRoomSegmentationModelSmall) public final class FritzVisionLivingRoomSegmentationModelSmall : FritzVisionLivingRoomSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common living room objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionLivingRoomSegmentationModelSmall", "key.doc.type": "Class", "key.doclength": 67, "key.docoffset": 196, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 42, "key.offset": 402}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 448}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionLivingRoomSegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionLivingRoomSegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationPredictor\">FritzVisionLivingRoomSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionLivingRoomSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 894, "key.name": "FritzVisionLivingRoomSegmentationModelSmall", "key.namelength": 43, "key.nameoffset": 357, "key.offset": 351, "key.parsed_declaration": "public final class FritzVisionLivingRoomSegmentationModelSmall: FritzVisionLivingRoomSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 477}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 471}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 495, "key.offset": 484, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 636}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 630}], "key.bodylength": 46, "key.bodyoffset": 687, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 654, "key.offset": 643, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 744}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 738}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 762, "key.offset": 751, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall\">FritzVisionLivingRoomSegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1053}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1011}], "key.bodylength": 57, "key.bodyoffset": 1185, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 832, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/LivingRoom/LivingRoomSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall\">FritzVisionLivingRoomSegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 183, "key.name": "fetchModel(completionHandler:)", "key.namelength": 111, "key.nameoffset": 1072, "key.offset": 1060, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionLivingRoomSegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionLivingRoomSegmentationModelSmall.Type) -> (@escaping (FritzVisionLivingRoomSegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD32LivingRoomSegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionLivingRoomSegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB32LivingRoomSegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1239, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModelAccurate) public final class FritzVisionOutdoorSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 341}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 334}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 283}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 259}], "key.bodylength": 777, "key.bodyoffset": 460, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModelAccurate) public final class FritzVisionOutdoorSegmentationModelAccurate : FritzVisionOutdoorSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionOutdoorSegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModelAccurate) public final class FritzVisionOutdoorSegmentationModelAccurate : FritzVisionOutdoorSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionOutdoorSegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 196, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 39, "key.offset": 398}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 441}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionOutdoorSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 891, "key.name": "FritzVisionOutdoorSegmentationModelAccurate", "key.namelength": 43, "key.nameoffset": 353, "key.offset": 347, "key.parsed_declaration": "public final class FritzVisionOutdoorSegmentationModelAccurate: FritzVisionOutdoorSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionOutdoorSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 470}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 464}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 488, "key.offset": 477, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 629}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 623}], "key.bodylength": 46, "key.bodyoffset": 680, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 647, "key.offset": 636, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 737}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 731}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 755, "key.offset": 744, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate\">FritzVisionOutdoorSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1046}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1004}], "key.bodylength": 57, "key.bodyoffset": 1178, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 825, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate\">FritzVisionOutdoorSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 183, "key.name": "fetchModel(completionHandler:)", "key.namelength": 111, "key.nameoffset": 1065, "key.offset": 1053, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionOutdoorSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModelAccurate.Type) -> (@escaping (FritzVisionOutdoorSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD32OutdoorSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionOutdoorSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB32OutdoorSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1223, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModelFast) public final class FritzVisionOutdoorSegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 333}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 326}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 279}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 255}], "key.bodylength": 773, "key.bodyoffset": 448, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModelFast) public final class FritzVisionOutdoorSegmentationModelFast : FritzVisionOutdoorSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift\" line=\"14\" column=\"20\"><Name>FritzVisionOutdoorSegmentationModelFast</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationModelFast) public final class FritzVisionOutdoorSegmentationModelFast : FritzVisionOutdoorSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionOutdoorSegmentationModelFast", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 192, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 39, "key.offset": 386}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 429}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionOutdoorSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 883, "key.name": "FritzVisionOutdoorSegmentationModelFast", "key.namelength": 39, "key.nameoffset": 345, "key.offset": 339, "key.parsed_declaration": "public final class FritzVisionOutdoorSegmentationModelFast: FritzVisionOutdoorSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionOutdoorSegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 458}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 452}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 476, "key.offset": 465, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 617}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 611}], "key.bodylength": 46, "key.bodyoffset": 668, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 635, "key.offset": 624, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 719}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 743, "key.offset": 732, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast\">FritzVisionOutdoorSegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1034}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 992}], "key.bodylength": 57, "key.bodyoffset": 1162, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 813, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast\">FritzVisionOutdoorSegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 179, "key.name": "fetchModel(completionHandler:)", "key.namelength": 107, "key.nameoffset": 1053, "key.offset": 1041, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionOutdoorSegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModelFast.Type) -> (@escaping (FritzVisionOutdoorSegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD28OutdoorSegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionOutdoorSegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB28OutdoorSegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4718, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorClass) public class FritzVisionOutdoorClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 259}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 228}], "key.bodylength": 3561, "key.bodyoffset": 307, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 297}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3603, "key.name": "FritzVisionOutdoorClass", "key.namelength": 23, "key.nameoffset": 272, "key.offset": 266, "key.parsed_declaration": "public class FritzVisionOutdoorClass: NSObject", "key.parsed_scope.end": 142, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionOutdoorClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 316}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 310}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 334, "key.offset": 323, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let building: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 434}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 428}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>building</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "building", "key.namelength": 8, "key.nameoffset": 452, "key.offset": 441, "key.parsed_declaration": "@objc public static let building = ModelSegmentationClass(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)building"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 566}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 560}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 584, "key.offset": 573, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let tree: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 689}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 683}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>tree</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "tree", "key.namelength": 4, "key.nameoffset": 707, "key.offset": 696, "key.parsed_declaration": "@objc public static let tree = ModelSegmentationClass(", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)tree"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sidewalk: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 813}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 807}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sidewalk</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 117, "key.name": "sidewalk", "key.namelength": 8, "key.nameoffset": 831, "key.offset": 820, "key.parsed_declaration": "@objc public static let sidewalk = ModelSegmentationClass(", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sidewalk"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let ground: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 946}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 940}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>ground</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 113, "key.name": "ground", "key.namelength": 6, "key.nameoffset": 964, "key.offset": 953, "key.parsed_declaration": "@objc public static let ground = ModelSegmentationClass(", "key.parsed_scope.end": 38, "key.parsed_scope.start": 38, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)ground"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let car: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1075}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1069}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>car</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "car", "key.namelength": 3, "key.nameoffset": 1093, "key.offset": 1082, "key.parsed_declaration": "@objc public static let car = ModelSegmentationClass(", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)car"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let water: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1198}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1192}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>water</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 111, "key.name": "water", "key.namelength": 5, "key.nameoffset": 1216, "key.offset": 1205, "key.parsed_declaration": "@objc public static let water = ModelSegmentationClass(", "key.parsed_scope.end": 48, "key.parsed_scope.start": 48, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)water"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let house: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1325}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1319}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>house</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 111, "key.name": "house", "key.namelength": 5, "key.nameoffset": 1343, "key.offset": 1332, "key.parsed_declaration": "@objc public static let house = ModelSegmentationClass(", "key.parsed_scope.end": 53, "key.parsed_scope.start": 53, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)house"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let fence: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1452}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1446}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fence</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 112, "key.name": "fence", "key.namelength": 5, "key.nameoffset": 1470, "key.offset": 1459, "key.parsed_declaration": "@objc public static let fence = ModelSegmentationClass(", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)fence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sign: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1580}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1574}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sign</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 109, "key.name": "sign", "key.namelength": 4, "key.nameoffset": 1598, "key.offset": 1587, "key.parsed_declaration": "@objc public static let sign = ModelSegmentationClass(", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)sign"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let skyscraper: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1705}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1699}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>skyscraper</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 123, "key.name": "skyscraper", "key.namelength": 10, "key.nameoffset": 1723, "key.offset": 1712, "key.parsed_declaration": "@objc public static let skyscraper = ModelSegmentationClass(", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)skyscraper"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bridge: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1844}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1838}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bridge</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 114, "key.name": "bridge", "key.namelength": 6, "key.nameoffset": 1862, "key.offset": 1851, "key.parsed_declaration": "@objc public static let bridge = ModelSegmentationClass(", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bridge"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let river: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1974}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1968}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>river</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 113, "key.name": "river", "key.namelength": 5, "key.nameoffset": 1992, "key.offset": 1981, "key.parsed_declaration": "@objc public static let river = ModelSegmentationClass(", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)river"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bus: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2103}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2097}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bus</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 105, "key.name": "bus", "key.namelength": 3, "key.nameoffset": 2121, "key.offset": 2110, "key.parsed_declaration": "@objc public static let bus = ModelSegmentationClass(", "key.parsed_scope.end": 83, "key.parsed_scope.start": 83, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bus"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let truck: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2224}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2218}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>truck</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 113, "key.name": "truck", "key.namelength": 5, "key.nameoffset": 2242, "key.offset": 2231, "key.parsed_declaration": "@objc public static let truck = ModelSegmentationClass(", "key.parsed_scope.end": 88, "key.parsed_scope.start": 88, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)truck"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let van: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2353}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2347}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>van</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 107, "key.name": "van", "key.namelength": 3, "key.nameoffset": 2371, "key.offset": 2360, "key.parsed_declaration": "@objc public static let van = ModelSegmentationClass(", "key.parsed_scope.end": 93, "key.parsed_scope.start": 93, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)van"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let motorbike: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2476}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2470}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>motorbike</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 121, "key.name": "motorbike", "key.namelength": 9, "key.nameoffset": 2494, "key.offset": 2483, "key.parsed_declaration": "@objc public static let motorbike = ModelSegmentationClass(", "key.parsed_scope.end": 98, "key.parsed_scope.start": 98, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)motorbike"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let bicycle: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2613}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2607}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bicycle</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 113, "key.name": "bicycle", "key.namelength": 7, "key.nameoffset": 2631, "key.offset": 2620, "key.parsed_declaration": "@objc public static let bicycle = ModelSegmentationClass(", "key.parsed_scope.end": 103, "key.parsed_scope.start": 103, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)bicycle"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let trafficLight: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2742}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2736}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>trafficLight</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 128, "key.name": "trafficLight", "key.namelength": 12, "key.nameoffset": 2760, "key.offset": 2749, "key.parsed_declaration": "@objc public static let trafficLight = ModelSegmentationClass(", "key.parsed_scope.end": 108, "key.parsed_scope.start": 108, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)trafficLight"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2886}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2880}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 115, "key.name": "person", "key.namelength": 6, "key.nameoffset": 2904, "key.offset": 2893, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(", "key.parsed_scope.end": 113, "key.parsed_scope.start": 113, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3018}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3012}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 842, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 3036, "key.offset": 3025, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 119, "key.parsed_scope.start": 119, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass(cpy)allClasses"}], "key.typename": "FritzVisionOutdoorClass.Type", "key.typeusr": "$s11FritzVision0aB12OutdoorClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationPredictor) public class FritzVisionOutdoorSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4005}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 3958}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3934}], "key.bodylength": 627, "key.bodyoffset": 4089, "key.doc.column": 14, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationPredictor) public class FritzVisionOutdoorSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift\" line=\"147\" column=\"14\"><Name>FritzVisionOutdoorSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionOutdoorSegmentationPredictor) public class FritzVisionOutdoorSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 147, "key.doc.name": "FritzVisionOutdoorSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 3871, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 4059}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 705, "key.name": "FritzVisionOutdoorSegmentationPredictor", "key.namelength": 39, "key.nameoffset": 4018, "key.offset": 4012, "key.parsed_declaration": "public class FritzVisionOutdoorSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 168, "key.parsed_scope.start": 147, "key.runtime_name": "FritzVisionOutdoorSegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4124}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4117}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 4093}], "key.bodylength": 93, "key.bodyoffset": 4163, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 4136, "key.offset": 4136, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 152, "key.parsed_scope.start": 150, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionOutdoorSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC28OutdoorSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4302}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4295}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 4261}], "key.bodylength": 93, "key.bodyoffset": 4349, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 4314, "key.offset": 4314, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 157, "key.parsed_scope.start": 155, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionOutdoorSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC28OutdoorSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedH0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4491}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4484}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4447}], "key.bodylength": 151, "key.bodyoffset": 4563, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 4503, "key.offset": 4503, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 167, "key.parsed_scope.start": 160, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionOutdoorSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE28OutdoorSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionOutdoorSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB28OutdoorSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1227, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionOutdoorSegmentationModelSmall) public final class FritzVisionOutdoorSegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 335}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 328}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 280}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 256}], "key.bodylength": 774, "key.bodyoffset": 451, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionOutdoorSegmentationModelSmall) public final class FritzVisionOutdoorSegmentationModelSmall : FritzVisionOutdoorSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift\" line=\"14\" column=\"20\"><Name>FritzVisionOutdoorSegmentationModelSmall</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionOutdoorSegmentationModelSmall) public final class FritzVisionOutdoorSegmentationModelSmall : FritzVisionOutdoorSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionOutdoorSegmentationModelSmall", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 193, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 39, "key.offset": 389}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 432}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionOutdoorSegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionOutdoorSegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationPredictor\">FritzVisionOutdoorSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionOutdoorSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 885, "key.name": "FritzVisionOutdoorSegmentationModelSmall", "key.namelength": 40, "key.nameoffset": 347, "key.offset": 341, "key.parsed_declaration": "public final class FritzVisionOutdoorSegmentationModelSmall: FritzVisionOutdoorSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionOutdoorSegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 461}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 455}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 479, "key.offset": 468, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 620}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 614}], "key.bodylength": 46, "key.bodyoffset": 671, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 638, "key.offset": 627, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 728}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 722}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 746, "key.offset": 735, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall\">FritzVisionOutdoorSegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1037}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 995}], "key.bodylength": 57, "key.bodyoffset": 1166, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionOutdoorSegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 816, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Outdoor/OutdoorSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall\">FritzVisionOutdoorSegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 180, "key.name": "fetchModel(completionHandler:)", "key.namelength": 108, "key.nameoffset": 1056, "key.offset": 1044, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionOutdoorSegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionOutdoorSegmentationModelSmall.Type) -> (@escaping (FritzVisionOutdoorSegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD29OutdoorSegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionOutdoorSegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB29OutdoorSegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1273, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModelAccurate) public final class FritzVisionPeopleSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 378}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 371}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 49, "key.offset": 321}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 297}], "key.bodylength": 776, "key.bodyoffset": 495, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModelAccurate) public final class FritzVisionPeopleSegmentationModelAccurate : FritzVisionPeopleSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPeopleSegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModelAccurate) public final class FritzVisionPeopleSegmentationModelAccurate : FritzVisionPeopleSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPeopleSegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 250, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 38, "key.offset": 434}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 476}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPeopleSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 888, "key.name": "FritzVisionPeopleSegmentationModelAccurate", "key.namelength": 42, "key.nameoffset": 390, "key.offset": 384, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationModelAccurate: FritzVisionPeopleSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPeopleSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 505}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 499}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 523, "key.offset": 512, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 664}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 658}], "key.bodylength": 46, "key.bodyoffset": 715, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 682, "key.offset": 671, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 772}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 766}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 790, "key.offset": 779, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate\">FritzVisionPeopleSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1081}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1039}], "key.bodylength": 57, "key.bodyoffset": 1212, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 860, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate\">FritzVisionPeopleSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 182, "key.name": "fetchModel(completionHandler:)", "key.namelength": 110, "key.nameoffset": 1100, "key.offset": 1088, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPeopleSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModelAccurate.Type) -> (@escaping (FritzVisionPeopleSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD31PeopleSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB31PeopleSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1253, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModelFast) public final class FritzVisionPeopleSegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 366}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 359}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 313}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 289}], "key.bodylength": 772, "key.bodyoffset": 479, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModelFast) public final class FritzVisionPeopleSegmentationModelFast : FritzVisionPeopleSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPeopleSegmentationModelFast</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationModelFast) public final class FritzVisionPeopleSegmentationModelFast : FritzVisionPeopleSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPeopleSegmentationModelFast", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 242, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 38, "key.offset": 418}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 460}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPeopleSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 880, "key.name": "FritzVisionPeopleSegmentationModelFast", "key.namelength": 38, "key.nameoffset": 378, "key.offset": 372, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationModelFast: FritzVisionPeopleSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPeopleSegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 489}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 483}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 507, "key.offset": 496, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 648}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 642}], "key.bodylength": 46, "key.bodyoffset": 699, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 666, "key.offset": 655, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 756}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 750}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 774, "key.offset": 763, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast\">FritzVisionPeopleSegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1065}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1023}], "key.bodylength": 57, "key.bodyoffset": 1192, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 844, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast\">FritzVisionPeopleSegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 178, "key.name": "fetchModel(completionHandler:)", "key.namelength": 106, "key.nameoffset": 1084, "key.offset": 1072, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPeopleSegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModelFast.Type) -> (@escaping (FritzVisionPeopleSegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD27PeopleSegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB27PeopleSegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1539, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 274}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 29, "key.offset": 244}], "key.bodylength": 383, "key.bodyoffset": 321, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionPeoplePredictor", "key.doc.declaration": "@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift\" line=\"13\" column=\"14\"><Name>FritzVisionPeopleClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleClass</USR><Declaration>@objc(FritzVisionPeopleClass) public class FritzVisionPeopleClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionPeoplePredictor</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionPeopleClass", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 196, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 311}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 424, "key.name": "FritzVisionPeopleClass", "key.namelength": 22, "key.nameoffset": 287, "key.offset": 281, "key.parsed_declaration": "public class FritzVisionPeopleClass: NSObject", "key.parsed_scope.end": 29, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPeopleClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 330}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 324}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 348, "key.offset": 337, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let person: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 448}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 442}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>person</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "person", "key.namelength": 6, "key.nameoffset": 466, "key.offset": 455, "key.parsed_declaration": "@objc public static let person = ModelSegmentationClass(", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)person"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 573}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 567}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 123, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 591, "key.offset": 580, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleClass.Type", "key.typeusr": "$s11FritzVision0aB11PeopleClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleClass"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationPredictor) open class FritzVisionPeopleSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 834}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 45, "key.offset": 788}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 764}], "key.bodylength": 622, "key.bodyoffset": 915, "key.doc.column": 12, "key.doc.comment": "Predictor that takes predicts pixels that are people", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationPredictor) open class FritzVisionPeopleSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift\" line=\"34\" column=\"12\"><Name>FritzVisionPeopleSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleSegmentationPredictor) open class FritzVisionPeopleSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Predictor that takes predicts pixels that are people</Para></Abstract></CommentParts></Class>", "key.doc.line": 34, "key.doc.name": "FritzVisionPeopleSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 57, "key.docoffset": 707, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 885}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 699, "key.name": "FritzVisionPeopleSegmentationPredictor", "key.namelength": 38, "key.nameoffset": 845, "key.offset": 839, "key.parsed_declaration": "open class FritzVisionPeopleSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 56, "key.parsed_scope.start": 34, "key.runtime_name": "FritzVisionPeopleSegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 950}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 919}], "key.bodylength": 91, "key.bodyoffset": 989, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 962, "key.offset": 962, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 37, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionPeopleSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC27PeopleSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1126}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1119}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1085}], "key.bodylength": 91, "key.bodyoffset": 1173, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1138, "key.offset": 1138, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 42, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionPeopleSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC27PeopleSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedH0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1313}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1306}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1269}], "key.bodylength": 149, "key.bodyoffset": 1385, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 210, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1325, "key.offset": 1325, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 54, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPeopleSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE27PeopleSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionPeopleSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB27PeopleSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1250, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleSegmentationModelSmall) public final class FritzVisionPeopleSegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 361}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 354}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 307}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 283}], "key.bodylength": 773, "key.bodyoffset": 475, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionPeopleSegmentationModelSmall) public final class FritzVisionPeopleSegmentationModelSmall : FritzVisionPeopleSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPeopleSegmentationModelSmall</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionPeopleSegmentationModelSmall) public final class FritzVisionPeopleSegmentationModelSmall : FritzVisionPeopleSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPeopleSegmentationModelSmall", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 236, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 38, "key.offset": 414}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 456}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleSegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleSegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationPredictor\">FritzVisionPeopleSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPeopleSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 882, "key.name": "FritzVisionPeopleSegmentationModelSmall", "key.namelength": 39, "key.nameoffset": 373, "key.offset": 367, "key.parsed_declaration": "public final class FritzVisionPeopleSegmentationModelSmall: FritzVisionPeopleSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPeopleSegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 485}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 479}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 503, "key.offset": 492, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 644}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 638}], "key.bodylength": 46, "key.bodyoffset": 695, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 662, "key.offset": 651, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 752}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 746}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 770, "key.offset": 759, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall\">FritzVisionPeopleSegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1061}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1019}], "key.bodylength": 57, "key.bodyoffset": 1189, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleSegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 840, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/People/PeopleSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall\">FritzVisionPeopleSegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 179, "key.name": "fetchModel(completionHandler:)", "key.namelength": 107, "key.nameoffset": 1080, "key.offset": 1068, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPeopleSegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPeopleSegmentationModelSmall.Type) -> (@escaping (FritzVisionPeopleSegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD28PeopleSegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleSegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB28PeopleSegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1245, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleAndPetSegmentationModelAccurate) public final class FritzVisionPeopleAndPetSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel\">FritzVisionPeopleAndPetSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 332}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 325}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 55, "key.offset": 269}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 245}], "key.bodylength": 782, "key.bodyoffset": 461, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect people and pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationModelAccurate) public final class FritzVisionPeopleAndPetSegmentationModelAccurate : FritzVisionPeopleAndPetSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPeopleAndPetSegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationModelAccurate) public final class FritzVisionPeopleAndPetSegmentationModelAccurate : FritzVisionPeopleAndPetSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people and pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPeopleAndPetSegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 189, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 44, "key.offset": 394}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 442}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleAndPetSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleAndPetSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel\">FritzVisionPeopleAndPetSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPeopleAndPetSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 906, "key.name": "FritzVisionPeopleAndPetSegmentationModelAccurate", "key.namelength": 48, "key.nameoffset": 344, "key.offset": 338, "key.parsed_declaration": "public final class FritzVisionPeopleAndPetSegmentationModelAccurate: FritzVisionPeopleAndPetSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 471}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 465}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 489, "key.offset": 478, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 630}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 624}], "key.bodylength": 46, "key.bodyoffset": 681, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 648, "key.offset": 637, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 738}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 732}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 756, "key.offset": 745, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate\">FritzVisionPeopleAndPetSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1047}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 1005}], "key.bodylength": 57, "key.bodyoffset": 1184, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 826, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate\">FritzVisionPeopleAndPetSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 188, "key.name": "fetchModel(completionHandler:)", "key.namelength": 116, "key.nameoffset": 1066, "key.offset": 1054, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPeopleAndPetSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationModelAccurate.Type) -> (@escaping (FritzVisionPeopleAndPetSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD37PeopleAndPetSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPeopleAndPetSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB37PeopleAndPetSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1721, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 313}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 259}], "key.bodylength": 412, "key.bodyoffset": 366, "key.doc.column": 14, "key.doc.comment": "Class labels for FritzVisionPeopleAndPetSegmentationMediumModel", "key.doc.declaration": "@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetClass : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift\" line=\"13\" column=\"14\"><Name>FritzVisionPeopleAndPetClass</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass</USR><Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumClass) public class FritzVisionPeopleAndPetClass : NSObject</Declaration><CommentParts><Abstract><Para>Class labels for FritzVisionPeopleAndPetSegmentationMediumModel</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionPeopleAndPetClass", "key.doc.type": "Class", "key.doclength": 68, "key.docoffset": 191, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 356}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleAndPetSegmentationMediumClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleAndPetClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 459, "key.name": "FritzVisionPeopleAndPetClass", "key.namelength": 28, "key.nameoffset": 326, "key.offset": 320, "key.parsed_declaration": "public class FritzVisionPeopleAndPetClass: NSObject", "key.parsed_scope.end": 29, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationMediumClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 375}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 369}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 393, "key.offset": 382, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let petOrPerson: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 493}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 487}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>petOrPerson</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 120, "key.name": "petOrPerson", "key.namelength": 11, "key.nameoffset": 511, "key.offset": 500, "key.parsed_declaration": "@objc public static let petOrPerson = ModelSegmentationClass(", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)petOrPerson"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 630}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 624}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 140, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 648, "key.offset": 637, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass(cpy)allClasses"}], "key.typename": "FritzVisionPeopleAndPetClass.Type", "key.typeusr": "$s11FritzVision0aB17PeopleAndPetClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public class FritzVisionPeopleAndPetSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 915}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 861}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 837}], "key.bodylength": 715, "key.bodyoffset": 1004, "key.doc.column": 14, "key.doc.comment": "Image segmentation model to detect people and pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public class FritzVisionPeopleAndPetSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift\" line=\"34\" column=\"14\"><Name>FritzVisionPeopleAndPetSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPeopleAndPetSegmentationMediumModel) public class FritzVisionPeopleAndPetSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect people and pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 34, "key.doc.name": "FritzVisionPeopleAndPetSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 56, "key.docoffset": 781, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 974}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPeopleAndPetSegmentationMediumModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPeopleAndPetSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 798, "key.name": "FritzVisionPeopleAndPetSegmentationPredictor", "key.namelength": 44, "key.nameoffset": 928, "key.offset": 922, "key.parsed_declaration": "public class FritzVisionPeopleAndPetSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 64, "key.parsed_scope.start": 34, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationMediumModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1039}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1032}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1008}], "key.bodylength": 130, "key.bodyoffset": 1078, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 158, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1051, "key.offset": 1051, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 37, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionPeopleAndPetSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC33PeopleAndPetSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1254}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1247}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1213}], "key.bodylength": 130, "key.bodyoffset": 1301, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 166, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1266, "key.offset": 1266, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 52, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionPeopleAndPetSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC33PeopleAndPetSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedJ0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1480}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1473}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1436}], "key.bodylength": 164, "key.bodyoffset": 1552, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/PeopleAndPets/PeopleAndPetsPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 225, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1492, "key.offset": 1492, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 62, "key.parsed_scope.start": 55, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPeopleAndPetSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPeopleAndPetSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE33PeopleAndPetSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionPeopleAndPetSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB33PeopleAndPetSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationMediumModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1218, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetSegmentationModelAccurate) public final class FritzVisionPetSegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 331}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 324}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 277}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 253}], "key.bodylength": 774, "key.bodyoffset": 442, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModelAccurate) public final class FritzVisionPetSegmentationModelAccurate : FritzVisionPetSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPetSegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModelAccurate) public final class FritzVisionPetSegmentationModelAccurate : FritzVisionPetSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPetSegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 208, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 384}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 423}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetSegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetSegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPetSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 880, "key.name": "FritzVisionPetSegmentationModelAccurate", "key.namelength": 39, "key.nameoffset": 343, "key.offset": 337, "key.parsed_declaration": "public final class FritzVisionPetSegmentationModelAccurate: FritzVisionPetSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 40, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPetSegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 452}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 446}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 470, "key.offset": 459, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 611}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 605}], "key.bodylength": 46, "key.bodyoffset": 662, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 629, "key.offset": 618, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 719}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 713}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 737, "key.offset": 726, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate\">FritzVisionPetSegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1028}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 986}], "key.bodylength": 57, "key.bodyoffset": 1156, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 807, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate\">FritzVisionPetSegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 179, "key.name": "fetchModel(completionHandler:)", "key.namelength": 107, "key.nameoffset": 1047, "key.offset": 1035, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPetSegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModelAccurate.Type) -> (@escaping (FritzVisionPetSegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD28PetSegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPetSegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB28PetSegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1201, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetSegmentationModelFast) public final class FritzVisionPetSegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 323}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 316}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 273}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 249}], "key.bodylength": 769, "key.bodyoffset": 430, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModelFast) public final class FritzVisionPetSegmentationModelFast : FritzVisionPetSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPetSegmentationModelFast</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationModelFast) public final class FritzVisionPetSegmentationModelFast : FritzVisionPetSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPetSegmentationModelFast", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 204, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 372}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 411}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetSegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetSegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPetSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 871, "key.name": "FritzVisionPetSegmentationModelFast", "key.namelength": 35, "key.nameoffset": 335, "key.offset": 329, "key.parsed_declaration": "public final class FritzVisionPetSegmentationModelFast: FritzVisionPetSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPetSegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 440}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 434}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 458, "key.offset": 447, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 599}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 593}], "key.bodylength": 46, "key.bodyoffset": 650, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 617, "key.offset": 606, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 707}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 701}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 725, "key.offset": 714, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast\">FritzVisionPetSegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1016}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 974}], "key.bodylength": 57, "key.bodyoffset": 1140, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 795, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast\">FritzVisionPetSegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 175, "key.name": "fetchModel(completionHandler:)", "key.namelength": 103, "key.nameoffset": 1035, "key.offset": 1023, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPetSegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModelFast.Type) -> (@escaping (FritzVisionPetSegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD24PetSegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPetSegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB24PetSegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1700, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetClass) public class FritzVisionPetClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 247}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 220}], "key.bodylength": 408, "key.bodyoffset": 291, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 446, "key.name": "FritzVisionPetClass", "key.namelength": 19, "key.nameoffset": 260, "key.offset": 254, "key.parsed_declaration": "public class FritzVisionPetClass: NSObject", "key.parsed_scope.end": 28, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionPetClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 300}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 294}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 318, "key.offset": 307, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let pet: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 418}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 412}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pet</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 106, "key.name": "pet", "key.namelength": 3, "key.nameoffset": 436, "key.offset": 425, "key.parsed_declaration": "@objc public static let pet = ModelSegmentationClass(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)pet"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 535}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 150, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 559, "key.offset": 548, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass(cpy)allClasses"}], "key.typename": "FritzVisionPetClass.Type", "key.typeusr": "$s11FritzVision0aB8PetClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetSegmentationPredictor) public class FritzVisionPetSegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 814}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 771}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 747}], "key.bodylength": 804, "key.bodyoffset": 894, "key.doc.column": 14, "key.doc.comment": "Image segmentation model to detect pets.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationPredictor) public class FritzVisionPetSegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift\" line=\"33\" column=\"14\"><Name>FritzVisionPetSegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionPetSegmentationPredictor) public class FritzVisionPetSegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 33, "key.doc.name": "FritzVisionPetSegmentationPredictor", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 702, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 864}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetSegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetSegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 878, "key.name": "FritzVisionPetSegmentationPredictor", "key.namelength": 35, "key.nameoffset": 827, "key.offset": 821, "key.parsed_declaration": "public class FritzVisionPetSegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 61, "key.parsed_scope.start": 33, "key.runtime_name": "FritzVisionPetSegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1029}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1022}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 998}], "key.bodylength": 85, "key.bodyoffset": 1068, "key.doc.column": 22, "key.doc.comment": "Build Pet Segmentation Model with provided model.\n\n- Parameter model: Model to use", "key.doc.declaration": "@objc(initWithModel:) public convenience init(model: FritzMLModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift\" line=\"39\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public convenience init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Build Pet Segmentation Model with provided model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Model to use</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 39, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Model to use"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 898, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1041, "key.offset": 1041, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 39, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionPetSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC24PetSegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1299}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1292}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1258}], "key.bodylength": 85, "key.bodyoffset": 1346, "key.doc.column": 22, "key.doc.comment": "Build Pet Segmentation Model with provided model.\n\n- Parameter model: Model to use", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift\" line=\"47\" column=\"22\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Build Pet Segmentation Model with provided model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Model to use</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Model to use"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 98, "key.docoffset": 1158, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1311, "key.offset": 1311, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionPetSegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC24PetSegmentationPredictorC0B12ManagedModel015SwiftIdentifiedH0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1480}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1473}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1436}], "key.bodylength": 143, "key.bodyoffset": 1552, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 204, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1492, "key.offset": 1492, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 52, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPetSegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE24PetSegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionPetSegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB24PetSegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1206, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPetSegmentationModelSmall) public final class FritzVisionPetSegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 325}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 318}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 274}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 250}], "key.bodylength": 771, "key.bodyoffset": 433, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect pets.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionPetSegmentationModelSmall) public final class FritzVisionPetSegmentationModelSmall : FritzVisionPetSegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift\" line=\"14\" column=\"20\"><Name>FritzVisionPetSegmentationModelSmall</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionPetSegmentationModelSmall) public final class FritzVisionPetSegmentationModelSmall : FritzVisionPetSegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect pets.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionPetSegmentationModelSmall", "key.doc.type": "Class", "key.doclength": 45, "key.docoffset": 205, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 375}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 414}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPetSegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPetSegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationPredictor\">FritzVisionPetSegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPetSegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 874, "key.name": "FritzVisionPetSegmentationModelSmall", "key.namelength": 36, "key.nameoffset": 337, "key.offset": 331, "key.parsed_declaration": "public final class FritzVisionPetSegmentationModelSmall: FritzVisionPetSegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 40, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionPetSegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 443}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 437}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 461, "key.offset": 450, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 602}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 596}], "key.bodylength": 46, "key.bodyoffset": 653, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 620, "key.offset": 609, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 710}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 704}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 728, "key.offset": 717, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall\">FritzVisionPetSegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1019}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 977}], "key.bodylength": 57, "key.bodyoffset": 1144, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionPetSegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 798, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Pets/PetSegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall\">FritzVisionPetSegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 176, "key.name": "fetchModel(completionHandler:)", "key.namelength": 104, "key.nameoffset": 1038, "key.offset": 1026, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionPetSegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionPetSegmentationModelSmall.Type) -> (@escaping (FritzVisionPetSegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD25PetSegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionPetSegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB25PetSegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1204, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkySegmentationModelAccurate) public final class FritzVisionSkySegmentationModelAccurate : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 318}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 311}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 264}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 240}], "key.bodylength": 773, "key.bodyoffset": 429, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect the sky.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModelAccurate) public final class FritzVisionSkySegmentationModelAccurate : FritzVisionSkySegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift\" line=\"14\" column=\"20\"><Name>FritzVisionSkySegmentationModelAccurate</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModelAccurate) public final class FritzVisionSkySegmentationModelAccurate : FritzVisionSkySegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect the sky.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionSkySegmentationModelAccurate", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 192, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 371}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 410}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkySegmentationModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkySegmentationModelAccurate</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSkySegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 879, "key.name": "FritzVisionSkySegmentationModelAccurate", "key.namelength": 39, "key.nameoffset": 330, "key.offset": 324, "key.parsed_declaration": "public final class FritzVisionSkySegmentationModelAccurate: FritzVisionSkySegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionSkySegmentationModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 439}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 433}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 457, "key.offset": 446, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 598}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 592}], "key.bodylength": 46, "key.bodyoffset": 649, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 616, "key.offset": 605, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 706}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 700}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 724, "key.offset": 713, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate\">FritzVisionSkySegmentationModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1015}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 973}], "key.bodylength": 57, "key.bodyoffset": 1143, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 794, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate\">FritzVisionSkySegmentationModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 179, "key.name": "fetchModel(completionHandler:)", "key.namelength": 107, "key.nameoffset": 1034, "key.offset": 1022, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionSkySegmentationModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModelAccurate.Type) -> (@escaping (FritzVisionSkySegmentationModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD28SkySegmentationModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionSkySegmentationModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB28SkySegmentationModelAccurateCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1203, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkySegmentationModelFast) public final class FritzVisionSkySegmentationModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 325}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 318}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 275}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 251}], "key.bodylength": 769, "key.bodyoffset": 432, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect common outdoor objects.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModelFast) public final class FritzVisionSkySegmentationModelFast : FritzVisionSkySegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift\" line=\"14\" column=\"20\"><Name>FritzVisionSkySegmentationModelFast</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationModelFast) public final class FritzVisionSkySegmentationModelFast : FritzVisionSkySegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect common outdoor objects.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionSkySegmentationModelFast", "key.doc.type": "Class", "key.doclength": 63, "key.docoffset": 188, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 374}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 413}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkySegmentationModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkySegmentationModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSkySegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 871, "key.name": "FritzVisionSkySegmentationModelFast", "key.namelength": 35, "key.nameoffset": 337, "key.offset": 331, "key.parsed_declaration": "public final class FritzVisionSkySegmentationModelFast: FritzVisionSkySegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionSkySegmentationModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 442}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 436}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 460, "key.offset": 449, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 601}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 595}], "key.bodylength": 46, "key.bodyoffset": 652, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 619, "key.offset": 608, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 709}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 703}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 727, "key.offset": 716, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast\">FritzVisionSkySegmentationModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1018}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 976}], "key.bodylength": 57, "key.bodyoffset": 1142, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 797, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast\">FritzVisionSkySegmentationModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 175, "key.name": "fetchModel(completionHandler:)", "key.namelength": 103, "key.nameoffset": 1037, "key.offset": 1025, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionSkySegmentationModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModelFast.Type) -> (@escaping (FritzVisionSkySegmentationModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD24SkySegmentationModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionSkySegmentationModelFast.Type", "key.typeusr": "$s11FritzVision0aB24SkySegmentationModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1502, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkyClass) public class FritzVisionSkyClass : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 247}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 220}], "key.bodylength": 408, "key.bodyoffset": 291, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 281}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkyClass)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkyClass</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 446, "key.name": "FritzVisionSkyClass", "key.namelength": 19, "key.nameoffset": 260, "key.offset": 254, "key.parsed_declaration": "public class FritzVisionSkyClass: NSObject", "key.parsed_scope.end": 28, "key.parsed_scope.start": 12, "key.runtime_name": "FritzVisionSkyClass", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let none: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 300}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 294}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>none</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 102, "key.name": "none", "key.namelength": 4, "key.nameoffset": 318, "key.offset": 307, "key.parsed_declaration": "@objc public static let none = ModelSegmentationClass(", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)none"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let sky: <Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 418}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 412}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sky</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 106, "key.name": "sky", "key.namelength": 3, "key.nameoffset": 436, "key.offset": 425, "key.parsed_declaration": "@objc public static let sky = ModelSegmentationClass(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "ModelSegmentationClass", "key.typeusr": "$s11FritzVision22ModelSegmentationClassCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)sky"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let allClasses: [<Type usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 541}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 535}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>allClasses</decl.name>: <decl.var.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)ModelSegmentationClass\">ModelSegmentationClass</ref.class>]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 150, "key.name": "allClasses", "key.namelength": 10, "key.nameoffset": 559, "key.offset": 548, "key.parsed_declaration": "@objc public static let allClasses: [ModelSegmentationClass] = [", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "[ModelSegmentationClass]", "key.typeusr": "$sSay11FritzVision22ModelSegmentationClassCGD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass(cpy)allClasses"}], "key.typename": "FritzVisionSkyClass.Type", "key.typeusr": "$s11FritzVision0aB8SkyClassCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkyClass"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkySegmentationPredictor) public class FritzVisionSkySegmentationPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 817}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 774}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 750}], "key.bodylength": 603, "key.bodyoffset": 897, "key.doc.column": 14, "key.doc.comment": "Image segmentation model to detect the sky.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationPredictor) public class FritzVisionSkySegmentationPredictor : FritzVisionSegmentationModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift\" line=\"33\" column=\"14\"><Name>FritzVisionSkySegmentationPredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionSkySegmentationPredictor) public class FritzVisionSkySegmentationPredictor : FritzVisionSegmentationModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect the sky.</Para></Abstract></CommentParts></Class>", "key.doc.line": 33, "key.doc.name": "FritzVisionSkySegmentationPredictor", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 702, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 28, "key.offset": 867}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkySegmentationPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkySegmentationPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSegmentationModel\">FritzVisionSegmentationModel</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSegmentationModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 677, "key.name": "FritzVisionSkySegmentationPredictor", "key.namelength": 35, "key.nameoffset": 830, "key.offset": 824, "key.parsed_declaration": "public class FritzVisionSkySegmentationPredictor: FritzVisionSegmentationModel", "key.parsed_scope.end": 54, "key.parsed_scope.start": 33, "key.runtime_name": "FritzVisionSkySegmentationPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 932}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 925}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 901}], "key.bodylength": 85, "key.bodyoffset": 971, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 113, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 944, "key.offset": 944, "key.parsed_declaration": "public convenience init(model: FritzMLModel)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationPredictor.Type) -> (FritzMLModel) -> FritzVisionSkySegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC24SkySegmentationPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1102}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1095}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 1061}], "key.bodylength": 85, "key.bodyoffset": 1149, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 1114, "key.offset": 1114, "key.parsed_declaration": "public convenience init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 43, "key.parsed_scope.start": 41, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionSkySegmentationPredictor", "key.typeusr": "$s5model11FritzVision0bC24SkySegmentationPredictorC0B12ManagedModel015SwiftIdentifiedH0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public convenience init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 1283}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1276}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 1239}], "key.bodylength": 143, "key.bodyoffset": 1355, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 204, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 1295, "key.offset": 1295, "key.parsed_declaration": "public convenience init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:\">init(model: FritzMLModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:name:classes:managedModel:\">init(model:name:classes:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithIdentifiedModel:name:classes:\">init(model: SwiftIdentifiedModel, name: String, classes: [ModelSegmentationClass])</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionSkySegmentationPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE24SkySegmentationPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor(im)initWithModel:managedModel:"}], "key.typename": "FritzVisionSkySegmentationPredictor.Type", "key.typeusr": "$s11FritzVision0aB24SkySegmentationPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1192, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionSkySegmentationModelSmall) public final class FritzVisionSkySegmentationModelSmall : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 312}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 305}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 43, "key.offset": 261}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 237}], "key.bodylength": 770, "key.bodyoffset": 420, "key.doc.column": 20, "key.doc.comment": "Image segmentation model to detect the sky.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(FritzVisionSkySegmentationModelSmall) public final class FritzVisionSkySegmentationModelSmall : FritzVisionSkySegmentationPredictor, DownloadableModel", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift\" line=\"14\" column=\"20\"><Name>FritzVisionSkySegmentationModelSmall</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall</USR><Declaration>@available(iOS 12.0, *)\n@objc(FritzVisionSkySegmentationModelSmall) public final class FritzVisionSkySegmentationModelSmall : FritzVisionSkySegmentationPredictor, DownloadableModel</Declaration><CommentParts><Abstract><Para>Image segmentation model to detect the sky.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "FritzVisionSkySegmentationModelSmall", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 189, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 35, "key.offset": 362}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 401}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionSkySegmentationModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionSkySegmentationModelSmall</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationPredictor\">FritzVisionSkySegmentationPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionSkySegmentationPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 873, "key.name": "FritzVisionSkySegmentationModelSmall", "key.namelength": 36, "key.nameoffset": 324, "key.offset": 318, "key.parsed_declaration": "public final class FritzVisionSkySegmentationModelSmall: FritzVisionSkySegmentationPredictor,\n  DownloadableModel", "key.parsed_scope.end": 39, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionSkySegmentationModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 430}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 424}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 448, "key.offset": 437, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 589}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 583}], "key.bodylength": 46, "key.bodyoffset": 640, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 607, "key.offset": 596, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 697}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 691}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 715, "key.offset": 704, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall\">FritzVisionSkySegmentationModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1006}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 964}], "key.bodylength": 57, "key.bodyoffset": 1131, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift\" line=\"34\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionSkySegmentationModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 785, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ImageSegmentation/Variants/Sky/SkySegmentationSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall\">FritzVisionSkySegmentationModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 176, "key.name": "fetchModel(completionHandler:)", "key.namelength": 104, "key.nameoffset": 1025, "key.offset": 1013, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionSkySegmentationModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(FritzVisionSkySegmentationModelSmall.Type) -> (@escaping (FritzVisionSkySegmentationModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD25SkySegmentationModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionSkySegmentationModelSmall.Type", "key.typeusr": "$s11FritzVision0aB25SkySegmentationModelSmallCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/AnchorBoxPostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7789, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2932, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Anchor</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 215}], "key.bodylength": 577, "key.bodyoffset": 237, "key.doc.column": 15, "key.doc.comment": "Anchor box used in object detection models.", "key.doc.declaration": "public struct Anchor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift\" line=\"10\" column=\"15\"><Name>Anchor</Name><USR>s:11FritzVision6AnchorV</USR><Declaration>public struct Anchor</Declaration><CommentParts><Abstract><Para>Anchor box used in object detection models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 10, "key.doc.name": "Anchor", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 167, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Anchor</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 593, "key.name": "Anchor", "key.namelength": 6, "key.nameoffset": 229, "key.offset": 222, "key.parsed_declaration": "public struct Anchor", "key.parsed_scope.end": 39, "key.parsed_scope.start": 10, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 241}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "yCenter", "key.namelength": 7, "key.nameoffset": 252, "key.offset": 248, "key.parsed_declaration": "public let yCenter: Double", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV7yCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xCenter: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 270}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xCenter</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 19, "key.name": "xCenter", "key.namelength": 7, "key.nameoffset": 281, "key.offset": 277, "key.parsed_declaration": "public let xCenter: Double", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV7xCenterSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 299}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "height", "key.namelength": 6, "key.nameoffset": 310, "key.offset": 306, "key.parsed_declaration": "public let height: Double", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV6heightSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 327}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "width", "key.namelength": 5, "key.nameoffset": 338, "key.offset": 334, "key.parsed_declaration": "public let width: Double", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV5widthSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(yCenter: <Type usr=\"s:Sd\">Double</Type>, xCenter: <Type usr=\"s:Sd\">Double</Type>, height: <Type usr=\"s:Sd\">Double</Type>, width: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 355}], "key.bodylength": 105, "key.bodyoffset": 433, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xCenter</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 177, "key.name": "init(yCenter:xCenter:height:width:)", "key.namelength": 69, "key.nameoffset": 362, "key.offset": 362, "key.parsed_declaration": "public init(yCenter: Double, xCenter: Double, height: Double, width: Double)", "key.parsed_scope.end": 22, "key.parsed_scope.start": 17, "key.substructure": [], "key.typename": "(Anchor.Type) -> (Double, Double, Double, Double) -> Anchor", "key.typeusr": "$s7yCenter01xA06height5width11FritzVision6AnchorVSd_S3dtcD", "key.usr": "s:11FritzVision6AnchorV7yCenter01xD06height5widthACSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 543}], "key.bodylength": 38, "key.bodyoffset": 568, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 57, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 554, "key.offset": 550, "key.parsed_declaration": "public var xMin: Double", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 611}], "key.bodylength": 38, "key.bodyoffset": 636, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 57, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 622, "key.offset": 618, "key.parsed_declaration": "public var xMax: Double", "key.parsed_scope.end": 30, "key.parsed_scope.start": 28, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMin: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 679}], "key.bodylength": 39, "key.bodyoffset": 704, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 690, "key.offset": 686, "key.parsed_declaration": "public var yMin: Double", "key.parsed_scope.end": 34, "key.parsed_scope.start": 32, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yMax: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 748}], "key.bodylength": 39, "key.bodyoffset": 773, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Anchors.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 58, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 759, "key.offset": 755, "key.parsed_declaration": "public var yMax: Double", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6AnchorV4yMaxSdvp"}], "key.typename": "Anchor.Type", "key.typeusr": "$s11FritzVision6AnchorVmD", "key.usr": "s:11FritzVision6AnchorV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2430, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBox) public class BoundingBox : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 532}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 18, "key.offset": 513}], "key.bodylength": 1860, "key.bodyoffset": 568, "key.doc.column": 14, "key.doc.comment": "BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.", "key.doc.declaration": "@objc(BoundingBox) public class BoundingBox : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift\" line=\"13\" column=\"14\"><Name>BoundingBox</Name><USR>c:@M@FritzVision@objc(cs)BoundingBox</USR><Declaration>@objc(BoundingBox) public class BoundingBox : NSObject</Declaration><CommentParts><Abstract><Para>BoundingBox Contains coordinates to draw bounding boxes on images as predicted directly by the model.  However, because of cropping or resizing done to accomadate model size constraints, the default values may not map to coordinates in your view.  Use the toCGRect functions to convert bounding box coordinates to fit the image.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "BoundingBox", "key.doc.type": "Class", "key.doclength": 333, "key.docoffset": 180, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 558}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBox)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBox</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1890, "key.name": "BoundingBox", "key.namelength": 11, "key.nameoffset": 545, "key.offset": 539, "key.parsed_declaration": "public class BoundingBox: NSObject", "key.parsed_scope.end": 79, "key.parsed_scope.start": 13, "key.runtime_name": "BoundingBox", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yMin: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 571}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yMin", "key.namelength": 4, "key.nameoffset": 582, "key.offset": 578, "key.parsed_declaration": "public let yMin: Double", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4yMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xMin: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 597}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xMin</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xMin", "key.namelength": 4, "key.nameoffset": 608, "key.offset": 604, "key.parsed_declaration": "public let xMin: Double", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4xMinSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let yMax: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 623}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>yMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yMax", "key.namelength": 4, "key.nameoffset": 634, "key.offset": 630, "key.parsed_declaration": "public let yMax: Double", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4yMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let xMax: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 649}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>xMax</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xMax", "key.namelength": 4, "key.nameoffset": 660, "key.offset": 656, "key.parsed_declaration": "public let xMax: Double", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC4xMaxSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithYMin:xMin:yMax:xMax:) public init(yMin: <Type usr=\"s:Sd\">Double</Type>, xMin: <Type usr=\"s:Sd\">Double</Type>, yMax: <Type usr=\"s:Sd\">Double</Type>, xMax: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 714}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 676}], "key.bodylength": 87, "key.bodyoffset": 783, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithYMin:xMin:yMax:xMax:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>yMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMin</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xMax</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 150, "key.name": "init(yMin:xMin:yMax:xMax:)", "key.namelength": 60, "key.nameoffset": 721, "key.offset": 721, "key.parsed_declaration": "public init(yMin: Double, xMin: Double, yMax: Double, xMax: Double)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 20, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc\">init(fromAnchor:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC4fromACSo6CGRectV_tcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Double, Double, Double, Double) -> BoundingBox", "key.typeusr": "$s4yMin01xA04yMax01xB011FritzVision11BoundingBoxCSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fromAnchor anchor: <Type usr=\"s:11FritzVision6AnchorV\">Anchor</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 875}], "key.bodylength": 115, "key.bodyoffset": 915, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fromAnchor</decl.var.parameter.argument_label> <decl.var.parameter.name>anchor</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision6AnchorV\">Anchor</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 149, "key.name": "init(fromAnchor:)", "key.namelength": 31, "key.nameoffset": 882, "key.offset": 882, "key.parsed_declaration": "public init(fromAnchor anchor: Anchor)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:\">init(yMin:xMin:yMax:xMax:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC4fromACSo6CGRectV_tcfc\">init(from:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (Anchor) -> BoundingBox", "key.typeusr": "$s10fromAnchor11FritzVision11BoundingBoxCAB0B0V_tcD", "key.usr": "s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(from rect: <Type usr=\"c:@S@CGRect\">CGRect</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1035}], "key.bodylength": 139, "key.bodyoffset": 1067, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>from</decl.var.parameter.argument_label> <decl.var.parameter.name>rect</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 165, "key.name": "init(from:)", "key.namelength": 23, "key.nameoffset": 1042, "key.offset": 1042, "key.parsed_declaration": "public init(from rect: CGRect)", "key.parsed_scope.end": 39, "key.parsed_scope.start": 34, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)initWithYMin:xMin:yMax:xMax:\">init(yMin:xMin:yMax:xMax:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision11BoundingBoxC10fromAnchorAcA0F0V_tcfc\">init(fromAnchor:)</RelatedName>"}], "key.substructure": [], "key.typename": "(BoundingBox.Type) -> (CGRect) -> BoundingBox", "key.typeusr": "$s4from11FritzVision11BoundingBoxCSo6CGRectV_tcD", "key.usr": "s:11FritzVision11BoundingBoxC4fromACSo6CGRectV_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1282}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 26, "key.offset": 1253}], "key.bodylength": 177, "key.bodyoffset": 1351, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 240, "key.name": "toCGRect(imgHeight:imgWidth:)", "key.namelength": 45, "key.nameoffset": 1294, "key.offset": 1289, "key.parsed_declaration": "public func toCGRect(imgHeight: Double, imgWidth: Double) -> CGRect", "key.parsed_scope.end": 48, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:\">toCGRect(imgHeight:imgWidth:xOffset:yOffset:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 1360, "key.offset": 1356, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 1403, "key.offset": 1399, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5WidthSo0F0VSd_SdtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double) -> CGRect", "key.typeusr": "$s9imgHeight0A5WidthSo6CGRectVSd_SdtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(imgHeight:imgWidth:xOffset:yOffset:) public func toCGRect(imgHeight: <Type usr=\"s:Sd\">Double</Type>, imgWidth: <Type usr=\"s:Sd\">Double</Type>, xOffset: <Type usr=\"s:Sd\">Double</Type>, yOffset: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1642}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 42, "key.offset": 1597}], "key.bodylength": 227, "key.bodyoffset": 1751, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(imgHeight:imgWidth:xOffset:yOffset:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toCGRect</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>imgHeight</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>imgWidth</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>xOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>yOffset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 330, "key.name": "toCGRect(imgHeight:imgWidth:xOffset:yOffset:)", "key.namelength": 79, "key.nameoffset": 1654, "key.offset": 1649, "key.parsed_declaration": "public func toCGRect(imgHeight: Double, imgWidth: Double, xOffset: Double, yOffset: Double)\n  -> CGRect", "key.parsed_scope.end": 64, "key.parsed_scope.start": 52, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:\">toCGRect(imgHeight:imgWidth:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 1760, "key.offset": 1756, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 1803, "key.offset": 1799, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8toCGRect9imgHeight0G5Width7xOffset01yJ0So0F0VSd_S3dtF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (Double, Double, Double, Double) -> CGRect", "key.typeusr": "$s9imgHeight0A5Width7xOffset01yD0So6CGRectVSd_S3dtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox(im)imgHeight:imgWidth:xOffset:yOffset:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func scaledBy(_ size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2122}], "key.bodylength": 256, "key.bodyoffset": 2170, "key.doc.column": 15, "key.doc.comment": "Scale object result by size.\n\n- Parameter size: Size to scale result from\n- Returns: CGRect of scaled bounding box.", "key.doc.declaration": "public func scaledBy(_ size: CGSize) -> CGRect", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift\" line=\"70\" column=\"15\"><Name>scaledBy(_:)</Name><USR>s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF</USR><Declaration>public func scaledBy(_ size: CGSize) -&gt; CGRect</Declaration><CommentParts><Abstract><Para>Scale object result by size.</Para></Abstract><Parameters><Parameter><Name>size</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Size to scale result from</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>CGRect of scaled bounding box.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 70, "key.doc.name": "scaledBy(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Size to scale result from"}], "name": "size"}], "key.doc.result_discussion": [{"Para": "CGRect of scaled bounding box."}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 1983, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>scaledBy</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 298, "key.name": "scaledBy(_:)", "key.namelength": 24, "key.nameoffset": 2134, "key.offset": 2129, "key.parsed_declaration": "public func scaledBy(_ size: CGSize) -> CGRect", "key.parsed_scope.end": 78, "key.parsed_scope.start": 70, "key.substructure": [{"key.annotated_decl": "<Declaration>let imgWidth: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imgWidth</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "imgWidth", "key.namelength": 8, "key.nameoffset": 2179, "key.offset": 2175, "key.parsed_declaration": "let imgWidth = Double(size.width)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF8imgWidthL_Sdvp"}, {"key.annotated_decl": "<Declaration>let imgHeight: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>imgHeight</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 35, "key.name": "imgHeight", "key.namelength": 9, "key.nameoffset": 2217, "key.offset": 2213, "key.parsed_declaration": "let imgHeight = Double(size.height)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF9imgHeightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let height: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>height</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "height", "key.namelength": 6, "key.nameoffset": 2258, "key.offset": 2254, "key.parsed_declaration": "let height = imgHeight * (yMax - yMin)", "key.parsed_scope.end": 74, "key.parsed_scope.start": 74, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF6heightL_Sdvp"}, {"key.annotated_decl": "<Declaration>let width: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBox.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>width</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "width", "key.namelength": 5, "key.nameoffset": 2301, "key.offset": 2297, "key.parsed_declaration": "let width = imgWidth * (xMax - xMin)", "key.parsed_scope.end": 75, "key.parsed_scope.start": 75, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF5widthL_Sdvp"}], "key.typename": "(BoundingBox) -> (CGSize) -> CGRect", "key.typeusr": "$sySo6CGRectVSo6CGSizeVcD", "key.usr": "s:11FritzVision11BoundingBoxC8scaledByySo6CGRectVSo6CGSizeVF"}], "key.typename": "BoundingBox.Type", "key.typeusr": "$s11FritzVision11BoundingBoxCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBox"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2282, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(BoundingBoxOutline) public class BoundingBoxOutline : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 192}], "key.bodylength": 2019, "key.bodyoffset": 261, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 251}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(BoundingBoxOutline)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>BoundingBoxOutline</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2056, "key.name": "BoundingBoxOutline", "key.namelength": 18, "key.nameoffset": 231, "key.offset": 225, "key.parsed_declaration": "public class BoundingBoxOutline: NSObject", "key.parsed_scope.end": 77, "key.parsed_scope.start": 12, "key.runtime_name": "BoundingBoxOutline", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(fontSize: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type> = 14.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 325}], "key.bodylength": 394, "key.bodyoffset": 364, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>fontSize</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type> = 14.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 427, "key.name": "init(fontSize:)", "key.namelength": 30, "key.nameoffset": 332, "key.offset": 332, "key.parsed_declaration": "public init(fontSize: CGFloat = 14.0)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "(BoundingBoxOutline.Type) -> (CGFloat) -> BoundingBoxOutline", "key.typeusr": "$s8fontSize11FritzVision18BoundingBoxOutlineC12CoreGraphics7CGFloatV_tcD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC8fontSizeAC12CoreGraphics7CGFloatV_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(parent:) public func addToLayer(_ parent: <Type usr=\"c:objc(cs)CALayer\">CALayer</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 868}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 14, "key.offset": 851}], "key.bodylength": 72, "key.bodyoffset": 911, "key.doc.column": 15, "key.doc.comment": "Add shape and text to parent layer\n\n- Parameter parent: parent CALayer", "key.doc.declaration": "@objc(parent:) public func addToLayer(_ parent: CALayer)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"34\" column=\"15\"><Name>addToLayer(_:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:</USR><Declaration>@objc(parent:) public func addToLayer(_ parent: CALayer)</Declaration><CommentParts><Abstract><Para>Add shape and text to parent layer</Para></Abstract><Parameters><Parameter><Name>parent</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>parent CALayer</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 34, "key.doc.name": "addToLayer(_:)", "key.doc.parameters": [{"discussion": [{"Para": "parent CALayer"}], "name": "parent"}], "key.doc.type": "Function", "key.doclength": 86, "key.docoffset": 763, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(parent:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>addToLayer</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>parent</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)CALayer\">CALayer</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 109, "key.name": "addToLayer(_:)", "key.namelength": 29, "key.nameoffset": 880, "key.offset": 875, "key.parsed_declaration": "public func addToLayer(_ parent: CALayer)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 34, "key.substructure": [], "key.typename": "(BoundingBoxOutline) -> (CALayer) -> ()", "key.typeusr": "$syySo7CALayerCcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)parent:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(frame:label:color:textColor:) public func show(frame: <Type usr=\"c:@S@CGRect\">CGRect</Type>, label: <Type usr=\"s:SS\">String</Type>, color: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type>, textColor: <Type usr=\"c:objc(cs)UIColor\">UIColor</Type> = .black)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1252}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1214}], "key.bodylength": 788, "key.bodyoffset": 1345, "key.doc.column": 15, "key.doc.comment": "Show Bounding box.\n\n- Parameters:\n  - frame: CGRect of coordinates to draw box\n  - label: Classified label\n  - color: Color of bounding box outline\n  - textColor: Classified label text", "key.doc.declaration": "@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"47\" column=\"15\"><Name>show(frame:label:color:textColor:)</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:</USR><Declaration>@objc(frame:label:color:textColor:) public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)</Declaration><CommentParts><Abstract><Para>Show Bounding box.</Para></Abstract><Parameters><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CGRect of coordinates to draw box</Para></Discussion></Parameter><Parameter><Name>label</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label</Para></Discussion></Parameter><Parameter><Name>color</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Color of bounding box outline</Para></Discussion></Parameter><Parameter><Name>textColor</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Classified label text</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 47, "key.doc.name": "show(frame:label:color:textColor:)", "key.doc.parameters": [{"discussion": [{"Para": "CGRect of coordinates to draw box"}], "name": "frame"}, {"discussion": [{"Para": "Classified label"}], "name": "label"}, {"discussion": [{"Para": "Color of bounding box outline"}], "name": "color"}, {"discussion": [{"Para": "Classified label text"}], "name": "textColor"}], "key.doc.type": "Function", "key.doclength": 224, "key.docoffset": 988, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(frame:label:color:textColor:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>show</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>color</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>textColor</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)UIColor\">UIColor</ref.class></decl.var.parameter.type> = .black</decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 875, "key.name": "show(frame:label:color:textColor:)", "key.namelength": 79, "key.nameoffset": 1264, "key.offset": 1259, "key.parsed_declaration": "public func show(frame: CGRect, label: String, color: UIColor, textColor: UIColor = .black)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 47, "key.substructure": [{"key.annotated_decl": "<Declaration>let path: <Type usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>path</decl.name>: <decl.var.type><ref.class usr=\"c:objc(cs)UIBezierPath\">UIBezierPath</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "path", "key.namelength": 4, "key.nameoffset": 1397, "key.offset": 1393, "key.parsed_declaration": "let path = UIBezierPath(rect: frame)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "UIBezierPath", "key.typeusr": "$sSo12UIBezierPathCD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF4pathL_So12UIBezierPathCvp"}, {"key.annotated_decl": "<Declaration>let textRect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 196, "key.name": "textRect", "key.namelength": 8, "key.nameoffset": 1705, "key.offset": 1701, "key.parsed_declaration": "let textRect = label.boundingRect(", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4RectL_AJvp"}, {"key.annotated_decl": "<Declaration>let textSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 74, "key.name": "textSize", "key.namelength": 8, "key.nameoffset": 1906, "key.offset": 1902, "key.parsed_declaration": "let textSize = CGSize(width: textRect.width + 12, height: textRect.height)", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J4SizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let textOrigin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>textOrigin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "textOrigin", "key.namelength": 10, "key.nameoffset": 1985, "key.offset": 1981, "key.parsed_declaration": "let textOrigin = CGPoint(x: frame.origin.x - 2, y: frame.origin.y - textSize.height)", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision18BoundingBoxOutlineC4show5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCALtF0J6OriginL_So7CGPointVvp"}], "key.typename": "(BoundingBoxOutline) -> (CGRect, String, UIColor, UIColor) -> ()", "key.typeusr": "$s5frame5label5color9textColorySo6CGRectV_SSSo7UIColorCAHtcD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)frame:label:color:textColor:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public func hide()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2194}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2186}], "key.bodylength": 64, "key.bodyoffset": 2214, "key.doc.column": 15, "key.doc.comment": "Hide bounding box from appearing in view.", "key.doc.declaration": "@objc public func hide()", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift\" line=\"73\" column=\"15\"><Name>hide()</Name><USR>c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide</USR><Declaration>@objc public func hide()</Declaration><CommentParts><Abstract><Para>Hide bounding box from appearing in view.</Para></Abstract></CommentParts></Function>", "key.doc.line": 73, "key.doc.name": "hide()", "key.doc.type": "Function", "key.doclength": 46, "key.docoffset": 2138, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxOutline.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>hide</decl.name>()</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 78, "key.name": "hide()", "key.namelength": 6, "key.nameoffset": 2206, "key.offset": 2201, "key.parsed_declaration": "public func hide()", "key.parsed_scope.end": 76, "key.parsed_scope.start": 73, "key.typename": "(BoundingBoxOutline) -> () -> ()", "key.typeusr": "$syycD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline(im)hide"}], "key.typename": "BoundingBoxOutline.Type", "key.typeusr": "$s11FritzVision18BoundingBoxOutlineCmD", "key.usr": "c:@M@FritzVision@objc(cs)BoundingBoxOutline"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/BoundingBoxPostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2403, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1144, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObject) public class FritzVisionObject : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 353}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 210}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 185}], "key.bodylength": 724, "key.bodyoffset": 418, "key.doc.comment": "Object identified in object detection model. Contains the label and corresponding BoundingBox of identified model.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 385}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 395}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObject)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObject</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 783, "key.name": "FritzVisionObject", "key.namelength": 17, "key.nameoffset": 366, "key.offset": 360, "key.parsed_declaration": "public class FritzVisionObject: NSObject, FritzPredictionResult", "key.parsed_scope.end": 46, "key.parsed_scope.start": 14, "key.runtime_name": "FritzVisionObject", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let detectedLabel: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 428}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 422}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>detectedLabel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "detectedLabel", "key.namelength": 13, "key.nameoffset": 439, "key.offset": 435, "key.parsed_declaration": "@objc public let detectedLabel: FritzVisionLabel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzVisionLabel", "key.typeusr": "$s11FritzVision0aB5LabelCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)detectedLabel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 518}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 512}], "key.doc.column": 20, "key.doc.comment": "BoundingBox of detected object.", "key.doc.declaration": "@objc public let boundingBox: BoundingBox", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift\" line=\"19\" column=\"20\"><Name>boundingBox</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox</USR><Declaration>@objc public let boundingBox: BoundingBox</Declaration><CommentParts><Abstract><Para>BoundingBox of detected object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "boundingBox", "key.doc.type": "Other", "key.doclength": 36, "key.docoffset": 474, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>boundingBox</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 28, "key.name": "boundingBox", "key.namelength": 11, "key.nameoffset": 529, "key.offset": 525, "key.parsed_declaration": "@objc public let boundingBox: BoundingBox", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "BoundingBox", "key.typeusr": "$s11FritzVision11BoundingBoxCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)boundingBox"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var label: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 563}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 557}], "key.bodylength": 39, "key.bodyoffset": 589, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>label</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 59, "key.name": "label", "key.namelength": 5, "key.nameoffset": 574, "key.offset": 570, "key.parsed_declaration": "@objc public var label: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)label"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var confidence: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 639}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 633}], "key.bodylength": 44, "key.bodyoffset": 670, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>confidence</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 69, "key.name": "confidence", "key.namelength": 10, "key.nameoffset": 650, "key.offset": 646, "key.parsed_declaration": "@objc public var confidence: Double", "key.parsed_scope.end": 27, "key.parsed_scope.start": 25, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)confidence"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 726}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 719}], "key.bodylength": 206, "key.bodyoffset": 760, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 232, "key.name": "description", "key.namelength": 11, "key.nameoffset": 739, "key.offset": 735, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 39, "key.parsed_scope.start": 29, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(py)description"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithLabel:boundingBox:) public init(label: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</Type>, boundingBox: <Type usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1007}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 971}], "key.bodylength": 69, "key.bodyoffset": 1071, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/FritzVisionObject.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithLabel:boundingBox:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>label</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabel\">FritzVisionLabel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>boundingBox</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)BoundingBox\">BoundingBox</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(label:boundingBox:)", "key.namelength": 55, "key.nameoffset": 1014, "key.offset": 1014, "key.parsed_declaration": "public init(label: FritzVisionLabel, boundingBox: BoundingBox)", "key.parsed_scope.end": 45, "key.parsed_scope.start": 42, "key.substructure": [], "key.typename": "(FritzVisionObject.Type) -> (FritzVisionLabel, BoundingBox) -> FritzVisionObject", "key.typeusr": "$s5label11boundingBox11FritzVision0dE6ObjectCAC0dE5LabelC_AC08BoundingC0CtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject(im)initWithLabel:boundingBox:"}], "key.typename": "FritzVisionObject.Type", "key.typeusr": "$s11FritzVision0aB6ObjectCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObject"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/Math.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 807, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/ObjectModelSpec.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 949, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class ObjectModelSpec</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 180}], "key.bodylength": 737, "key.bodyoffset": 210, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/ObjectModelSpec.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ObjectModelSpec</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 761, "key.name": "ObjectModelSpec", "key.namelength": 15, "key.nameoffset": 193, "key.offset": 187, "key.parsed_declaration": "public class ObjectModelSpec", "key.parsed_scope.end": 39, "key.parsed_scope.start": 11, "key.runtime_name": "_TtC4main15ObjectModelSpec", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:11FritzVision15ObjectModelSpecC\">ObjectModelSpec</Type>.AnchorBoxModelDef</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 251}], "key.bodylength": 71, "key.bodyoffset": 284, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/ObjectModelSpec.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision15ObjectModelSpecC\">ObjectModelSpec</ref.class>.<decl.name>AnchorBoxModelDef</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 98, "key.name": "AnchorBoxModelDef", "key.namelength": 17, "key.nameoffset": 265, "key.offset": 258, "key.parsed_declaration": "public struct AnchorBoxModelDef", "key.parsed_scope.end": 17, "key.parsed_scope.start": 14, "key.substructure": [], "key.typename": "ObjectModelSpec.AnchorBoxModelDef.Type", "key.typeusr": "$s11FritzVision15ObjectModelSpecC09AnchorBoxD3DefVmD", "key.usr": "s:11FritzVision15ObjectModelSpecC09AnchorBoxD3DefV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct <Type usr=\"s:11FritzVision15ObjectModelSpecC\">ObjectModelSpec</Type>.BoundingBoxModelDef</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 360}], "key.bodylength": 168, "key.bodyoffset": 395, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/ObjectModelSpec.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision15ObjectModelSpecC\">ObjectModelSpec</ref.class>.<decl.name>BoundingBoxModelDef</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 197, "key.name": "BoundingBoxModelDef", "key.namelength": 19, "key.nameoffset": 374, "key.offset": 367, "key.parsed_declaration": "public struct BoundingBoxModelDef", "key.parsed_scope.end": 25, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "ObjectModelSpec.BoundingBoxModelDef.Type", "key.typeusr": "$s11FritzVision15ObjectModelSpecC011BoundingBoxD3DefVmD", "key.usr": "s:11FritzVision15ObjectModelSpecC011BoundingBoxD3DefV"}], "key.typename": "ObjectModelSpec.Type", "key.typeusr": "$s11FritzVision15ObjectModelSpecCmD", "key.usr": "s:11FritzVision15ObjectModelSpecC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/Helpers/PostProcessor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1160, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1102, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModelFast) public final class FritzVisionObjectModelFast : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 253}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 246}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 222}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 188}], "key.bodylength": 760, "key.bodyoffset": 340, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 26, "key.offset": 293}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 321}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModelFast</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor\">FritzVisionObjectPredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionObjectPredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 842, "key.name": "FritzVisionObjectModelFast", "key.namelength": 26, "key.nameoffset": 265, "key.offset": 259, "key.parsed_declaration": "public final class FritzVisionObjectModelFast: FritzVisionObjectPredictor, DownloadableModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionObjectModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 350}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 344}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 142, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 368, "key.offset": 357, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static let modelConfig = FritzModelConfiguration(", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast(cpy)modelConfig"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 509}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 503}], "key.bodylength": 46, "key.bodyoffset": 560, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 527, "key.offset": 516, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast(cpy)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 617}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 611}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 635, "key.offset": 624, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast(cpy)wifiRequiredForModelDownload"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast\">FritzVisionObjectModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 926}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 39, "key.offset": 884}], "key.bodylength": 57, "key.bodyoffset": 1041, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionObjectModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift\" line=\"31\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast(cm)fetchModelWithCompletionHandler:</USR><Declaration>@objc(fetchModelWithCompletionHandler:) public static func fetchModel(completionHandler: @escaping (FritzVisionObjectModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 705, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(fetchModelWithCompletionHandler:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast\">FritzVisionObjectModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 166, "key.name": "fetchModel(completionHandler:)", "key.namelength": 94, "key.nameoffset": 945, "key.offset": 933, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionObjectModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(FritzVisionObjectModelFast.Type) -> (@escaping (FritzVisionObjectModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD15ObjectModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast(cm)fetchModelWithCompletionHandler:"}], "key.typename": "FritzVisionObjectModelFast.Type", "key.typeusr": "$s11FritzVision0aB15ObjectModelFastCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionInputProvider.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1613, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class ObjectDetectionInputProvider : <Type usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 206}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 182}], "key.bodylength": 1343, "key.bodyoffset": 268, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 249}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionInputProvider.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>ObjectDetectionInputProvider</decl.name> : <ref.protocol usr=\"c:objc(pl)MLFeatureProvider\">MLFeatureProvider</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "MLFeatureProvider"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1399, "key.name": "ObjectDetectionInputProvider", "key.namelength": 28, "key.nameoffset": 219, "key.offset": 213, "key.parsed_declaration": "public class ObjectDetectionInputProvider: MLFeatureProvider", "key.parsed_scope.end": 58, "key.parsed_scope.start": 12, "key.runtime_name": "_TtC4main28ObjectDetectionInputProvider", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var featureNames: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:SS\">String</Type>&gt; { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 566}], "key.bodylength": 169, "key.bodyoffset": 604, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionInputProvider.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>featureNames</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:SS\">String</ref.struct>&gt;</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 201, "key.name": "featureNames", "key.namelength": 12, "key.nameoffset": 577, "key.offset": 573, "key.overrides": [{"key.usr": "c:objc(pl)MLFeatureProvider(py)featureNames"}], "key.parsed_declaration": "public var featureNames: Set<String>", "key.parsed_scope.end": 28, "key.parsed_scope.start": 22, "key.typename": "Set<String>", "key.typeusr": "$sShySSGD", "key.usr": "s:11FritzVision28ObjectDetectionInputProviderC12featureNamesShySSGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func featureValue(for featureName: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"c:objc(cs)MLFeatureValue\">MLFeatureValue</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 778}], "key.bodylength": 519, "key.bodyoffset": 848, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionInputProvider.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>featureValue</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>featureName</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:objc(cs)MLFeatureValue\">MLFeatureValue</ref.class>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 583, "key.name": "featureValue(for:)", "key.namelength": 37, "key.nameoffset": 790, "key.offset": 785, "key.overrides": [{"key.usr": "c:objc(pl)MLFeatureProvider(im)featureValueForName:"}], "key.parsed_declaration": "public func featureValue(for featureName: String) -> MLFeatureValue?", "key.parsed_scope.end": 47, "key.parsed_scope.start": 30, "key.substructure": [], "key.typename": "(ObjectDetectionInputProvider) -> (String) -> MLFeatureValue?", "key.typeusr": "$s3forSo14MLFeatureValueCSgSS_tcD", "key.usr": "s:11FritzVision28ObjectDetectionInputProviderC12featureValue3forSo09MLFeatureH0CSgSS_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(image: <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>? = nil, iouThreshold: <Type usr=\"s:Sd\">Double</Type>? = nil, confidenceThreshold: <Type usr=\"s:Sd\">Double</Type>? = nil)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1372}], "key.bodylength": 114, "key.bodyoffset": 1495, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectDetectionInputProvider.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>confidenceThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct>?</decl.var.parameter.type> = nil</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 231, "key.name": "init(image:iouThreshold:confidenceThreshold:)", "key.namelength": 114, "key.nameoffset": 1379, "key.offset": 1379, "key.parsed_declaration": "public init(\n  image: CVPixelBuffer? = nil,\n  iouThreshold: Double? = nil,\n  confidenceThreshold: Double? = nil\n)", "key.parsed_scope.end": 57, "key.parsed_scope.start": 49, "key.substructure": [], "key.typename": "(ObjectDetectionInputProvider.Type) -> (CVBuffer?, Double?, Double?) -> ObjectDetectionInputProvider", "key.typeusr": "$s5image12iouThreshold010confidenceC011FritzVision28ObjectDetectionInputProviderCSo11CVBufferRefaSg_SdSgAJtcD", "key.usr": "s:11FritzVision28ObjectDetectionInputProviderC5image12iouThreshold010confidenceI0ACSo11CVBufferRefaSg_SdSgAJtcfc"}], "key.typename": "ObjectDetectionInputProvider.Type", "key.typeusr": "$s11FritzVision28ObjectDetectionInputProviderCmD", "key.usr": "s:11FritzVision28ObjectDetectionInputProviderC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 10290, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectModelOptions) public final class FritzVisionObjectModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 273}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 266}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 229}], "key.bodylength": 1349, "key.bodyoffset": 345, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 316}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 326}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1416, "key.name": "FritzVisionObjectModelOptions", "key.namelength": 29, "key.nameoffset": 285, "key.offset": 279, "key.parsed_declaration": "public final class FritzVisionObjectModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 42, "key.parsed_scope.start": 15, "key.runtime_name": "FritzVisionObjectModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var threshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 439}], "key.doc.column": 20, "key.doc.comment": "Confidence threshold for prediction results in the range of [0, 1], default is 0.6.", "key.doc.declaration": "@objc public var threshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"18\" column=\"20\"><Name>threshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold</USR><Declaration>@objc public var threshold: Double</Declaration><CommentParts><Abstract><Para>Confidence threshold for prediction results in the range of [0, 1], default is 0.6.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "threshold", "key.doc.type": "Other", "key.doclength": 88, "key.docoffset": 349, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>threshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "threshold", "key.namelength": 9, "key.nameoffset": 456, "key.offset": 452, "key.parsed_declaration": "@objc public var threshold: Double = 0.6", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)threshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var iouThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 596}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 590}], "key.doc.column": 20, "key.doc.comment": "Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.", "key.doc.declaration": "@objc public var iouThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"21\" column=\"20\"><Name>iouThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold</USR><Declaration>@objc public var iouThreshold: Double</Declaration><CommentParts><Abstract><Para>Threshold for overlap of items within a single class in range [0, 1].  Lower values are more strict.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "iouThreshold", "key.doc.type": "Other", "key.doclength": 105, "key.docoffset": 483, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>iouThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "iouThreshold", "key.namelength": 12, "key.nameoffset": 607, "key.offset": 603, "key.parsed_declaration": "@objc public var iouThreshold: Double = 0.25", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)iouThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var numResults: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 692}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 686}], "key.doc.column": 20, "key.doc.comment": "Number of results to return from request.", "key.doc.declaration": "@objc public var numResults: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"24\" column=\"20\"><Name>numResults</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults</USR><Declaration>@objc public var numResults: Int</Declaration><CommentParts><Abstract><Para>Number of results to return from request.</Para></Abstract></CommentParts></Other>", "key.doc.line": 24, "key.doc.name": "numResults", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 638, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>numResults</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 24, "key.name": "numResults", "key.namelength": 10, "key.nameoffset": 703, "key.offset": 699, "key.parsed_declaration": "@objc public var numResults: Int = 15", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)numResults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 733}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 727}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 744, "key.offset": 740, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 989}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 983}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public let forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"30\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public let forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 30, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 808, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1000, "key.offset": 996, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public let forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1564}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1558}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"39\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 1038, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1575, "key.offset": 1571, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1614}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 72, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 1632, "key.offset": 1621, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionObjectModelOptions()", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB18ObjectModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}], "key.typename": "FritzVisionObjectModelOptions.Type", "key.typeusr": "$s11FritzVision0aB18ObjectModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionObjectPredictor) public class FritzVisionObjectPredictor : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1755}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1731}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 33, "key.offset": 1697}], "key.bodylength": 4856, "key.bodyoffset": 1833, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 1796}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 20, "key.offset": 1811}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionObjectPredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionObjectPredictor</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision20CoreMLImagePredictorP\">CoreMLImagePredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLImagePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4928, "key.name": "FritzVisionObjectPredictor", "key.namelength": 26, "key.nameoffset": 1768, "key.offset": 1762, "key.parsed_declaration": "public class FritzVisionObjectPredictor: BasePredictor, CoreMLImagePredictor", "key.parsed_scope.end": 186, "key.parsed_scope.start": 46, "key.runtime_name": "FritzVisionObjectPredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1922}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1915}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 1891}], "key.bodylength": 269, "key.bodyoffset": 1958, "key.doc.column": 19, "key.doc.declaration": "@objc(initWithModel:) public override init(model: FritzMLModel)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"51\" column=\"19\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:</USR><Declaration>@objc(initWithModel:) public override init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BasePredictor</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 51, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 297, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 1931, "key.offset": 1931, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:"}], "key.parsed_declaration": "public override init(model: FritzMLModel)", "key.parsed_scope.end": 60, "key.parsed_scope.start": 51, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:processedLabels:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 2091, "key.offset": 2091, "key.parsed_declaration": "} catch let error as FritzObjectModelSpecificationError", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "FritzObjectModelSpecificationError", "key.typeusr": "$s11FritzVision0A29ObjectModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB15ObjectPredictorC5modelAC0A12ManagedModel0A7MLModelC_tcfc5errorL_AA0acG18SpecificationErrorOvp"}], "key.typename": "(FritzVisionObjectPredictor.Type) -> (FritzMLModel) -> FritzVisionObjectPredictor", "key.typeusr": "$s5model11FritzVision0bC15ObjectPredictorC0B12ManagedModel0B7MLModelC_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2276}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2269}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 2232}], "key.bodylength": 297, "key.bodyoffset": 2345, "key.doc.column": 19, "key.doc.declaration": "@objc(initWithModel:managedModel:) public override init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.doc.discussion": [{"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"63\" column=\"19\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:managedModel:</USR><Declaration>@objc(initWithModel:managedModel:) public override init(model: FritzMLModel, managedModel: FritzManagedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters><Discussion><Note><Para>This documentation comment was inherited from <codeVoice>BasePredictor</codeVoice>.</Para></Note></Discussion></CommentParts></Function>", "key.doc.line": 63, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 358, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 2285, "key.offset": 2285, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:"}], "key.parsed_declaration": "public override init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 72, "key.parsed_scope.start": 63, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:processedLabels:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 2506, "key.offset": 2506, "key.parsed_declaration": "} catch let error as FritzObjectModelSpecificationError", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "FritzObjectModelSpecificationError", "key.typeusr": "$s11FritzVision0A29ObjectModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB15ObjectPredictorC5model12managedModelAC0a7ManagedG00A7MLModelC_A2FCtcfc5errorL_AA0acG18SpecificationErrorOvp"}], "key.typename": "(FritzVisionObjectPredictor.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionObjectPredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE15ObjectPredictorC0d7ManagedC00D7MLModelC_A2FCtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:managedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 2972}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2965}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 2931}], "key.bodylength": 275, "key.bodyoffset": 3016, "key.doc.column": 19, "key.doc.comment": "Initialize Object model using a custom model with accessible class names.\nFor models with built-in post processing and built-in class names.\nUses default class names as a fall back if none are found.\n\n- Parameters:\n  - model: IdentifiedModel to use", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public override init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"81\" column=\"19\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) public override init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize Object model using a custom model with accessible class names. For models with built-in post processing and built-in class names. Uses default class names as a fall back if none are found.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>IdentifiedModel to use</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 81, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "IdentifiedModel to use"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 282, "key.docoffset": 2647, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 311, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 2981, "key.offset": 2981, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithIdentifiedModel:"}], "key.parsed_declaration": "public override init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 90, "key.parsed_scope.start": 81, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:processedLabels:\">init(identifiedModel:classNames:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 3155, "key.offset": 3155, "key.parsed_declaration": "} catch let error as FritzObjectModelSpecificationError", "key.parsed_scope.end": 85, "key.parsed_scope.start": 85, "key.typename": "FritzObjectModelSpecificationError", "key.typeusr": "$s11FritzVision0A29ObjectModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB15ObjectPredictorC5modelAC0A12ManagedModel015SwiftIdentifiedG0_p_tcfc5errorL_AA0acG18SpecificationErrorOvp"}], "key.typename": "(FritzVisionObjectPredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionObjectPredictor", "key.typeusr": "$s5model11FritzVision0bC15ObjectPredictorC0B12ManagedModel015SwiftIdentifiedG0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:processedLabels:) public init(identifiedModel: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>, classNames: [<Type usr=\"s:SS\">String</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3619}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 3569}], "key.bodylength": 457, "key.bodyoffset": 3693, "key.doc.column": 10, "key.doc.comment": "Initialize Object model using a custom model with the given class names.\nFor models with built-in post processing without built-in class names.\n\n- Parameters:\n  - identifiedModel: IdentifiedModel to use\n  - classNames: Labels for objects", "key.doc.declaration": "@objc(initWithIdentifiedModel:processedLabels:) public init(identifiedModel: SwiftIdentifiedModel, classNames: [String])", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"99\" column=\"10\"><Name>init(identifiedModel:classNames:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:processedLabels:</USR><Declaration>@objc(initWithIdentifiedModel:processedLabels:) public init(identifiedModel: SwiftIdentifiedModel, classNames: [String])</Declaration><CommentParts><Abstract><Para>Initialize Object model using a custom model with the given class names. For models with built-in post processing without built-in class names.</Para></Abstract><Parameters><Parameter><Name>identifiedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>IdentifiedModel to use</Para></Discussion></Parameter><Parameter><Name>classNames</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Labels for objects</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 99, "key.doc.name": "init(identifiedModel:classNames:)", "key.doc.parameters": [{"discussion": [{"Para": "IdentifiedModel to use"}], "name": "identifiedModel"}, {"discussion": [{"Para": "Labels for objects"}], "name": "classNames"}], "key.doc.type": "Function", "key.doclength": 271, "key.docoffset": 3296, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:processedLabels:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>identifiedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>classNames</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 525, "key.name": "init(identifiedModel:classNames:)", "key.namelength": 65, "key.nameoffset": 3626, "key.offset": 3626, "key.parsed_declaration": "public init(identifiedModel: SwiftIdentifiedModel, classNames: [String])", "key.parsed_scope.end": 110, "key.parsed_scope.start": 99, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithModel:managedModel:\">init(model:managedModel:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A29ObjectModelSpecificationErrorO\">FritzObjectModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 4014, "key.offset": 4014, "key.parsed_declaration": "} catch let error as FritzObjectModelSpecificationError", "key.parsed_scope.end": 105, "key.parsed_scope.start": 105, "key.typename": "FritzObjectModelSpecificationError", "key.typeusr": "$s11FritzVision0A29ObjectModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB15ObjectPredictorC15identifiedModel10classNamesAC0a7ManagedF0015SwiftIdentifiedF0_p_SaySSGtcfc5errorL_AA0acF18SpecificationErrorOvp"}], "key.typename": "(FritzVisionObjectPredictor.Type) -> (SwiftIdentifiedModel, [String]) -> FritzVisionObjectPredictor", "key.typeusr": "$s15identifiedModel10classNames11FritzVision0eF15ObjectPredictorC0e7ManagedB0015SwiftIdentifiedB0_p_SaySSGtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)initWithIdentifiedModel:processedLabels:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</Type> = .init(), completion: ([<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</Type>]?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6456}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 6419}], "key.bodylength": 65, "key.bodyoffset": 6622, "key.doc.column": 15, "key.doc.comment": "Run prediction for vision object model.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request has finished processing.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift\" line=\"179\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionObjectModelOptions = .init(), completion: ([FritzVisionObject]?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run prediction for vision object model.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request has finished processing.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 179, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request has finished processing."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 264, "key.docoffset": 6153, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/ObjectDetection/ObjectPredictor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelOptions\">FritzVisionObjectModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObject\">FritzVisionObject</ref.class>]?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 225, "key.name": "predict(_:options:completion:)", "key.namelength": 152, "key.nameoffset": 6468, "key.offset": 6463, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionObjectModelOptions = .init(),\n  completion: ([FritzVisionObject]?, Error?) -> Void\n)", "key.parsed_scope.end": 185, "key.parsed_scope.start": 179, "key.substructure": [], "key.typename": "(FritzVisionObjectPredictor) -> (FritzVisionImage, FritzVisionObjectModelOptions, ([FritzVisionObject]?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD18ObjectModelOptionsCySayAC0cdF0CGSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor(im)predict:options:completion:"}], "key.typename": "FritzVisionObjectPredictor.Type", "key.typeusr": "$s11FritzVision0aB15ObjectPredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionObjectPredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 11367, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class DecodePoseWithDisplacements&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1565}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1541}], "key.bodylength": 9734, "key.bodyoffset": 1631, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>DecodePoseWithDisplacements</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 9794, "key.name": "DecodePoseWithDisplacements", "key.namelength": 27, "key.nameoffset": 1578, "key.offset": 1572, "key.parsed_declaration": "public class DecodePoseWithDisplacements<Skeleton: SkeletonType>", "key.parsed_scope.end": 351, "key.parsed_scope.start": 66, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1616}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1606, "key.offset": 1606, "key.parsed_declaration": "public class DecodePoseWithDisplacements<Skeleton: SkeletonType>", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 67, "key.name": "TODO: Not thrilled about this, but the dimensions of the pose model", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1849}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func decodeMultiplePoses(maxPoseDetections: <Type usr=\"s:Si\">Int</Type>, partThreshold: <Type usr=\"s:Sd\">Double</Type> = 0.5, nmsRadius: <Type usr=\"s:Si\">Int</Type> = 20) -&gt; [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3839}], "key.bodylength": 962, "key.bodyoffset": 3982, "key.doc.column": 15, "key.doc.comment": "Decodes poses from model output. Returns poses with keypoint positions normalized from 0 to 1.\n- Parameter maxPoseDetections: Number of poses to detect.\n- Parameter partThreshold: Threshold for a part to be included in a pose.\n- Parameter nmsRadius: NMS radius.", "key.doc.declaration": "public func decodeMultiplePoses(maxPoseDetections: Int, partThreshold: Double = 0.5, nmsRadius: Int = 20) -> [Pose<Skeleton>]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift\" line=\"118\" column=\"15\"><Name>decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)</Name><USR>s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF</USR><Declaration>public func decodeMultiplePoses(maxPoseDetections: Int, partThreshold: Double = 0.5, nmsRadius: Int = 20) -&gt; [Pose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Decodes poses from model output. Returns poses with keypoint positions normalized from 0 to 1.</Para></Abstract><Parameters><Parameter><Name>maxPoseDetections</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Number of poses to detect.</Para></Discussion></Parameter><Parameter><Name>partThreshold</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Threshold for a part to be included in a pose.</Para></Discussion></Parameter><Parameter><Name>nmsRadius</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>NMS radius.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)", "key.doc.parameters": [{"discussion": [{"Para": "Number of poses to detect."}], "name": "maxPoseDetections"}, {"discussion": [{"Para": "Threshold for a part to be included in a pose."}], "name": "partThreshold"}, {"discussion": [{"Para": "NMS radius."}], "name": "nmsRadius"}], "key.doc.type": "Function", "key.doclength": 284, "key.docoffset": 3553, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>decodeMultiplePoses</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>maxPoseDetections</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.5</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>nmsRadius</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 20</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision27DecodePoseWithDisplacementsC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1099, "key.name": "decodeMultiplePoses(maxPoseDetections:partThreshold:nmsRadius:)", "key.namelength": 109, "key.nameoffset": 3851, "key.offset": 3846, "key.parsed_declaration": "public func decodeMultiplePoses(\n  maxPoseDetections: Int,\n  partThreshold: Double = 0.5,\n  nmsRadius: Int = 20\n) -> [Pose<Skeleton>]", "key.parsed_scope.end": 153, "key.parsed_scope.start": 118, "key.substructure": [{"key.annotated_decl": "<Declaration>var poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 3991, "key.offset": 3987, "key.parsed_declaration": "var poses: [Pose<Skeleton>] = []", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF5posesL_AKvp"}, {"key.annotated_decl": "<Declaration>var queue: <Type usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</Type>&lt;<Type usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</Type>&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>queue</decl.name>: <decl.var.type><ref.struct usr=\"s:11FritzVision13PriorityQueueV\">PriorityQueue</ref.struct>&lt;<ref.typealias usr=\"s:11FritzVision13PartWithScorea\">PartWithScore</ref.typealias>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 84, "key.name": "queue", "key.namelength": 5, "key.nameoffset": 4029, "key.offset": 4025, "key.parsed_declaration": "var queue = buildPartWithScoreQueue(partThreshold: partThreshold, localMaxRadius: 1)", "key.parsed_scope.end": 125, "key.parsed_scope.start": 125, "key.typename": "PriorityQueue<(score: Double, part: Part)>", "key.typeusr": "$s11FritzVision13PriorityQueueVySd5score_AA4PartV4parttGD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF5queueL_AA13PriorityQueueVySd5score_AA4PartV0L0tGvp"}, {"key.annotated_decl": "<Declaration>let squaredNMSRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/DecodePose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>squaredNMSRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 44, "key.name": "squaredNMSRadius", "key.namelength": 16, "key.nameoffset": 4118, "key.offset": 4114, "key.parsed_declaration": "let squaredNMSRadius = nmsRadius * nmsRadius", "key.parsed_scope.end": 126, "key.parsed_scope.start": 126, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF16squaredNMSRadiusL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (DecodePoseWithDisplacements<Skeleton>) -> (Int, Double, Int) -> [Pose<Skeleton>]", "key.typeusr": "$s17maxPoseDetections13partThreshold9nmsRadiusSay11FritzVision0B0CyxGGSi_SdSitcD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC19decodeMultiplePoses03maxD10Detections13partThreshold9nmsRadiusSayAA0D0CyxGGSi_SdSitF"}], "key.typename": "DecodePoseWithDisplacements<Skeleton>.Type", "key.typeusr": "$s11FritzVision27DecodePoseWithDisplacementsCyxGmD", "key.usr": "s:11FritzVision27DecodePoseWithDisplacementsC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1214, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModelAccurate) @_objcRuntimeName(FritzVisionPoseModelAccurate) public final class FritzVisionHumanPoseModelAccurate : <Type usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 253}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 246}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 210}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 186}], "key.bodylength": 860, "key.bodyoffset": 352, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 300}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 333}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_objcRuntimeName</syntaxtype.attribute.name>(FritzVisionPoseModelAccurate)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHumanPoseModelAccurate</decl.name> : <ref.class usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHumanPosePredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 954, "key.name": "FritzVisionHumanPoseModelAccurate", "key.namelength": 33, "key.nameoffset": 265, "key.offset": 259, "key.parsed_declaration": "public final class FritzVisionHumanPoseModelAccurate: FritzVisionHumanPosePredictor,\n  DownloadableModel", "key.parsed_scope.end": 38, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPoseModelAccurate", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 412}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 406}], "key.doc.column": 27, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift\" line=\"17\" column=\"27\"><Name>modelConfig</Name><USR>s:11FritzVision0aB22HumanPoseModelAccurateC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ</USR><Declaration>@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 17, "key.doc.name": "modelConfig", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 355, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 167, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 430, "key.offset": 419, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB22HumanPoseModelAccurateC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 596}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 590}], "key.bodylength": 46, "key.bodyoffset": 647, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 614, "key.offset": 603, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB22HumanPoseModelAccurateC07managedE00a7ManagedE0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 764}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 758}], "key.doc.column": 27, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift\" line=\"28\" column=\"27\"><Name>wifiRequiredForModelDownload</Name><USR>s:11FritzVision0aB22HumanPoseModelAccurateC015wifiRequiredForE8DownloadSbvpZ</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 28, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 698, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 782, "key.offset": 771, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB22HumanPoseModelAccurateC015wifiRequiredForE8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision0aB22HumanPoseModelAccurateC\">FritzVisionHumanPoseModelAccurate</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1031}], "key.bodylength": 57, "key.bodyoffset": 1153, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelAccurate?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift\" line=\"33\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>s:11FritzVision0aB22HumanPoseModelAccurateC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ</USR><Declaration>public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelAccurate?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 33, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 852, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseAccurate.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB22HumanPoseModelAccurateC\">FritzVisionHumanPoseModelAccurate</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 173, "key.name": "fetchModel(completionHandler:)", "key.namelength": 101, "key.nameoffset": 1050, "key.offset": 1038, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHumanPoseModelAccurate?, Error?) -> Void\n)", "key.parsed_scope.end": 37, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "(FritzVisionHumanPoseModelAccurate.Type) -> (@escaping (FritzVisionHumanPoseModelAccurate?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD22HumanPoseModelAccurateCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB22HumanPoseModelAccurateC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ"}], "key.typename": "FritzVisionHumanPoseModelAccurate.Type", "key.typeusr": "$s11FritzVision0aB22HumanPoseModelAccurateCmD", "key.usr": "s:11FritzVision0aB22HumanPoseModelAccurateC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1201, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHumanPoseModelFast) @_objcRuntimeName(FritzVisionHumanPoseModelFast) public final class FritzVisionHumanPoseModelFast : <Type usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 250}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 243}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 206}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 182}], "key.bodylength": 856, "key.bodyoffset": 343, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 293}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 324}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHumanPoseModelFast)</syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_objcRuntimeName</syntaxtype.attribute.name>(FritzVisionHumanPoseModelFast)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHumanPoseModelFast</decl.name> : <ref.class usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHumanPosePredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 944, "key.name": "FritzVisionHumanPoseModelFast", "key.namelength": 29, "key.nameoffset": 262, "key.offset": 256, "key.parsed_declaration": "public final class FritzVisionHumanPoseModelFast: FritzVisionHumanPosePredictor, DownloadableModel", "key.parsed_scope.end": 36, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHumanPoseModelFast", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 403}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 397}], "key.doc.column": 27, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift\" line=\"15\" column=\"27\"><Name>modelConfig</Name><USR>s:11FritzVision0aB18HumanPoseModelFastC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ</USR><Declaration>@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "modelConfig", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 346, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 167, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 421, "key.offset": 410, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB18HumanPoseModelFastC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 587}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 581}], "key.bodylength": 46, "key.bodyoffset": 638, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 605, "key.offset": 594, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 23, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB18HumanPoseModelFastC07managedE00a7ManagedE0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 755}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 749}], "key.doc.column": 27, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift\" line=\"26\" column=\"27\"><Name>wifiRequiredForModelDownload</Name><USR>s:11FritzVision0aB18HumanPoseModelFastC015wifiRequiredForE8DownloadSbvpZ</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 26, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 689, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 773, "key.offset": 762, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB18HumanPoseModelFastC015wifiRequiredForE8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision0aB18HumanPoseModelFastC\">FritzVisionHumanPoseModelFast</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1022}], "key.bodylength": 57, "key.bodyoffset": 1140, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelFast?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift\" line=\"31\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>s:11FritzVision0aB18HumanPoseModelFastC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ</USR><Declaration>public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelFast?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 843, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseFast.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB18HumanPoseModelFastC\">FritzVisionHumanPoseModelFast</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 169, "key.name": "fetchModel(completionHandler:)", "key.namelength": 97, "key.nameoffset": 1041, "key.offset": 1029, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHumanPoseModelFast?, Error?) -> Void\n)", "key.parsed_scope.end": 35, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "(FritzVisionHumanPoseModelFast.Type) -> (@escaping (FritzVisionHumanPoseModelFast?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD18HumanPoseModelFastCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB18HumanPoseModelFastC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ"}], "key.typename": "FritzVisionHumanPoseModelFast.Type", "key.typeusr": "$s11FritzVision0aB18HumanPoseModelFastCmD", "key.usr": "s:11FritzVision0aB18HumanPoseModelFastC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 333, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHumanPosePredictor) @_objcRuntimeName(FritzVisionHumanPosePredictor) public class FritzVisionHumanPosePredictor : <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 244}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 207}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 183}], "key.bodylength": 2, "key.bodyoffset": 329, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 39, "key.offset": 288}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHumanPosePredictor)</syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_objcRuntimeName</syntaxtype.attribute.name>(FritzVisionHumanPosePredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHumanPosePredictor</decl.name> : <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;</decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionPosePredictor<HumanSkeleton>"}], "key.kind": "source.lang.swift.decl.class", "key.length": 81, "key.name": "FritzVisionHumanPosePredictor", "key.namelength": 29, "key.nameoffset": 257, "key.offset": 251, "key.parsed_declaration": "public class FritzVisionHumanPosePredictor: FritzVisionPosePredictor<HumanSkeleton>", "key.parsed_scope.end": 15, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHumanPosePredictor", "key.typename": "FritzVisionHumanPosePredictor.Type", "key.typeusr": "$s11FritzVision0aB18HumanPosePredictorCmD", "key.usr": "s:11FritzVision0aB18HumanPosePredictorC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1205, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionHumanPoseModelSmall) @_objcRuntimeName(FritzVisionHumanPoseModelSmall) public final class FritzVisionHumanPoseModelSmall : <Type usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</Type>, <Type usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 252}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 245}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 221}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 37, "key.offset": 183}], "key.bodylength": 857, "key.bodyoffset": 346, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 29, "key.offset": 296}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 327}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionHumanPoseModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.attribute.builtin><syntaxtype.attribute.name>@_objcRuntimeName</syntaxtype.attribute.name>(FritzVisionHumanPoseModelSmall)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionHumanPoseModelSmall</decl.name> : <ref.class usr=\"s:11FritzVision0aB18HumanPosePredictorC\">FritzVisionHumanPosePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision17DownloadableModelP\">DownloadableModel</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionHumanPosePredictor"}, {"key.name": "DownloadableModel"}], "key.kind": "source.lang.swift.decl.class", "key.length": 946, "key.name": "FritzVisionHumanPoseModelSmall", "key.namelength": 30, "key.nameoffset": 264, "key.offset": 258, "key.parsed_declaration": "public final class FritzVisionHumanPoseModelSmall: FritzVisionHumanPosePredictor, DownloadableModel", "key.parsed_scope.end": 37, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionHumanPoseModelSmall", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 406}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 400}], "key.doc.column": 27, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift\" line=\"16\" column=\"27\"><Name>modelConfig</Name><USR>s:11FritzVision0aB19HumanPoseModelSmallC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ</USR><Declaration>@objc public static var modelConfig: FritzManagedModel.FritzModelConfiguration</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "modelConfig", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 349, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 167, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 424, "key.offset": 413, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}], "key.parsed_declaration": "@objc public static var modelConfig: FritzModelConfiguration = FritzModelConfiguration(", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision0aB19HumanPoseModelSmallC11modelConfig0a7ManagedE00aE13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 590}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 584}], "key.bodylength": 46, "key.bodyoffset": 641, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 91, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 608, "key.offset": 597, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}], "key.parsed_declaration": "@objc public static var managedModel: FritzManagedModel", "key.parsed_scope.end": 24, "key.parsed_scope.start": 22, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)BasePredictor(py)managedModel\">managedModel</RelatedName>"}], "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0aB19HumanPoseModelSmallC07managedE00a7ManagedE0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 758}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 752}], "key.doc.column": 27, "key.doc.comment": "Is WiFi required to download pose model over the air.", "key.doc.declaration": "@objc public static var wifiRequiredForModelDownload: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift\" line=\"27\" column=\"27\"><Name>wifiRequiredForModelDownload</Name><USR>s:11FritzVision0aB19HumanPoseModelSmallC015wifiRequiredForE8DownloadSbvpZ</USR><Declaration>@objc public static var wifiRequiredForModelDownload: Bool</Declaration><CommentParts><Abstract><Para>Is WiFi required to download pose model over the air.</Para></Abstract></CommentParts></Other>", "key.doc.line": 27, "key.doc.name": "wifiRequiredForModelDownload", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 692, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 77, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 776, "key.offset": 765, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}], "key.parsed_declaration": "@objc public static var wifiRequiredForModelDownload: Bool = _wifiRequiredForModelDownload", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB19HumanPoseModelSmallC015wifiRequiredForE8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision0aB19HumanPoseModelSmallC\">FritzVisionHumanPoseModelSmall</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1025}], "key.bodylength": 57, "key.bodyoffset": 1144, "key.doc.column": 22, "key.doc.comment": "Fetch model. Downloads model if model has not been downloaded before.\n\n- Parameter completionHandler: CompletionHandler called after fetchModel request finishes.", "key.doc.declaration": "public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelSmall?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift\" line=\"32\" column=\"22\"><Name>fetchModel(completionHandler:)</Name><USR>s:11FritzVision0aB19HumanPoseModelSmallC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ</USR><Declaration>public static func fetchModel(completionHandler: @escaping (FritzVisionHumanPoseModelSmall?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Fetch model. Downloads model if model has not been downloaded before.</Para></Abstract><Parameters><Parameter><Name>completionHandler</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CompletionHandler called after fetchModel request finishes.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 32, "key.doc.name": "fetchModel(completionHandler:)", "key.doc.parameters": [{"discussion": [{"Para": "CompletionHandler called after fetchModel request finishes."}], "name": "completionHandler"}], "key.doc.type": "Function", "key.doclength": 177, "key.docoffset": 846, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanPoseSmall.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB19HumanPoseModelSmallC\">FritzVisionHumanPoseModelSmall</ref.class>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 170, "key.name": "fetchModel(completionHandler:)", "key.namelength": 98, "key.nameoffset": 1044, "key.offset": 1032, "key.overrides": [{"key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.parsed_declaration": "public static func fetchModel(\n  completionHandler: @escaping (FritzVisionHumanPoseModelSmall?, Error?) -> Void\n)", "key.parsed_scope.end": 36, "key.parsed_scope.start": 32, "key.substructure": [], "key.typename": "(FritzVisionHumanPoseModelSmall.Type) -> (@escaping (FritzVisionHumanPoseModelSmall?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryy11FritzVision0cD19HumanPoseModelSmallCSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision0aB19HumanPoseModelSmallC05fetchE017completionHandleryyACSg_s5Error_pSgtc_tFZ"}], "key.typename": "FritzVisionHumanPoseModelSmall.Type", "key.typeusr": "$s11FritzVision0aB19HumanPoseModelSmallCmD", "key.usr": "s:11FritzVision0aB19HumanPoseModelSmallC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1591, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzHumanSkeleton) public enum HumanSkeleton : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 209}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 183}], "key.bodylength": 1262, "key.bodyoffset": 255, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 236}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 241}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzHumanSkeleton)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>HumanSkeleton</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 1302, "key.name": "HumanSkeleton", "key.namelength": 13, "key.nameoffset": 221, "key.offset": 216, "key.parsed_declaration": "public enum HumanSkeleton: Int, SkeletonType", "key.parsed_scope.end": 53, "key.parsed_scope.start": 12, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let objectName: <Type usr=\"s:SS\">String</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 259}], "key.doc.column": 14, "key.doc.declaration": "static var objectName: String { get }", "key.doc.discussion": [{"Para": "The `objectName` is used to identify objects for data collection.  When recording predictions, this name will be used to identify an object."}, {"Note": ""}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift\" line=\"23\" column=\"14\"><Name>objectName</Name><USR>s:11FritzVision12SkeletonTypeP10objectNameSSvpZ</USR><Declaration>static var objectName: String { get }</Declaration><CommentParts><Abstract><Para>A label describing the name of the object the pose skeleton represents.</Para></Abstract><Discussion><Para>The <codeVoice>objectName</codeVoice> is used to identify objects for data collection.  When recording predictions, this name will be used to identify an object.</Para><Note><Para>This documentation comment was inherited from <codeVoice>SkeletonType</codeVoice>.</Para></Note></Discussion></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "objectName", "key.doc.type": "Other", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>objectName</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 32, "key.name": "objectName", "key.namelength": 10, "key.nameoffset": 277, "key.offset": 266, "key.overrides": [{"key.usr": "s:11FritzVision12SkeletonTypeP10objectNameSSvpZ"}], "key.parsed_declaration": "public static let objectName = \"person\"", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision12SkeletonTypeP10objectNameSSvpZ"}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 302, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case nose</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>nose</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "nose", "key.namelength": 4, "key.nameoffset": 307, "key.offset": 307, "key.parsed_declaration": "case nose", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonNose"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 314, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftEye</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEye", "key.namelength": 7, "key.nameoffset": 319, "key.offset": 319, "key.parsed_declaration": "case leftEye", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 329, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightEye</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEye</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEye", "key.namelength": 8, "key.nameoffset": 334, "key.offset": 334, "key.parsed_declaration": "case rightEye", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightEye"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 345, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftEar</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftEar", "key.namelength": 7, "key.nameoffset": 350, "key.offset": 350, "key.parsed_declaration": "case leftEar", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 360, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightEar</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightEar</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightEar", "key.namelength": 8, "key.nameoffset": 365, "key.offset": 365, "key.parsed_declaration": "case rightEar", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightEar"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 376, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftShoulder</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "leftShoulder", "key.namelength": 12, "key.nameoffset": 381, "key.offset": 381, "key.parsed_declaration": "case leftShoulder", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 396, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightShoulder</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightShoulder</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "rightShoulder", "key.namelength": 13, "key.nameoffset": 401, "key.offset": 401, "key.parsed_declaration": "case rightShoulder", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightShoulder"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 417, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftElbow</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftElbow", "key.namelength": 9, "key.nameoffset": 422, "key.offset": 422, "key.parsed_declaration": "case leftElbow", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 434, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightElbow</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightElbow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightElbow", "key.namelength": 10, "key.nameoffset": 439, "key.offset": 439, "key.parsed_declaration": "case rightElbow", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightElbow"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 452, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftWrist</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftWrist", "key.namelength": 9, "key.nameoffset": 457, "key.offset": 457, "key.parsed_declaration": "case leftWrist", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 469, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightWrist</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightWrist</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightWrist", "key.namelength": 10, "key.nameoffset": 474, "key.offset": 474, "key.parsed_declaration": "case rightWrist", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightWrist"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 12, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 487, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftHip</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 7, "key.name": "leftHip", "key.namelength": 7, "key.nameoffset": 492, "key.offset": 492, "key.parsed_declaration": "case leftHip", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 502, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightHip</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightHip</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "rightHip", "key.namelength": 8, "key.nameoffset": 507, "key.offset": 507, "key.parsed_declaration": "case rightHip", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightHip"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 518, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftKnee</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "leftKnee", "key.namelength": 8, "key.nameoffset": 523, "key.offset": 523, "key.parsed_declaration": "case leftKnee", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 534, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightKnee</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightKnee</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "rightKnee", "key.namelength": 9, "key.nameoffset": 539, "key.offset": 539, "key.parsed_declaration": "case rightKnee", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightKnee"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 551, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case leftAnkle</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>leftAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "leftAnkle", "key.namelength": 9, "key.nameoffset": 556, "key.offset": 556, "key.parsed_declaration": "case leftAnkle", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonLeftAnkle"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 568, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case rightAnkle</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>rightAnkle</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "rightAnkle", "key.namelength": 10, "key.nameoffset": 573, "key.offset": 573, "key.parsed_declaration": "case rightAnkle", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "(HumanSkeleton.Type) -> HumanSkeleton", "key.typeusr": "$sy11FritzVision13HumanSkeletonOACmcD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton@FritzHumanSkeletonRightAnkle"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let connectedParts: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 587}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>connectedParts</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 415, "key.name": "connectedParts", "key.namelength": 14, "key.nameoffset": 605, "key.offset": 594, "key.overrides": [{"key.usr": "s:11FritzVision12SkeletonTypeP14connectedPartsSayx_xtGvpZ"}], "key.parsed_declaration": "public static let connectedParts: [ConnectedPart<HumanSkeleton>] = [", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "[(HumanSkeleton, HumanSkeleton)]", "key.typeusr": "$sSay11FritzVision13HumanSkeletonO_ACtGD", "key.usr": "s:11FritzVision13HumanSkeletonO14connectedPartsSayAC_ACtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let poseChain: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1013}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseChain</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;]</decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 496, "key.name": "poseChain", "key.namelength": 9, "key.nameoffset": 1031, "key.offset": 1020, "key.overrides": [{"key.usr": "s:11FritzVision12SkeletonTypeP9poseChainSayx_xtGvpZ"}], "key.parsed_declaration": "public static let poseChain: [ConnectedPart<HumanSkeleton>] = [", "key.parsed_scope.end": 43, "key.parsed_scope.start": 43, "key.typename": "[(HumanSkeleton, HumanSkeleton)]", "key.typeusr": "$sSay11FritzVision13HumanSkeletonO_ACtGD", "key.usr": "s:11FritzVision13HumanSkeletonO9poseChainSayAC_ACtGvpZ"}], "key.typename": "HumanSkeleton.Type", "key.typeusr": "$s11FritzVision13HumanSkeletonOmD", "key.usr": "c:@M@FritzVision@E@FritzHumanSkeleton"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias HumanPose = <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1542}, {"key.attribute": "source.decl.attribute.available", "key.length": 21, "key.offset": 1520}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/HumanPose/HumanSkeleton.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>HumanPose</decl.name> = <ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.enum usr=\"c:@M@FritzVision@E@FritzHumanSkeleton\">HumanSkeleton</ref.enum>&gt;</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 41, "key.name": "HumanPose", "key.namelength": 9, "key.nameoffset": 1559, "key.offset": 1549, "key.parsed_declaration": "public typealias HumanPose = Pose<HumanSkeleton>", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "Pose<HumanSkeleton>.Type", "key.typeusr": "$s11FritzVision4PoseCyAA13HumanSkeletonOGmD", "key.usr": "s:11FritzVision9HumanPosea"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+GeneratedCoreML.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1516, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5934, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public final class PoseLiftingPredictorOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 316}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 309}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 296}], "key.bodylength": 189, "key.bodyoffset": 393, "key.doc.column": 20, "key.doc.comment": "Options for Pose Model.", "key.doc.declaration": "@objcMembers public final class PoseLiftingPredictorOptions : NSObject, FritzPredictorOptionType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"17\" column=\"20\"><Name>PoseLiftingPredictorOptions</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions</USR><Declaration>@objcMembers public final class PoseLiftingPredictorOptions : NSObject, FritzPredictorOptionType</Declaration><CommentParts><Abstract><Para>Options for Pose Model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 17, "key.doc.name": "PoseLiftingPredictorOptions", "key.doc.type": "Class", "key.doclength": 28, "key.docoffset": 268, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 357}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 367}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseLiftingPredictorOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzPredictorOptionType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 261, "key.name": "PoseLiftingPredictorOptions", "key.namelength": 27, "key.nameoffset": 328, "key.offset": 322, "key.parsed_declaration": "public final class PoseLiftingPredictorOptions: NSObject, FritzPredictorOptionType", "key.parsed_scope.end": 24, "key.parsed_scope.start": 17, "key.runtime_name": "_TtC4main27PoseLiftingPredictorOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static let defaults: <Type usr=\"c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions\">PoseLiftingPredictorOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 437}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 431}], "key.doc.column": 27, "key.doc.comment": "Default Pose model options.", "key.doc.declaration": "@objc public static let defaults: FritzVision.PoseLiftingPredictorOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"20\" column=\"27\"><Name>defaults</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(cpy)defaults</USR><Declaration>@objc public static let defaults: FritzVision.PoseLiftingPredictorOptions</Declaration><CommentParts><Abstract><Para>Default Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 20, "key.doc.name": "defaults", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 397, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions\">PoseLiftingPredictorOptions</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 51, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 455, "key.offset": 444, "key.parsed_declaration": "@objc public static let defaults = PoseLiftingPredictorOptions()", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "PoseLiftingPredictorOptions", "key.typeusr": "$s11FritzVision27PoseLiftingPredictorOptionsCD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(cpy)defaults"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var useCPUOnly: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 553}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 547}], "key.doc.column": 20, "key.doc.comment": "If true only uses CPU to run predictions.", "key.doc.declaration": "@objc public var useCPUOnly: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"23\" column=\"20\"><Name>useCPUOnly</Name><USR>c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(py)useCPUOnly</USR><Declaration>@objc public var useCPUOnly: Bool</Declaration><CommentParts><Abstract><Para>If true only uses CPU to run predictions.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "useCPUOnly", "key.doc.type": "Other", "key.doclength": 46, "key.docoffset": 499, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>useCPUOnly</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "useCPUOnly", "key.namelength": 10, "key.nameoffset": 564, "key.offset": 560, "key.parsed_declaration": "@objc public var useCPUOnly = true", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions(py)useCPUOnly"}], "key.typename": "PoseLiftingPredictorOptions.Type", "key.typeusr": "$s11FritzVision27PoseLiftingPredictorOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)PoseLiftingPredictorOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class FritzVisionPoseLiftingModel : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 732}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 725}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 701}], "key.bodylength": 3799, "key.bodyoffset": 805, "key.doc.column": 20, "key.doc.comment": "Model used to create a 3D pose from 2D pose", "key.doc.declaration": "@available(iOS 11.0, *)\npublic final class FritzVisionPoseLiftingModel : BasePredictor, CoreMLPredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift\" line=\"31\" column=\"20\"><Name>FritzVisionPoseLiftingModel</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel</USR><Declaration>@available(iOS 11.0, *)\npublic final class FritzVisionPoseLiftingModel : BasePredictor, CoreMLPredictor</Declaration><CommentParts><Abstract><Para>Model used to create a 3D pose from 2D pose</Para></Abstract></CommentParts></Class>", "key.doc.line": 31, "key.doc.name": "FritzVisionPoseLiftingModel", "key.doc.type": "Class", "key.doclength": 48, "key.docoffset": 653, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 773}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 788}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Model.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseLiftingModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision15CoreMLPredictorP\">CoreMLPredictor</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 3867, "key.name": "FritzVisionPoseLiftingModel", "key.namelength": 27, "key.nameoffset": 744, "key.offset": 738, "key.parsed_declaration": "public final class FritzVisionPoseLiftingModel: BasePredictor, CoreMLPredictor", "key.parsed_scope.end": 153, "key.parsed_scope.start": 31, "key.runtime_name": "_TtC4main27FritzVisionPoseLiftingModel", "key.substructure": [], "key.typename": "FritzVisionPoseLiftingModel.Type", "key.typeusr": "$s11FritzVision0aB16PoseLiftingModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 519, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum PoseLiftingDebugKey : <Type usr=\"s:SS\">String</Type>, <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 194}], "key.bodylength": 264, "key.bodyoffset": 253, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 6, "key.offset": 227}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 235}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>PoseLiftingDebugKey</decl.name> : <ref.struct usr=\"s:SS\">String</ref.struct>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "String"}, {"key.name": "RawRepresentable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 317, "key.name": "PoseLiftingDebugKey", "key.namelength": 19, "key.nameoffset": 206, "key.offset": 201, "key.parsed_declaration": "public enum PoseLiftingDebugKey: String, RawRepresentable", "key.parsed_scope.end": 17, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 36, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 256, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case pose2DOutput = &quot;pose_2d_output&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 16, "key.offset": 276}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>pose2DOutput</decl.name> = <syntaxtype.string>&quot;pose_2d_output&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 31, "key.name": "pose2DOutput", "key.namelength": 12, "key.nameoffset": 261, "key.offset": 261, "key.parsed_declaration": "case pose2DOutput = \"pose_2d_output\"", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(PoseLiftingDebugKey.Type) -> PoseLiftingDebugKey", "key.typeusr": "$sy11FritzVision19PoseLiftingDebugKeyOACmcD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO12pose2DOutputyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 44, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 295, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case pose2DTranslated = &quot;pose_2d_translated&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 20, "key.offset": 319}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>pose2DTranslated</decl.name> = <syntaxtype.string>&quot;pose_2d_translated&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 39, "key.name": "pose2DTranslated", "key.namelength": 16, "key.nameoffset": 300, "key.offset": 300, "key.parsed_declaration": "case pose2DTranslated = \"pose_2d_translated\"", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(PoseLiftingDebugKey.Type) -> PoseLiftingDebugKey", "key.typeusr": "$sy11FritzVision19PoseLiftingDebugKeyOACmcD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO16pose2DTranslatedyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 44, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 342, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case poseLiftingInput = &quot;pose_lifting_input&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 20, "key.offset": 366}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poseLiftingInput</decl.name> = <syntaxtype.string>&quot;pose_lifting_input&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 39, "key.name": "poseLiftingInput", "key.namelength": 16, "key.nameoffset": 347, "key.offset": 347, "key.parsed_declaration": "case poseLiftingInput = \"pose_lifting_input\"", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "(PoseLiftingDebugKey.Type) -> PoseLiftingDebugKey", "key.typeusr": "$sy11FritzVision19PoseLiftingDebugKeyOACmcD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO04poseD5InputyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 53, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 389, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case poseLiftingRawOutput = &quot;pose_lifting_raw_output&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 25, "key.offset": 417}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poseLiftingRawOutput</decl.name> = <syntaxtype.string>&quot;pose_lifting_raw_output&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 48, "key.name": "poseLiftingRawOutput", "key.namelength": 20, "key.nameoffset": 394, "key.offset": 394, "key.parsed_declaration": "case poseLiftingRawOutput = \"pose_lifting_raw_output\"", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "(PoseLiftingDebugKey.Type) -> PoseLiftingDebugKey", "key.typeusr": "$sy11FritzVision19PoseLiftingDebugKeyOACmcD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO04poseD9RawOutputyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 71, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 445, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case poseLiftingDenormalizedOutput = &quot;pose_lifting_denormalized_output&quot;</Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.init_expr", "key.length": 34, "key.offset": 482}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+ModelDebugOutput.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poseLiftingDenormalizedOutput</decl.name> = <syntaxtype.string>&quot;pose_lifting_denormalized_output&quot;</syntaxtype.string></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 66, "key.name": "poseLiftingDenormalizedOutput", "key.namelength": 29, "key.nameoffset": 450, "key.offset": 450, "key.parsed_declaration": "case poseLiftingDenormalizedOutput = \"pose_lifting_denormalized_output\"", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "(PoseLiftingDebugKey.Type) -> PoseLiftingDebugKey", "key.typeusr": "$sy11FritzVision19PoseLiftingDebugKeyOACmcD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO04poseD18DenormalizedOutputyA2CmF"}]}], "key.typename": "PoseLiftingDebugKey.Type", "key.typeusr": "$s11FritzVision19PoseLiftingDebugKeyOmD", "key.usr": "s:11FritzVision19PoseLiftingDebugKeyO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1676, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseLiftingPredictor/PoseLifting+Preprocessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3053, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/FritzVisionImage+Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3358, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor+Recordable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1671, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 39, "key.name": "MARK: - Pose Prediction Data Recording.", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 197}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7654, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 259}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 252}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 217}], "key.bodylength": 1586, "key.bodyoffset": 329, "key.doc.column": 20, "key.doc.comment": "Options for Pose Model.", "key.doc.declaration": "@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"13\" column=\"20\"><Name>FritzVisionPoseModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions</USR><Declaration>@objc(FritzVisionPoseModelOptions) public final class FritzVisionPoseModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for Pose Model.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionPoseModelOptions", "key.doc.type": "Class", "key.doclength": 28, "key.docoffset": 189, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 300}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 310}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1651, "key.name": "FritzVisionPoseModelOptions", "key.namelength": 27, "key.nameoffset": 271, "key.offset": 265, "key.parsed_declaration": "public final class FritzVisionPoseModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 45, "key.parsed_scope.start": 13, "key.runtime_name": "FritzVisionPoseModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 367}], "key.doc.column": 21, "key.doc.comment": "Default Pose model options.", "key.doc.declaration": "public static let defaults: FritzVision.FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"16\" column=\"21\"><Name>defaults</Name><USR>s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ</USR><Declaration>public static let defaults: FritzVision.FritzImageOptions</Declaration><CommentParts><Abstract><Para>Default Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "defaults", "key.doc.type": "Other", "key.doclength": 32, "key.docoffset": 333, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 70, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 385, "key.offset": 374, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static let defaults: FritzImageOptions = FritzVisionPoseModelOptions()", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB16PoseModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 510}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 504}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default value is scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"19\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default value is scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 54, "key.docoffset": 448, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 521, "key.offset": 517, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 766}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 760}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit\nwould incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"23\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 585, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 777, "key.offset": 773, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1341}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1335}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\n\nTakes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work\nwith YUV pixel formats, which are used in ARKit. Setting this to true will force the\npredictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a\nbug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`.\nHowever, if you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.discussion": [{"Para": "Takes precedence over `forceCoreMLPrediction`.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to `.scaleFit`. However, if you are using ARKit, you must set this to true."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"32\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model).</Para></Abstract><Discussion><Para>Takes precedence over <codeVoice>forceCoreMLPrediction</codeVoice>.  Core ML predictions do not currently work with YUV pixel formats, which are used in ARKit. Setting this to true will force the predictor to use the Vision framework.  Unfortunately, in iOS 11.1 - 12.1 there is a bug that incorrectly crops images with the imageCropAndScaleOption set to <codeVoice>.scaleFit</codeVoice>. However, if you are using ARKit, you must set this to true.</Para></Discussion></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 518, "key.docoffset": 815, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 1352, "key.offset": 1348, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPartThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1605}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1599}], "key.doc.column": 20, "key.doc.comment": "Minimum score a part must have to potentially build a new pose. The pose will include parts below this\nthreshold, but a part below this threshold will not trigger a new pose instance to be built.", "key.doc.declaration": "@objc public var minPartThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"36\" column=\"20\"><Name>minPartThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold</USR><Declaration>@objc public var minPartThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a part must have to potentially build a new pose. The pose will include parts below this threshold, but a part below this threshold will not trigger a new pose instance to be built.</Para></Abstract></CommentParts></Other>", "key.doc.line": 36, "key.doc.name": "minPartThreshold", "key.doc.type": "Other", "key.doclength": 206, "key.docoffset": 1391, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPartThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPartThreshold", "key.namelength": 16, "key.nameoffset": 1616, "key.offset": 1612, "key.parsed_declaration": "@objc public var minPartThreshold: Double = 0.50", "key.parsed_scope.end": 36, "key.parsed_scope.start": 36, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPartThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var minPoseThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1721}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1715}], "key.doc.column": 20, "key.doc.comment": "Minimum score a pose must have to be included in results.", "key.doc.declaration": "@objc public var minPoseThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"39\" column=\"20\"><Name>minPoseThreshold</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold</USR><Declaration>@objc public var minPoseThreshold: Double</Declaration><CommentParts><Abstract><Para>Minimum score a pose must have to be included in results.</Para></Abstract></CommentParts></Other>", "key.doc.line": 39, "key.doc.name": "minPoseThreshold", "key.doc.type": "Other", "key.doclength": 62, "key.docoffset": 1651, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minPoseThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "minPoseThreshold", "key.namelength": 16, "key.nameoffset": 1732, "key.offset": 1728, "key.parsed_declaration": "@objc public var minPoseThreshold: Double = 0.50", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)minPoseThreshold"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var nmsRadius: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1799}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1793}], "key.doc.column": 20, "key.doc.comment": "NMS radius for pose", "key.doc.declaration": "@objc public var nmsRadius: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"42\" column=\"20\"><Name>nmsRadius</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius</USR><Declaration>@objc public var nmsRadius: Int</Declaration><CommentParts><Abstract><Para>NMS radius for pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 42, "key.doc.name": "nmsRadius", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 1767, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>nmsRadius</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "nmsRadius", "key.namelength": 9, "key.nameoffset": 1810, "key.offset": 1806, "key.parsed_declaration": "@objc public var nmsRadius: Int = 20", "key.parsed_scope.end": 42, "key.parsed_scope.start": 42, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions(py)nmsRadius"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var smoothingOptions: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;.<Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1833}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothingOptions</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;.<ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 74, "key.name": "smoothingOptions", "key.namelength": 16, "key.nameoffset": 1844, "key.offset": 1840, "key.parsed_declaration": "public var smoothingOptions: OneEuroPointFilter.Options? = OneEuroPointFilter.low", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "OneEuroFilterPointable<CGPoint>.Options?", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCySo7CGPointV_GSgD", "key.usr": "s:11FritzVision0aB16PoseModelOptionsC09smoothingE0AA22OneEuroFilterPointableC0E0CySo7CGPointV_GSgvp"}], "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.open", "key.annotated_decl": "<Declaration>open class FritzVisionPosePredictor&lt;Skeleton&gt; : <Type usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.open", "key.length": 4, "key.offset": 2399}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2375}], "key.bodylength": 5152, "key.bodyoffset": 2500, "key.doc.column": 12, "key.doc.comment": "A model used to predict the poses of people in images.", "key.doc.declaration": "@available(iOS 11.0, *)\nopen class FritzVisionPosePredictor<Skeleton> : BasePredictor, CoreMLOrVisionPredictor where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"67\" column=\"12\"><Name>FritzVisionPosePredictor</Name><USR>s:11FritzVision0aB13PosePredictorC</USR><Declaration>@available(iOS 11.0, *)\nopen class FritzVisionPosePredictor&lt;Skeleton&gt; : BasePredictor, CoreMLOrVisionPredictor where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>A model used to predict the poses of people in images.</Para></Abstract></CommentParts></Class>", "key.doc.line": 67, "key.doc.name": "FritzVisionPosePredictor", "key.doc.type": "Class", "key.doclength": 59, "key.docoffset": 2316, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2460}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 2475}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>open</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPosePredictor</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:@M@FritzVision@objc(cs)BasePredictor\">BasePredictor</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "BasePredictor"}, {"key.name": "CoreMLOrVisionPredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 5249, "key.name": "FritzVisionPosePredictor", "key.namelength": 24, "key.nameoffset": 2410, "key.offset": 2404, "key.parsed_declaration": "open class FritzVisionPosePredictor<Skeleton: SkeletonType>: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 224, "key.parsed_scope.start": 67, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 2445}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 2435, "key.offset": 2435, "key.parsed_declaration": "open class FritzVisionPosePredictor<Skeleton: SkeletonType>: BasePredictor, CoreMLOrVisionPredictor", "key.parsed_scope.end": 67, "key.parsed_scope.start": 67, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision0aB13PosePredictorC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2504}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2521, "key.offset": 2511, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}, {"key.usr": "s:11FritzVision25PredictionImageRecordableP0C5InputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB13PosePredictorC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2558}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 52, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 2575, "key.offset": 2565, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionPoseModelOptions", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.typename": "FritzVisionPoseModelOptions.Type", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCmD", "key.usr": "s:11FritzVision0aB13PosePredictorC12ModelOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;Skeleton&gt;.PredictionResult = <Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2620}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;Skeleton&gt;.<decl.name>PredictionResult</decl.name> = <ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 60, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 2637, "key.offset": 2627, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = FritzVisionPoseResult<Skeleton>", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "FritzVisionPoseResult<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB10PoseResultCyxGmD", "key.usr": "s:11FritzVision0aB13PosePredictorC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var outputStride: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2803}], "key.doc.column": 14, "key.doc.comment": "Model Configuration for pose model in Fritz.", "key.doc.declaration": "public var outputStride: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"78\" column=\"14\"><Name>outputStride</Name><USR>s:11FritzVision0aB13PosePredictorC12outputStrideSivp</USR><Declaration>public var outputStride: Int</Declaration><CommentParts><Abstract><Para>Model Configuration for pose model in Fritz.</Para></Abstract></CommentParts></Other>", "key.doc.line": 78, "key.doc.name": "outputStride", "key.doc.type": "Other", "key.doclength": 49, "key.docoffset": 2752, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>outputStride</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "outputStride", "key.namelength": 12, "key.nameoffset": 2814, "key.offset": 2810, "key.parsed_declaration": "public var outputStride: Int = 8", "key.parsed_scope.end": 78, "key.parsed_scope.start": 78, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision0aB13PosePredictorC12outputStrideSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var useDisplacements: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2839}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>useDisplacements</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "useDisplacements", "key.namelength": 16, "key.nameoffset": 2850, "key.offset": 2846, "key.parsed_declaration": "public var useDisplacements: Bool = true", "key.parsed_scope.end": 80, "key.parsed_scope.start": 80, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0aB13PosePredictorC16useDisplacementsSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3643}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3636}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 21, "key.offset": 3612}], "key.bodylength": 124, "key.bodyoffset": 3679, "key.doc.column": 19, "key.doc.comment": "Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata,\nModel will be initialized with that stride.\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithModel:) public override init(model: FritzMLModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"106\" column=\"19\"><Name>init(model:)</Name><USR>s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel0A7MLModelC_tcfc</USR><Declaration>@objc(initWithModel:) public override init(model: FritzMLModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata, Model will be initialized with that stride.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 106, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 187, "key.docoffset": 3423, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 152, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 3652, "key.offset": 3652, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:"}], "key.parsed_declaration": "public override init(model: FritzMLModel)", "key.parsed_scope.end": 111, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel015SwiftIdentifiedG0_p_tcfc\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5model12managedModelACyxG0a7ManagedG00A7MLModelC_A2GCtcfc\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionPosePredictor<Skeleton>.Type) -> (FritzMLModel) -> FritzVisionPosePredictor<Skeleton>", "key.typeusr": "$s5model11FritzVision0bC13PosePredictorCyxG0B12ManagedModel0B7MLModelC_tcD", "key.usr": "s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel0A7MLModelC_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4038}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4031}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 3997}], "key.bodylength": 130, "key.bodyoffset": 4082, "key.doc.column": 19, "key.doc.comment": "Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata,\nModel will be initialized with that stride.\n\n- Parameter model: FritzMLModel", "key.doc.declaration": "@objc(initWithIdentifiedModel:) public override init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"118\" column=\"19\"><Name>init(model:)</Name><USR>s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel015SwiftIdentifiedG0_p_tcfc</USR><Declaration>@objc(initWithIdentifiedModel:) public override init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata, Model will be initialized with that stride.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 187, "key.docoffset": 3808, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 166, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 4047, "key.offset": 4047, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithIdentifiedModel:"}], "key.parsed_declaration": "public override init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 118, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel0A7MLModelC_tcfc\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5model12managedModelACyxG0a7ManagedG00A7MLModelC_A2GCtcfc\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionPosePredictor<Skeleton>.Type) -> (SwiftIdentifiedModel) -> FritzVisionPosePredictor<Skeleton>", "key.typeusr": "$s5model11FritzVision0bC13PosePredictorCyxG0B12ManagedModel015SwiftIdentifiedG0_p_tcD", "key.usr": "s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel015SwiftIdentifiedG0_p_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithModel:managedModel:) public override init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 4500}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4493}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 4456}], "key.bodylength": 152, "key.bodyoffset": 4569, "key.doc.column": 19, "key.doc.comment": "Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata,\nModel will be initialized with that stride.\n\n- Parameter model: FritzMLModel\n- Parameter managedModel: FritzManagedModel", "key.doc.declaration": "@objc(initWithModel:managedModel:) public override init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"131\" column=\"19\"><Name>init(model:managedModel:)</Name><USR>s:11FritzVision0aB13PosePredictorC5model12managedModelACyxG0a7ManagedG00A7MLModelC_A2GCtcfc</USR><Declaration>@objc(initWithModel:managedModel:) public override init(model: FritzMLModel, managedModel: FritzManagedModel)</Declaration><CommentParts><Abstract><Para>Initialize model with FritzMLModel. If output_stride key defined in userDefinedMetadata, Model will be initialized with that stride.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzMLModel</Para></Discussion></Parameter><Parameter><Name>managedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzManagedModel</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 131, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzMLModel"}], "name": "model"}, {"discussion": [{"Para": "FritzManagedModel"}], "name": "managedModel"}], "key.doc.type": "Function", "key.doclength": 237, "key.docoffset": 4217, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithModel:managedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 213, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 4509, "key.offset": 4509, "key.overrides": [{"key.usr": "c:@M@FritzVision@objc(cs)BasePredictor(im)initWithModel:managedModel:"}], "key.parsed_declaration": "public override init(model: FritzMLModel, managedModel: FritzManagedModel)", "key.parsed_scope.end": 136, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel0A7MLModelC_tcfc\">init(model: FritzMLModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0aB13PosePredictorC5modelACyxG0A12ManagedModel015SwiftIdentifiedG0_p_tcfc\">init(model: SwiftIdentifiedModel)</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionPosePredictor<Skeleton>.Type) -> (FritzMLModel, FritzManagedModel) -> FritzVisionPosePredictor<Skeleton>", "key.typeusr": "$s5model12managedModel11FritzVision0dE13PosePredictorCyxG0d7ManagedC00D7MLModelC_A2GCtcD", "key.usr": "s:11FritzVision0aB13PosePredictorC5model12managedModelACyxG0a7ManagedG00A7MLModelC_A2GCtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type> = .init(), completion: (<Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</Type>&gt;?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7409}], "key.bodylength": 65, "key.bodyoffset": 7585, "key.doc.column": 15, "key.doc.comment": "Predict poses from a FritzImage.\n\n- Parameters:\n  - input: The image to use to dectect poses.\n  - options: The options used to configure the pose results.\n  - completion: Handler to call back on the main thread with poses or error.", "key.doc.declaration": "public func predict(_ input: FritzVisionImage, options: FritzVisionPoseModelOptions = .init(), completion: (FritzVisionPoseResult<Skeleton>?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift\" line=\"217\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>s:11FritzVision0aB13PosePredictorC7predict_7options10completionyAA0aB5ImageC_AA0abC12ModelOptionsCyAA0abC6ResultCyxGSg_s5Error_pSgtXEtF</USR><Declaration>public func predict(_ input: FritzVisionImage, options: FritzVisionPoseModelOptions = .init(), completion: (FritzVisionPoseResult&lt;Skeleton&gt;?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Predict poses from a FritzImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The image to use to dectect poses.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The options used to configure the pose results.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Handler to call back on the main thread with poses or error.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 217, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "The image to use to dectect poses."}], "name": "input"}, {"discussion": [{"Para": "The options used to configure the pose results."}], "name": "options"}, {"discussion": [{"Para": "Handler to call back on the main thread with poses or error."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 265, "key.docoffset": 7142, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PosePredictor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision0aB13PosePredictorC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 235, "key.name": "predict(_:options:completion:)", "key.namelength": 162, "key.nameoffset": 7421, "key.offset": 7416, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionPoseModelOptions = .init(),\n  completion: (FritzVisionPoseResult<Skeleton>?, Error?) -> Void\n)", "key.parsed_scope.end": 223, "key.parsed_scope.start": 217, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionPosePredictor<Skeleton>) -> (FritzVisionImage, FritzVisionPoseModelOptions, (FritzVisionPoseResult<Skeleton>?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD16PoseModelOptionsCyAC0cdF6ResultCyxGSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0aB13PosePredictorC7predict_7options10completionyAA0aB5ImageC_AA0abC12ModelOptionsCyAA0abC6ResultCyxGSg_s5Error_pSgtXEtF"}], "key.typename": "FritzVisionPosePredictor<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB13PosePredictorCyxGmD", "key.usr": "s:11FritzVision0aB13PosePredictorC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5240, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionPoseResult&lt;Skeleton&gt; : <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 43}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 19}], "key.bodylength": 2714, "key.bodyoffset": 126, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 103}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseResult</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision0aB10PoseResultC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "FritzPredictionResult"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2791, "key.name": "FritzVisionPoseResult", "key.namelength": 21, "key.nameoffset": 56, "key.offset": 50, "key.parsed_declaration": "public class FritzVisionPoseResult<Skeleton: SkeletonType>: FritzPredictionResult", "key.parsed_scope.end": 90, "key.parsed_scope.start": 4, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 88}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 78, "key.offset": 78, "key.parsed_declaration": "public class FritzVisionPoseResult<Skeleton: SkeletonType>: FritzPredictionResult", "key.parsed_scope.end": 4, "key.parsed_scope.start": 4, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision0aB10PoseResultC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 186}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 180}], "key.doc.column": 20, "key.doc.comment": "Original input image before it was rescaled", "key.doc.declaration": "@objc public let image: FritzVisionImage", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift\" line=\"7\" column=\"20\"><Name>image</Name><USR>s:11FritzVision0aB10PoseResultC5imageAA0aB5ImageCvp</USR><Declaration>@objc public let image: FritzVisionImage</Declaration><CommentParts><Abstract><Para>Original input image before it was rescaled</Para></Abstract></CommentParts></Other>", "key.doc.line": 7, "key.doc.name": "image", "key.doc.type": "Other", "key.doclength": 48, "key.docoffset": 130, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>image</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "image", "key.namelength": 5, "key.nameoffset": 197, "key.offset": 193, "key.parsed_declaration": "@objc public let image: FritzVisionImage", "key.parsed_scope.end": 7, "key.parsed_scope.start": 7, "key.typename": "FritzVisionImage", "key.typeusr": "$s11FritzVision0aB5ImageCD", "key.usr": "s:11FritzVision0aB10PoseResultC5imageAA0aB5ImageCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 256}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 250}], "key.doc.column": 20, "key.doc.comment": "Pose model options.", "key.doc.declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift\" line=\"10\" column=\"20\"><Name>options</Name><USR>s:11FritzVision0aB10PoseResultC7optionsAA0abC12ModelOptionsCvp</USR><Declaration>@objc public let options: FritzVisionPoseModelOptions</Declaration><CommentParts><Abstract><Para>Pose model options.</Para></Abstract></CommentParts></Other>", "key.doc.line": 10, "key.doc.name": "options", "key.doc.type": "Other", "key.doclength": 24, "key.docoffset": 224, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PosePredictor/PoseResult.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>options</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 40, "key.name": "options", "key.namelength": 7, "key.nameoffset": 267, "key.offset": 263, "key.parsed_declaration": "@objc public let options: FritzVisionPoseModelOptions", "key.parsed_scope.end": 10, "key.parsed_scope.start": 10, "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCD", "key.usr": "s:11FritzVision0aB10PoseResultC7optionsAA0abC12ModelOptionsCvp"}], "key.typename": "FritzVisionPoseResult<Skeleton>.Type", "key.typeusr": "$s11FritzVision0aB10PoseResultCyxGmD", "key.usr": "s:11FritzVision0aB10PoseResultC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+PointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1345, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1013, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class PoseSmoothingOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 614}], "key.bodylength": 362, "key.bodyoffset": 649, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseSmoothingOptions</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 391, "key.name": "PoseSmoothingOptions", "key.namelength": 20, "key.nameoffset": 627, "key.offset": 621, "key.parsed_declaration": "public class PoseSmoothingOptions", "key.parsed_scope.end": 51, "key.parsed_scope.start": 34, "key.runtime_name": "_TtC4main20PoseSmoothingOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(frequency: <Type usr=\"s:Sd\">Double</Type> = 1.0, minCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0, beta: <Type usr=\"s:Sd\">Double</Type> = 0.0, derivateCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 749}], "key.bodylength": 127, "key.bodyoffset": 882, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/CGPoint+Smoothable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frequency</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beta</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>derivateCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 254, "key.name": "init(frequency:minCutoff:beta:derivateCutoff:)", "key.namelength": 124, "key.nameoffset": 756, "key.offset": 756, "key.parsed_declaration": "public init(\n  frequency: Double = 1.0,\n  minCutoff: Double = 1.0,\n  beta: Double = 0.0,\n  derivateCutoff: Double = 1.0\n)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 40, "key.substructure": [], "key.typename": "(PoseSmoothingOptions.Type) -> (Double, Double, Double, Double) -> PoseSmoothingOptions", "key.typeusr": "$s9frequency9minCutoff4beta08derivateC011FritzVision20PoseSmoothingOptionsCSd_S3dtcD", "key.usr": "s:11FritzVision20PoseSmoothingOptionsC9frequency9minCutoff4beta08derivateH0ACSd_S3dtcfc"}], "key.typename": "PoseSmoothingOptions.Type", "key.typeusr": "$s11FritzVision20PoseSmoothingOptionsCmD", "key.usr": "s:11FritzVision20PoseSmoothingOptionsC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2050, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Keypoint&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 249}], "key.bodylength": 1447, "key.bodyoffset": 320, "key.doc.column": 14, "key.doc.comment": "Predicted keypoint containing part, score, and position identified.", "key.doc.declaration": "public class Keypoint<Skeleton> : NSObject, KeypointType where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift\" line=\"12\" column=\"14\"><Name>Keypoint</Name><USR>s:11FritzVision8KeypointC</USR><Declaration>public class Keypoint&lt;Skeleton&gt; : NSObject, KeypointType where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>Predicted keypoint containing part, score, and position identified.</Para></Abstract></CommentParts></Class>", "key.doc.line": 12, "key.doc.name": "Keypoint", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 177, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 296}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 306}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Keypoint</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "KeypointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1512, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 262, "key.offset": 256, "key.parsed_declaration": "public class Keypoint<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 62, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 281}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 271, "key.offset": 271, "key.parsed_declaration": "public class Keypoint<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision8KeypointC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 324}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 335, "key.offset": 331, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}], "key.parsed_declaration": "public let index: Int", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision8KeypointC5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 348}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "position", "key.namelength": 8, "key.nameoffset": 359, "key.offset": 355, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}], "key.parsed_declaration": "public let position: CGPoint", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision8KeypointC8positionSo7CGPointVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 379}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 390, "key.offset": 386, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}], "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8KeypointC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let part: <Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 406}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>part</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "part", "key.namelength": 4, "key.nameoffset": 417, "key.offset": 413, "key.parsed_declaration": "public let part: Skeleton", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Skeleton", "key.typeusr": "$sxD", "key.usr": "s:11FritzVision8KeypointC4partxvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(index: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 442}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 435}], "key.bodylength": 99, "key.bodyoffset": 519, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "init(index:position:score:part:)", "key.namelength": 66, "key.nameoffset": 451, "key.offset": 451, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5index8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}], "key.parsed_declaration": "public required init(index: Int, position: CGPoint, score: Double, part: Skeleton)", "key.parsed_scope.end": 24, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>.Type) -> (Int, CGPoint, Double, Skeleton) -> Keypoint<Skeleton>", "key.typeusr": "$s5index8position5score4part11FritzVision8KeypointCyxGSi_So7CGPointVSdxtcD", "key.usr": "s:11FritzVision8KeypointC5index8position5score4partACyxGSi_So7CGPointVSdxtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 630}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 623}], "key.bodylength": 158, "key.bodyoffset": 664, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 184, "key.name": "description", "key.namelength": 11, "key.nameoffset": 643, "key.offset": 639, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 29, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision8KeypointC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 673, "key.offset": 669, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision8KeypointC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fromPosition(_ position: <Type usr=\"c:@S@CGPoint\">CGPoint</Type>) -&gt; <Type usr=\"s:11FritzVision8KeypointC\">Self</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 896}], "key.bodylength": 80, "key.bodyoffset": 951, "key.doc.column": 15, "key.doc.comment": "Creates keypoint from Point.\n- Parameter position: Point", "key.doc.declaration": "public func fromPosition(_ position: CGPoint) -> Self", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift\" line=\"33\" column=\"15\"><Name>fromPosition(_:)</Name><USR>s:11FritzVision8KeypointC12fromPositionyACyxGXDSo7CGPointVF</USR><Declaration>public func fromPosition(_ position: CGPoint) -&gt; Self</Declaration><CommentParts><Abstract><Para>Creates keypoint from Point.</Para></Abstract><Parameters><Parameter><Name>position</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Point</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 33, "key.doc.name": "fromPosition(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Point"}], "name": "position"}], "key.doc.type": "Function", "key.doclength": 67, "key.docoffset": 827, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision8KeypointC\">Self</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "fromPosition(_:)", "key.namelength": 33, "key.nameoffset": 908, "key.offset": 903, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.parsed_declaration": "public func fromPosition(_ position: CGPoint) -> Self", "key.parsed_scope.end": 35, "key.parsed_scope.start": 33, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (CGPoint) -> Self", "key.typeusr": "$sy11FritzVision8KeypointCyxGXDSo7CGPointVcD", "key.usr": "s:11FritzVision8KeypointC12fromPositionyACyxGXDSo7CGPointVF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func to3D() -&gt; <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1036}], "key.bodylength": 153, "key.bodyoffset": 1080, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>to3D</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision8KeypointC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 191, "key.name": "to3D()", "key.namelength": 6, "key.nameoffset": 1048, "key.offset": 1043, "key.parsed_declaration": "public func to3D() -> Keypoint3D<Skeleton>", "key.parsed_scope.end": 45, "key.parsed_scope.start": 37, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> () -> Keypoint3D<Skeleton>", "key.typeusr": "$s11FritzVision10Keypoint3DCyxGycD", "key.usr": "s:11FritzVision8KeypointC4to3DAA10Keypoint3DCyxGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1247}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1238}], "key.bodylength": 232, "key.bodyoffset": 1292, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 271, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 1259, "key.offset": 1254, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 56, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision8KeypointC7isEqualySbypSgF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func normalized(by size: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1529}], "key.bodylength": 183, "key.bodyoffset": 1582, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>normalized</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>by</decl.var.parameter.argument_label> <decl.var.parameter.name>size</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 230, "key.name": "normalized(by:)", "key.namelength": 27, "key.nameoffset": 1541, "key.offset": 1536, "key.parsed_declaration": "public func normalized(by size: CGSize) -> Keypoint", "key.parsed_scope.end": 61, "key.parsed_scope.start": 58, "key.substructure": [{"key.annotated_decl": "<Declaration>let newPosition: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newPosition</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 82, "key.name": "newPosition", "key.namelength": 11, "key.nameoffset": 1591, "key.offset": 1587, "key.parsed_declaration": "let newPosition = CGPoint(x: position.x / size.width, y: position.y / size.height)", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision8KeypointC10normalized2byACyxGSo6CGSizeV_tF11newPositionL_So7CGPointVvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>) -> (CGSize) -> Keypoint<Skeleton>", "key.typeusr": "$s2by11FritzVision8KeypointCyxGSo6CGSizeV_tcD", "key.usr": "s:11FritzVision8KeypointC10normalized2byACyxGSo6CGSizeV_tF"}], "key.typename": "Keypoint<Skeleton>.Type", "key.typeusr": "$s11FritzVision8KeypointCyxGmD", "key.usr": "s:11FritzVision8KeypointC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1770}], "key.bodylength": 179, "key.bodyoffset": 1869, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 272, "key.name": "==(_:_:)", "key.namelength": 77, "key.nameoffset": 1782, "key.offset": 1777, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Keypoint<Skeleton>, rhs: Keypoint<Skeleton>) -> Bool", "key.parsed_scope.end": 70, "key.parsed_scope.start": 64, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel18ActiveServerModelsV2eeoiySbAC_ACtFZ\">== (_: ActiveServerModels, _: ActiveServerModels) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0abC5ErrorO2eeoiySbAC_ACtFZ\">== (_: FritzManagedModelError, _: FritzManagedModelError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore11RetryResultO2eeoiySbAC_ACtFZ\">== (_: RetryResult, _: RetryResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore12RequestErrorO2eeoiySbAC_ACtFZ\">== (_: RequestError, _: RequestError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore9GzipErrorV4KindO2eeoiySbAE_AEtFZ\">== (_: GzipError.Kind, _: GzipError.Kind) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19SessionManagerErrorO2eeoiySbAC_ACtFZ\">== (_: SessionManagerError, _: SessionManagerError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23AudioChannelDescriptionV04CoreA0E2eeoiySbAB_ABtFZ\">== (_: AudioChannelDescription, _: AudioChannelDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV0D12DescriptionsV2eeoiySbAE_AEtFZ\">== (_: ManagedAudioChannelLayout.ChannelDescriptions, _: ManagedAudioChannelLayout.ChannelDescriptions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV2eeoiySbAC_ACtFZ\">== (_: ManagedAudioChannelLayout, _: ManagedAudioChannelLayout) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE0C0O2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.Format, _: vImageCVImageFormat.Format) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE12ChromaSitingO2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.ChromaSiting, _: vImageCVImageFormat.ChromaSiting) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate10QuadratureV5ErrorO2eeoiySbAE_AEtFZ\">== (_: Quadrature.Error, _: Quadrature.Error) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO12RoundingModeO2eeoiySbAE_AEtFZ\">== (_: vDSP.RoundingMode, _: vDSP.RoundingMode) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DCTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DCTTransformType, _: vDSP.DCTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DFTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DFTTransformType, _: vDSP.DFTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO5RadixO2eeoiySbAE_AEtFZ\">== (_: vDSP.Radix, _: vDSP.Radix) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO25FourierTransformDirectionO2eeoiySbAE_AEtFZ\">== (_: vDSP.FourierTransformDirection, _: vDSP.FourierTransformDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO14WindowSequenceO2eeoiySbAE_AEtFZ\">== (_: vDSP.WindowSequence, _: vDSP.WindowSequence) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO15IntegrationRuleO2eeoiySbAE_AEtFZ\">== (_: vDSP.IntegrationRule, _: vDSP.IntegrationRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1796}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1786, "key.offset": 1786, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Keypoint<Skeleton>, rhs: Keypoint<Skeleton>) -> Bool", "key.parsed_scope.end": 64, "key.parsed_scope.start": 64, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 156, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1876, "key.offset": 1872, "key.parsed_declaration": "let areEqual = lhs.index == rhs.index && lhs.position == rhs.position && lhs.score == rhs.score", "key.parsed_scope.end": 65, "key.parsed_scope.start": 65, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 24, "key.name": "TODO: Figure this out...", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 1979}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint<Skeleton>, Keypoint<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision8KeypointCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1529, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class Keypoint3D&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 258}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 251}], "key.bodylength": 943, "key.bodyoffset": 330, "key.doc.column": 20, "key.doc.comment": "Predicted keypoint containing part, score, and position identified.", "key.doc.declaration": "public final class Keypoint3D<Skeleton> : NSObject, KeypointType where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift\" line=\"12\" column=\"20\"><Name>Keypoint3D</Name><USR>s:11FritzVision10Keypoint3DC</USR><Declaration>public final class Keypoint3D&lt;Skeleton&gt; : NSObject, KeypointType where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>Predicted keypoint containing part, score, and position identified.</Para></Abstract></CommentParts></Class>", "key.doc.line": 12, "key.doc.name": "Keypoint3D", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 179, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 306}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 316}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Keypoint3D</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "KeypointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1010, "key.name": "Keypoint3D", "key.namelength": 10, "key.nameoffset": 270, "key.offset": 264, "key.parsed_declaration": "public final class Keypoint3D<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 49, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 291}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 281, "key.offset": 281, "key.parsed_declaration": "public final class Keypoint3D<Skeleton: SkeletonType>: NSObject, KeypointType", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision10Keypoint3DC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let index: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 334}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "index", "key.namelength": 5, "key.nameoffset": 345, "key.offset": 341, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}], "key.parsed_declaration": "public let index: Int", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(im)indexOfAccessibilityElement:\">index(ofAccessibilityElement: Any) -&gt; Int</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision10Keypoint3DC5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 358}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "position", "key.namelength": 8, "key.nameoffset": 369, "key.offset": 365, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}], "key.parsed_declaration": "public let position: Point3D", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Point3D", "key.typeusr": "$s11FritzVision7Point3DCD", "key.usr": "s:11FritzVision10Keypoint3DC8positionAA7Point3DCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 389}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 400, "key.offset": 396, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}], "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision10Keypoint3DC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let part: <Type usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 416}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>part</decl.name>: <decl.var.type><ref.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "part", "key.namelength": 4, "key.nameoffset": 427, "key.offset": 423, "key.parsed_declaration": "public let part: Skeleton", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Skeleton", "key.typeusr": "$sxD", "key.usr": "s:11FritzVision10Keypoint3DC4partxvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(index: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 445}], "key.bodylength": 99, "key.bodyoffset": 520, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision10Keypoint3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 168, "key.name": "init(index:position:score:part:)", "key.namelength": 66, "key.nameoffset": 452, "key.offset": 452, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP5index8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}], "key.parsed_declaration": "public init(index: Int, position: Point3D, score: Double, part: Skeleton)", "key.parsed_scope.end": 24, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>.Type) -> (Int, Point3D, Double, Skeleton) -> Keypoint3D<Skeleton>", "key.typeusr": "$s5index8position5score4part11FritzVision10Keypoint3DCyxGSi_AE7Point3DCSdxtcD", "key.usr": "s:11FritzVision10Keypoint3DC5index8position5score4partACyxGSi_AA7Point3DCSdxtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 631}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 624}], "key.bodylength": 158, "key.bodyoffset": 665, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 184, "key.name": "description", "key.namelength": 11, "key.nameoffset": 644, "key.offset": 640, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 29, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision10Keypoint3DC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 674, "key.offset": 670, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision10Keypoint3DC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func fromPosition(_ position: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>) -&gt; <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 828}], "key.bodylength": 115, "key.bodyoffset": 889, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 170, "key.name": "fromPosition(_:)", "key.namelength": 33, "key.nameoffset": 840, "key.offset": 835, "key.overrides": [{"key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.parsed_declaration": "public func fromPosition(_ position: Point3D) -> Keypoint3D", "key.parsed_scope.end": 38, "key.parsed_scope.start": 31, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>) -> (Point3D) -> Keypoint3D<Skeleton>", "key.typeusr": "$sy11FritzVision10Keypoint3DCyxGAA7Point3DCcD", "key.usr": "s:11FritzVision10Keypoint3DC12fromPositionyACyxGAA7Point3DCF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>override public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1018}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1009}], "key.bodylength": 208, "key.bodyoffset": 1063, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 247, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 1030, "key.offset": 1025, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "override public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 48, "key.parsed_scope.start": 40, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision10Keypoint3DC7isEqualySbypSgF"}], "key.typename": "Keypoint3D<Skeleton>.Type", "key.typeusr": "$s11FritzVision10Keypoint3DCyxGmD", "key.usr": "s:11FritzVision10Keypoint3DC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1276}], "key.bodylength": 146, "key.bodyoffset": 1381, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 245, "key.name": "==(_:_:)", "key.namelength": 81, "key.nameoffset": 1288, "key.offset": 1283, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Keypoint3D<Skeleton>, rhs: Keypoint3D<Skeleton>)\n  -> Bool", "key.parsed_scope.end": 58, "key.parsed_scope.start": 51, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel18ActiveServerModelsV2eeoiySbAC_ACtFZ\">== (_: ActiveServerModels, _: ActiveServerModels) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0abC5ErrorO2eeoiySbAC_ACtFZ\">== (_: FritzManagedModelError, _: FritzManagedModelError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore11RetryResultO2eeoiySbAC_ACtFZ\">== (_: RetryResult, _: RetryResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore12RequestErrorO2eeoiySbAC_ACtFZ\">== (_: RequestError, _: RequestError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore9GzipErrorV4KindO2eeoiySbAE_AEtFZ\">== (_: GzipError.Kind, _: GzipError.Kind) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19SessionManagerErrorO2eeoiySbAC_ACtFZ\">== (_: SessionManagerError, _: SessionManagerError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23AudioChannelDescriptionV04CoreA0E2eeoiySbAB_ABtFZ\">== (_: AudioChannelDescription, _: AudioChannelDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV0D12DescriptionsV2eeoiySbAE_AEtFZ\">== (_: ManagedAudioChannelLayout.ChannelDescriptions, _: ManagedAudioChannelLayout.ChannelDescriptions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV2eeoiySbAC_ACtFZ\">== (_: ManagedAudioChannelLayout, _: ManagedAudioChannelLayout) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE0C0O2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.Format, _: vImageCVImageFormat.Format) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE12ChromaSitingO2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.ChromaSiting, _: vImageCVImageFormat.ChromaSiting) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate10QuadratureV5ErrorO2eeoiySbAE_AEtFZ\">== (_: Quadrature.Error, _: Quadrature.Error) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO12RoundingModeO2eeoiySbAE_AEtFZ\">== (_: vDSP.RoundingMode, _: vDSP.RoundingMode) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DCTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DCTTransformType, _: vDSP.DCTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DFTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DFTTransformType, _: vDSP.DFTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO5RadixO2eeoiySbAE_AEtFZ\">== (_: vDSP.Radix, _: vDSP.Radix) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO25FourierTransformDirectionO2eeoiySbAE_AEtFZ\">== (_: vDSP.FourierTransformDirection, _: vDSP.FourierTransformDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO14WindowSequenceO2eeoiySbAE_AEtFZ\">== (_: vDSP.WindowSequence, _: vDSP.WindowSequence) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO15IntegrationRuleO2eeoiySbAE_AEtFZ\">== (_: vDSP.IntegrationRule, _: vDSP.IntegrationRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1302}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1292, "key.offset": 1292, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Keypoint3D<Skeleton>, rhs: Keypoint3D<Skeleton>)", "key.parsed_scope.end": 51, "key.parsed_scope.start": 51, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Keypoint3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 123, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1388, "key.offset": 1384, "key.parsed_declaration": "let areEqual = lhs.index == rhs.index && lhs.position == rhs.position && lhs.score == rhs.score", "key.parsed_scope.end": 54, "key.parsed_scope.start": 54, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Keypoint3D<Skeleton>, Keypoint3D<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision10Keypoint3DCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 506, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol KeypointType : AnyObject, <Type usr=\"s:SQ\">Equatable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 181}], "key.bodylength": 275, "key.bodyoffset": 229, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 211}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 218}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>KeypointType</decl.name> : AnyObject, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 317, "key.name": "KeypointType", "key.namelength": 12, "key.nameoffset": 197, "key.offset": 188, "key.parsed_declaration": "public protocol KeypointType: class, Equatable", "key.parsed_scope.end": 22, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main12KeypointType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Point</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 31, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 247, "key.offset": 232, "key.parsed_declaration": "associatedtype Point: PointType", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Self.Point.Type", "key.typeusr": "$s5Point11FritzVision12KeypointTypePQzmD", "key.usr": "s:11FritzVision12KeypointTypeP5PointQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Skeleton</decl.name> : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 281, "key.offset": 266, "key.parsed_declaration": "associatedtype Skeleton: SkeletonType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Self.Skeleton.Type", "key.typeusr": "$s8Skeleton11FritzVision12KeypointTypePQzmD", "key.usr": "s:11FritzVision12KeypointTypeP8SkeletonQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var index: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 323, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>index</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 22, "key.name": "index", "key.namelength": 5, "key.nameoffset": 311, "key.offset": 307, "key.parsed_declaration": "var index: Int", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision12KeypointTypeP5indexSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 353, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>position</decl.name>: <decl.var.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "position", "key.namelength": 8, "key.nameoffset": 336, "key.offset": 332, "key.parsed_declaration": "var position: Point", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "Self.Point", "key.typeusr": "$s5Point11FritzVision12KeypointTypePQzD", "key.usr": "s:11FritzVision12KeypointTypeP8position5PointQzvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var score: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 381, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "score", "key.namelength": 5, "key.nameoffset": 366, "key.offset": 362, "key.parsed_declaration": "var score: Double", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision12KeypointTypeP5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(index: <Type usr=\"s:Si\">Int</Type>, position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type>, score: <Type usr=\"s:Sd\">Double</Type>, part: <Type usr=\"s:11FritzVision12KeypointTypeP8SkeletonQa\">Skeleton</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>position</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>part</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP8SkeletonQa\">Skeleton</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 64, "key.name": "init(index:position:score:part:)", "key.namelength": 64, "key.nameoffset": 391, "key.offset": 391, "key.parsed_declaration": "init(index: Int, position: Point, score: Double, part: Skeleton)", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.substructure": [], "key.typename": "<Self where Self : KeypointType> (Self.Type) -> (Int, Self.Point, Double, Self.Skeleton) -> Self", "key.typeusr": "$s5index8position5score4partxSi_5PointQzSd8SkeletonQztcD", "key.usr": "s:11FritzVision12KeypointTypeP5index8position5score4partxSi_5PointQzSd8SkeletonQztcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func fromPosition(_ position: <Type usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</Type>) -&gt; <Type usr=\"s:11FritzVision12KeypointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/KeypointType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fromPosition</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>position</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision12KeypointTypeP5PointQa\">Point</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision12KeypointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 44, "key.name": "fromPosition(_:)", "key.namelength": 31, "key.nameoffset": 464, "key.offset": 459, "key.parsed_declaration": "func fromPosition(_ position: Point) -> Self", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.substructure": [], "key.typename": "<Self where Self : KeypointType> (Self) -> (Self.Point) -> Self", "key.typeusr": "$syx5PointQzcD", "key.usr": "s:11FritzVision12KeypointTypeP12fromPositionyx5PointQzF"}], "key.typename": "KeypointType.Protocol", "key.typeusr": "$s11FritzVision12KeypointType_pmD", "key.usr": "s:11FritzVision12KeypointTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1694, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public final class Point3D : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 196}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 189}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 176}], "key.bodylength": 480, "key.bodyoffset": 238, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 217}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 227}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Point3D</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.class", "key.length": 517, "key.name": "Point3D", "key.namelength": 7, "key.nameoffset": 208, "key.offset": 202, "key.parsed_declaration": "public final class Point3D: NSObject, PointType", "key.parsed_scope.end": 33, "key.parsed_scope.start": 12, "key.runtime_name": "_TtC4main7Point3D", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let x: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 241}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "x", "key.namelength": 1, "key.nameoffset": 252, "key.offset": 248, "key.parsed_declaration": "public let x: CGFloat", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)x"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let y: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 265}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "y", "key.namelength": 1, "key.nameoffset": 276, "key.offset": 272, "key.parsed_declaration": "public let y: CGFloat", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)y"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let z: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 289}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>z</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 14, "key.name": "z", "key.namelength": 1, "key.nameoffset": 300, "key.offset": 296, "key.parsed_declaration": "public let z: CGFloat", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)z"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(x: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, y: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>, z: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 314}], "key.bodylength": 48, "key.bodyoffset": 363, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>z</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init(x:y:z:)", "key.namelength": 40, "key.nameoffset": 321, "key.offset": 321, "key.parsed_declaration": "public init(x: CGFloat, y: CGFloat, z: CGFloat)", "key.parsed_scope.end": 21, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@CM@FritzVision@objc(cs)Point3D(im)initWith:\">init(with:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DCyAcA14SmoothingPointCcfc\">init(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Point3D.Type) -> (CGFloat, CGFloat, CGFloat) -> Point3D", "key.typeusr": "$s1x1y1z11FritzVision7Point3DC12CoreGraphics7CGFloatV_A2ItcD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(im)initWithX:y:z:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 423}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 416}], "key.bodylength": 176, "key.bodyoffset": 457, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 202, "key.name": "description", "key.namelength": 11, "key.nameoffset": 436, "key.offset": 432, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 28, "key.parsed_scope.start": 23, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(py)description"}, {"key.annotated_decl": "<Declaration>let x: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>x</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "x", "key.namelength": 1, "key.nameoffset": 466, "key.offset": 462, "key.parsed_declaration": "let x = String(format: \"%.10f\", self.x)", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)x\">x</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1xL_SSvp"}, {"key.annotated_decl": "<Declaration>let y: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>y</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "y", "key.namelength": 1, "key.nameoffset": 510, "key.offset": 506, "key.parsed_declaration": "let y = String(format: \"%.10f\", self.y)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)y\">y</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1yL_SSvp"}, {"key.annotated_decl": "<Declaration>let z: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>z</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "z", "key.namelength": 1, "key.nameoffset": 554, "key.offset": 550, "key.parsed_declaration": "let z = String(format: \"%.10f\", self.z)", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)Point3D(py)z\">z</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision7Point3DC11descriptionSSvg1zL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func toArray() -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 638}], "key.bodylength": 43, "key.bodyoffset": 673, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toArray</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 72, "key.name": "toArray()", "key.namelength": 9, "key.nameoffset": 650, "key.offset": 645, "key.overrides": [{"key.usr": "s:11FritzVision9PointTypeP7toArraySaySdGyF"}], "key.parsed_declaration": "public func toArray() -> [Double]", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.substructure": [], "key.typename": "(Point3D) -> () -> [Double]", "key.typeusr": "$sSaySdGycD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D(im)toArray"}], "key.typename": "Point3D.Type", "key.typeusr": "$s11FritzVision7Point3DCmD", "key.usr": "c:@M@FritzVision@objc(cs)Point3D"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == (lhs: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>, rhs: <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1551}], "key.bodylength": 88, "key.bodyoffset": 1604, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 135, "key.name": "==(_:_:)", "key.namelength": 31, "key.nameoffset": 1563, "key.offset": 1558, "key.parsed_declaration": "public func == (lhs: Point3D, rhs: Point3D) -> Bool", "key.parsed_scope.end": 65, "key.parsed_scope.start": 61, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel18ActiveServerModelsV2eeoiySbAC_ACtFZ\">== (_: ActiveServerModels, _: ActiveServerModels) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0abC5ErrorO2eeoiySbAC_ACtFZ\">== (_: FritzManagedModelError, _: FritzManagedModelError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore11RetryResultO2eeoiySbAC_ACtFZ\">== (_: RetryResult, _: RetryResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore12RequestErrorO2eeoiySbAC_ACtFZ\">== (_: RequestError, _: RequestError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore9GzipErrorV4KindO2eeoiySbAE_AEtFZ\">== (_: GzipError.Kind, _: GzipError.Kind) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19SessionManagerErrorO2eeoiySbAC_ACtFZ\">== (_: SessionManagerError, _: SessionManagerError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23AudioChannelDescriptionV04CoreA0E2eeoiySbAB_ABtFZ\">== (_: AudioChannelDescription, _: AudioChannelDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV0D12DescriptionsV2eeoiySbAE_AEtFZ\">== (_: ManagedAudioChannelLayout.ChannelDescriptions, _: ManagedAudioChannelLayout.ChannelDescriptions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV2eeoiySbAC_ACtFZ\">== (_: ManagedAudioChannelLayout, _: ManagedAudioChannelLayout) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE0C0O2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.Format, _: vImageCVImageFormat.Format) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE12ChromaSitingO2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.ChromaSiting, _: vImageCVImageFormat.ChromaSiting) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate10QuadratureV5ErrorO2eeoiySbAE_AEtFZ\">== (_: Quadrature.Error, _: Quadrature.Error) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO12RoundingModeO2eeoiySbAE_AEtFZ\">== (_: vDSP.RoundingMode, _: vDSP.RoundingMode) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DCTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DCTTransformType, _: vDSP.DCTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DFTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DFTTransformType, _: vDSP.DFTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO5RadixO2eeoiySbAE_AEtFZ\">== (_: vDSP.Radix, _: vDSP.Radix) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO25FourierTransformDirectionO2eeoiySbAE_AEtFZ\">== (_: vDSP.FourierTransformDirection, _: vDSP.FourierTransformDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO14WindowSequenceO2eeoiySbAE_AEtFZ\">== (_: vDSP.WindowSequence, _: vDSP.WindowSequence) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO15IntegrationRuleO2eeoiySbAE_AEtFZ\">== (_: vDSP.IntegrationRule, _: vDSP.IntegrationRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Point3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 65, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 1611, "key.offset": 1607, "key.parsed_declaration": "let areEqual = lhs.x == rhs.x && lhs.y == rhs.y && lhs.z == rhs.z", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA7Point3DC_ADtF8areEqualL_Sbvp"}], "key.typename": "(Point3D, Point3D) -> Bool", "key.typeusr": "$sySb11FritzVision7Point3DC_ACtcD", "key.usr": "s:11FritzVision2eeoiySbAA7Point3DC_ADtF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 429, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PointType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 178}], "key.bodylength": 222, "key.bodyoffset": 205, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PointType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 243, "key.name": "PointType", "key.namelength": 9, "key.nameoffset": 194, "key.offset": 185, "key.parsed_declaration": "public protocol PointType", "key.parsed_scope.end": 19, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main9PointType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func toArray() -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>toArray</decl.name>() -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 26, "key.name": "toArray()", "key.namelength": 9, "key.nameoffset": 214, "key.offset": 209, "key.parsed_declaration": "func toArray() -> [Double]", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "<Self where Self : PointType> (Self) -> () -> [Double]", "key.typeusr": "$sSaySdGycD", "key.usr": "s:11FritzVision9PointTypeP7toArraySaySdGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func - (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>- </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 44, "key.name": "-(_:_:)", "key.namelength": 24, "key.nameoffset": 251, "key.offset": 239, "key.parsed_declaration": "static func - (lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1soiyA2C_ACtFZ\">- (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1soiyA2B_ABtFZ\">- (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1soiyxx_0C5ValueQztFZ\">- (_: Self, _: Self.RawValue) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:5UIKit01_A23NumericRawRepresentablePAAE1soiy0C5ValueQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.RawValue</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV1soiyA2C_SdtFZ\">- (_: Date, _: TimeInterval) -&gt; Date</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1soiyA2B_ABtFZ\">- (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementVAASo11NSDimensionCRbzrlE1soiyACyxGAG_AGtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1soiyACyxGAE_AEtFZ\">- (_: Measurement&lt;UnitType&gt;, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1soiyA2G_AGtFZ\">- (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; OperationQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1soiyA2G_AGtFZ\">- (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; RunLoop.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_AA0aB8IntervalOtF\">- (_: DispatchTime, _: DispatchTimeInterval) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A4TimeVAD_SdtF\">- (_: DispatchTime, _: Double) -&gt; DispatchTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_AA0aC8IntervalOtF\">- (_: DispatchWallTime, _: DispatchTimeInterval) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch1soiyAA0A8WallTimeVAD_SdtF\">- (_: DispatchWallTime, _: Double) -&gt; DispatchWallTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1soiyA2G_AGtFZ\">- (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; DispatchQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1soiyA2C_ACtFZ\">- (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE1soiyA2B_ABtFZ\">- (_: CMTime, _: CMTime) -&gt; CMTime</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDP4simds17FixedWidthInteger6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1sopyA2BFZ\">- (_: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x2, _: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1sopyA2BFZ\">- (_: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x2, _: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1sopyA2BFZ\">- (_: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x2, _: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1sopyA2BFZ\">- (_: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x3, _: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1sopyA2BFZ\">- (_: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x3, _: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1sopyA2BFZ\">- (_: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x3, _: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1sopyA2BFZ\">- (_: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float2x4, _: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1sopyA2BFZ\">- (_: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float3x4, _: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1sopyA2BFZ\">- (_: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_float4x4, _: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1sopyA2BFZ\">- (_: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x2, _: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1sopyA2BFZ\">- (_: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x2, _: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1sopyA2BFZ\">- (_: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x2, _: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1sopyA2BFZ\">- (_: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x3, _: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1sopyA2BFZ\">- (_: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x3, _: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1sopyA2BFZ\">- (_: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x3, _: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1sopyA2BFZ\">- (_: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double2x4, _: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1sopyA2BFZ\">- (_: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double3x4, _: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1sopyA2BFZ\">- (_: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1soiyA2B_ABtFZ\">- (_: simd_double4x4, _: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1soiyA2B_ABtFZ\">- (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1sopyA2BFZ\">- (_: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1soiyA2B_ABtFZ\">- (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1sopyA2BFZ\">- (_: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1sopyS2fFZ\">- (_: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1soiyS2f_SftFZ\">- (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1sopyS2dFZ\">- (_: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1soiyS2d_SdtFZ\">- (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18AdditiveArithmeticP1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericP1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13SignedNumericPsE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1soiyA2B_ABtFZ\">- (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1soiyA2B_ABtFZ\">- (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1soiyA2B_ABtFZ\">- (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1soiyA2B_ABtFZ\">- (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1soiyA2B_ABtFZ\">- (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1soiyA2B_ABtFZ\">- (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1soiyA2B_ABtFZ\">- (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1soiyA2B_ABtFZ\">- (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1soiyS2u_SutFZ\">- (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1soiyS2i_SitFZ\">- (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiyxx_6StrideQztFZ\">- (_: Self, _: Self.Stride) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sxss8_PointerRzrlE1soiy6StrideQzx_xtFZ\">- (_: Self, _: Self) -&gt; Self.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_xtFZ\">- (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1sopyxxFZ\">- (_: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxAD_xtFZ\">- (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1soiyxx_ADtFZ\">- (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1soiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func / (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>/ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 44, "key.name": "/(_:_:)", "key.namelength": 24, "key.nameoffset": 298, "key.offset": 286, "key.parsed_declaration": "static func / (lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision9PointTypeP1doiyxx_SdtFZ\">/ (_: Self, _: Double) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGSize, _: CGSize) -&gt; CGSize</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_12CoreGraphics7CGFloatVtFZ\">/ (_: Point3D, _: CGFloat) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_SdtFZ\">/ (_: Point3D, _: Double) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_ACtFZ\">/ (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_SdtFZ\">/ (_: CGPoint, _: Double) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_So6CGSizeVtFZ\">/ (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">/ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">/ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_SftFZ\">/ (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_SdtFZ\">/ (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">/ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">/ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">/ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">/ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">/ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">/ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">/ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">/ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">/ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">/ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">/ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">/ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxAE_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_AEtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxAD_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_ADtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1doiyxx_xtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func / (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:Sd\">Double</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>/ </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 46, "key.name": "/(_:_:)", "key.namelength": 26, "key.nameoffset": 345, "key.offset": 333, "key.parsed_declaration": "static func / (lhs: Self, rhs: Double) -> Self", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision9PointTypeP1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGSize, _: CGSize) -&gt; CGSize</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_12CoreGraphics7CGFloatVtFZ\">/ (_: Point3D, _: CGFloat) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_SdtFZ\">/ (_: Point3D, _: Double) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1doiyA2C_ACtFZ\">/ (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_SdtFZ\">/ (_: CGPoint, _: Double) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_ABtFZ\">/ (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1doiyA2B_So6CGSizeVtFZ\">/ (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1doiyA2B_ABtFZ\">/ (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGAE_SdtFZ\">/ (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1doiyACyxGSd_AEtFZ\">/ (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1doiyA2C_ACtFZ\">/ (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1doiyA2B_SftFZ\">/ (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_ABtFZ\">/ (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1doiyA2B_SdtFZ\">/ (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1doiyS2f_SftFZ\">/ (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1doiyS2d_SdtFZ\">/ (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1doiyA2B_ABtFZ\">/ (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1doiyA2B_ABtFZ\">/ (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1doiyA2B_ABtFZ\">/ (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1doiyA2B_ABtFZ\">/ (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1doiyA2B_ABtFZ\">/ (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1doiyA2B_ABtFZ\">/ (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1doiyA2B_ABtFZ\">/ (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1doiyA2B_ABtFZ\">/ (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1doiyS2u_SutFZ\">/ (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1doiyS2i_SitFZ\">/ (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_xtFZ\">/ (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxAE_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPss17FixedWidthInteger6ScalarRpzrlE1doiyxx_AEtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxAD_xtFZ\">/ (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1doiyxx_ADtFZ\">/ (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Double) -> Self", "key.typeusr": "$syxx_SdtcD", "key.usr": "s:11FritzVision9PointTypeP1doiyxx_SdtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func * (lhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>, rhs: <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type>) -&gt; <Type usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PointType.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>* </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision9PointTypeP4Selfxmfp\">Self</ref.generic_type_param></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 44, "key.name": "*(_:_:)", "key.namelength": 24, "key.nameoffset": 394, "key.offset": 382, "key.parsed_declaration": "static func * (lhs: Self, rhs: Self) -> Self", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision7Point3DC1moiyA2C_ACtFZ\">* (_: Point3D, _: Point3D) -&gt; Point3D</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1moiyA2B_ABtFZ\">* (_: CGPoint, _: CGPoint) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV11FritzVisionE1moiyA2B_So6CGSizeVtFZ\">* (_: CGPoint, _: CGSize) -&gt; CGPoint</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE1moiyA2B_ABtFZ\">* (_: Decimal, _: Decimal) -&gt; Decimal</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGAE_SdtFZ\">* (_: Measurement&lt;UnitType&gt;, _: Double) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV1moiyACyxGSd_AEtFZ\">* (_: Double, _: Measurement&lt;UnitType&gt;) -&gt; Measurement&lt;UnitType&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; OperationQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; RunLoop.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV1moiyA2G_AGtFZ\">* (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; DispatchQueue.SchedulerTimeType.Stride</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:12CoreGraphics7CGFloatV1moiyA2C_ACtFZ\">* (_: CGFloat, _: CGFloat) -&gt; CGFloat</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:13CoreMLHelpers14MultiArrayTypeP1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x2) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x2, _: Float) -&gt; simd_float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiys5SIMD2VySfGAB_AGtFZ\">* (_: simd_float2x2, _: SIMD2&lt;Float&gt;) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiys5SIMD2VySfGAG_ABtFZ\">* (_: SIMD2&lt;Float&gt;, _: simd_float2x2) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiyA2B_ABtFZ\">* (_: simd_float2x2, _: float2x2) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiySo0A9_float3x2aAB_AFtFZ\">* (_: simd_float2x2, _: float3x2) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E1moiySo0A9_float4x2aAB_AFtFZ\">* (_: simd_float2x2, _: float4x2) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x2) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x2, _: Float) -&gt; simd_float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiys5SIMD2VySfGAB_s5SIMD3VySfGtFZ\">* (_: simd_float3x2, _: SIMD3&lt;Float&gt;) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiys5SIMD3VySfGs5SIMD2VySfG_ABtFZ\">* (_: SIMD2&lt;Float&gt;, _: simd_float3x2) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiySo0A9_float2x2aAB_So0A9_float2x3atFZ\">* (_: simd_float3x2, _: float2x3) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiyA2B_So0A9_float3x3atFZ\">* (_: simd_float3x2, _: float3x3) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E1moiySo0A9_float4x2aAB_So0A9_float4x3atFZ\">* (_: simd_float3x2, _: float4x3) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x2) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x2, _: Float) -&gt; simd_float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiys5SIMD2VySfGAB_s5SIMD4VySfGtFZ\">* (_: simd_float4x2, _: SIMD4&lt;Float&gt;) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiys5SIMD4VySfGs5SIMD2VySfG_ABtFZ\">* (_: SIMD2&lt;Float&gt;, _: simd_float4x2) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiySo0A9_float2x2aAB_So0A9_float2x4atFZ\">* (_: simd_float4x2, _: float2x4) -&gt; float2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiySo0A9_float3x2aAB_So0A9_float3x4atFZ\">* (_: simd_float4x2, _: float3x4) -&gt; float3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E1moiyA2B_So0A9_float4x4atFZ\">* (_: simd_float4x2, _: float4x4) -&gt; float4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x3) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x3, _: Float) -&gt; simd_float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiys5SIMD3VySfGAB_s5SIMD2VySfGtFZ\">* (_: simd_float2x3, _: SIMD2&lt;Float&gt;) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiys5SIMD2VySfGs5SIMD3VySfG_ABtFZ\">* (_: SIMD3&lt;Float&gt;, _: simd_float2x3) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiyA2B_So0A9_float2x2atFZ\">* (_: simd_float2x3, _: float2x2) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiySo0A9_float3x3aAB_So0A9_float3x2atFZ\">* (_: simd_float2x3, _: float3x2) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E1moiySo0A9_float4x3aAB_So0A9_float4x2atFZ\">* (_: simd_float2x3, _: float4x2) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x3) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x3, _: Float) -&gt; simd_float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiys5SIMD3VySfGAB_AGtFZ\">* (_: simd_float3x3, _: SIMD3&lt;Float&gt;) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiys5SIMD3VySfGAG_ABtFZ\">* (_: SIMD3&lt;Float&gt;, _: simd_float3x3) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiySo0A9_float2x3aAB_AFtFZ\">* (_: simd_float3x3, _: float2x3) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiyA2B_ABtFZ\">* (_: simd_float3x3, _: float3x3) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E1moiySo0A9_float4x3aAB_AFtFZ\">* (_: simd_float3x3, _: float4x3) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x3) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x3, _: Float) -&gt; simd_float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiys5SIMD3VySfGAB_s5SIMD4VySfGtFZ\">* (_: simd_float4x3, _: SIMD4&lt;Float&gt;) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiys5SIMD4VySfGs5SIMD3VySfG_ABtFZ\">* (_: SIMD3&lt;Float&gt;, _: simd_float4x3) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiySo0A9_float2x3aAB_So0A9_float2x4atFZ\">* (_: simd_float4x3, _: float2x4) -&gt; float2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiySo0A9_float3x3aAB_So0A9_float3x4atFZ\">* (_: simd_float4x3, _: float3x4) -&gt; float3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E1moiyA2B_So0A9_float4x4atFZ\">* (_: simd_float4x3, _: float4x4) -&gt; float4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float2x4) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float2x4, _: Float) -&gt; simd_float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiys5SIMD4VySfGAB_s5SIMD2VySfGtFZ\">* (_: simd_float2x4, _: SIMD2&lt;Float&gt;) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiys5SIMD2VySfGs5SIMD4VySfG_ABtFZ\">* (_: SIMD4&lt;Float&gt;, _: simd_float2x4) -&gt; SIMD2&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiyA2B_So0A9_float2x2atFZ\">* (_: simd_float2x4, _: float2x2) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiySo0A9_float3x4aAB_So0A9_float3x2atFZ\">* (_: simd_float2x4, _: float3x2) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E1moiySo0A9_float4x4aAB_So0A9_float4x2atFZ\">* (_: simd_float2x4, _: float4x2) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float3x4) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float3x4, _: Float) -&gt; simd_float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiys5SIMD4VySfGAB_s5SIMD3VySfGtFZ\">* (_: simd_float3x4, _: SIMD3&lt;Float&gt;) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiys5SIMD3VySfGs5SIMD4VySfG_ABtFZ\">* (_: SIMD4&lt;Float&gt;, _: simd_float3x4) -&gt; SIMD3&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiySo0A9_float2x4aAB_So0A9_float2x3atFZ\">* (_: simd_float3x4, _: float2x3) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiyA2B_So0A9_float3x3atFZ\">* (_: simd_float3x4, _: float3x3) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E1moiySo0A9_float4x4aAB_So0A9_float4x3atFZ\">* (_: simd_float3x4, _: float4x3) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_float4x4) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyA2B_SftFZ\">* (_: simd_float4x4, _: Float) -&gt; simd_float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiys5SIMD4VySfGAB_AGtFZ\">* (_: simd_float4x4, _: SIMD4&lt;Float&gt;) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiys5SIMD4VySfGAG_ABtFZ\">* (_: SIMD4&lt;Float&gt;, _: simd_float4x4) -&gt; SIMD4&lt;Float&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiySo0A9_float2x4aAB_AFtFZ\">* (_: simd_float4x4, _: float2x4) -&gt; float2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiySo0A9_float3x4aAB_AFtFZ\">* (_: simd_float4x4, _: float3x4) -&gt; float3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E1moiyA2B_ABtFZ\">* (_: simd_float4x4, _: float4x4) -&gt; float4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x2) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x2, _: Double) -&gt; simd_double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiys5SIMD2VySdGAB_AGtFZ\">* (_: simd_double2x2, _: SIMD2&lt;Double&gt;) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiys5SIMD2VySdGAG_ABtFZ\">* (_: SIMD2&lt;Double&gt;, _: simd_double2x2) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiyA2B_ABtFZ\">* (_: simd_double2x2, _: double2x2) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiySo0A10_double3x2aAB_AFtFZ\">* (_: simd_double2x2, _: double3x2) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E1moiySo0A10_double4x2aAB_AFtFZ\">* (_: simd_double2x2, _: double4x2) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x2) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x2, _: Double) -&gt; simd_double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiys5SIMD2VySdGAB_s5SIMD3VySdGtFZ\">* (_: simd_double3x2, _: SIMD3&lt;Double&gt;) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiys5SIMD3VySdGs5SIMD2VySdG_ABtFZ\">* (_: SIMD2&lt;Double&gt;, _: simd_double3x2) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiySo0A10_double2x2aAB_So0A10_double2x3atFZ\">* (_: simd_double3x2, _: double2x3) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiyA2B_So0A10_double3x3atFZ\">* (_: simd_double3x2, _: double3x3) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E1moiySo0A10_double4x2aAB_So0A10_double4x3atFZ\">* (_: simd_double3x2, _: double4x3) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x2) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x2, _: Double) -&gt; simd_double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiys5SIMD2VySdGAB_s5SIMD4VySdGtFZ\">* (_: simd_double4x2, _: SIMD4&lt;Double&gt;) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiys5SIMD4VySdGs5SIMD2VySdG_ABtFZ\">* (_: SIMD2&lt;Double&gt;, _: simd_double4x2) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiySo0A10_double2x2aAB_So0A10_double2x4atFZ\">* (_: simd_double4x2, _: double2x4) -&gt; double2x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiySo0A10_double3x2aAB_So0A10_double3x4atFZ\">* (_: simd_double4x2, _: double3x4) -&gt; double3x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E1moiyA2B_So0A10_double4x4atFZ\">* (_: simd_double4x2, _: double4x4) -&gt; double4x2</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x3) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x3, _: Double) -&gt; simd_double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiys5SIMD3VySdGAB_s5SIMD2VySdGtFZ\">* (_: simd_double2x3, _: SIMD2&lt;Double&gt;) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiys5SIMD2VySdGs5SIMD3VySdG_ABtFZ\">* (_: SIMD3&lt;Double&gt;, _: simd_double2x3) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiyA2B_So0A10_double2x2atFZ\">* (_: simd_double2x3, _: double2x2) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiySo0A10_double3x3aAB_So0A10_double3x2atFZ\">* (_: simd_double2x3, _: double3x2) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E1moiySo0A10_double4x3aAB_So0A10_double4x2atFZ\">* (_: simd_double2x3, _: double4x2) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x3) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x3, _: Double) -&gt; simd_double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiys5SIMD3VySdGAB_AGtFZ\">* (_: simd_double3x3, _: SIMD3&lt;Double&gt;) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiys5SIMD3VySdGAG_ABtFZ\">* (_: SIMD3&lt;Double&gt;, _: simd_double3x3) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiySo0A10_double2x3aAB_AFtFZ\">* (_: simd_double3x3, _: double2x3) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiyA2B_ABtFZ\">* (_: simd_double3x3, _: double3x3) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E1moiySo0A10_double4x3aAB_AFtFZ\">* (_: simd_double3x3, _: double4x3) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x3) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x3, _: Double) -&gt; simd_double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiys5SIMD3VySdGAB_s5SIMD4VySdGtFZ\">* (_: simd_double4x3, _: SIMD4&lt;Double&gt;) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiys5SIMD4VySdGs5SIMD3VySdG_ABtFZ\">* (_: SIMD3&lt;Double&gt;, _: simd_double4x3) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiySo0A10_double2x3aAB_So0A10_double2x4atFZ\">* (_: simd_double4x3, _: double2x4) -&gt; double2x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiySo0A10_double3x3aAB_So0A10_double3x4atFZ\">* (_: simd_double4x3, _: double3x4) -&gt; double3x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E1moiyA2B_So0A10_double4x4atFZ\">* (_: simd_double4x3, _: double4x4) -&gt; double4x3</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double2x4) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double2x4, _: Double) -&gt; simd_double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiys5SIMD4VySdGAB_s5SIMD2VySdGtFZ\">* (_: simd_double2x4, _: SIMD2&lt;Double&gt;) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiys5SIMD2VySdGs5SIMD4VySdG_ABtFZ\">* (_: SIMD4&lt;Double&gt;, _: simd_double2x4) -&gt; SIMD2&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiyA2B_So0A10_double2x2atFZ\">* (_: simd_double2x4, _: double2x2) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiySo0A10_double3x4aAB_So0A10_double3x2atFZ\">* (_: simd_double2x4, _: double3x2) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E1moiySo0A10_double4x4aAB_So0A10_double4x2atFZ\">* (_: simd_double2x4, _: double4x2) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double3x4) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double3x4, _: Double) -&gt; simd_double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiys5SIMD4VySdGAB_s5SIMD3VySdGtFZ\">* (_: simd_double3x4, _: SIMD3&lt;Double&gt;) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiys5SIMD3VySdGs5SIMD4VySdG_ABtFZ\">* (_: SIMD4&lt;Double&gt;, _: simd_double3x4) -&gt; SIMD3&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiySo0A10_double2x4aAB_So0A10_double2x3atFZ\">* (_: simd_double3x4, _: double2x3) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiyA2B_So0A10_double3x3atFZ\">* (_: simd_double3x4, _: double3x3) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E1moiySo0A10_double4x4aAB_So0A10_double4x3atFZ\">* (_: simd_double3x4, _: double4x3) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_double4x4) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyA2B_SdtFZ\">* (_: simd_double4x4, _: Double) -&gt; simd_double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiys5SIMD4VySdGAB_AGtFZ\">* (_: simd_double4x4, _: SIMD4&lt;Double&gt;) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiys5SIMD4VySdGAG_ABtFZ\">* (_: SIMD4&lt;Double&gt;, _: simd_double4x4) -&gt; SIMD4&lt;Double&gt;</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiySo0A10_double2x4aAB_AFtFZ\">* (_: simd_double4x4, _: double2x4) -&gt; double2x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiySo0A10_double3x4aAB_AFtFZ\">* (_: simd_double4x4, _: double3x4) -&gt; double3x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E1moiyA2B_ABtFZ\">* (_: simd_double4x4, _: double4x4) -&gt; double4x4</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyA2B_ABtFZ\">* (_: simd_quatf, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyABSf_ABtFZ\">* (_: Float, _: simd_quatf) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E1moiyA2B_SftFZ\">* (_: simd_quatf, _: Float) -&gt; simd_quatf</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyA2B_ABtFZ\">* (_: simd_quatd, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyABSd_ABtFZ\">* (_: Double, _: simd_quatd) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E1moiyA2B_SdtFZ\">* (_: simd_quatd, _: Double) -&gt; simd_quatd</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SF1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sf1moiyS2f_SftFZ\">* (_: Float, _: Float) -&gt; Float</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sd1moiyS2d_SdtFZ\">* (_: Double, _: Double) -&gt; Double</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sj1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sz1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V1moiyA2B_ABtFZ\">* (_: UInt8, _: UInt8) -&gt; UInt8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V1moiyA2B_ABtFZ\">* (_: Int8, _: Int8) -&gt; Int8</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V1moiyA2B_ABtFZ\">* (_: UInt16, _: UInt16) -&gt; UInt16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V1moiyA2B_ABtFZ\">* (_: Int16, _: Int16) -&gt; Int16</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V1moiyA2B_ABtFZ\">* (_: UInt32, _: UInt32) -&gt; UInt32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V1moiyA2B_ABtFZ\">* (_: Int32, _: Int32) -&gt; Int32</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V1moiyA2B_ABtFZ\">* (_: UInt64, _: UInt64) -&gt; UInt64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V1moiyA2B_ABtFZ\">* (_: Int64, _: Int64) -&gt; Int64</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su1moiyS2u_SutFZ\">* (_: UInt, _: UInt) -&gt; UInt</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si1moiyS2i_SitFZ\">* (_: Int, _: Int) -&gt; Int</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_xtFZ\">* (_: Self, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxAD_xtFZ\">* (_: Self.Scalar, _: Self) -&gt; Self</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsSF6ScalarRpzrlE1moiyxx_ADtFZ\">* (_: Self, _: Self.Scalar) -&gt; Self</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PointType> (Self.Type) -> (Self, Self) -> Self", "key.typeusr": "$syxx_xtcD", "key.usr": "s:11FritzVision9PointTypeP1moiyxx_xtFZ"}], "key.typename": "PointType.Protocol", "key.typeusr": "$s11FritzVision9PointType_pmD", "key.usr": "s:11FritzVision9PointTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose+Rotations.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1381, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3378, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose&lt;Skeleton&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 477}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 453}], "key.bodylength": 2846, "key.bodyoffset": 530, "key.doc.column": 14, "key.doc.comment": "Detected pose with Keypoints and corresponding score.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Pose<Skeleton> : NSObject where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"22\" column=\"14\"><Name>Pose</Name><USR>s:11FritzVision4PoseC</USR><Declaration>@available(iOS 11.0, *)\npublic class Pose&lt;Skeleton&gt; : NSObject where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>Detected pose with Keypoints and corresponding score.</Para></Abstract></CommentParts></Class>", "key.doc.line": 22, "key.doc.name": "Pose", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 395, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 520}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2893, "key.name": "Pose", "key.namelength": 4, "key.nameoffset": 490, "key.offset": 484, "key.parsed_declaration": "public class Pose<Skeleton: SkeletonType>: NSObject", "key.parsed_scope.end": 121, "key.parsed_scope.start": 22, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 505}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 495, "key.offset": 495, "key.parsed_declaration": "public class Pose<Skeleton: SkeletonType>: NSObject", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision4PoseC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func == (lhs: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 534}], "key.bodylength": 31, "key.bodyoffset": 608, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 99, "key.name": "==(_:_:)", "key.namelength": 45, "key.nameoffset": 553, "key.offset": 541, "key.parsed_declaration": "public static func == (lhs: Pose<Skeleton>, rhs: Pose<Skeleton>) -> Bool", "key.parsed_scope.end": 26, "key.parsed_scope.start": 24, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Pose3D&lt;Skeleton&gt;, _: Pose3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel18ActiveServerModelsV2eeoiySbAC_ACtFZ\">== (_: ActiveServerModels, _: ActiveServerModels) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0abC5ErrorO2eeoiySbAC_ACtFZ\">== (_: FritzManagedModelError, _: FritzManagedModelError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore11RetryResultO2eeoiySbAC_ACtFZ\">== (_: RetryResult, _: RetryResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore12RequestErrorO2eeoiySbAC_ACtFZ\">== (_: RequestError, _: RequestError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore9GzipErrorV4KindO2eeoiySbAE_AEtFZ\">== (_: GzipError.Kind, _: GzipError.Kind) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19SessionManagerErrorO2eeoiySbAC_ACtFZ\">== (_: SessionManagerError, _: SessionManagerError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23AudioChannelDescriptionV04CoreA0E2eeoiySbAB_ABtFZ\">== (_: AudioChannelDescription, _: AudioChannelDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV0D12DescriptionsV2eeoiySbAE_AEtFZ\">== (_: ManagedAudioChannelLayout.ChannelDescriptions, _: ManagedAudioChannelLayout.ChannelDescriptions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV2eeoiySbAC_ACtFZ\">== (_: ManagedAudioChannelLayout, _: ManagedAudioChannelLayout) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE0C0O2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.Format, _: vImageCVImageFormat.Format) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE12ChromaSitingO2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.ChromaSiting, _: vImageCVImageFormat.ChromaSiting) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate10QuadratureV5ErrorO2eeoiySbAE_AEtFZ\">== (_: Quadrature.Error, _: Quadrature.Error) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO12RoundingModeO2eeoiySbAE_AEtFZ\">== (_: vDSP.RoundingMode, _: vDSP.RoundingMode) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DCTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DCTTransformType, _: vDSP.DCTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DFTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DFTTransformType, _: vDSP.DFTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO5RadixO2eeoiySbAE_AEtFZ\">== (_: vDSP.Radix, _: vDSP.Radix) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO25FourierTransformDirectionO2eeoiySbAE_AEtFZ\">== (_: vDSP.FourierTransformDirection, _: vDSP.FourierTransformDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO14WindowSequenceO2eeoiySbAE_AEtFZ\">== (_: vDSP.WindowSequence, _: vDSP.WindowSequence) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO15IntegrationRuleO2eeoiySbAE_AEtFZ\">== (_: vDSP.IntegrationRule, _: vDSP.IntegrationRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>.Type) -> (Pose<Skeleton>, Pose<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision4PoseCyxG_ADtcD", "key.usr": "s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 676}], "key.doc.column": 14, "key.doc.comment": "List of keypoints on pose", "key.doc.declaration": "public let keypoints: [Keypoint<Skeleton>]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"29\" column=\"14\"><Name>keypoints</Name><USR>s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp</USR><Declaration>public let keypoints: [Keypoint&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>List of keypoints on pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 29, "key.doc.name": "keypoints", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 644, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 687, "key.offset": 683, "key.parsed_declaration": "public let keypoints: [Keypoint<Skeleton>]", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 751}], "key.doc.column": 14, "key.doc.comment": "Pose confidence score.", "key.doc.declaration": "public let score: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"32\" column=\"14\"><Name>score</Name><USR>s:11FritzVision4PoseC5scoreSdvp</USR><Declaration>public let score: Double</Declaration><CommentParts><Abstract><Para>Pose confidence score.</Para></Abstract></CommentParts></Other>", "key.doc.line": 32, "key.doc.name": "score", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 722, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 762, "key.offset": 758, "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision4PoseC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 812}], "key.doc.column": 14, "key.doc.comment": "Bounds of keypoint values.", "key.doc.declaration": "public let bounds: CGSize", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"35\" column=\"14\"><Name>bounds</Name><USR>s:11FritzVision4PoseC6boundsSo6CGSizeVvp</USR><Declaration>public let bounds: CGSize</Declaration><CommentParts><Abstract><Para>Bounds of keypoint values.</Para></Abstract></CommentParts></Other>", "key.doc.line": 35, "key.doc.name": "bounds", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 779, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 823, "key.offset": 819, "key.parsed_declaration": "public let bounds: CGSize", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision4PoseC6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 848}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 841}], "key.bodylength": 82, "key.bodyoffset": 927, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 153, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 68, "key.nameoffset": 857, "key.offset": 857, "key.parsed_declaration": "public required init(keypoints: [Keypoint<Skeleton>], score: Double, bounds: CGSize)", "key.parsed_scope.end": 41, "key.parsed_scope.start": 37, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>.Type) -> ([Keypoint<Skeleton>], Double, CGSize) -> Pose<Skeleton>", "key.typeusr": "$s9keypoints5score6bounds11FritzVision4PoseCyxGSayAD8KeypointCyxGG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision4PoseC9keypoints5score6boundsACyxGSayAA8KeypointCyxGG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override var description: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 1021}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1014}], "key.bodylength": 313, "key.bodyoffset": 1055, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>description</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 339, "key.name": "description", "key.namelength": 11, "key.nameoffset": 1034, "key.offset": 1030, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(py)description"}], "key.parsed_declaration": "public override var description: String", "key.parsed_scope.end": 54, "key.parsed_scope.start": 43, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(cs)NSObject(cm)description\">description()</RelatedName>"}], "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvp"}, {"key.annotated_decl": "<Declaration>let formattedScore: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedScore</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 50, "key.name": "formattedScore", "key.namelength": 14, "key.nameoffset": 1064, "key.offset": 1060, "key.parsed_declaration": "let formattedScore = String(format: \"%.3f\", score)", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg14formattedScoreL_SSvp"}, {"key.annotated_decl": "<Declaration>let rect: <Type usr=\"c:@S@CGRect\">CGRect</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "rect", "key.namelength": 4, "key.nameoffset": 1119, "key.offset": 1115, "key.parsed_declaration": "let rect = boundingRect", "key.parsed_scope.end": 45, "key.parsed_scope.start": 45, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg4rectL_So6CGRectVvp"}, {"key.annotated_decl": "<Declaration>let formattedRect: <Type usr=\"s:SS\">String</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>formattedRect</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 146, "key.name": "formattedRect", "key.namelength": 13, "key.nameoffset": 1147, "key.offset": 1143, "key.parsed_declaration": "let formattedRect = String(", "key.parsed_scope.end": 46, "key.parsed_scope.start": 46, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision4PoseC11descriptionSSvg13formattedRectL_SSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var boundingRect: <Type usr=\"c:@S@CGRect\">CGRect</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1420}], "key.bodylength": 535, "key.bodyoffset": 1453, "key.doc.column": 14, "key.doc.comment": "The bounding rectangle of the keypoints.", "key.doc.declaration": "public var boundingRect: CGRect { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"57\" column=\"14\"><Name>boundingRect</Name><USR>s:11FritzVision4PoseC12boundingRectSo6CGRectVvp</USR><Declaration>public var boundingRect: CGRect { get }</Declaration><CommentParts><Abstract><Para>The bounding rectangle of the keypoints.</Para></Abstract></CommentParts></Other>", "key.doc.line": 57, "key.doc.name": "boundingRect", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1373, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>boundingRect</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGRect\">CGRect</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 562, "key.name": "boundingRect", "key.namelength": 12, "key.nameoffset": 1431, "key.offset": 1427, "key.parsed_declaration": "public var boundingRect: CGRect", "key.parsed_scope.end": 72, "key.parsed_scope.start": 57, "key.typename": "CGRect", "key.typeusr": "$sSo6CGRectVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvp"}, {"key.annotated_decl": "<Declaration>var minX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "minX", "key.namelength": 4, "key.nameoffset": 1462, "key.offset": 1458, "key.parsed_declaration": "var minX = CGFloat.greatestFiniteMagnitude", "key.parsed_scope.end": 58, "key.parsed_scope.start": 58, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4minXL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var minY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>minY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 42, "key.name": "minY", "key.namelength": 4, "key.nameoffset": 1509, "key.offset": 1505, "key.parsed_declaration": "var minY = CGFloat.greatestFiniteMagnitude", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4minYL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var maxX: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxX</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "maxX", "key.namelength": 4, "key.nameoffset": 1556, "key.offset": 1552, "key.parsed_declaration": "var maxX = CGFloat.leastNonzeroMagnitude", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4maxXL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>var maxY: <Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>maxY</decl.name>: <decl.var.type><ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "maxY", "key.namelength": 4, "key.nameoffset": 1601, "key.offset": 1597, "key.parsed_declaration": "var maxY = CGFloat.leastNonzeroMagnitude", "key.parsed_scope.end": 61, "key.parsed_scope.start": 61, "key.typename": "CGFloat", "key.typeusr": "$s12CoreGraphics7CGFloatVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg4maxYL_12CoreGraphics7CGFloatVvp"}, {"key.annotated_decl": "<Declaration>let origin: <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>origin</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "origin", "key.namelength": 6, "key.nameoffset": 1861, "key.offset": 1857, "key.parsed_declaration": "let origin = CGPoint(x: minX, y: minY)", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "CGPoint", "key.typeusr": "$sSo7CGPointVD", "key.usr": "s:11FritzVision4PoseC12boundingRectSo6CGRectVvg6originL_So7CGPointVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func scaled(to targetDimensions: <Type usr=\"c:@S@CGSize\">CGSize</Type>) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2266}], "key.bodylength": 497, "key.bodyoffset": 2333, "key.doc.column": 15, "key.doc.comment": "Scale pose coordinates to match target dimensions.  Use when transforming coordinate\nspaces.\n\n- Parameters:\n  - targetDimensions: Dimensions of coordinate space to scale keypoint positions to.\n\n- Returns: Pose with scaled keypoints.", "key.doc.declaration": "public func scaled(to targetDimensions: CGSize) -> Pose<Skeleton>", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift\" line=\"81\" column=\"15\"><Name>scaled(to:)</Name><USR>s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF</USR><Declaration>public func scaled(to targetDimensions: CGSize) -&gt; Pose&lt;Skeleton&gt;</Declaration><CommentParts><Abstract><Para>Scale pose coordinates to match target dimensions.  Use when transforming coordinate spaces.</Para></Abstract><Parameters><Parameter><Name>targetDimensions</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Dimensions of coordinate space to scale keypoint positions to.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Pose with scaled keypoints.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 81, "key.doc.name": "scaled(to:)", "key.doc.parameters": [{"discussion": [{"Para": "Dimensions of coordinate space to scale keypoint positions to."}], "name": "targetDimensions"}], "key.doc.result_discussion": [{"Para": "Pose with scaled keypoints."}], "key.doc.type": "Function", "key.doclength": 271, "key.docoffset": 1993, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>scaled</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>to</decl.var.parameter.argument_label> <decl.var.parameter.name>targetDimensions</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 558, "key.name": "scaled(to:)", "key.namelength": 35, "key.nameoffset": 2278, "key.offset": 2273, "key.parsed_declaration": "public func scaled(to targetDimensions: CGSize) -> Pose<Skeleton>", "key.parsed_scope.end": 102, "key.parsed_scope.start": 81, "key.substructure": [{"key.annotated_decl": "<Declaration>let scale: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scale</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "scale", "key.namelength": 5, "key.nameoffset": 2342, "key.offset": 2338, "key.parsed_declaration": "let scale = targetDimensions / bounds", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF5scaleL_AHvp"}, {"key.annotated_decl": "<Declaration>var keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 40, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 2385, "key.offset": 2381, "key.parsed_declaration": "var keypoints: [Keypoint<Skeleton>] = []", "key.parsed_scope.end": 84, "key.parsed_scope.start": 84, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC9keypointsSayAA8KeypointCyxGGvp\">keypoints</RelatedName>"}], "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF9keypointsL_SayAA8KeypointCyxGGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> (CGSize) -> Pose<Skeleton>", "key.typeusr": "$s2to11FritzVision4PoseCyxGSo6CGSizeV_tcD", "key.usr": "s:11FritzVision4PoseC6scaled2toACyxGSo6CGSizeV_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func getKeypoint(for part: <Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>) -&gt; <Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2835}], "key.bodylength": 57, "key.bodyoffset": 2903, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getKeypoint</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>part</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 119, "key.name": "getKeypoint(for:)", "key.namelength": 31, "key.nameoffset": 2847, "key.offset": 2842, "key.parsed_declaration": "public func getKeypoint(for part: Skeleton) -> Keypoint<Skeleton>?", "key.parsed_scope.end": 106, "key.parsed_scope.start": 104, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> (Skeleton) -> Keypoint<Skeleton>?", "key.typeusr": "$s3for11FritzVision8KeypointCyxGSgx_tcD", "key.usr": "s:11FritzVision4PoseC11getKeypoint3forAA0E0CyxGSgx_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func to3D() -&gt; <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2965}], "key.bodylength": 137, "key.bodyoffset": 3005, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>to3D</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision4PoseC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 171, "key.name": "to3D()", "key.namelength": 6, "key.nameoffset": 2977, "key.offset": 2972, "key.parsed_declaration": "public func to3D() -> Pose3D<Skeleton>", "key.parsed_scope.end": 111, "key.parsed_scope.start": 108, "key.substructure": [{"key.annotated_decl": "<Declaration>let newKeypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 46, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 3014, "key.offset": 3010, "key.parsed_declaration": "let newKeypoints = keypoints.map { $0.to3D() }", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyxGGD", "key.usr": "s:11FritzVision4PoseC4to3DAA6Pose3DCyxGyF12newKeypointsL_SayAA10Keypoint3DCyxGGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> () -> Pose3D<Skeleton>", "key.typeusr": "$s11FritzVision6Pose3DCyxGycD", "key.usr": "s:11FritzVision4PoseC4to3DAA6Pose3DCyxGyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public override func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 3154}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3147}], "key.bodylength": 173, "key.bodyoffset": 3201, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 212, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 3168, "key.offset": 3163, "key.overrides": [{"key.usr": "c:objc(pl)NSObject(im)isEqual:"}], "key.parsed_declaration": "public override func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 120, "key.parsed_scope.start": 113, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:objc(pl)NSObject(im)isEqual:\">isEqual(_: Any?) -&gt; Bool</RelatedName>"}], "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision4PoseC7isEqualySbypSgF"}], "key.typename": "Pose<Skeleton>.Type", "key.typeusr": "$s11FritzVision4PoseCyxGmD", "key.usr": "s:11FritzVision4PoseC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1039, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose3D&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 257}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 233}], "key.bodylength": 519, "key.bodyoffset": 302, "key.doc.column": 14, "key.doc.comment": "Detected pose with Keypoints and corresponding score.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Pose3D<Skeleton> where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"13\" column=\"14\"><Name>Pose3D</Name><USR>s:11FritzVision6Pose3DC</USR><Declaration>@available(iOS 11.0, *)\npublic class Pose3D&lt;Skeleton&gt; where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>Detected pose with Keypoints and corresponding score.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "Pose3D", "key.doc.type": "Class", "key.doclength": 58, "key.docoffset": 175, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose3D</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 558, "key.name": "Pose3D", "key.namelength": 6, "key.nameoffset": 270, "key.offset": 264, "key.parsed_declaration": "public class Pose3D<Skeleton: SkeletonType>", "key.parsed_scope.end": 36, "key.parsed_scope.start": 13, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 287}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 277, "key.offset": 277, "key.parsed_declaration": "public class Pose3D<Skeleton: SkeletonType>", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision6Pose3DC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let keypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 338}], "key.doc.column": 14, "key.doc.comment": "List of keypoints on pose", "key.doc.declaration": "public let keypoints: [Keypoint3D<Skeleton>]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"16\" column=\"14\"><Name>keypoints</Name><USR>s:11FritzVision6Pose3DC9keypointsSayAA10Keypoint3DCyxGGvp</USR><Declaration>public let keypoints: [Keypoint3D&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>List of keypoints on pose</Para></Abstract></CommentParts></Other>", "key.doc.line": 16, "key.doc.name": "keypoints", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 306, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 37, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 349, "key.offset": 345, "key.parsed_declaration": "public let keypoints: [Keypoint3D<Skeleton>]", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyxGGD", "key.usr": "s:11FritzVision6Pose3DC9keypointsSayAA10Keypoint3DCyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let score: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 415}], "key.doc.column": 14, "key.doc.comment": "Pose confidence score.", "key.doc.declaration": "public let score: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"19\" column=\"14\"><Name>score</Name><USR>s:11FritzVision6Pose3DC5scoreSdvp</USR><Declaration>public let score: Double</Declaration><CommentParts><Abstract><Para>Pose confidence score.</Para></Abstract></CommentParts></Other>", "key.doc.line": 19, "key.doc.name": "score", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 386, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "score", "key.namelength": 5, "key.nameoffset": 426, "key.offset": 422, "key.parsed_declaration": "public let score: Double", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision6Pose3DC5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 476}], "key.doc.column": 14, "key.doc.comment": "Bounds of keypoint values.", "key.doc.declaration": "public let bounds: CGSize", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift\" line=\"22\" column=\"14\"><Name>bounds</Name><USR>s:11FritzVision6Pose3DC6boundsSo6CGSizeVvp</USR><Declaration>public let bounds: CGSize</Declaration><CommentParts><Abstract><Para>Bounds of keypoint values.</Para></Abstract></CommentParts></Other>", "key.doc.line": 22, "key.doc.name": "bounds", "key.doc.type": "Other", "key.doclength": 31, "key.docoffset": 443, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 18, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 487, "key.offset": 483, "key.parsed_declaration": "public let bounds: CGSize", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision6Pose3DC6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>required public init(keypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;<Type usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</Type>&gt;], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 514}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 505}], "key.bodylength": 82, "key.bodyoffset": 593, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision6Pose3DC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 155, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 70, "key.nameoffset": 521, "key.offset": 521, "key.parsed_declaration": "required public init(keypoints: [Keypoint3D<Skeleton>], score: Double, bounds: CGSize)", "key.parsed_scope.end": 28, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>.Type) -> ([Keypoint3D<Skeleton>], Double, CGSize) -> Pose3D<Skeleton>", "key.typeusr": "$s9keypoints5score6bounds11FritzVision6Pose3DCyxGSayAD10Keypoint3DCyxGG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision6Pose3DC9keypoints5score6boundsACyxGSayAA10Keypoint3DCyxGG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func isEqual(_ object: Any?) -&gt; <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 680}], "key.bodylength": 94, "key.bodyoffset": 725, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>isEqual</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>object</decl.var.parameter.name>: <decl.var.parameter.type>Any?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 133, "key.name": "isEqual(_:)", "key.namelength": 23, "key.nameoffset": 692, "key.offset": 687, "key.parsed_declaration": "public func isEqual(_ object: Any?) -> Bool", "key.parsed_scope.end": 35, "key.parsed_scope.start": 30, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>) -> (Any?) -> Bool", "key.typeusr": "$sySbypSgcD", "key.usr": "s:11FritzVision6Pose3DC7isEqualySbypSgF"}], "key.typename": "Pose3D<Skeleton>.Type", "key.typeusr": "$s11FritzVision6Pose3DCyxGmD", "key.usr": "s:11FritzVision6Pose3DC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func == &lt;Skeleton&gt;(lhs: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;, rhs: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:Sb\">Bool</Type> where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 848}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 824}], "key.bodylength": 94, "key.bodyoffset": 943, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.function.operator.infix><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>== </decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.name>lhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>rhs</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.function.operator.infix>", "key.kind": "source.lang.swift.decl.function.free", "key.length": 183, "key.name": "==(_:_:)", "key.namelength": 73, "key.nameoffset": 860, "key.offset": 855, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Pose3D<Skeleton>, rhs: Pose3D<Skeleton>) -> Bool", "key.parsed_scope.end": 43, "key.parsed_scope.start": 39, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA10Keypoint3DCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint3D&lt;Skeleton&gt;, _: Keypoint3D&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4PoseC2eeoiySbACyxG_AEtFZ\">== (_: Pose&lt;Skeleton&gt;, _: Pose&lt;Skeleton&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA7Point3DC_ADtF\">== (_: Point3D, _: Point3D) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision2eeoiySbAA8KeypointCyxG_AEtAA12SkeletonTypeRzlF\">== &lt;Skeleton&gt;(_: Keypoint&lt;Skeleton&gt;, _: Keypoint&lt;Skeleton&gt;) -&gt; Bool where Skeleton : SkeletonType</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:6Darwin0A7BooleanV2eeoiySbAC_ACtFZ\">== (_: DarwinBoolean, _: DarwinBoolean) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel18ActiveServerModelsV2eeoiySbAC_ACtFZ\">== (_: ActiveServerModels, _: ActiveServerModels) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:17FritzManagedModel0abC5ErrorO2eeoiySbAC_ACtFZ\">== (_: FritzManagedModelError, _: FritzManagedModelError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore11RetryResultO2eeoiySbAC_ACtFZ\">== (_: RetryResult, _: RetryResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore12RequestErrorO2eeoiySbAC_ACtFZ\">== (_: RequestError, _: RequestError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore9GzipErrorV4KindO2eeoiySbAE_AEtFZ\">== (_: GzipError.Kind, _: GzipError.Kind) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9FritzCore19SessionManagerErrorO2eeoiySbAC_ACtFZ\">== (_: SessionManagerError, _: SessionManagerError) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIEdgeInsets, _: UIEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23NSDirectionalEdgeInsetsV5UIKitE2eeoiySbAB_ABtFZ\">== (_: NSDirectionalEdgeInsets, _: NSDirectionalEdgeInsets) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8UIOffsetV5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIOffset, _: UIOffset) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So12UIFloatRangea5UIKitE2eeoiySbAB_ABtFZ\">== (_: UIFloatRange, _: UIFloatRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV10IdentifierO2eeoiySbAE_AEtFZ\">== (_: Calendar.Identifier, _: Calendar.Identifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV9ComponentO2eeoiySbAE_AEtFZ\">== (_: Calendar.Component, _: Calendar.Component) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV15SearchDirectionO2eeoiySbAE_AEtFZ\">== (_: Calendar.SearchDirection, _: Calendar.SearchDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV18RepeatedTimePolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.RepeatedTimePolicy, _: Calendar.RepeatedTimePolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV14MatchingPolicyO2eeoiySbAE_AEtFZ\">== (_: Calendar.MatchingPolicy, _: Calendar.MatchingPolicy) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8CalendarV2eeoiySbAC_ACtFZ\">== (_: Calendar, _: Calendar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12CharacterSetV2eeoiySbAC_ACtFZ\">== (_: CharacterSet, _: CharacterSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DataV2eeoiySbAC_ACtFZ\">== (_: Data, _: Data) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4DateV2eeoiySbAC_ACtFZ\">== (_: Date, _: Date) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation14DateComponentsV2eeoiySbAC_ACtFZ\">== (_: DateComponents, _: DateComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12DateIntervalV2eeoiySbAC_ACtFZ\">== (_: DateInterval, _: DateInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSDecimala10FoundationE2eeoiySbAB_ABtFZ\">== (_: Decimal, _: Decimal) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation9IndexPathV2eeoiySbAC_ACtFZ\">== (_: IndexPath, _: IndexPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV0B0V2eeoiySbAE_AEtFZ\">== (_: IndexSet.Index, _: IndexSet.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV9RangeViewV2eeoiySbAE_AEtFZ\">== (_: IndexSet.RangeView, _: IndexSet.RangeView) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8IndexSetV2eeoiySbAC_ACtFZ\">== (_: IndexSet, _: IndexSet) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation6LocaleV2eeoiySbAC_ACtFZ\">== (_: Locale, _: Locale) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation11MeasurementV2eeoiySbACyqd__G_ACyqd_0_GtSo6NSUnitCRbd__AHRbd_0_r0_lFZ\">== &lt;LeftHandSideType, RightHandSideType&gt;(_: Measurement&lt;LeftHandSideType&gt;, _: Measurement&lt;RightHandSideType&gt;) -&gt; Bool where LeftHandSideType : Unit, RightHandSideType : Unit</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12NotificationV2eeoiySbAC_ACtFZ\">== (_: Notification, _: Notification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation21_BridgedStoredNSErrorPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8_NSRangeV10FoundationE2eeoiySbAB_ABtFZ\">== (_: NSRange, _: NSRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS10FoundationE8EncodingV2eeoiySbAC_ACtFZ\">== (_: String.Encoding, _: String.Encoding) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation20PersonNameComponentsV2eeoiySbAC_ACtFZ\">== (_: PersonNameComponents, _: PersonNameComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10FoundationE26KeyValueObservingPublisherV2eeoiySbAEy_xq_G_AGtFZ\">== (_: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;, _: NSObject.KeyValueObservingPublisher&lt;Subject, Value&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So20NSNotificationCenterC10FoundationE9PublisherV2eeoiySbAE_AEtFZ\">== (_: NotificationCenter.Publisher, _: NotificationCenter.Publisher) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSScannerC10FoundationE20NumberRepresentationO2eeoiySbAE_AEtFZ\">== (_: Scanner.NumberRepresentation, _: Scanner.NumberRepresentation) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So16NSOperationQueueC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: OperationQueue.SchedulerTimeType.Stride, _: OperationQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So9NSRunLoopC10FoundationE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: RunLoop.SchedulerTimeType.Stride, _: RunLoop.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation8TimeZoneV2eeoiySbAC_ACtFZ\">== (_: TimeZone, _: TimeZone) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation3URLV2eeoiySbAC_ACtFZ\">== (_: URL, _: URL) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation13URLComponentsV2eeoiySbAC_ACtFZ\">== (_: URLComponents, _: URLComponents) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation12URLQueryItemV2eeoiySbAC_ACtFZ\">== (_: URLQueryItem, _: URLQueryItem) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation10URLRequestV2eeoiySbAC_ACtFZ\">== (_: URLRequest, _: URLRequest) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Foundation4UUIDV2eeoiySbAC_ACtFZ\">== (_: UUID, _: UUID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:14CoreFoundation9_CFObjectPAAE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV0B6SClassO2eeoiySbAE_AEtFZ\">== (_: DispatchQoS.QoSClass, _: DispatchQoS.QoSClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A3QoSV2eeoiySbAC_ACtFZ\">== (_: DispatchQoS, _: DispatchQoS) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A13TimeoutResultO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeoutResult, _: DispatchTimeoutResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE19GlobalQueuePriorityO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.GlobalQueuePriority, _: DispatchQueue.GlobalQueuePriority) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE20AutoreleaseFrequencyO2eeoiySbAE_AEtFZ\">== (_: DispatchQueue.AutoreleaseFrequency, _: DispatchQueue.AutoreleaseFrequency) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17OS_dispatch_queueC8DispatchE17SchedulerTimeTypeV6StrideV2eeoiySbAG_AGtFZ\">== (_: DispatchQueue.SchedulerTimeType.Stride, _: DispatchQueue.SchedulerTimeType.Stride) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A4TimeV2eeoiySbAC_ACtFZ\">== (_: DispatchTime, _: DispatchTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A8WallTimeV2eeoiySbAC_ACtFZ\">== (_: DispatchWallTime, _: DispatchWallTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:8Dispatch0A12TimeIntervalO2eeoiySbAC_ACtFZ\">== (_: DispatchTimeInterval, _: DispatchTimeInterval) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10ObjectiveC8SelectorV2eeoiySbAC_ACtFZ\">== (_: Selector, _: Selector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8NSObjectC10ObjectiveCE2eeoiySbAB_ABtFZ\">== (_: NSObject, _: NSObject) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CGAffineTransformV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGAffineTransform, _: CGAffineTransform) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So7CGPointV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGPoint, _: CGPoint) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGSizeV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGSize, _: CGSize) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So8CGVectorV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGVector, _: CGVector) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CGRectV12CoreGraphicsE2eeoiySbAB_ABtFZ\">== (_: CGRect, _: CGRect) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5ValueV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Value, _: CMFormatDescription.Extensions.Value) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV5IndexV2eeoiySbAG_AGtFZ\">== (_: CMFormatDescription.Extensions.Index, _: CMFormatDescription.Extensions.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE10ExtensionsV2eeoiySbAE_AEtFZ\">== (_: CMFormatDescription.Extensions, _: CMFormatDescription.Extensions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22CMFormatDescriptionRefa9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMFormatDescription, _: CMFormatDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So17CMSampleBufferRefa9CoreMediaE13DataReadinessO2eeoiySbAE_AEtFZ\">== (_: CMSampleBuffer.DataReadiness, _: CMSampleBuffer.DataReadiness) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So6CMTimea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTime, _: CMTime) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So11CMTimeRangea9CoreMediaE2eeoiySbAB_ABtFZ\">== (_: CMTimeRange, _: CMTimeRange) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So23AudioChannelDescriptionV04CoreA0E2eeoiySbAB_ABtFZ\">== (_: AudioChannelDescription, _: AudioChannelDescription) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV0D12DescriptionsV2eeoiySbAE_AEtFZ\">== (_: ManagedAudioChannelLayout.ChannelDescriptions, _: ManagedAudioChannelLayout.ChannelDescriptions) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:9CoreAudio07ManagedB13ChannelLayoutV2eeoiySbAC_ACtFZ\">== (_: ManagedAudioChannelLayout, _: ManagedAudioChannelLayout) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE0C0O2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.Format, _: vImageCVImageFormat.Format) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So22vImageCVImageFormatRefa10AccelerateE12ChromaSitingO2eeoiySbAE_AEtFZ\">== (_: vImageCVImageFormat.ChromaSiting, _: vImageCVImageFormat.ChromaSiting) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate10QuadratureV5ErrorO2eeoiySbAE_AEtFZ\">== (_: Quadrature.Error, _: Quadrature.Error) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO12RoundingModeO2eeoiySbAE_AEtFZ\">== (_: vDSP.RoundingMode, _: vDSP.RoundingMode) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DCTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DCTTransformType, _: vDSP.DCTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO16DFTTransformTypeO2eeoiySbAE_AEtFZ\">== (_: vDSP.DFTTransformType, _: vDSP.DFTTransformType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO5RadixO2eeoiySbAE_AEtFZ\">== (_: vDSP.Radix, _: vDSP.Radix) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO25FourierTransformDirectionO2eeoiySbAE_AEtFZ\">== (_: vDSP.FourierTransformDirection, _: vDSP.FourierTransformDirection) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO14WindowSequenceO2eeoiySbAE_AEtFZ\">== (_: vDSP.WindowSequence, _: vDSP.WindowSequence) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:10Accelerate4vDSPO15IntegrationRuleO2eeoiySbAE_AEtFZ\">== (_: vDSP.IntegrationRule, _: vDSP.IntegrationRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:2os12OSSignpostIDV2eeoiySbAC_ACtFZ\">== (_: OSSignpostID, _: OSSignpostID) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x2, _: simd_float2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x2, _: simd_float3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x2, _: simd_float4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x3, _: simd_float2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x3, _: simd_float3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x3, _: simd_float4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float2x4, _: simd_float2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float3x4, _: simd_float3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So13simd_float4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_float4x4, _: simd_float4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x2, _: simd_double2x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x2, _: simd_double3x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x2a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x2, _: simd_double4x2) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x3, _: simd_double2x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x3, _: simd_double3x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x3a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x3, _: simd_double4x3) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double2x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double2x4, _: simd_double2x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double3x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double3x4, _: simd_double3x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So14simd_double4x4a0A0E2eeoiySbAB_ABtFZ\">== (_: simd_double4x4, _: simd_double4x4) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatfa0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatf, _: simd_quatf) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:So10simd_quatda0A0E2eeoiySbAB_ABtFZ\">== (_: simd_quatd, _: simd_quatd) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbypXpSg_ABtF\">== (_: Any.Type?, _: Any.Type?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_xtSYRzSQ8RawValueRpzlF\">== &lt;T&gt;(_: T, _: T) -&gt; Bool where T : RawRepresentable, T.RawValue : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbyt_yttF\">== (_: (), _: ()) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_t_x_q_ttSQRzSQR_r0_lF\">== &lt;A, B&gt;(_: (A, B), _: (A, B)) -&gt; Bool where A : Equatable, B : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_t_x_q_q0_ttSQRzSQR_SQR0_r1_lF\">== &lt;A, B, C&gt;(_: (A, B, C), _: (A, B, C)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_t_x_q_q0_q1_ttSQRzSQR_SQR0_SQR1_r2_lF\">== &lt;A, B, C, D&gt;(_: (A, B, C, D), _: (A, B, C, D)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_t_x_q_q0_q1_q2_ttSQRzSQR_SQR0_SQR1_SQR2_r3_lF\">== &lt;A, B, C, D, E&gt;(_: (A, B, C, D, E), _: (A, B, C, D, E)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s2eeoiySbx_q_q0_q1_q2_q3_t_x_q_q0_q1_q2_q3_ttSQRzSQR_SQR0_SQR1_SQR2_SQR3_r4_lF\">== &lt;A, B, C, D, E, F&gt;(_: (A, B, C, D, E, F), _: (A, B, C, D, E, F)) -&gt; Bool where A : Equatable, B : Equatable, C : Equatable, D : Equatable, E : Equatable, F : Equatable</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SasSQRzlE2eeoiySbSayxG_ABtFZ\">== (_: Array&lt;Element&gt;, _: Array&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10ArraySliceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ArraySlice&lt;Element&gt;, _: ArraySlice&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sb2eeoiyS2b_SbtFZ\">== (_: Bool, _: Bool) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SJ2eeoiySbSJ_SJtFZ\">== (_: Character, _: Character) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17CodingUserInfoKeyV2eeoiySbAB_ABtFZ\">== (_: CodingUserInfoKey, _: CodingUserInfoKey) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15ContiguousArrayVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: ContiguousArray&lt;Element&gt;, _: ContiguousArray&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SNsSxRzSZ6StrideRpzrlE5IndexO2eeoiySbADyx_G_AFtFZ\">== (_: ClosedRange&lt;Bound&gt;.Index, _: ClosedRange&lt;Bound&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SN2eeoiySbSNyxG_ABtFZ\">== (_: ClosedRange&lt;Bound&gt;, _: ClosedRange&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s13OpaquePointerV2eeoiySbAB_ABtFZ\">== (_: OpaquePointer, _: OpaquePointer) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD4KeysV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Keys, _: Dictionary&lt;Key, Value&gt;.Keys) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SDsSQR_rlE2eeoiySbSDyxq_G_ABtFZ\">== (_: [Key : Value], _: [Key : Value]) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SD5IndexV2eeoiySbAByxq__G_ADtFZ\">== (_: Dictionary&lt;Key, Value&gt;.Index, _: Dictionary&lt;Key, Value&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15EmptyCollectionV2eeoiySbAByxG_ADtFZ\">== (_: EmptyCollection&lt;Element&gt;, _: EmptyCollection&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SQ2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s15FlattenSequenceVsSlRzSl7ElementRpzrlE5IndexV2eeoiySbAFyx_G_AHtFZ\">== (_: FlattenCollection&lt;Base&gt;.Index, _: FlattenCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s17FloatingPointSignO2eeoiySbAB_ABtFZ\">== (_: FloatingPointSign, _: FloatingPointSign) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s27FloatingPointClassificationO2eeoiySbAB_ABtFZ\">== (_: FloatingPointClassification, _: FloatingPointClassification) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s25FloatingPointRoundingRuleO2eeoiySbAB_ABtFZ\">== (_: FloatingPointRoundingRule, _: FloatingPointRoundingRule) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SFsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11AnyHashableV2eeoiySbAB_ABtFZ\">== (_: AnyHashable, _: AnyHashable) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SzsE2eeoiySbx_qd__tSzRd__lFZ\">== &lt;Other&gt;(_: Self, _: Other) -&gt; Bool where Other : BinaryInteger</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5UInt8V2eeoiySbAB_ABtFZ\">== (_: UInt8, _: UInt8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4Int8V2eeoiySbAB_ABtFZ\">== (_: Int8, _: Int8) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt16V2eeoiySbAB_ABtFZ\">== (_: UInt16, _: UInt16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int16V2eeoiySbAB_ABtFZ\">== (_: Int16, _: Int16) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt32V2eeoiySbAB_ABtFZ\">== (_: UInt32, _: UInt32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int32V2eeoiySbAB_ABtFZ\">== (_: Int32, _: Int32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6UInt64V2eeoiySbAB_ABtFZ\">== (_: UInt64, _: UInt64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5Int64V2eeoiySbAB_ABtFZ\">== (_: Int64, _: Int64) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Su2eeoiySbSu_SutFZ\">== (_: UInt, _: UInt) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Si2eeoiySbSi_SitFZ\">== (_: Int, _: Int) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s10AnyKeyPathC2eeoiySbAB_ABtFZ\">== (_: AnyKeyPath, _: AnyKeyPath) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20ManagedBufferPointerV2eeoiySbAByxq_G_ADtFZ\">== (_: ManagedBufferPointer&lt;Header, Element&gt;, _: ManagedBufferPointer&lt;Header, Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO6ScalarV2eeoiySbAD_ADtFZ\">== (_: Unicode.Scalar, _: Unicode.Scalar) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SO2eeoiySbSO_SOtFZ\">== (_: ObjectIdentifier, _: ObjectIdentifier) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SqsSQRzlE2eeoiySbxSg_ABtFZ\">== (_: Wrapped?, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbxSg_s26_OptionalNilComparisonTypeVtFZ\">== (_: Wrapped?, _: _OptionalNilComparisonType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sq2eeoiySbs26_OptionalNilComparisonTypeV_xSgtFZ\">== (_: _OptionalNilComparisonType, _: Wrapped?) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8_PointerPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s5NeverO2eeoiySbAB_ABtFZ\">== (_: Never, _: Never) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s23LazyPrefixWhileSequenceVsSlRzrlE5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: LazyPrefixWhileCollection&lt;Base&gt;.Index, _: LazyPrefixWhileCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sn2eeoiySbSnyxG_ABtFZ\">== (_: Range&lt;Bound&gt;, _: Range&lt;Bound&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6ResultOsSQRzSQR_rlE2eeoiySbAByxq_G_ADtFZ\">== (_: Result&lt;Success, Failure&gt;, _: Result&lt;Success, Failure&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s18ReversedCollectionV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: ReversedCollection&lt;Base&gt;.Index, _: ReversedCollection&lt;Base&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh2eeoiySbShyxG_ABtFZ\">== (_: Set&lt;Element&gt;, _: Set&lt;Element&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:Sh5IndexV2eeoiySbAByx_G_ADtFZ\">== (_: Set&lt;Element&gt;.Index, _: Set&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SxsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SysE2eeoiySbx_qd__tSyRd__lFZ\">== &lt;RHS&gt;(_: Self, _: RHS) -&gt; Bool where RHS : StringProtocol</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS2eeoiySbSS_SStFZ\">== (_: String, _: String) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SS5IndexV2eeoiySbAB_ABtFZ\">== (_: String.Index, _: String.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s11_UIntBufferV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: _UIntBuffer&lt;Element&gt;.Index, _: _UIntBuffer&lt;Element&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO15GeneralCategoryO2eeoiySbAD_ADtFZ\">== (_: Unicode.GeneralCategory, _: Unicode.GeneralCategory) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO23CanonicalCombiningClassV2eeoiySbAD_ADtFZ\">== (_: Unicode.CanonicalCombiningClass, _: Unicode.CanonicalCombiningClass) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO11NumericTypeO2eeoiySbAD_ADtFZ\">== (_: Unicode.NumericType, _: Unicode.NumericType) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s7UnicodeO5UTF32O2eeoiySbAD_ADtFZ\">== (_: Unicode.UTF32, _: Unicode.UTF32) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s21UnicodeDecodingResultO2eeoiySbAB_ABtFZ\">== (_: UnicodeDecodingResult, _: UnicodeDecodingResult) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s16_ValidUTF8BufferV5IndexV2eeoiySbAD_ADtFZ\">== (_: _ValidUTF8Buffer.Index, _: _ValidUTF8Buffer.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV5IndexV2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Index, _: CollectionDifference&lt;ChangeElement&gt;.Index) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceV6ChangeOsSQRzlE2eeoiySbADyx_G_AFtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;.Change, _: CollectionDifference&lt;ChangeElement&gt;.Change) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s20CollectionDifferenceVsSQRzlE2eeoiySbAByxG_ADtFZ\">== (_: CollectionDifference&lt;ChangeElement&gt;, _: CollectionDifference&lt;ChangeElement&gt;) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s8AnyIndexV2eeoiySbAB_ABtFZ\">== (_: AnyIndex, _: AnyIndex) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s6MirrorV12DisplayStyleO2eeoiySbAD_ADtFZ\">== (_: Mirror.DisplayStyle, _: Mirror.DisplayStyle) -&gt; Bool</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:s4SIMDPsE2eeoiySbx_xtFZ\">== (_: Self, _: Self) -&gt; Bool</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 874}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 864, "key.offset": 864, "key.parsed_declaration": "public func == <Skeleton: SkeletonType>(lhs: Pose3D<Skeleton>, rhs: Pose3D<Skeleton>) -> Bool", "key.parsed_scope.end": 39, "key.parsed_scope.start": 39, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF0E0L_xmfp"}, {"key.annotated_decl": "<Declaration>let areEqual: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/Pose3D.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>areEqual</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 71, "key.name": "areEqual", "key.namelength": 8, "key.nameoffset": 950, "key.offset": 946, "key.parsed_declaration": "let areEqual = lhs.keypoints == rhs.keypoints && lhs.score == rhs.score", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF8areEqualL_Sbvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (Pose3D<Skeleton>, Pose3D<Skeleton>) -> Bool", "key.typeusr": "$sySb11FritzVision6Pose3DCyxG_ADtcAA12SkeletonTypeRzluD", "key.usr": "s:11FritzVision2eeoiySbAA6Pose3DCyxG_AEtAA12SkeletonTypeRzlF"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4471, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct HeatmapPoint</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 177}], "key.bodylength": 27, "key.bodyoffset": 205, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>HeatmapPoint</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 49, "key.name": "HeatmapPoint", "key.namelength": 12, "key.nameoffset": 191, "key.offset": 184, "key.parsed_declaration": "public struct HeatmapPoint", "key.parsed_scope.end": 14, "key.parsed_scope.start": 11, "key.substructure": [], "key.typename": "HeatmapPoint.Type", "key.typeusr": "$s11FritzVision12HeatmapPointVmD", "key.usr": "s:11FritzVision12HeatmapPointV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Displacements</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 861}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 837}], "key.bodylength": 772, "key.bodyoffset": 889, "key.doc.column": 14, "key.doc.comment": "`[height, width, 2 * num_edges]`, where `num_edges = num_parts - 1` is the\nnumber of edges (parent-child pairs) in the tree. It contains the forward\ndisplacements between consecutive part from the root towards the leaves.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class Displacements", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift\" line=\"40\" column=\"14\"><Name>Displacements</Name><USR>s:11FritzVision13DisplacementsC</USR><Declaration>@available(iOS 11.0, *)\npublic class Displacements</Declaration><CommentParts><Abstract><Para><codeVoice>[height, width, 2 * num_edges]</codeVoice>, where <codeVoice>num_edges = num_parts - 1</codeVoice> is the number of edges (parent-child pairs) in the tree. It contains the forward displacements between consecutive part from the root towards the leaves.</Para></Abstract></CommentParts></Class>", "key.doc.line": 40, "key.doc.name": "Displacements", "key.doc.type": "Class", "key.doclength": 237, "key.docoffset": 600, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Displacements</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 794, "key.name": "Displacements", "key.namelength": 13, "key.nameoffset": 874, "key.offset": 868, "key.parsed_declaration": "public class Displacements", "key.parsed_scope.end": 76, "key.parsed_scope.start": 40, "key.runtime_name": "_TtC4main13Displacements", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1121}], "key.bodylength": 57, "key.bodyoffset": 1162, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 92, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 1128, "key.offset": 1128, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 58, "key.parsed_scope.start": 56, "key.substructure": [], "key.typename": "(Displacements.Type) -> (MLMultiArray?) -> Displacements", "key.typeusr": "$s3for11FritzVision13DisplacementsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13DisplacementsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, edgeID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1224}], "key.bodylength": 184, "key.bodyoffset": 1306, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>edgeID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>offset</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 260, "key.name": "subscript(_:_:_:)", "key.namelength": 63, "key.nameoffset": 1231, "key.offset": 1231, "key.parsed_declaration": "public subscript(point: HeatmapPoint, edgeID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 67, "key.parsed_scope.start": 60, "key.substructure": [], "key.typename": "(HeatmapPoint, Int, OffsetType) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointV_SiAA10OffsetTypeOtcD", "key.usr": "s:11FritzVision13DisplacementsCySdAA12HeatmapPointV_SiAA10OffsetTypeOtcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1495}], "key.bodylength": 135, "key.bodyoffset": 1524, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 158, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 1507, "key.offset": 1502, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 75, "key.parsed_scope.start": 69, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 1533, "key.offset": 1529, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Displacements) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision13DisplacementsC3sumSdyF"}], "key.typename": "Displacements.Type", "key.typeusr": "$s11FritzVision13DisplacementsCmD", "key.usr": "s:11FritzVision13DisplacementsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class HeatmapScores</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1881}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1857}], "key.bodylength": 682, "key.bodyoffset": 1909, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>HeatmapScores</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 704, "key.name": "HeatmapScores", "key.namelength": 13, "key.nameoffset": 1894, "key.offset": 1888, "key.parsed_declaration": "public class HeatmapScores", "key.parsed_scope.end": 117, "key.parsed_scope.start": 82, "key.runtime_name": "_TtC4main13HeatmapScores", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2108}], "key.bodylength": 50, "key.bodyoffset": 2149, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 85, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 2115, "key.offset": 2115, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 100, "key.parsed_scope.start": 98, "key.substructure": [], "key.typename": "(HeatmapScores.Type) -> (MLMultiArray?) -> HeatmapScores", "key.typeusr": "$s3for11FritzVision13HeatmapScoresCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision13HeatmapScoresC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>, partID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2204}], "key.bodylength": 55, "key.bodyoffset": 2266, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>partID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 111, "key.name": "subscript(_:_:)", "key.namelength": 43, "key.nameoffset": 2211, "key.offset": 2211, "key.parsed_declaration": "public subscript(point: HeatmapPoint, partID: Int) -> Double", "key.parsed_scope.end": 104, "key.parsed_scope.start": 102, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdSi_S2itcip\">subscript(_:_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint, Int) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointV_SitcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, keypointID: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2326}], "key.bodylength": 47, "key.bodyoffset": 2387, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>keypointID</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 102, "key.name": "subscript(_:_:_:)", "key.namelength": 42, "key.nameoffset": 2333, "key.offset": 2333, "key.parsed_declaration": "public subscript(y: Int, x: Int, keypointID: Int) -> Double", "key.parsed_scope.end": 108, "key.parsed_scope.start": 106, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision13HeatmapScoresCySdAA0C5PointV_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int, Int) -> Double", "key.typeusr": "$sySdSi_S2itcD", "key.usr": "s:11FritzVision13HeatmapScoresCySdSi_S2itcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2439}], "key.bodylength": 121, "key.bodyoffset": 2468, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 144, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 2451, "key.offset": 2446, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 116, "key.parsed_scope.start": 110, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 2477, "key.offset": 2473, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 111, "key.parsed_scope.start": 111, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF5totalL_Sdvp"}], "key.typename": "(HeatmapScores) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision13HeatmapScoresC3sumSdyF"}], "key.typename": "HeatmapScores.Type", "key.typeusr": "$s11FritzVision13HeatmapScoresCmD", "key.usr": "s:11FritzVision13HeatmapScoresC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum OffsetType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2594}], "key.bodylength": 19, "key.bodyoffset": 2618, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>OffsetType</decl.name></decl.enum>", "key.kind": "source.lang.swift.decl.enum", "key.length": 37, "key.name": "OffsetType", "key.namelength": 10, "key.nameoffset": 2606, "key.offset": 2601, "key.parsed_declaration": "public enum OffsetType", "key.parsed_scope.end": 122, "key.parsed_scope.start": 119, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2621, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case x</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>x</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "x", "key.namelength": 1, "key.nameoffset": 2626, "key.offset": 2626, "key.parsed_declaration": "case x", "key.parsed_scope.end": 120, "key.parsed_scope.start": 120, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1xyA2CmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 6, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 2630, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case y</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>y</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 1, "key.name": "y", "key.namelength": 1, "key.nameoffset": 2635, "key.offset": 2635, "key.parsed_declaration": "case y", "key.parsed_scope.end": 121, "key.parsed_scope.start": 121, "key.typename": "(OffsetType.Type) -> OffsetType", "key.typeusr": "$sy11FritzVision10OffsetTypeOACmcD", "key.usr": "s:11FritzVision10OffsetTypeO1yyA2CmF"}]}], "key.typename": "OffsetType.Type", "key.typeusr": "$s11FritzVision10OffsetTypeOmD", "key.usr": "s:11FritzVision10OffsetTypeO"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Offsets</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2906}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2882}], "key.bodylength": 661, "key.bodyoffset": 2928, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Offsets</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 677, "key.name": "Offsets", "key.namelength": 7, "key.nameoffset": 2919, "key.offset": 2913, "key.parsed_declaration": "public class Offsets", "key.parsed_scope.end": 163, "key.parsed_scope.start": 129, "key.runtime_name": "_TtC4main7Offsets", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3132}], "key.bodylength": 51, "key.bodyoffset": 3173, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 86, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 3139, "key.offset": 3139, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 147, "key.parsed_scope.start": 145, "key.substructure": [], "key.typename": "(Offsets.Type) -> (MLMultiArray?) -> Offsets", "key.typeusr": "$s3for11FritzVision7OffsetsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision7OffsetsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func get(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>, partID: <Type usr=\"s:Si\">Int</Type>, offset: <Type usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3229}], "key.bodylength": 125, "key.bodyoffset": 3305, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>get</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>y</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>x</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>partID</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>offset</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.enum usr=\"s:11FritzVision10OffsetTypeO\">OffsetType</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 195, "key.name": "get(y:x:partID:offset:)", "key.namelength": 52, "key.nameoffset": 3241, "key.offset": 3236, "key.parsed_declaration": "public func get(y: Int, x: Int, partID: Int, offset: OffsetType) -> Double", "key.parsed_scope.end": 154, "key.parsed_scope.start": 149, "key.substructure": [], "key.typename": "(Offsets) -> (Int, Int, Int, OffsetType) -> Double", "key.typeusr": "$s1y1x6partID6offsetSdSi_S2i11FritzVision10OffsetTypeOtcD", "key.usr": "s:11FritzVision7OffsetsC3get1y1x6partID6offsetSdSi_S2iAA10OffsetTypeOtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3435}], "key.bodylength": 123, "key.bodyoffset": 3464, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 146, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 3447, "key.offset": 3442, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 162, "key.parsed_scope.start": 156, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 3473, "key.offset": 3469, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 157, "key.parsed_scope.start": 157, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Offsets) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision7OffsetsC3sumSdyF"}], "key.typename": "Offsets.Type", "key.typeusr": "$s11FritzVision7OffsetsCmD", "key.usr": "s:11FritzVision7OffsetsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Segments</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3858}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3834}], "key.bodylength": 588, "key.bodyoffset": 3881, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Segments</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 605, "key.name": "Segments", "key.namelength": 8, "key.nameoffset": 3871, "key.offset": 3865, "key.parsed_declaration": "public class Segments", "key.parsed_scope.end": 201, "key.parsed_scope.start": 170, "key.runtime_name": "_TtC4main8Segments", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(for results: <Type usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</Type>?)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4025}], "key.bodylength": 51, "key.bodyoffset": 4066, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>for</decl.var.parameter.argument_label> <decl.var.parameter.name>results</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)MLMultiArray\">MLMultiArray</ref.class>?</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 86, "key.name": "init(for:)", "key.namelength": 32, "key.nameoffset": 4032, "key.offset": 4032, "key.parsed_declaration": "public init(for results: MLMultiArray?)", "key.parsed_scope.end": 184, "key.parsed_scope.start": 182, "key.substructure": [], "key.typename": "(Segments.Type) -> (MLMultiArray?) -> Segments", "key.typeusr": "$s3for11FritzVision8SegmentsCSo12MLMultiArrayCSg_tcD", "key.usr": "s:11FritzVision8SegmentsC3forACSo12MLMultiArrayCSg_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(point: <Type usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4122}], "key.bodylength": 51, "key.bodyoffset": 4171, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:11FritzVision12HeatmapPointV\">HeatmapPoint</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 94, "key.name": "subscript(_:)", "key.namelength": 30, "key.nameoffset": 4129, "key.offset": 4129, "key.parsed_declaration": "public subscript(point: HeatmapPoint) -> Double", "key.parsed_scope.end": 188, "key.parsed_scope.start": 186, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdSi_Sitcip\">subscript(_:_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(HeatmapPoint) -> Double", "key.typeusr": "$sySd11FritzVision12HeatmapPointVcD", "key.usr": "s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public subscript(y: <Type usr=\"s:Si\">Int</Type>, x: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4227}], "key.bodylength": 39, "key.bodyoffset": 4271, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.subscript><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>subscript</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.name>y</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.name>x</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.function.subscript>", "key.kind": "source.lang.swift.decl.function.subscript", "key.length": 77, "key.name": "subscript(_:_:)", "key.namelength": 25, "key.nameoffset": 4234, "key.offset": 4234, "key.parsed_declaration": "public subscript(y: Int, x: Int) -> Double", "key.parsed_scope.end": 192, "key.parsed_scope.start": 190, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8SegmentsCySdAA12HeatmapPointVcip\">subscript(_:)</RelatedName>"}], "key.substructure": [], "key.typename": "(Int, Int) -> Double", "key.typeusr": "$sySdSi_SitcD", "key.usr": "s:11FritzVision8SegmentsCySdSi_Sitcip"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func sum() -&gt; <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4315}], "key.bodylength": 123, "key.bodyoffset": 4344, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>sum</decl.name>() -&gt; <decl.function.returntype><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 146, "key.name": "sum()", "key.namelength": 5, "key.nameoffset": 4327, "key.offset": 4322, "key.parsed_declaration": "public func sum() -> Double", "key.parsed_scope.end": 200, "key.parsed_scope.start": 194, "key.substructure": [{"key.annotated_decl": "<Declaration>var total: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseModelOutputWrappers.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>total</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 23, "key.name": "total", "key.namelength": 5, "key.nameoffset": 4353, "key.offset": 4349, "key.parsed_declaration": "var total: Double = 0.0", "key.parsed_scope.end": 195, "key.parsed_scope.start": 195, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF5totalL_Sdvp"}], "key.typename": "(Segments) -> () -> Double", "key.typeusr": "$sSdycD", "key.usr": "s:11FritzVision8SegmentsC3sumSdyF"}], "key.typename": "Segments.Type", "key.typeusr": "$s11FritzVision8SegmentsCmD", "key.usr": "s:11FritzVision8SegmentsC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 816, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PoseType : AnyObject</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 184}], "key.bodylength": 305, "key.bodyoffset": 217, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 210}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PoseType</decl.name> : AnyObject</decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 332, "key.name": "PoseType", "key.namelength": 8, "key.nameoffset": 200, "key.offset": 191, "key.parsed_declaration": "public protocol PoseType: class", "key.parsed_scope.end": 23, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main8PoseType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Skeleton</decl.name> : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 236, "key.offset": 221, "key.parsed_declaration": "associatedtype Skeleton: SkeletonType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "Self.Skeleton.Type", "key.typeusr": "$s8Skeleton11FritzVision8PoseTypePQzmD", "key.usr": "s:11FritzVision8PoseTypeP8SkeletonQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype Keypoint : <Type usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>Keypoint</decl.name> : <ref.protocol usr=\"s:11FritzVision12KeypointTypeP\">KeypointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 37, "key.name": "Keypoint", "key.namelength": 8, "key.nameoffset": 276, "key.offset": 261, "key.parsed_declaration": "associatedtype Keypoint: KeypointType", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "Self.Keypoint.Type", "key.typeusr": "$s8Keypoint11FritzVision8PoseTypePQzmD", "key.usr": "s:11FritzVision8PoseTypeP8KeypointQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(keypoints: [<Type usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</Type>], score: <Type usr=\"s:Sd\">Double</Type>, bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>keypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</ref.associatedtype>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>score</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>bounds</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 58, "key.name": "init(keypoints:score:bounds:)", "key.namelength": 58, "key.nameoffset": 302, "key.offset": 302, "key.parsed_declaration": "init(keypoints: [Keypoint], score: Double, bounds: CGSize)", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.substructure": [], "key.typename": "<Self where Self : PoseType> (Self.Type) -> ([Self.Keypoint], Double, CGSize) -> Self", "key.typeusr": "$s9keypoints5score6boundsxSay8KeypointQzG_SdSo6CGSizeVtcD", "key.usr": "s:11FritzVision8PoseTypeP9keypoints5score6boundsxSay8KeypointQzG_SdSo6CGSizeVtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var keypoints: [<Type usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</Type>] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 391, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8KeypointQa\">Keypoint</ref.associatedtype>]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 368, "key.offset": 364, "key.parsed_declaration": "var keypoints: [Keypoint]", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "[Self.Keypoint]", "key.typeusr": "$sSay8Keypoint11FritzVision8PoseTypePQzGD", "key.usr": "s:11FritzVision8PoseTypeP9keypointsSay8KeypointQzGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var score: <Type usr=\"s:Sd\">Double</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 419, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>score</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "score", "key.namelength": 5, "key.nameoffset": 404, "key.offset": 400, "key.parsed_declaration": "var score: Double", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision8PoseTypeP5scoreSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var bounds: <Type usr=\"c:@S@CGSize\">CGSize</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 448, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>bounds</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "bounds", "key.namelength": 6, "key.nameoffset": 432, "key.offset": 428, "key.parsed_declaration": "var bounds: CGSize", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:11FritzVision8PoseTypeP6boundsSo6CGSizeVvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func getPosition&lt;Point&gt;(of part: <Type usr=\"s:11FritzVision8PoseTypeP8SkeletonQa\">Skeleton</Type>) -&gt; <Type usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\">Point</Type>? where Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getPosition</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\"><decl.generic_type_param.name>Point</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>of</decl.var.parameter.argument_label> <decl.var.parameter.name>part</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision8PoseTypeP8SkeletonQa\">Skeleton</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp\">Point</ref.generic_type_param>?</decl.function.returntype> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Point : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 63, "key.name": "getPosition(of:)", "key.namelength": 48, "key.nameoffset": 463, "key.offset": 458, "key.parsed_declaration": "func getPosition<Point: PointType>(of part: Skeleton) -> Point?", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision8PoseTypePAAE11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF\">getPosition&lt;Point&gt;(of: Skeleton) -&gt; Point? where Point : PointType</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>Point : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 482}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PoseType.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Point</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 16, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 475, "key.offset": 475, "key.parsed_declaration": "func getPosition<Point: PointType>(of part: Skeleton) -> Point?", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Point.Type", "key.typeusr": "$sqd__mD", "key.usr": "s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF0I0L_qd__mfp"}], "key.typename": "<Self, Point where Self : PoseType, Point : PointType> (Self) -> (Self.Skeleton) -> Point?", "key.typeusr": "$s2ofqd__Sg8SkeletonQz_tc11FritzVision9PointTypeRd__luD", "key.usr": "s:11FritzVision8PoseTypeP11getPosition2ofqd__Sg8SkeletonQz_tAA05PointD0Rd__lF"}], "key.typename": "PoseType.Protocol", "key.typeusr": "$s11FritzVision8PoseType_pmD", "key.usr": "s:11FritzVision8PoseTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8546, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct Heap&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 687}], "key.bodylength": 5954, "key.bodyoffset": 710, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>Heap</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 5971, "key.name": "Heap", "key.namelength": 4, "key.nameoffset": 701, "key.offset": 694, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 216, "key.parsed_scope.start": 18, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 706, "key.offset": 706, "key.parsed_declaration": "public struct Heap<T>", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision4HeapV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1232}], "key.bodylength": 33, "key.bodyoffset": 1277, "key.doc.column": 10, "key.doc.comment": "Creates an empty heap.\nThe sort function determines whether this is a min-heap or max-heap.\nFor comparable data types, > makes a max-heap, < makes a min-heap.", "key.doc.declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"36\" column=\"10\"><Name>init(sort:)</Name><USR>s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc</USR><Declaration>public init(sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates an empty heap. The sort function determines whether this is a min-heap or max-heap. For comparable data types, &gt; makes a max-heap, &lt; makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 36, "key.doc.name": "init(sort:)", "key.doc.type": "Function", "key.doclength": 183, "key.docoffset": 1046, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 72, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 1239, "key.offset": 1239, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc\">init(array:sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> (@escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$s4sort11FritzVision4HeapVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(array: [<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>], sort: @escaping (<Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1574}], "key.bodylength": 64, "key.bodyoffset": 1631, "key.doc.column": 10, "key.doc.comment": "Creates a heap from an array. The order of the array does not matter;\nthe elements are inserted into the heap in the order determined by the\nsort function. For comparable data types, '>' makes a max-heap,\n'<' makes a min-heap.", "key.doc.declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"46\" column=\"10\"><Name>init(array:sort:)</Name><USR>s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc</USR><Declaration>public init(array: [T], sort: @escaping (T, T) -&gt; Bool)</Declaration><CommentParts><Abstract><Para>Creates a heap from an array. The order of the array does not matter; the elements are inserted into the heap in the order determined by the sort function. For comparable data types, \u2018&gt;\u2019 makes a max-heap, \u2018&lt;\u2019 makes a min-heap.</Para></Abstract></CommentParts></Function>", "key.doc.line": 46, "key.doc.name": "init(array:sort:)", "key.doc.type": "Function", "key.doclength": 256, "key.docoffset": 1315, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>array</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 115, "key.name": "init(array:sort:)", "key.namelength": 48, "key.nameoffset": 1581, "key.offset": 1581, "key.parsed_declaration": "public init(array: [T], sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 49, "key.parsed_scope.start": 46, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV4sortACyxGSbx_xtc_tcfc\">init(sort:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (Heap<T>.Type) -> ([T], @escaping (T, T) -> Bool) -> Heap<T>", "key.typeusr": "$s5array4sort11FritzVision4HeapVyxGSayxG_Sbx_xtctcD", "key.usr": "s:11FritzVision4HeapV5array4sortACyxGSayxG_Sbx_xtctcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2012}], "key.bodylength": 28, "key.bodyoffset": 2038, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 48, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 2023, "key.offset": 2019, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 64, "key.parsed_scope.start": 62, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision4HeapV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2071}], "key.bodylength": 26, "key.bodyoffset": 2094, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "count", "key.namelength": 5, "key.nameoffset": 2082, "key.offset": 2078, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 68, "key.parsed_scope.start": 66, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision4HeapV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3054}], "key.bodylength": 26, "key.bodyoffset": 3080, "key.doc.column": 15, "key.doc.comment": "Returns the maximum value in the heap (for a max-heap) or the minimum\nvalue (for a min-heap).", "key.doc.declaration": "public func peek() -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"100\" column=\"15\"><Name>peek()</Name><USR>s:11FritzVision4HeapV4peekxSgyF</USR><Declaration>public func peek() -&gt; T?</Declaration><CommentParts><Abstract><Para>Returns the maximum value in the heap (for a max-heap) or the minimum value (for a min-heap).</Para></Abstract></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "peek()", "key.doc.type": "Function", "key.doclength": 113, "key.docoffset": 2938, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 46, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 3066, "key.offset": 3061, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 102, "key.parsed_scope.start": 100, "key.typename": "<T> (Heap<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision4HeapV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert(_ value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3271}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3264}], "key.bodylength": 56, "key.bodyoffset": 3305, "key.doc.column": 24, "key.doc.comment": "Adds a new value to the heap. This reorders the heap so that the max-heap\nor min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert(_ value: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"108\" column=\"24\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyxF</USR><Declaration>public mutating func insert(_ value: T)</Declaration><CommentParts><Abstract><Para>Adds a new value to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 108, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 150, "key.docoffset": 3111, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>value</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 82, "key.name": "insert(_:)", "key.namelength": 18, "key.nameoffset": 3285, "key.offset": 3280, "key.parsed_declaration": "public mutating func insert(_ value: T)", "key.parsed_scope.end": 111, "key.parsed_scope.start": 108, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF\">insert&lt;S&gt;(_: S) where T == S.Element, S : Sequence</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (T) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:11FritzVision4HeapV6insertyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func insert&lt;S&gt;(_ sequence: <Type usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</Type>) where T == S.Element, S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3535}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3528}], "key.bodylength": 57, "key.bodyoffset": 3615, "key.doc.column": 24, "key.doc.comment": "Adds a sequence of values to the heap. This reorders the heap so that\nthe max-heap or min-heap property still holds. Performance: O(log n).", "key.doc.declaration": "public mutating func insert<S>(_ sequence: S) where T == S.Element, S : Sequence", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"117\" column=\"24\"><Name>insert(_:)</Name><USR>s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF</USR><Declaration>public mutating func insert&lt;S&gt;(_ sequence: S) where T == S.Element, S : Sequence</Declaration><CommentParts><Abstract><Para>Adds a sequence of values to the heap. This reorders the heap so that the max-heap or min-heap property still holds. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 117, "key.doc.name": "insert(_:)", "key.doc.type": "Function", "key.doclength": 159, "key.docoffset": 3366, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>insert</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\"><decl.generic_type_param.name>S</decl.generic_type_param.name></decl.generic_type_param>&gt;(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>sequence</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp\">S</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>T == S.Element</decl.generic_type_requirement>, <decl.generic_type_requirement>S : <ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_requirement></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 129, "key.name": "insert(_:)", "key.namelength": 34, "key.nameoffset": 3549, "key.offset": 3544, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 121, "key.parsed_scope.start": 117, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6insertyyxF\">insert(_: T)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>S : <Type usr=\"s:ST\">Sequence</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3559}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>S</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:ST\">Sequence</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "Sequence"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 11, "key.name": "S", "key.namelength": 1, "key.nameoffset": 3556, "key.offset": 3556, "key.parsed_declaration": "public mutating func insert<S: Sequence>(_ sequence: S) where S.Iterator.Element == T", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "S.Type", "key.typeusr": "$sqd__mD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF1SL_qd__mfp"}], "key.typename": "<T, S where T == S.Element, S : Sequence> (inout Heap<T>) -> (S) -> ()", "key.typeusr": "$syyqd__c7ElementQyd__RszSTRd__luD", "key.usr": "s:11FritzVision4HeapV6insertyyqd__7ElementQyd__RszSTRd__lF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func replace(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 3817}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3810}], "key.bodylength": 82, "key.bodyoffset": 3864, "key.doc.column": 24, "key.doc.comment": "Allows you to change an element. This reorders the heap so that\nthe max-heap or min-heap property still holds.", "key.doc.declaration": "public mutating func replace(index i: Int, value: T)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"127\" column=\"24\"><Name>replace(index:value:)</Name><USR>s:11FritzVision4HeapV7replace5index5valueySi_xtF</USR><Declaration>public mutating func replace(index i: Int, value: T)</Declaration><CommentParts><Abstract><Para>Allows you to change an element. This reorders the heap so that the max-heap or min-heap property still holds.</Para></Abstract></CommentParts></Function>", "key.doc.line": 127, "key.doc.name": "replace(index:value:)", "key.doc.type": "Function", "key.doclength": 130, "key.docoffset": 3677, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>replace</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 121, "key.name": "replace(index:value:)", "key.namelength": 31, "key.nameoffset": 3831, "key.offset": 3826, "key.parsed_declaration": "public mutating func replace(index i: Int, value: T)", "key.parsed_scope.end": 132, "key.parsed_scope.start": 127, "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> (Int, T) -> ()", "key.typeusr": "$s5index5valueySi_xtcD", "key.usr": "s:11FritzVision4HeapV7replace5index5valueySi_xtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove() -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4142}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4135}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4116}], "key.bodylength": 365, "key.bodyoffset": 4172, "key.doc.column": 43, "key.doc.comment": "Removes the root node from the heap. For a max-heap, this is the maximum\nvalue; for a min-heap it is the minimum value. Performance: O(log n).", "key.doc.declaration": "public mutating func remove() -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"138\" column=\"43\"><Name>remove()</Name><USR>s:11FritzVision4HeapV6removexSgyF</USR><Declaration>public mutating func remove() -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes the root node from the heap. For a max-heap, this is the maximum value; for a min-heap it is the minimum value. Performance: O(log n).</Para></Abstract></CommentParts></Function>", "key.doc.line": 138, "key.doc.name": "remove()", "key.doc.type": "Function", "key.doclength": 162, "key.docoffset": 3951, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 387, "key.name": "remove()", "key.namelength": 8, "key.nameoffset": 4156, "key.offset": 4151, "key.parsed_declaration": "@discardableResult public mutating func remove() -> T?", "key.parsed_scope.end": 151, "key.parsed_scope.start": 138, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6remove2atxSgSi_tF\">remove(at:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [], "key.typename": "<T> (inout Heap<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision4HeapV6removexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@discardableResult public mutating func remove(at index: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:11FritzVision4HeapV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 4699}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4692}, {"key.attribute": "source.decl.attribute.discardableResult", "key.length": 18, "key.offset": 4673}], "key.bodylength": 239, "key.bodyoffset": 4742, "key.doc.column": 43, "key.doc.comment": "Removes an arbitrary node from the heap. Performance: O(log n).\nNote that you need to know the node's index.", "key.doc.declaration": "public mutating func remove(at index: Int) -> T?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift\" line=\"157\" column=\"43\"><Name>remove(at:)</Name><USR>s:11FritzVision4HeapV6remove2atxSgSi_tF</USR><Declaration>public mutating func remove(at index: Int) -&gt; T?</Declaration><CommentParts><Abstract><Para>Removes an arbitrary node from the heap. Performance: O(log n). Note that you need to know the node\u2019s index.</Para></Abstract></CommentParts></Function>", "key.doc.line": 157, "key.doc.name": "remove(at:)", "key.doc.type": "Function", "key.doclength": 128, "key.docoffset": 4542, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@discardableResult</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>remove</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>at</decl.var.parameter.argument_label> <decl.var.parameter.name>index</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision4HeapV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 274, "key.name": "remove(at:)", "key.namelength": 21, "key.nameoffset": 4713, "key.offset": 4708, "key.parsed_declaration": "@discardableResult public mutating func remove(at index: Int) -> T?", "key.parsed_scope.end": 167, "key.parsed_scope.start": 157, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapV6removexSgyF\">remove()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision4HeapVAASQRzlE6remove4nodexSgx_tF\">remove(node:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 26, "key.name": "size", "key.namelength": 4, "key.nameoffset": 4802, "key.offset": 4798, "key.parsed_declaration": "let size = nodes.count - 1", "key.parsed_scope.end": 160, "key.parsed_scope.start": 160, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF4sizeL_Sivp"}], "key.typename": "<T> (inout Heap<T>) -> (Int) -> T?", "key.typeusr": "$s2atxSgSi_tcD", "key.usr": "s:11FritzVision4HeapV6remove2atxSgSi_tF"}], "key.typename": "Heap<T>.Type", "key.typeusr": "$s11FritzVision4HeapVyxGmD", "key.usr": "s:11FritzVision4HeapV"}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Searching", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 6670}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct PriorityQueue&lt;T&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7539}], "key.bodylength": 841, "key.bodyoffset": 7571, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>PriorityQueue</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\"><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>&gt;</decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 867, "key.name": "PriorityQueue", "key.namelength": 13, "key.nameoffset": 7553, "key.offset": 7546, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 277, "key.parsed_scope.start": 242, "key.substructure": [{"key.annotated_decl": "<Declaration>T</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>T</decl.generic_type_param.name></decl.generic_type_param>", "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 1, "key.name": "T", "key.namelength": 1, "key.nameoffset": 7567, "key.offset": 7567, "key.parsed_declaration": "public struct PriorityQueue<T>", "key.parsed_scope.end": 242, "key.parsed_scope.start": 242, "key.typename": "T.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision13PriorityQueueV1Txmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(sort: @escaping (<Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>, <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>) -&gt; <Type usr=\"s:Sb\">Bool</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7710}], "key.bodylength": 31, "key.bodyoffset": 7755, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>sort</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 70, "key.name": "init(sort:)", "key.namelength": 36, "key.nameoffset": 7717, "key.offset": 7717, "key.parsed_declaration": "public init(sort: @escaping (T, T) -> Bool)", "key.parsed_scope.end": 249, "key.parsed_scope.start": 247, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>.Type) -> (@escaping (T, T) -> Bool) -> PriorityQueue<T>", "key.typeusr": "$s4sort11FritzVision13PriorityQueueVyxGSbx_xtc_tcD", "key.usr": "s:11FritzVision13PriorityQueueV4sortACyxGSbx_xtc_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var isEmpty: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7791}], "key.bodylength": 27, "key.bodyoffset": 7817, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>isEmpty</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "isEmpty", "key.namelength": 7, "key.nameoffset": 7802, "key.offset": 7798, "key.parsed_declaration": "public var isEmpty: Bool", "key.parsed_scope.end": 253, "key.parsed_scope.start": 251, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision13PriorityQueueV7isEmptySbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var count: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7849}], "key.bodylength": 25, "key.bodyoffset": 7872, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>count</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "count", "key.namelength": 5, "key.nameoffset": 7860, "key.offset": 7856, "key.parsed_declaration": "public var count: Int", "key.parsed_scope.end": 257, "key.parsed_scope.start": 255, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision13PriorityQueueV5countSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func peek() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7902}], "key.bodylength": 26, "key.bodyoffset": 7928, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>peek</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 46, "key.name": "peek()", "key.namelength": 6, "key.nameoffset": 7914, "key.offset": 7909, "key.parsed_declaration": "public func peek() -> T?", "key.parsed_scope.end": 261, "key.parsed_scope.start": 259, "key.substructure": [], "key.typename": "<T> (PriorityQueue<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV4peekxSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func enqueue(_ element: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 7966}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 7959}], "key.bodylength": 28, "key.bodyoffset": 8003, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>enqueue</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>element</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 57, "key.name": "enqueue(_:)", "key.namelength": 21, "key.nameoffset": 7980, "key.offset": 7975, "key.parsed_declaration": "public mutating func enqueue(_ element: T)", "key.parsed_scope.end": 265, "key.parsed_scope.start": 263, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (T) -> ()", "key.typeusr": "$syyxcD", "key.usr": "s:11FritzVision13PriorityQueueV7enqueueyyxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func dequeue() -&gt; <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8043}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8036}], "key.bodylength": 28, "key.bodyoffset": 8074, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>dequeue</decl.name>() -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 51, "key.name": "dequeue()", "key.namelength": 9, "key.nameoffset": 8057, "key.offset": 8052, "key.parsed_declaration": "public mutating func dequeue() -> T?", "key.parsed_scope.end": 269, "key.parsed_scope.start": 267, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> () -> T?", "key.typeusr": "$sxSgycD", "key.usr": "s:11FritzVision13PriorityQueueV7dequeuexSgyF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public mutating func changePriority(index i: <Type usr=\"s:Si\">Int</Type>, value: <Type usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.mutating", "key.length": 8, "key.offset": 8305}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 8298}], "key.bodylength": 51, "key.bodyoffset": 8359, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/PriorityQueue.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>mutating</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>changePriority</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label> <decl.var.parameter.name>i</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision13PriorityQueueV1Txmfp\">T</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 97, "key.name": "changePriority(index:value:)", "key.namelength": 38, "key.nameoffset": 8319, "key.offset": 8314, "key.parsed_declaration": "public mutating func changePriority(index i: Int, value: T)", "key.parsed_scope.end": 276, "key.parsed_scope.start": 274, "key.substructure": [], "key.typename": "<T> (inout PriorityQueue<T>) -> (Int, T) -> ()", "key.typeusr": "$s5index5valueySi_xtcD", "key.usr": "s:11FritzVision13PriorityQueueV06changeC05index5valueySi_xtF"}], "key.typename": "PriorityQueue<T>.Type", "key.typeusr": "$s11FritzVision13PriorityQueueVyxGmD", "key.usr": "s:11FritzVision13PriorityQueueV"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2214, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias ConnectedPart&lt;Skeleton&gt; = (<Type usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</Type>, <Type usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</Type>) where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 181}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>ConnectedPart</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; = <tuple>(<tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</ref.generic_type_param></tuple.element.type></tuple.element>, <tuple.element><tuple.element.type><ref.generic_type_param usr=\"s:11FritzVision13ConnectedParta8Skeletonxmfp\">Skeleton</ref.generic_type_param></tuple.element.type></tuple.element>)</tuple> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 70, "key.name": "ConnectedPart", "key.namelength": 13, "key.nameoffset": 198, "key.offset": 188, "key.parsed_declaration": "public typealias ConnectedPart<Skeleton: SkeletonType> = (Skeleton, Skeleton)", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 222}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 212, "key.offset": 212, "key.parsed_declaration": "public typealias ConnectedPart<Skeleton: SkeletonType> = (Skeleton, Skeleton)", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision13ConnectedParta8Skeletonxmfp"}], "key.typename": "(Skeleton, Skeleton).Type", "key.typeusr": "$sx_xtmD", "key.usr": "s:11FritzVision13ConnectedParta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol SkeletonType : <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type>, <Type usr=\"s:SQ\">Equatable</Type>, <Type usr=\"s:SY\">RawRepresentable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}], "key.bodylength": 450, "key.bodyoffset": 333, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 290}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 304}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 322}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SkeletonType</decl.name> : <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol>, <ref.protocol usr=\"s:SQ\">Equatable</ref.protocol>, <ref.protocol usr=\"s:SY\">RawRepresentable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "CaseIterable"}, {"key.name": "RawRepresentable"}, {"key.name": "Equatable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 517, "key.name": "SkeletonType", "key.namelength": 12, "key.nameoffset": 276, "key.offset": 267, "key.parsed_declaration": "public protocol SkeletonType: CaseIterable, RawRepresentable, Equatable", "key.parsed_scope.end": 28, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main12SkeletonType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init?(rawValue: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>?(<decl.var.parameter><decl.var.parameter.argument_label>rawValue</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 20, "key.name": "init(rawValue:)", "key.namelength": 20, "key.nameoffset": 337, "key.offset": 337, "key.parsed_declaration": "init?(rawValue: Int)", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:SY8rawValuexSg03RawB0Qz_tcfc\">init?(rawValue: Self.RawValue)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSb8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSS8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSd8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSf8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSi8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs4Int8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int16V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5Int64V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzSu8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt16V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:SYsSeRzs6UInt64V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc\">init(from: Decoder) throws</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : SkeletonType> (Self.Type) -> (Int) -> Self?", "key.typeusr": "$s8rawValuexSgSi_tcD", "key.usr": "s:11FritzVision12SkeletonTypeP8rawValuexSgSi_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var rawValue: <Type usr=\"s:Si\">Int</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 380, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>rawValue</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 25, "key.name": "rawValue", "key.namelength": 8, "key.nameoffset": 365, "key.offset": 361, "key.parsed_declaration": "var rawValue: Int", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:SY8rawValue03RawB0Qzvp\">rawValue</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision12SkeletonTypeP8rawValueSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var objectName: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 661, "key.doc.column": 14, "key.doc.comment": "A label describing the name of the object the pose skeleton represents.\n\nThe ``objectName`` is used to identify objects for data collection.  When recording\npredictions, this name will be used to identify an object.", "key.doc.declaration": "static var objectName: String { get }", "key.doc.discussion": [{"Para": "The `objectName` is used to identify objects for data collection.  When recording predictions, this name will be used to identify an object."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift\" line=\"23\" column=\"14\"><Name>objectName</Name><USR>s:11FritzVision12SkeletonTypeP10objectNameSSvpZ</USR><Declaration>static var objectName: String { get }</Declaration><CommentParts><Abstract><Para>A label describing the name of the object the pose skeleton represents.</Para></Abstract><Discussion><Para>The <codeVoice>objectName</codeVoice> is used to identify objects for data collection.  When recording predictions, this name will be used to identify an object.</Para></Discussion></CommentParts></Other>", "key.doc.line": 23, "key.doc.name": "objectName", "key.doc.type": "Other", "key.doclength": 238, "key.docoffset": 390, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>objectName</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 37, "key.name": "objectName", "key.namelength": 10, "key.nameoffset": 641, "key.offset": 630, "key.parsed_declaration": "static var objectName: String", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:11FritzVision12SkeletonTypeP10objectNameSSvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var connectedParts: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</Type>&gt;] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 721, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>connectedParts</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 56, "key.name": "connectedParts", "key.namelength": 14, "key.nameoffset": 682, "key.offset": 671, "key.parsed_declaration": "static var connectedParts: [ConnectedPart<Self>]", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12SkeletonTypePAAE14connectedPartsSayx_xtGvpZ\">connectedParts</RelatedName>"}], "key.typename": "[(Self, Self)]", "key.typeusr": "$sSayx_xtGD", "key.usr": "s:11FritzVision12SkeletonTypeP14connectedPartsSayx_xtGvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var poseChain: [<Type usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</Type>&lt;<Type usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</Type>&gt;] { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 775, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/PoseTypes/SkeletonType.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poseChain</decl.name>: <decl.var.type>[<ref.typealias usr=\"s:11FritzVision13ConnectedParta\">ConnectedPart</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision12SkeletonTypeP4Selfxmfp\">Self</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 51, "key.name": "poseChain", "key.namelength": 9, "key.nameoffset": 741, "key.offset": 730, "key.parsed_declaration": "static var poseChain: [ConnectedPart<Self>]", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12SkeletonTypePAAE9poseChainSayx_xtGvpZ\">poseChain</RelatedName>"}], "key.typename": "[(Self, Self)]", "key.typeusr": "$sSayx_xtGD", "key.usr": "s:11FritzVision12SkeletonTypeP9poseChainSayx_xtGvpZ"}], "key.typename": "SkeletonType.Protocol", "key.typeusr": "$s11FritzVision12SkeletonType_pmD", "key.usr": "s:11FritzVision12SkeletonTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/FortranMatrixOps.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3930, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 5033, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class MultiPoseSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 210}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 186}], "key.bodylength": 944, "key.bodyoffset": 317, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MultiPoseSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1045, "key.name": "MultiPoseSmoother", "key.namelength": 17, "key.nameoffset": 223, "key.offset": 217, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>\nwhere Filter.T == CGPoint", "key.parsed_scope.end": 47, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 249}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 241, "key.offset": 241, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision17MultiPoseSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 276}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 266, "key.offset": 266, "key.parsed_declaration": "public class MultiPoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(numKeypoints: <Type usr=\"s:Si\">Int</Type>, options: <Type usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 566}], "key.bodylength": 78, "key.bodyoffset": 636, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>numKeypoints</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(numKeypoints:options:)", "key.namelength": 61, "key.nameoffset": 573, "key.offset": 573, "key.parsed_declaration": "public init(numKeypoints: Int, options: Filter.SmoothingOptionsType)", "key.parsed_scope.end": 25, "key.parsed_scope.start": 23, "key.substructure": [], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (MultiPoseSmoother<Filter, Skeleton>.Type) -> (Int, Filter.SmoothingOptionsType) -> MultiPoseSmoother<Filter, Skeleton>", "key.typeusr": "$s12numKeypoints7options11FritzVision17MultiPoseSmootherCyxq_GSi_20SmoothingOptionsTypeQztcD", "key.usr": "s:11FritzVision17MultiPoseSmootherC12numKeypoints7optionsACyxq_GSi_20SmoothingOptionsTypeQztcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;]) -&gt; [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 829}], "key.bodylength": 362, "key.bodyoffset": 897, "key.doc.column": 15, "key.doc.comment": "Smoothe poses.\n\n- Parameter poses: List of poses to smooth.\n- Returns: Smoothed poses.", "key.doc.declaration": "public func smoothe(_ poses: [Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"31\" column=\"15\"><Name>smoothe(_:)</Name><USR>s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF</USR><Declaration>public func smoothe(_ poses: [Pose&lt;Skeleton&gt;]) -&gt; [Pose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Smoothe poses.</Para></Abstract><Parameters><Parameter><Name>poses</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>List of poses to smooth.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Smoothed poses.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 31, "key.doc.name": "smoothe(_:)", "key.doc.parameters": [{"discussion": [{"Para": "List of poses to smooth."}], "name": "poses"}], "key.doc.result_discussion": [{"Para": "Smoothed poses."}], "key.doc.type": "Function", "key.doclength": 108, "key.docoffset": 719, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>poses</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision17MultiPoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 424, "key.name": "smoothe(_:)", "key.namelength": 34, "key.nameoffset": 841, "key.offset": 836, "key.parsed_declaration": "public func smoothe(_ poses: [Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.parsed_scope.end": 46, "key.parsed_scope.start": 31, "key.substructure": [{"key.annotated_decl": "<Declaration>let identifiedPoses: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>identifiedPoses</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 53, "key.name": "identifiedPoses", "key.namelength": 15, "key.nameoffset": 906, "key.offset": 902, "key.parsed_declaration": "let identifiedPoses = poseMatcher.update(with: poses)", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSay11FritzVision4PoseCyq_G4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF15identifiedPosesL_SayAG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp"}, {"key.annotated_decl": "<Declaration>var smoothedPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothedPoses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "smoothedPoses", "key.namelength": 13, "key.nameoffset": 964, "key.offset": 960, "key.parsed_declaration": "var smoothedPoses = [Pose<Skeleton>]()", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyq_GGD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF13smoothedPosesL_AHvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (MultiPoseSmoother<Filter, Skeleton>) -> ([Pose<Skeleton>]) -> [Pose<Skeleton>]", "key.typeusr": "$sySay11FritzVision4PoseCyq_GGAEcD", "key.usr": "s:11FritzVision17MultiPoseSmootherC7smootheySayAA0D0Cyq_GGAHF"}], "key.typename": "MultiPoseSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision17MultiPoseSmootherCyxq_GmD", "key.usr": "s:11FritzVision17MultiPoseSmootherC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias IdentifiedPose&lt;Skeleton&gt; = (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\">Skeleton</Type>&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>) where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1288}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1264}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <decl.name>IdentifiedPose</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; = <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14IdentifiedPosea8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 110, "key.name": "IdentifiedPose", "key.namelength": 14, "key.nameoffset": 1305, "key.offset": 1295, "key.parsed_declaration": "public typealias IdentifiedPose<Skeleton: SkeletonType> = (", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1330}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1320, "key.offset": 1320, "key.parsed_declaration": "public typealias IdentifiedPose<Skeleton: SkeletonType> = (", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision14IdentifiedPosea8Skeletonxmfp"}], "key.typename": "(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date).Type", "key.typeusr": "$s11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttmD", "key.usr": "s:11FritzVision14IdentifiedPosea"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class MultiPoseMatcher&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1431}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1407}], "key.bodylength": 3545, "key.bodyoffset": 1486, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>MultiPoseMatcher</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 3594, "key.name": "MultiPoseMatcher", "key.namelength": 16, "key.nameoffset": 1444, "key.offset": 1438, "key.parsed_declaration": "public class MultiPoseMatcher<Skeleton: SkeletonType>", "key.parsed_scope.end": 157, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1471}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1461, "key.offset": 1461, "key.parsed_declaration": "public class MultiPoseMatcher<Skeleton: SkeletonType>", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var identifiedPoses: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)] {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1602}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1589}], "key.doc.column": 27, "key.doc.comment": "List of currently identified poses.", "key.doc.declaration": "private(set) public var identifiedPoses: [Int : (pose: FritzVision.Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)] {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"60\" column=\"27\"><Name>identifiedPoses</Name><USR>s:11FritzVision16MultiPoseMatcherC15identifiedPosesSDySiAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp</USR><Declaration>private(set) public var identifiedPoses: [Int : (pose: FritzVision.Pose&lt;Skeleton&gt;, id: Int, lastIdentifiedAt: Date)] {\n    get\n    }</Declaration><CommentParts><Abstract><Para>List of currently identified poses.</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "identifiedPoses", "key.doc.type": "Other", "key.doclength": 40, "key.docoffset": 1547, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>identifiedPoses</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 55, "key.name": "identifiedPoses", "key.namelength": 15, "key.nameoffset": 1613, "key.offset": 1609, "key.parsed_declaration": "private(set) public var identifiedPoses = [Int: IdentifiedPose<Skeleton>]()", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC15identifiedPosesSDySiAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;] { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1715}], "key.bodylength": 47, "key.bodyoffset": 1751, "key.doc.column": 14, "key.doc.comment": "List of poses to match new pose list to.", "key.doc.declaration": "public var poses: [Pose<Skeleton>] { get }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"63\" column=\"14\"><Name>poses</Name><USR>s:11FritzVision16MultiPoseMatcherC5posesSayAA0D0CyxGGvp</USR><Declaration>public var poses: [Pose&lt;Skeleton&gt;] { get }</Declaration><CommentParts><Abstract><Para>List of poses to match new pose list to.</Para></Abstract></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "poses", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1668, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "poses", "key.namelength": 5, "key.nameoffset": 1726, "key.offset": 1722, "key.parsed_declaration": "public var poses: [Pose<Skeleton>]", "key.parsed_scope.end": 65, "key.parsed_scope.start": 63, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5posesSayAA0D0CyxGGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let iouThreshold: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1868}], "key.doc.column": 14, "key.doc.comment": "IOU Threshold required for a pose to be considered a match", "key.doc.declaration": "public let iouThreshold: Float", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"68\" column=\"14\"><Name>iouThreshold</Name><USR>s:11FritzVision16MultiPoseMatcherC12iouThresholdSfvp</USR><Declaration>public let iouThreshold: Float</Declaration><CommentParts><Abstract><Para>IOU Threshold required for a pose to be considered a match</Para></Abstract></CommentParts></Other>", "key.doc.line": 68, "key.doc.name": "iouThreshold", "key.doc.type": "Other", "key.doclength": 63, "key.docoffset": 1803, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>iouThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 23, "key.name": "iouThreshold", "key.namelength": 12, "key.nameoffset": 1879, "key.offset": 1875, "key.parsed_declaration": "public let iouThreshold: Float", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:11FritzVision16MultiPoseMatcherC12iouThresholdSfvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let lookback: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2032}], "key.doc.column": 14, "key.doc.comment": "Time interval to lookback when matching poses.  Any poses not matched that are older than\nthis value will be removed.", "key.doc.declaration": "public let lookback: TimeInterval", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"72\" column=\"14\"><Name>lookback</Name><USR>s:11FritzVision16MultiPoseMatcherC8lookbackSdvp</USR><Declaration>public let lookback: TimeInterval</Declaration><CommentParts><Abstract><Para>Time interval to lookback when matching poses.  Any poses not matched that are older than this value will be removed.</Para></Abstract></CommentParts></Other>", "key.doc.line": 72, "key.doc.name": "lookback", "key.doc.type": "Other", "key.doclength": 128, "key.docoffset": 1902, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>lookback</decl.name>: <decl.var.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "lookback", "key.namelength": 8, "key.nameoffset": 2043, "key.offset": 2039, "key.parsed_declaration": "public let lookback: TimeInterval", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision16MultiPoseMatcherC8lookbackSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(iouThreshold: <Type usr=\"s:Sf\">Float</Type>, lookback: <Type usr=\"c:@T@NSTimeInterval\">TimeInterval</Type> = 2.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2069}], "key.bodylength": 69, "key.bodyoffset": 2133, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>iouThreshold</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>lookback</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.typealias usr=\"c:@T@NSTimeInterval\">TimeInterval</ref.typealias></decl.var.parameter.type> = 2.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 127, "key.name": "init(iouThreshold:lookback:)", "key.namelength": 55, "key.nameoffset": 2076, "key.offset": 2076, "key.parsed_declaration": "public init(iouThreshold: Float, lookback: TimeInterval = 2.0)", "key.parsed_scope.end": 77, "key.parsed_scope.start": 74, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>.Type) -> (Float, Double) -> MultiPoseMatcher<Skeleton>", "key.typeusr": "$s12iouThreshold8lookback11FritzVision16MultiPoseMatcherCyxGSf_SdtcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC12iouThreshold8lookbackACyxGSf_Sdtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>private(set) public var poseCount: <Type usr=\"s:Si\">Int</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2220}, {"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 2207}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>poseCount</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "poseCount", "key.namelength": 9, "key.nameoffset": 2231, "key.offset": 2227, "key.parsed_declaration": "private(set) public var poseCount = 0", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision16MultiPoseMatcherC9poseCountSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func match(poses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;]) -&gt; [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;?]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2945}], "key.bodylength": 381, "key.bodyoffset": 3020, "key.doc.column": 15, "key.doc.comment": "Match list of poses", "key.doc.declaration": "public func match(poses: [Pose<Skeleton>]) -> [IdentifiedPose<Skeleton>?]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"102\" column=\"15\"><Name>match(poses:)</Name><USR>s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF</USR><Declaration>public func match(poses: [Pose&lt;Skeleton&gt;]) -&gt; [IdentifiedPose&lt;Skeleton&gt;?]</Declaration><CommentParts><Abstract><Para>Match list of poses</Para></Abstract></CommentParts></Function>", "key.doc.line": 102, "key.doc.name": "match(poses:)", "key.doc.type": "Function", "key.doclength": 24, "key.docoffset": 2919, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>match</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>poses</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 450, "key.name": "match(poses:)", "key.namelength": 30, "key.nameoffset": 2957, "key.offset": 2952, "key.parsed_declaration": "public func match(poses: [Pose<Skeleton>]) -> [IdentifiedPose<Skeleton>?]", "key.parsed_scope.end": 115, "key.parsed_scope.start": 102, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision16MultiPoseMatcherC5match4pose2toAA0D0CyxGAE_Si2id10Foundation4DateV16lastIdentifiedAttSgAI_SayAiE_SiAjmNtGtF\">match(pose:to:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>var remaining: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>remaining</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 36, "key.name": "remaining", "key.namelength": 9, "key.nameoffset": 3029, "key.offset": 3025, "key.parsed_declaration": "var remaining = self.identifiedPoses", "key.parsed_scope.end": 103, "key.parsed_scope.start": 103, "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF9remainingL_SDySiAhI_SiAjmNtGvp"}, {"key.annotated_decl": "<Declaration>var matched: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)?]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>matched</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>?]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "matched", "key.namelength": 7, "key.nameoffset": 3070, "key.offset": 3066, "key.parsed_declaration": "var matched = [IdentifiedPose<Skeleton>?]()", "key.parsed_scope.end": 104, "key.parsed_scope.start": 104, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$sSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF7matchedL_APvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>) -> ([Pose<Skeleton>]) -> [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$s5posesSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAEG_tcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC5match5posesSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGSayAHG_tF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func update(with newPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;], having matches: [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;?]? = nil) -&gt; [<Type usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</Type>&lt;<Type usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</Type>&gt;]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3441}], "key.bodylength": 1441, "key.bodyoffset": 3588, "key.doc.column": 15, "key.doc.comment": "Update poses with new poses,", "key.doc.declaration": "public func update(with newPoses: [Pose<Skeleton>], having matches: [IdentifiedPose<Skeleton>?]? = nil) -> [IdentifiedPose<Skeleton>]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift\" line=\"118\" column=\"15\"><Name>update(with:having:)</Name><USR>s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF</USR><Declaration>public func update(with newPoses: [Pose&lt;Skeleton&gt;], having matches: [IdentifiedPose&lt;Skeleton&gt;?]? = nil) -&gt; [IdentifiedPose&lt;Skeleton&gt;]</Declaration><CommentParts><Abstract><Para>Update poses with new poses,</Para></Abstract></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "update(with:having:)", "key.doc.type": "Function", "key.doclength": 33, "key.docoffset": 3406, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>update</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>newPoses</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>having</decl.var.parameter.argument_label> <decl.var.parameter.name>matches</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?]?</decl.var.parameter.type> = nil</decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.typealias usr=\"s:11FritzVision14IdentifiedPosea\">IdentifiedPose</ref.typealias>&lt;<ref.generic_type_param usr=\"s:11FritzVision16MultiPoseMatcherC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1582, "key.name": "update(with:having:)", "key.namelength": 103, "key.nameoffset": 3453, "key.offset": 3448, "key.parsed_declaration": "public func update(\n  with newPoses: [Pose<Skeleton>],\n  having matches: [IdentifiedPose<Skeleton>?]? = nil\n) -> [IdentifiedPose<Skeleton>]", "key.parsed_scope.end": 156, "key.parsed_scope.start": 118, "key.substructure": [{"key.annotated_decl": "<Declaration>let sortedPoses: [<Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>sortedPoses</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "sortedPoses", "key.namelength": 11, "key.nameoffset": 3597, "key.offset": 3593, "key.parsed_declaration": "let sortedPoses = newPoses.sorted(by: { $0.score > $1.score })", "key.parsed_scope.end": 122, "key.parsed_scope.start": 122, "key.typename": "[Pose<Skeleton>]", "key.typeusr": "$sSay11FritzVision4PoseCyxGGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF11sortedPosesL_AQvp"}, {"key.annotated_decl": "<Declaration>let matchedPoses: [(pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)?]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>matchedPoses</decl.name>: <decl.var.type>[<tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>?]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "matchedPoses", "key.namelength": 12, "key.nameoffset": 3664, "key.offset": 3660, "key.parsed_declaration": "let matchedPoses = matches ?? match(poses: sortedPoses)", "key.parsed_scope.end": 123, "key.parsed_scope.start": 123, "key.typename": "[(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]", "key.typeusr": "$sSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttSgGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF12matchedPosesL_ASvp"}, {"key.annotated_decl": "<Declaration>var updatedIdentifiedPoses: [<Type usr=\"s:Si\">Int</Type> : (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;, id: <Type usr=\"s:Si\">Int</Type>, lastIdentifiedAt: <Type usr=\"s:10Foundation4DateV\">Date</Type>)]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>updatedIdentifiedPoses</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct> : <tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>id</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:Si\">Int</ref.struct></tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>lastIdentifiedAt</tuple.element.argument_label>: <tuple.element.type><ref.struct usr=\"s:10Foundation4DateV\">Date</ref.struct></tuple.element.type></tuple.element>)</tuple>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "updatedIdentifiedPoses", "key.namelength": 22, "key.nameoffset": 3725, "key.offset": 3721, "key.parsed_declaration": "var updatedIdentifiedPoses = [Int: IdentifiedPose<Skeleton>]()", "key.parsed_scope.end": 125, "key.parsed_scope.start": 125, "key.typename": "[Int : (pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$sSDySi11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF07updatedN5PosesL_SDySiAiJ_SiAknOtGvp"}, {"key.annotated_decl": "<Declaration>let nonMatchedIds: <Type usr=\"s:Sh\">Set</Type>&lt;<Type usr=\"s:Si\">Int</Type>&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/MultiPoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nonMatchedIds</decl.name>: <decl.var.type><ref.struct usr=\"s:Sh\">Set</ref.struct>&lt;<ref.struct usr=\"s:Si\">Int</ref.struct>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 91, "key.name": "nonMatchedIds", "key.namelength": 13, "key.nameoffset": 4363, "key.offset": 4359, "key.parsed_declaration": "let nonMatchedIds = Set(identifiedPoses.keys).subtracting(Set(updatedIdentifiedPoses.keys))", "key.parsed_scope.end": 140, "key.parsed_scope.start": 140, "key.typename": "Set<Int>", "key.typeusr": "$sShySiGD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF13nonMatchedIdsL_ShySiGvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (MultiPoseMatcher<Skeleton>) -> ([Pose<Skeleton>], [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)?]?) -> [(pose: Pose<Skeleton>, id: Int, lastIdentifiedAt: Date)]", "key.typeusr": "$s4with6havingSay11FritzVision4PoseCyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAFG_SayAfG_SiAhkLtSgGSgtcD", "key.usr": "s:11FritzVision16MultiPoseMatcherC6update4with6havingSayAA0D0CyxG4pose_Si2id10Foundation4DateV16lastIdentifiedAttGSayAIG_SayAiJ_SiAknOtSgGSgtF"}], "key.typename": "MultiPoseMatcher<Skeleton>.Type", "key.typeusr": "$s11FritzVision16MultiPoseMatcherCyxGmD", "key.usr": "s:11FritzVision16MultiPoseMatcherC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4689, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objcMembers public class OneEuroFilterPointable&lt;Point&gt; : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type> where Point : <Type usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2657}, {"key.attribute": "source.decl.attribute.objcMembers", "key.length": 12, "key.offset": 2644}], "key.bodylength": 1750, "key.bodyoffset": 2748, "key.doc.column": 14, "key.doc.comment": "One Euro filter for a 2D or 3D point.", "key.doc.declaration": "@objcMembers public class OneEuroFilterPointable<Point> : NSObject, PointFilterable where Point : FritzVision.ArrayInitializable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift\" line=\"109\" column=\"14\"><Name>OneEuroFilterPointable</Name><USR>s:11FritzVision22OneEuroFilterPointableC</USR><Declaration>@objcMembers public class OneEuroFilterPointable&lt;Point&gt; : NSObject, PointFilterable where Point : FritzVision.ArrayInitializable</Declaration><CommentParts><Abstract><Para>One Euro filter for a 2D or 3D point.</Para></Abstract></CommentParts></Class>", "key.doc.line": 109, "key.doc.name": "OneEuroFilterPointable", "key.doc.type": "Class", "key.doclength": 42, "key.docoffset": 2602, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 2721}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 2731}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objcMembers</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneEuroFilterPointable</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\"><decl.generic_type_param.name>Point</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Point : <ref.protocol usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1835, "key.name": "OneEuroFilterPointable", "key.namelength": 22, "key.nameoffset": 2670, "key.offset": 2664, "key.parsed_declaration": "public class OneEuroFilterPointable<Point: ArrayInitializable>: NSObject, PointFilterable", "key.parsed_scope.end": 175, "key.parsed_scope.start": 109, "key.substructure": [{"key.annotated_decl": "<Declaration>Point : <Type usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 18, "key.offset": 2700}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Point</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision18ArrayInitializableP\">ArrayInitializable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "ArrayInitializable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 25, "key.name": "Point", "key.namelength": 5, "key.nameoffset": 2693, "key.offset": 2693, "key.parsed_declaration": "public class OneEuroFilterPointable<Point: ArrayInitializable>: NSObject, PointFilterable", "key.parsed_scope.end": 109, "key.parsed_scope.start": 109, "key.typename": "Point.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC5Pointxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public final class <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;Point&gt;.Options : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 2798}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2791}], "key.bodylength": 567, "key.bodyoffset": 2834, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2819}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;Point&gt;.<decl.name>Options</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FilterOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 598, "key.name": "Options", "key.namelength": 7, "key.nameoffset": 2810, "key.offset": 2804, "key.parsed_declaration": "public final class Options: FilterOptions", "key.parsed_scope.end": 138, "key.parsed_scope.start": 113, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let frequency: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2840}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>frequency</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "frequency", "key.namelength": 9, "key.nameoffset": 2851, "key.offset": 2847, "key.parsed_declaration": "public let frequency: Double", "key.parsed_scope.end": 115, "key.parsed_scope.start": 115, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequencySdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let minCutoff: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2873}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>minCutoff</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 21, "key.name": "minCutoff", "key.namelength": 9, "key.nameoffset": 2884, "key.offset": 2880, "key.parsed_declaration": "public let minCutoff: Double", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9minCutoffSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let beta: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2906}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>beta</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "beta", "key.namelength": 4, "key.nameoffset": 2917, "key.offset": 2913, "key.parsed_declaration": "public let beta: Double", "key.parsed_scope.end": 117, "key.parsed_scope.start": 117, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC4betaSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let derivateCutoff: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2934}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>derivateCutoff</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 26, "key.name": "derivateCutoff", "key.namelength": 14, "key.nameoffset": 2945, "key.offset": 2941, "key.parsed_declaration": "public let derivateCutoff: Double", "key.parsed_scope.end": 118, "key.parsed_scope.start": 118, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC14derivateCutoffSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(frequency: <Type usr=\"s:Sd\">Double</Type> = 1.0, minCutoff: <Type usr=\"s:Sd\">Double</Type> = 1.0, beta: <Type usr=\"s:Sd\">Double</Type> = 0.0, derivateCutoff: <Type usr=\"s:Sd\">Double</Type> = 0.0)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2973}], "key.bodylength": 137, "key.bodyoffset": 3116, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>frequency</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>minCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 1.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>beta</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>derivateCutoff</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type> = 0.0</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 274, "key.name": "init(frequency:minCutoff:beta:derivateCutoff:)", "key.namelength": 134, "key.nameoffset": 2980, "key.offset": 2980, "key.parsed_declaration": "public init(\n  frequency: Double = 1.0,\n  minCutoff: Double = 1.0,\n  beta: Double = 0.0,\n  derivateCutoff: Double = 0.0\n)", "key.parsed_scope.end": 130, "key.parsed_scope.start": 120, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsCAEyx_Gycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Options.Type) -> (Double, Double, Double, Double) -> OneEuroFilterPointable<Point>.Options", "key.typeusr": "$s9frequency9minCutoff4beta08derivateC011FritzVision22OneEuroFilterPointableC7OptionsCyx_GSd_S3dtcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequency9minCutoff4beta08derivateJ0AEyx_GSd_S3dtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 3267}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3260}], "key.bodylength": 113, "key.bodyoffset": 3284, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 122, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 3276, "key.offset": 3276, "key.overrides": [{"key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.parsed_declaration": "public required init()", "key.parsed_scope.end": 137, "key.parsed_scope.start": 132, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC9frequency9minCutoff4beta08derivateJ0AEyx_GSd_S3dtcfc\">init(frequency:minCutoff:beta:derivateCutoff:)</RelatedName>"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Options.Type) -> () -> OneEuroFilterPointable<Point>.Options", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCyx_GycD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsCAEyx_Gycfc"}], "key.typename": "OneEuroFilterPointable<Point>.Options.Type", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCyx_GmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7OptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(options: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type> = .init())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 3413}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3406}], "key.bodylength": 561, "key.bodyoffset": 3456, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 596, "key.name": "init(options:)", "key.namelength": 32, "key.nameoffset": 3422, "key.offset": 3422, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}], "key.parsed_declaration": "public required init(options: Options = .init())", "key.parsed_scope.end": 158, "key.parsed_scope.start": 140, "key.substructure": [{"key.annotated_decl": "<Declaration>var currentFilters: [<Type usr=\"s:11FritzVision13OneEuroFilterC\">OneEuroFilter</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>currentFilters</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision13OneEuroFilterC\">OneEuroFilter</ref.class>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "currentFilters", "key.namelength": 14, "key.nameoffset": 3465, "key.offset": 3461, "key.parsed_declaration": "var currentFilters = [OneEuroFilter]()", "key.parsed_scope.end": 141, "key.parsed_scope.start": 141, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision22OneEuroFilterPointableC14currentFiltersSayAA0cdE0CGvp\">currentFilters</RelatedName>"}], "key.typename": "[OneEuroFilter]", "key.typeusr": "$sSay11FritzVision13OneEuroFilterCGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc14currentFiltersL_SayAA0cdE0CGvp"}, {"key.annotated_decl": "<Declaration>let emptyPointArray: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>emptyPointArray</decl.name>: <decl.var.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 48, "key.name": "emptyPointArray", "key.namelength": 15, "key.nameoffset": 3629, "key.offset": 3625, "key.parsed_declaration": "let emptyPointArray: [CGFloat] = [0.0, 0.0, 0.0]", "key.parsed_scope.end": 145, "key.parsed_scope.start": 145, "key.typename": "[CGFloat]", "key.typeusr": "$sSay12CoreGraphics7CGFloatVGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc15emptyPointArrayL_Say12CoreGraphics7CGFloatVGvp"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>.Type) -> (OneEuroFilterPointable<Point>.Options) -> OneEuroFilterPointable<Point>", "key.typeusr": "$s7options11FritzVision22OneEuroFilterPointableCyxGAD7OptionsCyx_G_tcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC7optionsACyxGAC7OptionsCyx_G_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func filter(_ point: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</Type>) -&gt; <Type usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4143}], "key.bodylength": 308, "key.bodyoffset": 4188, "key.doc.column": 15, "key.doc.comment": "Filter point.\n\n- Parameter point: Input Point.\n- Returns: Point after original filter processing.", "key.doc.declaration": "public func filter(_ point: Point) -> Point", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift\" line=\"164\" column=\"15\"><Name>filter(_:)</Name><USR>s:11FritzVision22OneEuroFilterPointableC6filteryxxF</USR><Declaration>public func filter(_ point: Point) -&gt; Point</Declaration><CommentParts><Abstract><Para>Filter point.</Para></Abstract><Parameters><Parameter><Name>point</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Input Point.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Point after original filter processing.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 164, "key.doc.name": "filter(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Input Point."}], "name": "point"}], "key.doc.result_discussion": [{"Para": "Point after original filter processing."}], "key.doc.type": "Function", "key.doclength": 119, "key.docoffset": 4022, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision22OneEuroFilterPointableC5Pointxmfp\">Point</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 347, "key.name": "filter(_:)", "key.namelength": 22, "key.nameoffset": 4155, "key.offset": 4150, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.parsed_declaration": "public func filter(_ point: Point) -> Point", "key.parsed_scope.end": 174, "key.parsed_scope.start": 164, "key.substructure": [{"key.annotated_decl": "<Declaration>let currentValue: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>currentValue</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "currentValue", "key.namelength": 12, "key.nameoffset": 4197, "key.offset": 4193, "key.parsed_declaration": "let currentValue = point.toArray()", "key.parsed_scope.end": 165, "key.parsed_scope.start": 165, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF12currentValueL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>var newValues: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newValues</decl.name>: <decl.var.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 27, "key.name": "newValues", "key.namelength": 9, "key.nameoffset": 4236, "key.offset": 4232, "key.parsed_declaration": "var newValues = [CGFloat]()", "key.parsed_scope.end": 166, "key.parsed_scope.start": 166, "key.typename": "[CGFloat]", "key.typeusr": "$sSay12CoreGraphics7CGFloatVGD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF9newValuesL_Say12CoreGraphics7CGFloatVGvp"}], "key.typename": "<Point where Point : ArrayInitializable> (OneEuroFilterPointable<Point>) -> (Point) -> Point", "key.typeusr": "$syxxcD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC6filteryxxF"}], "key.typename": "OneEuroFilterPointable<Point>.Type", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableCyxGmD", "key.usr": "s:11FritzVision22OneEuroFilterPointableC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class OneEuroPointFilter : <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4501}], "key.bodylength": 120, "key.bodyoffset": 4567, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 31, "key.offset": 4534}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>OneEuroPointFilter</decl.name> : <ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;</decl.class>", "key.inheritedtypes": [{"key.name": "OneEuroFilterPointable<CGPoint>"}], "key.kind": "source.lang.swift.decl.class", "key.length": 180, "key.name": "OneEuroPointFilter", "key.namelength": 18, "key.nameoffset": 4514, "key.offset": 4508, "key.parsed_declaration": "public class OneEuroPointFilter: OneEuroFilterPointable<CGPoint>", "key.parsed_scope.end": 185, "key.parsed_scope.start": 177, "key.runtime_name": "_TtC4main18OneEuroPointFilter", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static let low: <Type usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</Type>&lt;<Type usr=\"c:@S@CGPoint\">CGPoint</Type>&gt;.<Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4571}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/OneEuroFilter.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>low</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC\">OneEuroFilterPointable</ref.class>&lt;<ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct>&gt;.<ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "low", "key.namelength": 3, "key.nameoffset": 4589, "key.offset": 4578, "key.parsed_declaration": "public static let low = Options(", "key.parsed_scope.end": 179, "key.parsed_scope.start": 179, "key.typename": "OneEuroFilterPointable<CGPoint>.Options", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCySo7CGPointV_GD", "key.usr": "s:11FritzVision18OneEuroPointFilterC3lowAA0cdF9PointableC7OptionsCySo7CGPointV_GvpZ"}], "key.typename": "OneEuroPointFilter.Type", "key.typeusr": "$s11FritzVision18OneEuroPointFilterCmD", "key.usr": "s:11FritzVision18OneEuroPointFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 423, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol ArrayInitializable : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 192}], "key.bodylength": 31, "key.bodyoffset": 239, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 228}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>ArrayInitializable</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 72, "key.name": "ArrayInitializable", "key.namelength": 18, "key.nameoffset": 208, "key.offset": 199, "key.parsed_declaration": "public protocol ArrayInitializable: PointType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main18ArrayInitializable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(with array: [<Type usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</Type>])</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/Point3D+ArrayInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>with</decl.var.parameter.argument_label> <decl.var.parameter.name>array</decl.var.parameter.name>: <decl.var.parameter.type>[<ref.struct usr=\"s:12CoreGraphics7CGFloatV\">CGFloat</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 27, "key.name": "init(with:)", "key.namelength": 27, "key.nameoffset": 242, "key.offset": 242, "key.parsed_declaration": "init(with array: [CGFloat])", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.substructure": [], "key.typename": "<Self where Self : ArrayInitializable> (Self.Type) -> ([CGFloat]) -> Self", "key.typeusr": "$s4withxSay12CoreGraphics7CGFloatVG_tcD", "key.usr": "s:11FritzVision18ArrayInitializableP4withxSay12CoreGraphics7CGFloatVG_tcfc"}], "key.typename": "ArrayInitializable.Protocol", "key.typeusr": "$s11FritzVision18ArrayInitializable_pmD", "key.usr": "s:11FritzVision18ArrayInitializableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 491, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FilterOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 183}], "key.bodylength": 12, "key.bodyoffset": 214, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FilterOptions</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 37, "key.name": "FilterOptions", "key.namelength": 13, "key.nameoffset": 199, "key.offset": 190, "key.parsed_declaration": "public protocol FilterOptions", "key.parsed_scope.end": 15, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main13FilterOptions_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init()</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 6, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 218, "key.offset": 218, "key.parsed_declaration": "init()", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "<Self where Self : FilterOptions> (Self.Type) -> () -> Self", "key.typeusr": "$sxycD", "key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.typename": "FilterOptions.Protocol", "key.typeusr": "$s11FritzVision13FilterOptions_pmD", "key.usr": "s:11FritzVision13FilterOptionsP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PointFilterable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 301}], "key.bodylength": 155, "key.bodyoffset": 334, "key.doc.column": 17, "key.doc.comment": "The methods adopted by the object used to smoothe a 2D or 3D point.", "key.doc.declaration": "public protocol PointFilterable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift\" line=\"18\" column=\"17\"><Name>PointFilterable</Name><USR>s:11FritzVision15PointFilterableP</USR><Declaration>public protocol PointFilterable</Declaration><CommentParts><Abstract><Para>The methods adopted by the object used to smoothe a 2D or 3D point.</Para></Abstract></CommentParts></Class>", "key.doc.line": 18, "key.doc.name": "PointFilterable", "key.doc.type": "Class", "key.doclength": 72, "key.docoffset": 229, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PointFilterable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 182, "key.name": "PointFilterable", "key.namelength": 15, "key.nameoffset": 317, "key.offset": 308, "key.parsed_declaration": "public protocol PointFilterable", "key.parsed_scope.end": 25, "key.parsed_scope.start": 18, "key.runtime_name": "_TtP4main15PointFilterable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype T : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>T</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 27, "key.name": "T", "key.namelength": 1, "key.nameoffset": 352, "key.offset": 337, "key.parsed_declaration": "associatedtype T: PointType", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Self.T.Type", "key.typeusr": "$s1T11FritzVision15PointFilterablePQzmD", "key.usr": "s:11FritzVision15PointFilterableP1TQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype SmoothingOptionsType : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>SmoothingOptionsType</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 50, "key.name": "SmoothingOptionsType", "key.namelength": 20, "key.nameoffset": 382, "key.offset": 367, "key.parsed_declaration": "associatedtype SmoothingOptionsType: FilterOptions", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "Self.SmoothingOptionsType.Type", "key.typeusr": "$s20SmoothingOptionsType11FritzVision15PointFilterablePQzmD", "key.usr": "s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(options: <Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 35, "key.name": "init(options:)", "key.namelength": 35, "key.nameoffset": 421, "key.offset": 421, "key.parsed_declaration": "init(options: SmoothingOptionsType)", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.substructure": [], "key.typename": "<Self where Self : PointFilterable> (Self.Type) -> (Self.SmoothingOptionsType) -> Self", "key.typeusr": "$s7optionsx20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func filter(_ point: <Type usr=\"s:11FritzVision15PointFilterableP1TQa\">T</Type>) -&gt; <Type usr=\"s:11FritzVision15PointFilterableP1TQa\">T</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PointFilterable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP1TQa\">T</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:11FritzVision15PointFilterableP1TQa\">T</ref.associatedtype></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 28, "key.name": "filter(_:)", "key.namelength": 18, "key.nameoffset": 465, "key.offset": 460, "key.parsed_declaration": "func filter(_ point: T) -> T", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.substructure": [], "key.typename": "<Self where Self : PointFilterable> (Self) -> (Self.T) -> Self.T", "key.typeusr": "$sy1TQzABcD", "key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.typename": "PointFilterable.Protocol", "key.typeusr": "$s11FritzVision15PointFilterable_pmD", "key.usr": "s:11FritzVision15PointFilterableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1829, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class PoseSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@S@CGPoint\">CGPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 205}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 181}], "key.bodylength": 707, "key.bodyoffset": 307, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PoseSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.struct usr=\"c:@S@CGPoint\">CGPoint</ref.struct></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 803, "key.name": "PoseSmoother", "key.namelength": 12, "key.nameoffset": 218, "key.offset": 212, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>\nwhere Filter.T == CGPoint", "key.parsed_scope.end": 38, "key.parsed_scope.start": 12, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 239}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 231, "key.offset": 231, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision12PoseSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 266}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 256, "key.offset": 256, "key.parsed_declaration": "public class PoseSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision12PoseSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(options: <Type usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type> = Filter.SmoothingOptionsType())</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 336}], "key.bodylength": 182, "key.bodyoffset": 419, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type> = Filter.SmoothingOptionsType()</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 259, "key.name": "init(options:)", "key.namelength": 74, "key.nameoffset": 343, "key.offset": 343, "key.parsed_declaration": "public init(options: Filter.SmoothingOptionsType = Filter.SmoothingOptionsType())", "key.parsed_scope.end": 25, "key.parsed_scope.start": 17, "key.substructure": [{"key.annotated_decl": "<Declaration>var filters: [Filter]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>filters</decl.name>: <decl.var.type>[Filter]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "filters", "key.namelength": 7, "key.nameoffset": 428, "key.offset": 424, "key.parsed_declaration": "var filters = [Filter]()", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision12PoseSmootherC7filtersSayxGvp\">filters</RelatedName>"}], "key.typename": "[Filter]", "key.typeusr": "$sSayxGD", "key.usr": "s:11FritzVision12PoseSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc7filtersL_SayxGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (PoseSmoother<Filter, Skeleton>.Type) -> (Filter.SmoothingOptionsType) -> PoseSmoother<Filter, Skeleton>", "key.typeusr": "$s7options11FritzVision12PoseSmootherCyxq_G20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision12PoseSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 606}], "key.bodylength": 343, "key.bodyoffset": 669, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision12PoseSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 400, "key.name": "smoothe(_:)", "key.namelength": 31, "key.nameoffset": 618, "key.offset": 613, "key.parsed_declaration": "public func smoothe(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.parsed_scope.end": 37, "key.parsed_scope.start": 27, "key.substructure": [{"key.annotated_decl": "<Declaration>var newKeypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 43, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 678, "key.offset": 674, "key.parsed_declaration": "var newKeypoints: [Keypoint<Skeleton>] = []", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyq_GGD", "key.usr": "s:11FritzVision12PoseSmootherC7smootheyAA0C0Cyq_GAGF12newKeypointsL_SayAA8KeypointCyq_GGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == CGPoint> (PoseSmoother<Filter, Skeleton>) -> (Pose<Skeleton>) -> Pose<Skeleton>", "key.typeusr": "$sy11FritzVision4PoseCyq_GADcD", "key.usr": "s:11FritzVision12PoseSmootherC7smootheyAA0C0Cyq_GAGF"}], "key.typename": "PoseSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision12PoseSmootherCyxq_GmD", "key.usr": "s:11FritzVision12PoseSmootherC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class Pose3DSmoother&lt;Filter, Skeleton&gt; where Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type>, Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type>, Filter.T == <Type usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1041}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1017}], "key.bodylength": 682, "key.bodyoffset": 1145, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>Pose3DSmoother</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\"><decl.generic_type_param.name>Filter</decl.generic_type_param.name></decl.generic_type_param>, <decl.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Filter : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement>Filter.T == <ref.class usr=\"c:@M@FritzVision@objc(cs)Point3D\">Point3D</ref.class></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 780, "key.name": "Pose3DSmoother", "key.namelength": 14, "key.nameoffset": 1054, "key.offset": 1048, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType>\nwhere Filter.T == Point3D", "key.parsed_scope.end": 66, "key.parsed_scope.start": 41, "key.substructure": [{"key.annotated_decl": "<Declaration>Filter : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 1077}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Filter</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 23, "key.name": "Filter", "key.namelength": 6, "key.nameoffset": 1069, "key.offset": 1069, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "Filter.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision14Pose3DSmootherC6Filterxmfp"}, {"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1104}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1094, "key.offset": 1094, "key.parsed_declaration": "public class Pose3DSmoother<Filter: PointFilterable, Skeleton: SkeletonType>", "key.parsed_scope.end": 41, "key.parsed_scope.start": 41, "key.typename": "Skeleton.Type", "key.typeusr": "$sq_mD", "key.usr": "s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(options: <Type usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\">Filter</Type>.<Type usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1174}], "key.bodylength": 181, "key.bodyoffset": 1225, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC6Filterxmfp\">Filter</ref.generic_type_param>.<ref.associatedtype usr=\"s:11FritzVision15PointFilterableP20SmoothingOptionsTypeQa\">SmoothingOptionsType</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 226, "key.name": "init(options:)", "key.namelength": 42, "key.nameoffset": 1181, "key.offset": 1181, "key.parsed_declaration": "public init(options: Filter.SmoothingOptionsType)", "key.parsed_scope.end": 53, "key.parsed_scope.start": 46, "key.substructure": [{"key.annotated_decl": "<Declaration>var filters: [Filter]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>filters</decl.name>: <decl.var.type>[Filter]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 24, "key.name": "filters", "key.namelength": 7, "key.nameoffset": 1234, "key.offset": 1230, "key.parsed_declaration": "var filters = [Filter]()", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14Pose3DSmootherC7filtersSayxGvp\">filters</RelatedName>"}], "key.typename": "[Filter]", "key.typeusr": "$sSayxGD", "key.usr": "s:11FritzVision14Pose3DSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc7filtersL_SayxGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == Point3D> (Pose3DSmoother<Filter, Skeleton>.Type) -> (Filter.SmoothingOptionsType) -> Pose3DSmoother<Filter, Skeleton>", "key.typeusr": "$s7options11FritzVision14Pose3DSmootherCyxq_G20SmoothingOptionsTypeQz_tcD", "key.usr": "s:11FritzVision14Pose3DSmootherC7optionsACyxq_G20SmoothingOptionsTypeQz_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func smoothe(_ pose: <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision6Pose3DC\">Pose3D</Type>&lt;<Type usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1411}], "key.bodylength": 347, "key.bodyoffset": 1478, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>smoothe</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision6Pose3DC\">Pose3D</ref.class>&lt;<ref.generic_type_param usr=\"s:11FritzVision14Pose3DSmootherC8Skeletonq_mfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 408, "key.name": "smoothe(_:)", "key.namelength": 33, "key.nameoffset": 1423, "key.offset": 1418, "key.parsed_declaration": "public func smoothe(_ pose: Pose3D<Skeleton>) -> Pose3D<Skeleton>", "key.parsed_scope.end": 65, "key.parsed_scope.start": 55, "key.substructure": [{"key.annotated_decl": "<Declaration>var newKeypoints: [<Type usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/PoseSmoother.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>newKeypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision10Keypoint3DC\">Keypoint3D</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 45, "key.name": "newKeypoints", "key.namelength": 12, "key.nameoffset": 1487, "key.offset": 1483, "key.parsed_declaration": "var newKeypoints: [Keypoint3D<Skeleton>] = []", "key.parsed_scope.end": 56, "key.parsed_scope.start": 56, "key.typename": "[Keypoint3D<Skeleton>]", "key.typeusr": "$sSay11FritzVision10Keypoint3DCyq_GGD", "key.usr": "s:11FritzVision14Pose3DSmootherC7smootheyAA0C1DCyq_GAGF12newKeypointsL_SayAA10Keypoint3DCyq_GGvp"}], "key.typename": "<Filter, Skeleton where Filter : PointFilterable, Skeleton : SkeletonType, Filter.T == Point3D> (Pose3DSmoother<Filter, Skeleton>) -> (Pose3D<Skeleton>) -> Pose3D<Skeleton>", "key.typeusr": "$sy11FritzVision6Pose3DCyq_GADcD", "key.usr": "s:11FritzVision14Pose3DSmootherC7smootheyAA0C1DCyq_GAGF"}], "key.typename": "Pose3DSmoother<Filter, Skeleton>.Type", "key.typeusr": "$s11FritzVision14Pose3DSmootherCyxq_GmD", "key.usr": "s:11FritzVision14Pose3DSmootherC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6832, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class SavitzkyGolayFilter&lt;PointT&gt; : <Type usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</Type> where PointT : <Type usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2115}], "key.bodylength": 4636, "key.bodyoffset": 2194, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 15, "key.offset": 2177}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SavitzkyGolayFilter</decl.name>&lt;<decl.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\"><decl.generic_type_param.name>PointT</decl.generic_type_param.name></decl.generic_type_param>&gt; : <ref.protocol usr=\"s:11FritzVision15PointFilterableP\">PointFilterable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>PointT : <ref.protocol usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</ref.protocol></decl.generic_type_requirement></decl.class>", "key.inheritedtypes": [{"key.name": "PointFilterable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4709, "key.name": "SavitzkyGolayFilter", "key.namelength": 19, "key.nameoffset": 2128, "key.offset": 2122, "key.parsed_declaration": "public class SavitzkyGolayFilter<PointT: SmoothingPointable>: PointFilterable", "key.parsed_scope.end": 218, "key.parsed_scope.start": 50, "key.substructure": [{"key.annotated_decl": "<Declaration>PointT : <Type usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 18, "key.offset": 2156}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>PointT</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision18SmoothingPointableP\">SmoothingPointable</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SmoothingPointable"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 26, "key.name": "PointT", "key.namelength": 6, "key.nameoffset": 2148, "key.offset": 2148, "key.parsed_declaration": "public class SavitzkyGolayFilter<PointT: SmoothingPointable>: PointFilterable", "key.parsed_scope.end": 50, "key.parsed_scope.start": 50, "key.typename": "PointT.Type", "key.typeusr": "$sxmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC\">SavitzkyGolayFilter</Type>&lt;PointT&gt;.Options : <Type usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2383}], "key.bodylength": 393, "key.bodyoffset": 2420, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 13, "key.offset": 2405}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <ref.class usr=\"s:11FritzVision19SavitzkyGolayFilterC\">SavitzkyGolayFilter</ref.class>&lt;PointT&gt;.<decl.name>Options</decl.name> : <ref.protocol usr=\"s:11FritzVision13FilterOptionsP\">FilterOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "FilterOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 424, "key.name": "Options", "key.namelength": 7, "key.nameoffset": 2396, "key.offset": 2390, "key.parsed_declaration": "public class Options: FilterOptions", "key.parsed_scope.end": 78, "key.parsed_scope.start": 61, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(leftScan: <Type usr=\"s:Si\">Int</Type> = 2, rightScan: <Type usr=\"s:Si\">Int</Type> = 2, polonomialOrder: <Type usr=\"s:Si\">Int</Type> = 2)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2501}], "key.bodylength": 114, "key.bodyoffset": 2579, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>leftScan</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rightScan</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>polonomialOrder</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type> = 2</decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 186, "key.name": "init(leftScan:rightScan:polonomialOrder:)", "key.namelength": 69, "key.nameoffset": 2508, "key.offset": 2508, "key.parsed_declaration": "public init(leftScan: Int = 2, rightScan: Int = 2, polonomialOrder: Int = 2)", "key.parsed_scope.end": 71, "key.parsed_scope.start": 67, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsCAEyx_Gycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Options.Type) -> (Int, Int, Int) -> SavitzkyGolayFilter<PointT>.Options", "key.typeusr": "$s8leftScan05rightB015polonomialOrder11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GSi_S2itcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsC8leftScan05rightH015polonomialOrderAEyx_GSi_S2itcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2707}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2700}], "key.bodylength": 85, "key.bodyoffset": 2724, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 94, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 2716, "key.offset": 2716, "key.overrides": [{"key.usr": "s:11FritzVision13FilterOptionsPxycfc"}], "key.parsed_declaration": "public required init()", "key.parsed_scope.end": 77, "key.parsed_scope.start": 73, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC8leftScan05rightH015polonomialOrderAEyx_GSi_S2itcfc\">init(leftScan:rightScan:polonomialOrder:)</RelatedName>"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Options.Type) -> () -> SavitzkyGolayFilter<PointT>.Options", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GycD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsCAEyx_Gycfc"}], "key.typename": "SavitzkyGolayFilter<PointT>.Options.Type", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterC7OptionsCyx_GmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7OptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public required init(options: <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC\">Options</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 2825}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2818}], "key.bodylength": 404, "key.bodyoffset": 2858, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision19SavitzkyGolayFilterC7OptionsC\">Options</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 429, "key.name": "init(options:)", "key.namelength": 22, "key.nameoffset": 2834, "key.offset": 2834, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP7optionsx20SmoothingOptionsTypeQz_tcfc"}], "key.parsed_declaration": "public required init(options: Options)", "key.parsed_scope.end": 92, "key.parsed_scope.start": 80, "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>.Type) -> (SavitzkyGolayFilter<PointT>.Options) -> SavitzkyGolayFilter<PointT>", "key.typeusr": "$s7options11FritzVision19SavitzkyGolayFilterCyxGAD7OptionsCyx_G_tcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC7optionsACyxGAC7OptionsCyx_G_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func setParameter(name: <Type usr=\"s:SS\">String</Type>, value: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3267}], "key.bodylength": 261, "key.bodyoffset": 3322, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>setParameter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>name</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>value</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 310, "key.name": "setParameter(name:value:)", "key.namelength": 41, "key.nameoffset": 3279, "key.offset": 3274, "key.parsed_declaration": "public func setParameter(name: String, value: Double)", "key.parsed_scope.end": 103, "key.parsed_scope.start": 94, "key.substructure": [], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (String, Double) -> ()", "key.typeusr": "$s4name5valueySS_SdtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC12setParameter4name5valueySS_SdtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func filter(_ point: <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</Type>) -&gt; <Type usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3588}], "key.bodylength": 176, "key.bodyoffset": 3635, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>filter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</ref.generic_type_param></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.generic_type_param usr=\"s:11FritzVision19SavitzkyGolayFilterC6PointTxmfp\">PointT</ref.generic_type_param></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 217, "key.name": "filter(_:)", "key.namelength": 23, "key.nameoffset": 3600, "key.offset": 3595, "key.overrides": [{"key.usr": "s:11FritzVision15PointFilterableP6filtery1TQzAFF"}], "key.parsed_declaration": "public func filter(_ point: PointT) -> PointT", "key.parsed_scope.end": 110, "key.parsed_scope.start": 105, "key.substructure": [{"key.annotated_decl": "<Declaration>let smoothingPoint: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>smoothingPoint</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 60, "key.name": "smoothingPoint", "key.namelength": 14, "key.nameoffset": 3644, "key.offset": 3640, "key.parsed_declaration": "let smoothingPoint = point.buildSmoothingPoint(count: count)", "key.parsed_scope.end": 106, "key.parsed_scope.start": 106, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF14smoothingPointL_AA09SmoothingH0Cvp"}, {"key.annotated_decl": "<Declaration>let result: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>result</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "result", "key.namelength": 6, "key.nameoffset": 3709, "key.offset": 3705, "key.parsed_declaration": "let result = addAndProcessDataPoint(dataPoint: smoothingPoint)", "key.parsed_scope.end": 107, "key.parsed_scope.start": 107, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF6resultL_AA14SmoothingPointCvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (PointT) -> PointT", "key.typeusr": "$syxxcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC6filteryxxF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func applyFilter(pointToProcess: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>, buffer: [<Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>]) -&gt; <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4297}], "key.bodylength": 561, "key.bodyoffset": 4404, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>applyFilter</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>pointToProcess</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>buffer</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 662, "key.name": "applyFilter(pointToProcess:buffer:)", "key.namelength": 69, "key.nameoffset": 4309, "key.offset": 4304, "key.parsed_declaration": "public func applyFilter(pointToProcess: SmoothingPoint, buffer: [SmoothingPoint])\n  -> SmoothingPoint", "key.parsed_scope.end": 148, "key.parsed_scope.start": 125, "key.substructure": [{"key.annotated_decl": "<Declaration>let nr: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nr</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 34, "key.name": "nr", "key.namelength": 2, "key.nameoffset": 4414, "key.offset": 4410, "key.parsed_declaration": "let nr = Int(params[\"rightScan\"]!)", "key.parsed_scope.end": 129, "key.parsed_scope.start": 129, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF2nrL_Sivp"}, {"key.annotated_decl": "<Declaration>let nl: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>nl</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 33, "key.name": "nl", "key.namelength": 2, "key.nameoffset": 4453, "key.offset": 4449, "key.parsed_declaration": "let nl = Int(params[\"leftScan\"]!)", "key.parsed_scope.end": 130, "key.parsed_scope.start": 130, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF2nlL_Sivp"}, {"key.annotated_decl": "<Declaration>let newPoint: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>newPoint</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 31, "key.name": "newPoint", "key.namelength": 8, "key.nameoffset": 4491, "key.offset": 4487, "key.parsed_declaration": "let newPoint = SmoothingPoint()", "key.parsed_scope.end": 131, "key.parsed_scope.start": 131, "key.typename": "SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF03newL0L_AHvp"}, {"key.annotated_decl": "<Declaration>let size: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 22, "key.name": "size", "key.namelength": 4, "key.nameoffset": 4572, "key.offset": 4568, "key.parsed_declaration": "let size = nl + nr + 1", "key.parsed_scope.end": 133, "key.parsed_scope.start": 133, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision19SavitzkyGolayFilterC4sizeSivp\">size</RelatedName>"}], "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF4sizeL_Sivp"}, {"key.annotated_decl": "<Declaration>var tempX: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempX</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempX", "key.namelength": 5, "key.nameoffset": 4599, "key.offset": 4595, "key.parsed_declaration": "var tempX = 0.0", "key.parsed_scope.end": 134, "key.parsed_scope.start": 134, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempXL_Sdvp"}, {"key.annotated_decl": "<Declaration>var tempY: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempY</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempY", "key.namelength": 5, "key.nameoffset": 4619, "key.offset": 4615, "key.parsed_declaration": "var tempY = 0.0", "key.parsed_scope.end": 135, "key.parsed_scope.start": 135, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempYL_Sdvp"}, {"key.annotated_decl": "<Declaration>var tempZ: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tempZ</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 15, "key.name": "tempZ", "key.namelength": 5, "key.nameoffset": 4639, "key.offset": 4635, "key.parsed_declaration": "var tempZ = 0.0", "key.parsed_scope.end": 136, "key.parsed_scope.start": 136, "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF5tempZL_Sdvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (SmoothingPoint, [SmoothingPoint]) -> SmoothingPoint", "key.typeusr": "$s14pointToProcess6buffer11FritzVision14SmoothingPointCAE_SayAEGtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC05applyE014pointToProcess6bufferAA14SmoothingPointCAH_SayAHGtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func shift(index: <Type usr=\"s:Si\">Int</Type>, input: [<Type usr=\"s:Sd\">Double</Type>]) -&gt; [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6665}], "key.bodylength": 103, "key.bodyoffset": 6725, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>shift</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>index</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>input</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 157, "key.name": "shift(index:input:)", "key.namelength": 34, "key.nameoffset": 6677, "key.offset": 6672, "key.parsed_declaration": "public func shift(index: Int, input: [Double]) -> [Double]", "key.parsed_scope.end": 217, "key.parsed_scope.start": 213, "key.substructure": [{"key.annotated_decl": "<Declaration>var output: <Type usr=\"s:s10ArraySliceV\">ArraySlice</Type>&lt;<Type usr=\"s:Sd\">Double</Type>&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SavitzkyGolayFilter.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>output</decl.name>: <decl.var.type><ref.struct usr=\"s:s10ArraySliceV\">ArraySlice</ref.struct>&lt;<ref.struct usr=\"s:Sd\">Double</ref.struct>&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 39, "key.name": "output", "key.namelength": 6, "key.nameoffset": 6734, "key.offset": 6730, "key.parsed_declaration": "var output = input[index..<input.count]", "key.parsed_scope.end": 214, "key.parsed_scope.start": 214, "key.typename": "ArraySlice<Double>", "key.typeusr": "$ss10ArraySliceVySdGD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC5shift5index5inputSaySdGSi_AGtF6outputL_s10ArraySliceVySdGvp"}], "key.typename": "<PointT where PointT : SmoothingPointable> (SavitzkyGolayFilter<PointT>) -> (Int, [Double]) -> [Double]", "key.typeusr": "$s5index5inputSaySdGSi_ACtcD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC5shift5index5inputSaySdGSi_AGtF"}], "key.typename": "SavitzkyGolayFilter<PointT>.Type", "key.typeusr": "$s11FritzVision19SavitzkyGolayFilterCyxGmD", "key.usr": "s:11FritzVision19SavitzkyGolayFilterC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4107, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class SmoothingPoint</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1016}], "key.bodylength": 3060, "key.bodyoffset": 1045, "key.doc.column": 14, "key.doc.comment": "Data object representing a set of sensor readings from a single point in time.", "key.doc.declaration": "public class SmoothingPoint", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift\" line=\"12\" column=\"14\"><Name>SmoothingPoint</Name><USR>s:11FritzVision14SmoothingPointC</USR><Declaration>public class SmoothingPoint</Declaration><CommentParts><Abstract><Para>Data object representing a set of sensor readings from a single point in time.</Para></Abstract></CommentParts></Class>", "key.doc.line": 12, "key.doc.name": "SmoothingPoint", "key.doc.type": "Class", "key.doclength": 83, "key.docoffset": 933, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>SmoothingPoint</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 3083, "key.name": "SmoothingPoint", "key.namelength": 14, "key.nameoffset": 1029, "key.offset": 1023, "key.parsed_declaration": "public class SmoothingPoint", "key.parsed_scope.end": 155, "key.parsed_scope.start": 12, "key.runtime_name": "_TtC4main14SmoothingPoint", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var xAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1049}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>xAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "xAccel", "key.namelength": 6, "key.nameoffset": 1060, "key.offset": 1056, "key.parsed_declaration": "public var xAccel = 0.0", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6xAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var yAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1075}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>yAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "yAccel", "key.namelength": 6, "key.nameoffset": 1086, "key.offset": 1082, "key.parsed_declaration": "public var yAccel = 0.0", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6yAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var zAccel: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1101}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>zAccel</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 16, "key.name": "zAccel", "key.namelength": 6, "key.nameoffset": 1112, "key.offset": 1108, "key.parsed_declaration": "public var zAccel = 0.0", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:11FritzVision14SmoothingPointC6zAccelSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(dataX: <Type usr=\"s:Sd\">Double</Type>, dataY: <Type usr=\"s:Sd\">Double</Type>, dataZ: <Type usr=\"s:Sd\">Double</Type>, count: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1249}], "key.bodylength": 98, "key.bodyoffset": 1319, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>dataX</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataY</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>dataZ</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 162, "key.name": "init(dataX:dataY:dataZ:count:)", "key.namelength": 61, "key.nameoffset": 1256, "key.offset": 1256, "key.parsed_declaration": "public init(dataX: Double, dataY: Double, dataZ: Double, count: Int)", "key.parsed_scope.end": 30, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14SmoothingPointCACycfc\">init()</RelatedName>"}], "key.substructure": [], "key.typename": "(SmoothingPoint.Type) -> (Double, Double, Double, Int) -> SmoothingPoint", "key.typeusr": "$s5dataX0A1Y0A1Z5count11FritzVision14SmoothingPointCSd_S2dSitcD", "key.usr": "s:11FritzVision14SmoothingPointC5dataX0E1Y0E1Z5countACSd_S2dSitcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1422}], "key.bodylength": 82, "key.bodyoffset": 1437, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPoint.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 91, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1429, "key.offset": 1429, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 37, "key.parsed_scope.start": 32, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision14SmoothingPointC5dataX0E1Y0E1Z5countACSd_S2dSitcfc\">init(dataX:dataY:dataZ:count:)</RelatedName>"}], "key.typename": "(SmoothingPoint.Type) -> () -> SmoothingPoint", "key.typeusr": "$s11FritzVision14SmoothingPointCycD", "key.usr": "s:11FritzVision14SmoothingPointCACycfc"}], "key.typename": "SmoothingPoint.Type", "key.typeusr": "$s11FritzVision14SmoothingPointCmD", "key.usr": "s:11FritzVision14SmoothingPointC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1169, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol SmoothingPointable : <Type usr=\"s:11FritzVision9PointTypeP\">PointType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 298}], "key.bodylength": 90, "key.bodyoffset": 345, "key.doc.column": 17, "key.doc.comment": "The methods used to initialize and convert points to and from SmoothingPoints used\nin Savitzky-Golay filter.", "key.doc.declaration": "public protocol SmoothingPointable : FritzVision.PointType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift\" line=\"13\" column=\"17\"><Name>SmoothingPointable</Name><USR>s:11FritzVision18SmoothingPointableP</USR><Declaration>public protocol SmoothingPointable : FritzVision.PointType</Declaration><CommentParts><Abstract><Para>The methods used to initialize and convert points to and from SmoothingPoints used in Savitzky-Golay filter.</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "SmoothingPointable", "key.doc.type": "Class", "key.doclength": 117, "key.docoffset": 181, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 9, "key.offset": 334}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>SmoothingPointable</decl.name> : <ref.protocol usr=\"s:11FritzVision9PointTypeP\">PointType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "PointType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 131, "key.name": "SmoothingPointable", "key.namelength": 18, "key.nameoffset": 314, "key.offset": 305, "key.parsed_declaration": "public protocol SmoothingPointable: PointType", "key.parsed_scope.end": 16, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main18SmoothingPointable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(_ point: <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>point</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 29, "key.name": "init(_:)", "key.namelength": 29, "key.nameoffset": 348, "key.offset": 348, "key.parsed_declaration": "init(_ point: SmoothingPoint)", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.substructure": [], "key.typename": "<Self where Self : SmoothingPointable> (Self.Type) -> (SmoothingPoint) -> Self", "key.typeusr": "$syx11FritzVision14SmoothingPointCcD", "key.usr": "s:11FritzVision18SmoothingPointablePyxAA0C5PointCcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func buildSmoothingPoint(count: <Type usr=\"s:Si\">Int</Type>) -&gt; <Type usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/PoseEstimation/Smoothing/SmoothingPointable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>buildSmoothingPoint</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>count</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision14SmoothingPointC\">SmoothingPoint</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 54, "key.name": "buildSmoothingPoint(count:)", "key.namelength": 31, "key.nameoffset": 385, "key.offset": 380, "key.parsed_declaration": "func buildSmoothingPoint(count: Int) -> SmoothingPoint", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.substructure": [], "key.typename": "<Self where Self : SmoothingPointable> (Self) -> (Int) -> SmoothingPoint", "key.typeusr": "$s5count11FritzVision14SmoothingPointCSi_tcD", "key.usr": "s:11FritzVision18SmoothingPointableP05buildC5Point5countAA0cF0CSi_tF"}], "key.typename": "SmoothingPointable.Protocol", "key.typeusr": "$s11FritzVision18SmoothingPointable_pmD", "key.usr": "s:11FritzVision18SmoothingPointableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/FritzVisionImage+Annotations.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 952, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3353, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PredictionRecordable : <Type usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</Type> where <Type usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</Type>.PredictionInput : <Type usr=\"s:17FritzManagedModel21Base64StringEncodableP\">Base64StringEncodable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 365}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 341}], "key.bodylength": 1171, "key.bodyoffset": 421, "key.doc.column": 17, "key.doc.comment": "Adds functionality to record annotated model predictions.\n\nYou can record prediction results as a way to collect data on model performance.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol PredictionRecordable : FritzVision.FritzPredictable where Self.PredictionInput : FritzManagedModel.Base64StringEncodable", "key.doc.discussion": [{"Para": "You can record prediction results as a way to collect data on model performance."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift\" line=\"15\" column=\"17\"><Name>PredictionRecordable</Name><USR>s:11FritzVision20PredictionRecordableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol PredictionRecordable : FritzVision.FritzPredictable where Self.PredictionInput : FritzManagedModel.Base64StringEncodable</Declaration><CommentParts><Abstract><Para>Adds functionality to record annotated model predictions.</Para></Abstract><Discussion><Para>You can record prediction results as a way to collect data on model performance.</Para></Discussion></CommentParts></Class>", "key.doc.line": 15, "key.doc.name": "PredictionRecordable", "key.doc.type": "Class", "key.doclength": 151, "key.docoffset": 190, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 403}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PredictionRecordable</decl.name> : <ref.protocol usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</ref.generic_type_param>.PredictionInput : <ref.protocol usr=\"s:17FritzManagedModel21Base64StringEncodableP\">Base64StringEncodable</ref.protocol></decl.generic_type_requirement></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 1221, "key.name": "PredictionRecordable", "key.namelength": 20, "key.nameoffset": 381, "key.offset": 372, "key.parsed_declaration": "public protocol PredictionRecordable: FritzPredictable", "key.parsed_scope.end": 40, "key.parsed_scope.start": 15, "key.runtime_name": "_TtP4main20PredictionRecordable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype AnnotationRepresentation : <Type usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</Type> where <Type usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</Type>.PredictionInput == <Type usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</Type>.AnnotationRepresentation.Source</Declaration>", "key.doc.column": 18, "key.doc.comment": "Annotation Representation can be different than the `PredictionResult` type.\nMore processing may happen for the `PredictionResult` to represent an annotation.\nFor example, the `FritzVisionPosePredictor` returns a `PoseResult` type; however, the pose\ncan look different depending on different thresholds passed to the pose result.", "key.doc.declaration": "associatedtype AnnotationRepresentation : FritzManagedModel.AnnotationRepresentable where Self.PredictionInput == Self.AnnotationRepresentation.Source", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift\" line=\"21\" column=\"18\"><Name>AnnotationRepresentation</Name><USR>s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa</USR><Declaration>associatedtype AnnotationRepresentation : FritzManagedModel.AnnotationRepresentable where Self.PredictionInput == Self.AnnotationRepresentation.Source</Declaration><CommentParts><Abstract><Para>Annotation Representation can be different than the <codeVoice>PredictionResult</codeVoice> type. More processing may happen for the <codeVoice>PredictionResult</codeVoice> to represent an annotation. For example, the <codeVoice>FritzVisionPosePredictor</codeVoice> returns a <codeVoice>PoseResult</codeVoice> type; however, the pose can look different depending on different thresholds passed to the pose result.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "AnnotationRepresentation", "key.doc.type": "Other", "key.doclength": 352, "key.docoffset": 425, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>AnnotationRepresentation</decl.name> : <ref.protocol usr=\"s:17FritzManagedModel23AnnotationRepresentableP\">AnnotationRepresentable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</ref.generic_type_param>.PredictionInput == <ref.generic_type_param usr=\"s:11FritzVision20PredictionRecordableP4Selfxmfp\">Self</ref.generic_type_param>.AnnotationRepresentation.Source</decl.generic_type_requirement></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 187, "key.name": "AnnotationRepresentation", "key.namelength": 24, "key.nameoffset": 794, "key.offset": 779, "key.parsed_declaration": "associatedtype AnnotationRepresentation: AnnotationRepresentable", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "Self.AnnotationRepresentation.Type", "key.typeusr": "$s24AnnotationRepresentation11FritzVision20PredictionRecordablePQzmD", "key.usr": "s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 995, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "model", "key.namelength": 5, "key.nameoffset": 974, "key.offset": 970, "key.parsed_declaration": "var model: FritzMLModel", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "FritzMLModel", "key.typeusr": "$s17FritzManagedModel0A7MLModelCD", "key.usr": "s:11FritzVision20PredictionRecordableP5model0A12ManagedModel0A7MLModelCvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func record(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, predicted predictedRepresentation: <Type usr=\"s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa\">AnnotationRepresentation</Type>, modified modifiedRepresentation: <Type usr=\"s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa\">AnnotationRepresentation</Type>?) -&gt; <Type usr=\"s:9FritzCore12SessionEventV\">SessionEvent</Type>?</Declaration>", "key.doc.column": 8, "key.doc.comment": "Reports the results of a prediction to Fritz API used for collecting\ndiagnostic data on model predictions.\n\n- Parameters:\n  - input: Prediction input.\n  - predictedRepresentation: Results from model prediction (after postprocessing from result class has\n  been applied).\n  - modifiedRepresentation: Optional user-modified results from predictions.", "key.doc.declaration": "func record(_ input: PredictionInput, predicted predictedRepresentation: AnnotationRepresentation, modified modifiedRepresentation: AnnotationRepresentation?) -> SessionEvent?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift\" line=\"35\" column=\"8\"><Name>record(_:predicted:modified:)</Name><USR>s:11FritzVision20PredictionRecordableP6record_9predicted8modified0A4Core12SessionEventVSg0C5InputQz_24AnnotationRepresentationQzANSgtF</USR><Declaration>func record(_ input: PredictionInput, predicted predictedRepresentation: AnnotationRepresentation, modified modifiedRepresentation: AnnotationRepresentation?) -&gt; SessionEvent?</Declaration><CommentParts><Abstract><Para>Reports the results of a prediction to Fritz API used for collecting diagnostic data on model predictions.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Prediction input.</Para></Discussion></Parameter><Parameter><Name>predictedRepresentation</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Results from model prediction (after postprocessing from result class has been applied).</Para></Discussion></Parameter><Parameter><Name>modifiedRepresentation</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Optional user-modified results from predictions.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 35, "key.doc.name": "record(_:predicted:modified:)", "key.doc.parameters": [{"discussion": [{"Para": "Prediction input."}], "name": "input"}, {"discussion": [{"Para": "Results from model prediction (after postprocessing from result class has been applied)."}], "name": "predictedRepresentation"}, {"discussion": [{"Para": "Optional user-modified results from predictions."}], "name": "modifiedRepresentation"}], "key.doc.type": "Function", "key.doclength": 393, "key.docoffset": 1005, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>record</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>predicted</decl.var.parameter.argument_label> <decl.var.parameter.name>predictedRepresentation</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa\">AnnotationRepresentation</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modified</decl.var.parameter.argument_label> <decl.var.parameter.name>modifiedRepresentation</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision20PredictionRecordableP24AnnotationRepresentationQa\">AnnotationRepresentation</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:9FritzCore12SessionEventV\">SessionEvent</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 191, "key.name": "record(_:predicted:modified:)", "key.namelength": 169, "key.nameoffset": 1405, "key.offset": 1400, "key.parsed_declaration": "func record(", "key.parsed_scope.end": 35, "key.parsed_scope.start": 35, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision20PredictionRecordablePAAE6record_9predicted8modified0A4Core12SessionEventVSg0C5InputQz_24AnnotationRepresentationQzANSgtF\">record(_: PredictionInput, predicted: AnnotationRepresentation, modified: AnnotationRepresentation? = nil) -&gt; SessionEvent?</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : PredictionRecordable> (Self) -> (Self.PredictionInput, Self.AnnotationRepresentation, Self.AnnotationRepresentation?) -> SessionEvent?", "key.typeusr": "$s_9predicted8modified9FritzCore12SessionEventVSg15PredictionInputQz_24AnnotationRepresentationQzAJSgtcD", "key.usr": "s:11FritzVision20PredictionRecordableP6record_9predicted8modified0A4Core12SessionEventVSg0C5InputQz_24AnnotationRepresentationQzANSgtF"}], "key.typename": "PredictionRecordable.Protocol", "key.typeusr": "$s11FritzVision20PredictionRecordable_pmD", "key.usr": "s:11FritzVision20PredictionRecordableP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PredictionImageRecordable : <Type usr=\"s:11FritzVision20PredictionRecordableP\">PredictionRecordable</Type> where <Type usr=\"s:11FritzVision25PredictionImageRecordableP4Selfxmfp\">Self</Type>.PredictionInput == <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2356}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2332}], "key.bodylength": 55, "key.bodyoffset": 2479, "key.doc.column": 17, "key.doc.comment": "Adds functionality to report annotations for models with a `FritzVisionImage` input.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol PredictionImageRecordable : FritzVision.PredictionRecordable where Self.PredictionInput == FritzVision.FritzVisionImage", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift\" line=\"70\" column=\"17\"><Name>PredictionImageRecordable</Name><USR>s:11FritzVision25PredictionImageRecordableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol PredictionImageRecordable : FritzVision.PredictionRecordable where Self.PredictionInput == FritzVision.FritzVisionImage</Declaration><CommentParts><Abstract><Para>Adds functionality to report annotations for models with a <codeVoice>FritzVisionImage</codeVoice> input.</Para></Abstract></CommentParts></Class>", "key.doc.line": 70, "key.doc.name": "PredictionImageRecordable", "key.doc.type": "Class", "key.doclength": 89, "key.docoffset": 2243, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 20, "key.offset": 2399}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PredictionImageRecordable</decl.name> : <ref.protocol usr=\"s:11FritzVision20PredictionRecordableP\">PredictionRecordable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision25PredictionImageRecordableP4Selfxmfp\">Self</ref.generic_type_param>.PredictionInput == <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.generic_type_requirement></decl.protocol>", "key.inheritedtypes": [{"key.name": "PredictionRecordable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 172, "key.name": "PredictionImageRecordable", "key.namelength": 25, "key.nameoffset": 2372, "key.offset": 2363, "key.parsed_declaration": "public protocol PredictionImageRecordable: PredictionRecordable\nwhere AnnotationRepresentation.Source == FritzVisionImage", "key.parsed_scope.end": 75, "key.parsed_scope.start": 70, "key.runtime_name": "_TtP4main25PredictionImageRecordable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/AnnotatedPredictions/PredictionRecordable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 49, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 2498, "key.offset": 2483, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "associatedtype PredictionInput = FritzVisionImage", "key.parsed_scope.end": 73, "key.parsed_scope.start": 73, "key.typename": "Self.PredictionInput.Type", "key.typeusr": "$s15PredictionInput11FritzVision0A15ImageRecordablePQzmD", "key.usr": "s:11FritzVision25PredictionImageRecordableP0C5InputQa"}], "key.typename": "PredictionImageRecordable.Protocol", "key.typeusr": "$s11FritzVision25PredictionImageRecordable_pmD", "key.usr": "s:11FritzVision25PredictionImageRecordableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/CoreMLImagePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1352, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/CoreMLOrVisionFrameworkPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1840, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/CoreMLPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1356, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1402, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol DownloadableModel : <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 218}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 194}], "key.bodylength": 255, "key.bodyoffset": 280, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 253}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>DownloadableModel</decl.name> : <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzMLModelInitializable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 311, "key.name": "DownloadableModel", "key.namelength": 17, "key.nameoffset": 234, "key.offset": 225, "key.parsed_declaration": "public protocol DownloadableModel: FritzMLModelInitializable", "key.parsed_scope.end": 21, "key.parsed_scope.start": 12, "key.runtime_name": "_TtP4main17DownloadableModel_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var modelConfig: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 333, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelConfig</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzModelConfiguration\">FritzModelConfiguration</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 55, "key.name": "modelConfig", "key.namelength": 11, "key.nameoffset": 295, "key.offset": 284, "key.parsed_declaration": "static var modelConfig: FritzModelConfiguration", "key.parsed_scope.end": 14, "key.parsed_scope.start": 14, "key.typename": "FritzModelConfiguration", "key.typeusr": "$s17FritzManagedModel0aC13ConfigurationCD", "key.usr": "s:11FritzVision17DownloadableModelP11modelConfig0a7ManagedD00aD13ConfigurationCvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 387, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 50, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 354, "key.offset": 343, "key.parsed_declaration": "static var managedModel: FritzManagedModel", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision17DownloadableModelP07managedD00a7ManagedD0AECvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var wifiRequiredForModelDownload: <Type usr=\"s:Sb\">Bool</Type> { get set }</Declaration>", "key.bodylength": 9, "key.bodyoffset": 444, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>wifiRequiredForModelDownload</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 57, "key.name": "wifiRequiredForModelDownload", "key.namelength": 28, "key.nameoffset": 408, "key.offset": 397, "key.parsed_declaration": "static var wifiRequiredForModelDownload: Bool", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision17DownloadableModelP015wifiRequiredForD8DownloadSbvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static func fetchModel(completionHandler: @escaping (<Type usr=\"s:11FritzVision17DownloadableModelP4Selfxmfp\">Self</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/DownloadableModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>fetchModel</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>completionHandler</decl.var.parameter.argument_label>: <decl.var.parameter.type><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@escaping</syntaxtype.attribute.name></syntaxtype.attribute.builtin> (<decl.var.parameter><decl.var.parameter.type><ref.generic_type_param usr=\"s:11FritzVision17DownloadableModelP4Selfxmfp\">Self</ref.generic_type_param>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 76, "key.name": "fetchModel(completionHandler:)", "key.namelength": 64, "key.nameoffset": 470, "key.offset": 458, "key.parsed_declaration": "static func fetchModel(completionHandler: @escaping (Self?, Error?) -> Void)", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.substructure": [], "key.typename": "<Self where Self : DownloadableModel> (Self.Type) -> (@escaping (Self?, Error?) -> ()) -> ()", "key.typeusr": "$s17completionHandleryyxSg_s5Error_pSgtc_tcD", "key.usr": "s:11FritzVision17DownloadableModelP05fetchD017completionHandleryyxSg_s5Error_pSgtc_tFZ"}], "key.typename": "DownloadableModel.Protocol", "key.typeusr": "$s11FritzVision17DownloadableModel_pmD", "key.usr": "s:11FritzVision17DownloadableModelP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2335, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public enum FritzVisionModelTagError : <Type usr=\"s:s5ErrorP\">Error</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 201}], "key.bodylength": 68, "key.bodyoffset": 246, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 239}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <decl.name>FritzVisionModelTagError</decl.name> : <ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Error"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 107, "key.name": "FritzVisionModelTagError", "key.namelength": 24, "key.nameoffset": 213, "key.offset": 208, "key.parsed_declaration": "public enum FritzVisionModelTagError: Error", "key.parsed_scope.end": 14, "key.parsed_scope.start": 11, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 41, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 249, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case loadingModelsFailed(errors: [<Type usr=\"s:s5ErrorP\">Error</Type>])</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>loadingModelsFailed</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>errors</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>]</decl.var.parameter.type></decl.var.parameter>)</decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 36, "key.name": "loadingModelsFailed(errors:)", "key.namelength": 36, "key.nameoffset": 254, "key.offset": 254, "key.parsed_declaration": "case loadingModelsFailed(errors: [Error])", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "(FritzVisionModelTagError.Type) -> ([Error]) -> FritzVisionModelTagError", "key.typeusr": "$sy11FritzVision0aB13ModelTagErrorOSays0E0_pG_tcACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO19loadingModelsFailedyACSays0E0_pG_tcACmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 293, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case noModelReturned</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable+ModelTags.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>noModelReturned</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "noModelReturned", "key.namelength": 15, "key.nameoffset": 298, "key.offset": 298, "key.parsed_declaration": "case noModelReturned", "key.parsed_scope.end": 13, "key.parsed_scope.start": 13, "key.typename": "(FritzVisionModelTagError.Type) -> FritzVisionModelTagError", "key.typeusr": "$sy11FritzVision0aB13ModelTagErrorOACmcD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO02noC8ReturnedyA2CmF"}]}], "key.typename": "FritzVisionModelTagError.Type", "key.typeusr": "$s11FritzVision0aB13ModelTagErrorOmD", "key.usr": "s:11FritzVision0aB13ModelTagErrorO"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 482, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzMLModelInitializable</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 287}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 263}], "key.bodylength": 150, "key.bodyoffset": 330, "key.doc.column": 17, "key.doc.comment": "Model that can be initialized purely from various forms of FritzMLModels", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol FritzMLModelInitializable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift\" line=\"13\" column=\"17\"><Name>FritzMLModelInitializable</Name><USR>s:11FritzVision0A20MLModelInitializableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol FritzMLModelInitializable</Declaration><CommentParts><Abstract><Para>Model that can be initialized purely from various forms of FritzMLModels</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzMLModelInitializable", "key.doc.type": "Class", "key.doclength": 77, "key.docoffset": 186, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzMLModelInitializable</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 187, "key.name": "FritzMLModelInitializable", "key.namelength": 25, "key.nameoffset": 303, "key.offset": 294, "key.parsed_declaration": "public protocol FritzMLModelInitializable", "key.parsed_scope.end": 20, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main25FritzMLModelInitializable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 32, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 334, "key.offset": 334, "key.parsed_declaration": "init(model: FritzMLModel) throws", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel015SwiftIdentifiedG0_p_tKcfc\">init(model: SwiftIdentifiedModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzMLModelInitializable> (Self.Type) -> (FritzMLModel) throws -> Self", "key.typeusr": "$s5modelx17FritzManagedModel0B7MLModelC_tKcD", "key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>) throws</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 40, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 370, "key.offset": 370, "key.parsed_declaration": "init(model: SwiftIdentifiedModel) throws", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc\">init(model: FritzMLModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzMLModelInitializable> (Self.Type) -> (SwiftIdentifiedModel) throws -> Self", "key.typeusr": "$s5modelx17FritzManagedModel015SwiftIdentifiedD0_p_tKcD", "key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel015SwiftIdentifiedG0_p_tKcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>) throws</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzMLModelInitializable.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 65, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 414, "key.offset": 414, "key.parsed_declaration": "init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc\">init(model: FritzMLModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel015SwiftIdentifiedG0_p_tKcfc\">init(model: SwiftIdentifiedModel) throws</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzMLModelInitializable> (Self.Type) -> (FritzMLModel, FritzManagedModel) throws -> Self", "key.typeusr": "$s5model12managedModelx012FritzManagedC00D7MLModelC_A2CCtKcD", "key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.typename": "FritzMLModelInitializable.Protocol", "key.typeusr": "$s11FritzVision0A20MLModelInitializable_pmD", "key.usr": "s:11FritzVision0A20MLModelInitializableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 470, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzManagedModelType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 307}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 283}], "key.bodylength": 122, "key.bodyoffset": 346, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzManagedModelType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 155, "key.name": "FritzManagedModelType", "key.namelength": 21, "key.nameoffset": 323, "key.offset": 314, "key.parsed_declaration": "public protocol FritzManagedModelType", "key.parsed_scope.end": 25, "key.parsed_scope.start": 18, "key.runtime_name": "_TtP4main21FritzManagedModelType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 387, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 43, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 354, "key.offset": 350, "key.parsed_declaration": "var managedModel: FritzManagedModel", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var metadata: [<Type usr=\"s:SS\">String</Type> : <Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 430, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>metadata</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct> : <ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "metadata", "key.namelength": 8, "key.nameoffset": 401, "key.offset": 397, "key.parsed_declaration": "var metadata: [String: String]?", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "[String : String]?", "key.typeusr": "$sSDyS2SGSgD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP8metadataSDyS2SGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var tags: [<Type usr=\"s:SS\">String</Type>]? { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 461, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>tags</decl.name>: <decl.var.type>[<ref.struct usr=\"s:SS\">String</ref.struct>]?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "tags", "key.namelength": 4, "key.nameoffset": 444, "key.offset": 440, "key.parsed_declaration": "var tags: [String]?", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "[String]?", "key.typeusr": "$sSaySSGSgD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP4tagsSaySSGSgvp"}], "key.typename": "FritzManagedModelType.Protocol", "key.typeusr": "$s11FritzVision0A16ManagedModelType_pmD", "key.usr": "s:11FritzVision0A16ManagedModelTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 544, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictorOptionType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 185}], "key.bodylength": 10, "key.bodyoffset": 227, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictorOptionType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 46, "key.name": "FritzPredictorOptionType", "key.namelength": 24, "key.nameoffset": 201, "key.offset": 192, "key.parsed_declaration": "public protocol FritzPredictorOptionType", "key.parsed_scope.end": 13, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main24FritzPredictorOptionType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init()</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 6, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 230, "key.offset": 230, "key.parsed_declaration": "init()", "key.parsed_scope.end": 12, "key.parsed_scope.start": 12, "key.typename": "<Self where Self : FritzPredictorOptionType> (Self.Type) -> () -> Self", "key.typeusr": "$sxycD", "key.usr": "s:11FritzVision0A19PredictorOptionTypePxycfc"}], "key.typename": "FritzPredictorOptionType.Protocol", "key.typeusr": "$s11FritzVision0A19PredictorOptionType_pmD", "key.usr": "s:11FritzVision0A19PredictorOptionTypeP"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzImageOptions : <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 280}], "key.bodylength": 201, "key.bodyoffset": 341, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 24, "key.offset": 315}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzImageOptions</decl.name> : <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictorOptionType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 256, "key.name": "FritzImageOptions", "key.namelength": 17, "key.nameoffset": 296, "key.offset": 287, "key.parsed_declaration": "public protocol FritzImageOptions: FritzPredictorOptionType", "key.parsed_scope.end": 25, "key.parsed_scope.start": 16, "key.runtime_name": "_TtP4main17FritzImageOptions_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 385, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 46, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 356, "key.offset": 345, "key.parsed_declaration": "static var defaults: FritzImageOptions", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 449, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 60, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 399, "key.offset": 395, "key.parsed_declaration": "var imageCropAndScaleOption: FritzVisionCropAndScale", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 492, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 463, "key.offset": 459, "key.parsed_declaration": "var forceCoreMLPrediction: Bool", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type> { get }</Declaration>", "key.bodylength": 5, "key.bodyoffset": 535, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzModelOptions.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 506, "key.offset": 502, "key.parsed_declaration": "var forceVisionPrediction: Bool", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.typename": "FritzImageOptions.Protocol", "key.typeusr": "$s11FritzVision0A12ImageOptions_pmD", "key.usr": "s:11FritzVision0A12ImageOptionsP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1782, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictable : <Type usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 472}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 448}], "key.bodylength": 392, "key.bodyoffset": 529, "key.doc.comment": "Public protocol exposing main interface for Fritz predictors.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 21, "key.offset": 506}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictable</decl.name> : <ref.protocol usr=\"s:11FritzVision0A16ManagedModelTypeP\">FritzManagedModelType</ref.protocol></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzManagedModelType"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 443, "key.name": "FritzPredictable", "key.namelength": 16, "key.nameoffset": 488, "key.offset": 479, "key.parsed_declaration": "public protocol FritzPredictable: FritzManagedModelType", "key.parsed_scope.end": 28, "key.parsed_scope.start": 15, "key.runtime_name": "_TtP4main16FritzPredictable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionInput : <Type usr=\"s:11FritzVision0A15PredictionInputP\">FritzPredictionInput</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionInput</decl.name> : <ref.protocol usr=\"s:11FritzVision0A15PredictionInputP\">FritzPredictionInput</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 52, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 548, "key.offset": 533, "key.parsed_declaration": "associatedtype PredictionInput: FritzPredictionInput", "key.parsed_scope.end": 17, "key.parsed_scope.start": 17, "key.typename": "Self.PredictionInput.Type", "key.typeusr": "$s15PredictionInput11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype ModelOptions : <Type usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>ModelOptions</decl.name> : <ref.protocol usr=\"s:11FritzVision0A19PredictorOptionTypeP\">FritzPredictorOptionType</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 603, "key.offset": 588, "key.parsed_declaration": "associatedtype ModelOptions: FritzPredictorOptionType", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "Self.ModelOptions.Type", "key.typeusr": "$s12ModelOptions11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>associatedtype PredictionResult : <Type usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.associatedtype><syntaxtype.keyword>associatedtype</syntaxtype.keyword> <decl.name>PredictionResult</decl.name> : <ref.protocol usr=\"s:11FritzVision0A16PredictionResultP\">FritzPredictionResult</ref.protocol></decl.associatedtype>", "key.kind": "source.lang.swift.decl.associatedtype", "key.length": 54, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 659, "key.offset": 644, "key.parsed_declaration": "associatedtype PredictionResult: FritzPredictionResult", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "Self.PredictionResult.Type", "key.typeusr": "$s16PredictionResult11FritzVision0C11PredictablePQzmD", "key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 126, "key.name": "predict(_:options:completion:)", "key.namelength": 121, "key.nameoffset": 707, "key.offset": 702, "key.parsed_declaration": "func predict(", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions) throws -&gt; PredictionResult</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzPredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony15PredictionInputQz_12ModelOptionsQzy0C6ResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>) throws -&gt; <Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword> -&gt; <decl.function.returntype><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "predict(_:options:)", "key.namelength": 56, "key.nameoffset": 837, "key.offset": 832, "key.parsed_declaration": "func predict(_ input: PredictionInput, options: ModelOptions) throws -> PredictionResult", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF\">predict(_:options:completion:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzPredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions) throws -> Self.PredictionResult", "key.typeusr": "$s_7options16PredictionResultQz0B5InputQz_12ModelOptionsQztKcD", "key.usr": "s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF"}], "key.typename": "FritzPredictable.Protocol", "key.typeusr": "$s11FritzVision0A11Predictable_pmD", "key.usr": "s:11FritzVision0A11PredictableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictionInput.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 312, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictionInput : AnyObject</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 188}], "key.bodylength": 0, "key.bodyoffset": 233, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 5, "key.offset": 226}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictionInput.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictionInput</decl.name> : AnyObject</decl.protocol>", "key.inheritedtypes": [{"key.name": "class"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 39, "key.name": "FritzPredictionInput", "key.namelength": 20, "key.nameoffset": 204, "key.offset": 195, "key.parsed_declaration": "public protocol FritzPredictionInput: class", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main20FritzPredictionInput_", "key.typename": "FritzPredictionInput.Protocol", "key.typeusr": "$s11FritzVision0A15PredictionInput_pmD", "key.usr": "s:11FritzVision0A15PredictionInputP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictionResult.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 385, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzPredictionResult</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 189}], "key.bodylength": 0, "key.bodyoffset": 228, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzPredictionResult.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzPredictionResult</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 33, "key.name": "FritzPredictionResult", "key.namelength": 21, "key.nameoffset": 205, "key.offset": 196, "key.parsed_declaration": "public protocol FritzPredictionResult", "key.parsed_scope.end": 11, "key.parsed_scope.start": 11, "key.runtime_name": "_TtP4main21FritzPredictionResult_", "key.typename": "FritzPredictionResult.Protocol", "key.typeusr": "$s11FritzVision0A16PredictionResult_pmD", "key.usr": "s:11FritzVision0A16PredictionResultP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 529, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol FritzVisionImagePredictable : <Type usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</Type> where <Type usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</Type>.ModelOptions : <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type>, <Type usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</Type>.PredictionInput : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 260}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 236}], "key.bodylength": 131, "key.bodyoffset": 396, "key.doc.column": 17, "key.doc.comment": "Able to run predictions on a FritzVisionImage", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol FritzVisionImagePredictable : FritzVision.FritzPredictable where Self.ModelOptions : FritzVision.FritzImageOptions, Self.PredictionInput : FritzVision.FritzVisionImage", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift\" line=\"13\" column=\"17\"><Name>FritzVisionImagePredictable</Name><USR>s:11FritzVision0aB16ImagePredictableP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol FritzVisionImagePredictable : FritzVision.FritzPredictable where Self.ModelOptions : FritzVision.FritzImageOptions, Self.PredictionInput : FritzVision.FritzVisionImage</Declaration><CommentParts><Abstract><Para>Able to run predictions on a FritzVisionImage</Para></Abstract></CommentParts></Class>", "key.doc.line": 13, "key.doc.name": "FritzVisionImagePredictable", "key.doc.type": "Class", "key.doclength": 50, "key.docoffset": 186, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 16, "key.offset": 305}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>FritzVisionImagePredictable</decl.name> : <ref.protocol usr=\"s:11FritzVision0A11PredictableP\">FritzPredictable</ref.protocol> <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</ref.generic_type_param>.ModelOptions : <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.generic_type_requirement>, <decl.generic_type_requirement><ref.generic_type_param usr=\"s:11FritzVision0aB16ImagePredictableP4Selfxmfp\">Self</ref.generic_type_param>.PredictionInput : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.generic_type_requirement></decl.protocol>", "key.inheritedtypes": [{"key.name": "FritzPredictable"}], "key.kind": "source.lang.swift.decl.protocol", "key.length": 261, "key.name": "FritzVisionImagePredictable", "key.namelength": 27, "key.nameoffset": 276, "key.offset": 267, "key.parsed_declaration": "public protocol FritzVisionImagePredictable: FritzPredictable\nwhere PredictionInput: FritzVisionImage, ModelOptions: FritzImageOptions", "key.parsed_scope.end": 21, "key.parsed_scope.start": 13, "key.runtime_name": "_TtP4main27FritzVisionImagePredictable_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>func predict(_ input: <Type usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</Type>, options: <Type usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</Type>, completion: (<Type usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/FritzVisionImagePredictable.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP15PredictionInputQa\">PredictionInput</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP12ModelOptionsQa\">ModelOptions</ref.associatedtype></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.associatedtype usr=\"s:11FritzVision0A11PredictableP16PredictionResultQa\">PredictionResult</ref.associatedtype>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 126, "key.name": "predict(_:options:completion:)", "key.namelength": 121, "key.nameoffset": 405, "key.offset": 400, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "func predict(", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictableP7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions) throws -&gt; PredictionResult</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"s:11FritzVision0A11PredictablePAAE7predict_7options16PredictionResultQz0F5InputQz_12ModelOptionsQztKF\">predict(_: PredictionInput, options: ModelOptions = .init()) throws -&gt; PredictionResult</RelatedName>"}], "key.substructure": [], "key.typename": "<Self where Self : FritzVisionImagePredictable> (Self) -> (Self.PredictionInput, Self.ModelOptions, (Self.PredictionResult?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony15PredictionInputQz_12ModelOptionsQzy0C6ResultQzSg_s5Error_pSgtXEtcD", "key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}], "key.typename": "FritzVisionImagePredictable.Protocol", "key.typeusr": "$s11FritzVision0aB16ImagePredictable_pmD", "key.usr": "s:11FritzVision0aB16ImagePredictableP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/PackagedModelType.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 373, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public protocol PackagedModelType</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 324}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 300}], "key.bodylength": 12, "key.bodyoffset": 359, "key.doc.column": 17, "key.doc.comment": "The methods adopted by the object used to instantiate a predictor that\nincludes a model in the app bundle.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic protocol PackagedModelType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/PackagedModelType.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/PackagedModelType.swift\" line=\"14\" column=\"17\"><Name>PackagedModelType</Name><USR>s:11FritzVision17PackagedModelTypeP</USR><Declaration>@available(iOS 11.0, *)\npublic protocol PackagedModelType</Declaration><CommentParts><Abstract><Para>The methods adopted by the object used to instantiate a predictor that includes a model in the app bundle.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "PackagedModelType", "key.doc.type": "Class", "key.doclength": 115, "key.docoffset": 185, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/PackagedModelType.swift", "key.fully_annotated_decl": "<decl.protocol><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>protocol</syntaxtype.keyword> <decl.name>PackagedModelType</decl.name></decl.protocol>", "key.kind": "source.lang.swift.decl.protocol", "key.length": 41, "key.name": "PackagedModelType", "key.namelength": 17, "key.nameoffset": 340, "key.offset": 331, "key.parsed_declaration": "public protocol PackagedModelType", "key.parsed_scope.end": 18, "key.parsed_scope.start": 14, "key.runtime_name": "_TtP4main17PackagedModelType_", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>init()</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/PackagedModelType.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 6, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 363, "key.offset": 363, "key.parsed_declaration": "init()", "key.parsed_scope.end": 16, "key.parsed_scope.start": 16, "key.typename": "<Self where Self : PackagedModelType> (Self.Type) -> () -> Self", "key.typeusr": "$sxycD", "key.usr": "s:11FritzVision17PackagedModelTypePxycfc"}], "key.typename": "PackagedModelType.Protocol", "key.typeusr": "$s11FritzVision17PackagedModelType_pmD", "key.usr": "s:11FritzVision17PackagedModelTypeP"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/Protocols/VisionFrameworkPredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2413, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 15042, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(StyleOutputDimensions) public class StyleOutputDimensions : <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 302}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 28, "key.offset": 273}, {"key.attribute": "source.decl.attribute.available", "key.length": 61, "key.offset": 211}], "key.bodylength": 0, "key.bodyoffset": 363, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 338}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(StyleOutputDimensions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>StyleOutputDimensions</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FlexibleModelDimensions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 55, "key.name": "StyleOutputDimensions", "key.namelength": 21, "key.nameoffset": 315, "key.offset": 309, "key.parsed_declaration": "public class StyleOutputDimensions: FlexibleModelDimensions", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.runtime_name": "StyleOutputDimensions", "key.typename": "StyleOutputDimensions.Type", "key.typeusr": "$s11FritzVision21StyleOutputDimensionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)StyleOutputDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FlexibleModelDimensions) public class FlexibleModelDimensions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 536}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 366}], "key.bodylength": 326, "key.bodyoffset": 584, "key.doc.comment": "Specify dimensions for how to run flexible models. Calling `init` with no arguments will cause the model to run on original file size.", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 574}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FlexibleModelDimensions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FlexibleModelDimensions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 368, "key.name": "FlexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 549, "key.offset": 543, "key.parsed_declaration": "public class FlexibleModelDimensions: NSObject", "key.parsed_scope.end": 39, "key.parsed_scope.start": 19, "key.runtime_name": "FlexibleModelDimensions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let size: <Type usr=\"c:@S@CGSize\">CGSize</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 588}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>size</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 17, "key.name": "size", "key.namelength": 4, "key.nameoffset": 599, "key.offset": 595, "key.parsed_declaration": "public let size: CGSize?", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "CGSize?", "key.typeusr": "$sSo6CGSizeVSgD", "key.usr": "s:11FritzVision23FlexibleModelDimensionsC4sizeSo6CGSizeVSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(init) override public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 640}, {"key.attribute": "source.decl.attribute.override", "key.length": 8, "key.offset": 631}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 11, "key.offset": 617}], "key.bodylength": 40, "key.bodyoffset": 655, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(init)</syntaxtype.attribute.builtin> <syntaxtype.keyword>override</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 49, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 647, "key.offset": 647, "key.overrides": [{"key.usr": "c:objc(cs)NSObject(im)init"}], "key.parsed_declaration": "override public init()", "key.parsed_scope.end": 28, "key.parsed_scope.start": 25, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> () -> FlexibleModelDimensions", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCycD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithSize:) public init(size: <Type usr=\"c:@S@CGSize\">CGSize</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 723}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 20, "key.offset": 700}], "key.bodylength": 24, "key.bodyoffset": 750, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithSize:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>size</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 45, "key.name": "init(size:)", "key.namelength": 18, "key.nameoffset": 730, "key.offset": 730, "key.parsed_declaration": "public init(size: CGSize)", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:\">init(width:height:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (CGSize) -> FlexibleModelDimensions", "key.typeusr": "$s4size11FritzVision23FlexibleModelDimensionsCSo6CGSizeV_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithWidth:withHeight:) public init(width: <Type usr=\"s:Si\">Int</Type>, height: <Type usr=\"s:Si\">Int</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 814}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 779}], "key.bodylength": 56, "key.bodyoffset": 852, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithWidth:withHeight:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>width</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>height</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 88, "key.name": "init(width:height:)", "key.namelength": 29, "key.nameoffset": 821, "key.offset": 821, "key.parsed_declaration": "public init(width: Int, height: Int)", "key.parsed_scope.end": 38, "key.parsed_scope.start": 36, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)init\">init()</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithSize:\">init(size:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FlexibleModelDimensions.Type) -> (Int, Int) -> FlexibleModelDimensions", "key.typeusr": "$s5width6height11FritzVision23FlexibleModelDimensionsCSi_SitcD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions(im)initWithWidth:withHeight:"}], "key.typename": "FlexibleModelDimensions.Type", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FlexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStyleModelOptions) public final class FritzVisionStyleModelOptions : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.final", "key.length": 5, "key.offset": 1518}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1511}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 35, "key.offset": 1475}], "key.bodylength": 1000, "key.bodyoffset": 1589, "key.doc.column": 20, "key.doc.comment": "Options for running style transfer models.", "key.doc.declaration": "@objc(FritzVisionStyleModelOptions) public final class FritzVisionStyleModelOptions : NSObject, FritzImageOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"52\" column=\"20\"><Name>FritzVisionStyleModelOptions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions</USR><Declaration>@objc(FritzVisionStyleModelOptions) public final class FritzVisionStyleModelOptions : NSObject, FritzImageOptions</Declaration><CommentParts><Abstract><Para>Options for running style transfer models.</Para></Abstract></CommentParts></Class>", "key.doc.line": 52, "key.doc.name": "FritzVisionStyleModelOptions", "key.doc.type": "Class", "key.doclength": 47, "key.docoffset": 1428, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1560}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 17, "key.offset": 1570}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStyleModelOptions)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>final</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModelOptions</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "FritzImageOptions"}], "key.kind": "source.lang.swift.decl.class", "key.length": 1066, "key.name": "FritzVisionStyleModelOptions", "key.namelength": 28, "key.nameoffset": 1530, "key.offset": 1524, "key.parsed_declaration": "public final class FritzVisionStyleModelOptions: NSObject, FritzImageOptions", "key.parsed_scope.end": 73, "key.parsed_scope.start": 52, "key.runtime_name": "FritzVisionStyleModelOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var imageCropAndScaleOption: <Type usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1657}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1651}], "key.doc.column": 20, "key.doc.comment": "Crop and scale option. Default option is .scaleFit.", "key.doc.declaration": "@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"55\" column=\"20\"><Name>imageCropAndScaleOption</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption</USR><Declaration>@objc public var imageCropAndScaleOption: FritzVision.FritzVisionCropAndScale</Declaration><CommentParts><Abstract><Para>Crop and scale option. Default option is .scaleFit.</Para></Abstract></CommentParts></Other>", "key.doc.line": 55, "key.doc.name": "imageCropAndScaleOption", "key.doc.type": "Other", "key.doclength": 56, "key.docoffset": 1593, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>imageCropAndScaleOption</decl.name>: <decl.var.type><ref.enum usr=\"c:@M@FritzVision@E@FritzVisionCropAndScale\">FritzVisionCropAndScale</ref.enum></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 64, "key.name": "imageCropAndScaleOption", "key.namelength": 23, "key.nameoffset": 1668, "key.offset": 1664, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP23imageCropAndScaleOptionAA0abfgH0Ovp"}], "key.parsed_declaration": "@objc public var imageCropAndScaleOption: FritzVisionCropAndScale = .scaleFit", "key.parsed_scope.end": 55, "key.parsed_scope.start": 55, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionCropAndScale", "key.typeusr": "$s11FritzVision0aB12CropAndScaleOD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)imageCropAndScaleOption"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceCoreMLPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1913}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1907}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use Core ML (if supported by model).\nIn iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.", "key.doc.declaration": "@objc public var forceCoreMLPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"59\" column=\"20\"><Name>forceCoreMLPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction</USR><Declaration>@objc public var forceCoreMLPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use Core ML (if supported by model). In iOS 12, scaleFit would incorrectly crop image.  When True (or on iOS 12) model will run using CoreML.</Para></Abstract></CommentParts></Other>", "key.doc.line": 59, "key.doc.name": "forceCoreMLPrediction", "key.doc.type": "Other", "key.doclength": 173, "key.docoffset": 1732, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceCoreMLPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 38, "key.name": "forceCoreMLPrediction", "key.namelength": 21, "key.nameoffset": 1924, "key.offset": 1920, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP21forceCoreMLPredictionSbvp"}], "key.parsed_declaration": "@objc public var forceCoreMLPrediction: Bool = true", "key.parsed_scope.end": 59, "key.parsed_scope.start": 59, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceCoreMLPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var forceVisionPrediction: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2102}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2096}], "key.doc.column": 20, "key.doc.comment": "Force predictions to use the Vision framework (if supported by model).\nIf you are using ARKit, you must set this to true.", "key.doc.declaration": "@objc public var forceVisionPrediction: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"63\" column=\"20\"><Name>forceVisionPrediction</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceVisionPrediction</USR><Declaration>@objc public var forceVisionPrediction: Bool</Declaration><CommentParts><Abstract><Para>Force predictions to use the Vision framework (if supported by model). If you are using ARKit, you must set this to true.</Para></Abstract></CommentParts></Other>", "key.doc.line": 63, "key.doc.name": "forceVisionPrediction", "key.doc.type": "Other", "key.doclength": 132, "key.docoffset": 1962, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>forceVisionPrediction</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "forceVisionPrediction", "key.namelength": 21, "key.nameoffset": 2113, "key.offset": 2109, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP05forceB10PredictionSbvp"}], "key.parsed_declaration": "@objc public var forceVisionPrediction: Bool = false", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)forceVisionPrediction"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var resizeOutputToInputDimensions: <Type usr=\"s:Sb\">Bool</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2218}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2212}], "key.doc.column": 20, "key.doc.comment": "Resize the output to match the FritzVisionImage size.", "key.doc.declaration": "@objc public var resizeOutputToInputDimensions: Bool", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"66\" column=\"20\"><Name>resizeOutputToInputDimensions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)resizeOutputToInputDimensions</USR><Declaration>@objc public var resizeOutputToInputDimensions: Bool</Declaration><CommentParts><Abstract><Para>Resize the output to match the FritzVisionImage size.</Para></Abstract></CommentParts></Other>", "key.doc.line": 66, "key.doc.name": "resizeOutputToInputDimensions", "key.doc.type": "Other", "key.doclength": 58, "key.docoffset": 2152, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>resizeOutputToInputDimensions</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 47, "key.name": "resizeOutputToInputDimensions", "key.namelength": 29, "key.nameoffset": 2229, "key.offset": 2225, "key.parsed_declaration": "@objc public var resizeOutputToInputDimensions: Bool = false", "key.parsed_scope.end": 66, "key.parsed_scope.start": 66, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)resizeOutputToInputDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public var flexibleModelDimensions: <Type usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2427}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 2421}], "key.doc.column": 20, "key.doc.comment": "Sets dimensions of input image for flexible model. Note that setting this to higher resolutions will increase\nmodel processing time.", "key.doc.declaration": "@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"70\" column=\"20\"><Name>flexibleModelDimensions</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)flexibleModelDimensions</USR><Declaration>@objc public var flexibleModelDimensions: FritzVision.FlexibleModelDimensions</Declaration><CommentParts><Abstract><Para>Sets dimensions of input image for flexible model. Note that setting this to higher resolutions will increase model processing time.</Para></Abstract></CommentParts></Other>", "key.doc.line": 70, "key.doc.name": "flexibleModelDimensions", "key.doc.type": "Other", "key.doclength": 143, "key.docoffset": 2276, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flexibleModelDimensions</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FlexibleModelDimensions\">FlexibleModelDimensions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 72, "key.name": "flexibleModelDimensions", "key.namelength": 23, "key.nameoffset": 2438, "key.offset": 2434, "key.parsed_declaration": "@objc public var flexibleModelDimensions: FlexibleModelDimensions = .mediumResolution", "key.parsed_scope.end": 70, "key.parsed_scope.start": 70, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FlexibleModelDimensions", "key.typeusr": "$s11FritzVision23FlexibleModelDimensionsCD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions(py)flexibleModelDimensions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static var defaults: <Type usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2510}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>defaults</decl.name>: <decl.var.type><ref.protocol usr=\"s:11FritzVision0A12ImageOptionsP\">FritzImageOptions</ref.protocol></decl.var.type></decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 71, "key.name": "defaults", "key.namelength": 8, "key.nameoffset": 2528, "key.offset": 2517, "key.overrides": [{"key.usr": "s:11FritzVision0A12ImageOptionsP8defaultsAaB_pvpZ"}], "key.parsed_declaration": "public static var defaults: FritzImageOptions = FritzVisionStyleModelOptions()", "key.parsed_scope.end": 72, "key.parsed_scope.start": 72, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzImageOptions", "key.typeusr": "$s11FritzVision0A12ImageOptions_pD", "key.usr": "s:11FritzVision0aB17StyleModelOptionsC8defaultsAA0a5ImageE0_pvpZ"}], "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionFlexibleStyleModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2778}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2754}, {"key.attribute": "source.decl.attribute.available", "key.length": 63, "key.offset": 2690}], "key.bodylength": 0, "key.bodyoffset": 2849, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 2822}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionFlexibleStyleModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 65, "key.name": "FritzVisionFlexibleStyleModel", "key.namelength": 29, "key.nameoffset": 2791, "key.offset": 2785, "key.parsed_declaration": "public class FritzVisionFlexibleStyleModel: FritzVisionStylePredictor", "key.parsed_scope.end": 82, "key.parsed_scope.start": 82, "key.runtime_name": "_TtC4main29FritzVisionFlexibleStyleModel", "key.typename": "FritzVisionFlexibleStyleModel.Type", "key.typeusr": "$s11FritzVision0aB18FlexibleStyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionFlexibleStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionStyleModel : <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2940}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 2916}, {"key.attribute": "source.decl.attribute.available", "key.length": 63, "key.offset": 2852}], "key.bodylength": 0, "key.bodyoffset": 3003, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 2976}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStyleModel</decl.name> : <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "FritzVisionStylePredictor"}], "key.kind": "source.lang.swift.decl.class", "key.length": 57, "key.name": "FritzVisionStyleModel", "key.namelength": 21, "key.nameoffset": 2953, "key.offset": 2947, "key.parsed_declaration": "public class FritzVisionStyleModel: FritzVisionStylePredictor", "key.parsed_scope.end": 86, "key.parsed_scope.start": 86, "key.runtime_name": "_TtC4main21FritzVisionStyleModel", "key.typename": "FritzVisionStyleModel.Type", "key.typeusr": "$s11FritzVision0aB10StyleModelCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStyleModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionStylePredictor) public class FritzVisionStylePredictor : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type>, <Type usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</Type>, <Type usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3203}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 3170}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 3146}], "key.bodylength": 4517, "key.bodyoffset": 3305, "key.doc.column": 14, "key.doc.comment": "Construct a Flexible Style Transfer model and run on any FritzVisionImage.\nProduces stylized images with customizable output sizes.", "key.doc.declaration": "@available(iOS 11.0, *)\n@objc(FritzVisionStylePredictor) public class FritzVisionStylePredictor : NSObject, CoreMLOrVisionPredictor, FritzMLModelInitializable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"92\" column=\"14\"><Name>FritzVisionStylePredictor</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStylePredictor</USR><Declaration>@available(iOS 11.0, *)\n@objc(FritzVisionStylePredictor) public class FritzVisionStylePredictor : NSObject, CoreMLOrVisionPredictor, FritzMLModelInitializable</Declaration><CommentParts><Abstract><Para>Construct a Flexible Style Transfer model and run on any FritzVisionImage. Produces stylized images with customizable output sizes.</Para></Abstract></CommentParts></Class>", "key.doc.line": 92, "key.doc.name": "FritzVisionStylePredictor", "key.doc.type": "Class", "key.doclength": 140, "key.docoffset": 3006, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 3243}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 23, "key.offset": 3253}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 25, "key.offset": 3278}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionStylePredictor)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionStylePredictor</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class>, <ref.protocol usr=\"s:11FritzVision08CoreMLOrB9PredictorP\">CoreMLOrVisionPredictor</ref.protocol>, <ref.protocol usr=\"s:11FritzVision0A20MLModelInitializableP\">FritzMLModelInitializable</ref.protocol></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}, {"key.name": "CoreMLOrVisionPredictor"}, {"key.name": "FritzMLModelInitializable"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4613, "key.name": "FritzVisionStylePredictor", "key.namelength": 25, "key.nameoffset": 3216, "key.offset": 3210, "key.parsed_declaration": "public class FritzVisionStylePredictor: NSObject, CoreMLOrVisionPredictor, FritzMLModelInitializable", "key.parsed_scope.end": 217, "key.parsed_scope.start": 92, "key.runtime_name": "FritzVisionStylePredictor", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>.PredictionInput = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3309}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class>.<decl.name>PredictionInput</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 44, "key.name": "PredictionInput", "key.namelength": 15, "key.nameoffset": 3326, "key.offset": 3316, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP15PredictionInputQa"}], "key.parsed_declaration": "public typealias PredictionInput = FritzVisionImage", "key.parsed_scope.end": 95, "key.parsed_scope.start": 95, "key.typename": "FritzVisionImage.Type", "key.typeusr": "$s11FritzVision0aB5ImageCmD", "key.usr": "s:11FritzVision0aB14StylePredictorC15PredictionInputa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>.ModelOptions = <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3363}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class>.<decl.name>ModelOptions</decl.name> = <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 53, "key.name": "ModelOptions", "key.namelength": 12, "key.nameoffset": 3380, "key.offset": 3370, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP12ModelOptionsQa"}], "key.parsed_declaration": "public typealias ModelOptions = FritzVisionStyleModelOptions", "key.parsed_scope.end": 96, "key.parsed_scope.start": 96, "key.typename": "FritzVisionStyleModelOptions.Type", "key.typeusr": "$s11FritzVision0aB17StyleModelOptionsCmD", "key.usr": "s:11FritzVision0aB14StylePredictorC12ModelOptionsa"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public typealias <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>.PredictionResult = <Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3426}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.typealias><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>typealias</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class>.<decl.name>PredictionResult</decl.name> = <ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias></decl.typealias>", "key.kind": "source.lang.swift.decl.typealias", "key.length": 42, "key.name": "PredictionResult", "key.namelength": 16, "key.nameoffset": 3443, "key.offset": 3433, "key.overrides": [{"key.usr": "s:11FritzVision0A11PredictableP16PredictionResultQa"}], "key.parsed_declaration": "public typealias PredictionResult = CVPixelBuffer", "key.parsed_scope.end": 97, "key.parsed_scope.start": 97, "key.typename": "CVBuffer.Type", "key.typeusr": "$sSo11CVBufferRefamD", "key.usr": "s:11FritzVision0aB14StylePredictorC16PredictionResulta"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public let managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3568}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 3562}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>managedModel</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 35, "key.name": "managedModel", "key.namelength": 12, "key.nameoffset": 3579, "key.offset": 3575, "key.overrides": [{"key.usr": "s:11FritzVision0A16ManagedModelTypeP07managedD00acD0AECvp"}], "key.parsed_declaration": "@objc public let managedModel: FritzManagedModel", "key.parsed_scope.end": 101, "key.parsed_scope.start": 101, "key.typename": "FritzManagedModel", "key.typeusr": "$s17FritzManagedModelAACD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(py)managedModel"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithIdentifiedModel:) convenience public required init(model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 4670}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4663}, {"key.attribute": "source.decl.attribute.convenience", "key.length": 11, "key.offset": 4651}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 4617}], "key.bodylength": 335, "key.bodyoffset": 4714, "key.doc.column": 31, "key.doc.comment": "Initialize FritzStyleTransferModel with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithIdentifiedModel:) convenience public required init(model: SwiftIdentifiedModel)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"131\" column=\"31\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithIdentifiedModel:</USR><Declaration>@objc(initWithIdentifiedModel:) convenience public required init(model: SwiftIdentifiedModel)</Declaration><CommentParts><Abstract><Para>Initialize FritzStyleTransferModel with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 131, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 137, "key.docoffset": 4478, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithIdentifiedModel:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>convenience</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 371, "key.name": "init(model:)", "key.namelength": 33, "key.nameoffset": 4679, "key.offset": 4679, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel015SwiftIdentifiedG0_p_tKcfc"}], "key.parsed_declaration": "convenience public required init(model: SwiftIdentifiedModel)", "key.parsed_scope.end": 140, "key.parsed_scope.start": 131, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [{"key.annotated_decl": "<Declaration>let error: <Type usr=\"s:11FritzVision0A28StyleModelSpecificationErrorO\">FritzStyleModelSpecificationError</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>error</decl.name>: <decl.var.type><ref.enum usr=\"s:11FritzVision0A28StyleModelSpecificationErrorO\">FritzStyleModelSpecificationError</ref.enum></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 5, "key.name": "error", "key.namelength": 5, "key.nameoffset": 4914, "key.offset": 4914, "key.parsed_declaration": "} catch let error as FritzStyleModelSpecificationError", "key.parsed_scope.end": 135, "key.parsed_scope.start": 135, "key.typename": "FritzStyleModelSpecificationError", "key.typeusr": "$s11FritzVision0A28StyleModelSpecificationErrorOD", "key.usr": "s:11FritzVision0aB14StylePredictorC5modelAC0A12ManagedModel015SwiftIdentifiedG0_p_tcfc5errorL_AA0acG18SpecificationErrorOvp"}], "key.typename": "(FritzVisionStylePredictor.Type) -> (SwiftIdentifiedModel) -> FritzVisionStylePredictor", "key.typeusr": "$s5model11FritzVision0bC14StylePredictorC0B12ManagedModel015SwiftIdentifiedG0_p_tcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithIdentifiedModel:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5241}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 5232}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 5195}], "key.bodylength": 271, "key.bodyoffset": 5282, "key.doc.column": 19, "key.doc.comment": "Initialize FritzVisionStylePredictor with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"147\" column=\"19\"><Name>init(model:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:error:</USR><Declaration>@objc(initWithFritzMLModel:error:) required public init(model: FritzMLModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzVisionStylePredictor with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 147, "key.doc.name": "init(model:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}], "key.doc.type": "Function", "key.doclength": 139, "key.docoffset": 5054, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 306, "key.name": "init(model:)", "key.namelength": 25, "key.nameoffset": 5248, "key.offset": 5248, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5modelx0A12ManagedModel0aC0C_tKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel) throws", "key.parsed_scope.end": 156, "key.parsed_scope.start": 147, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:managedModel:error:\">init(model:managedModel:)</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStylePredictor.Type) -> (FritzMLModel) throws -> FritzVisionStylePredictor", "key.typeusr": "$s5model11FritzVision0bC14StylePredictorC0B12ManagedModel0B7MLModelC_tKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</Type>, managedModel: <Type usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</Type>) throws</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 5808}, {"key.attribute": "source.decl.attribute.required", "key.length": 8, "key.offset": 5799}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 5749}], "key.bodylength": 125, "key.bodyoffset": 5882, "key.doc.column": 19, "key.doc.comment": "Initialize FritzVisionStylePredictor with your own trained style model.\n\n- Parameters:\n  - model: Fritz model to use.\n  - managedModel: FritzManagedModel to use.", "key.doc.declaration": "@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"164\" column=\"19\"><Name>init(model:managedModel:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:managedModel:error:</USR><Declaration>@objc(initWithFritzMLModel:managedModel:error:) required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws</Declaration><CommentParts><Abstract><Para>Initialize FritzVisionStylePredictor with your own trained style model.</Para></Abstract><Parameters><Parameter><Name>model</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Fritz model to use.</Para></Discussion></Parameter><Parameter><Name>managedModel</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzManagedModel to use.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 164, "key.doc.name": "init(model:managedModel:)", "key.doc.parameters": [{"discussion": [{"Para": "Fritz model to use."}], "name": "model"}, {"discussion": [{"Para": "FritzManagedModel to use."}], "name": "managedModel"}], "key.doc.type": "Function", "key.doclength": 189, "key.docoffset": 5558, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(initWithFritzMLModel:managedModel:error:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>required</syntaxtype.keyword> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzMLModel\">FritzMLModel</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>managedModel</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzManagedModel@objc(cs)FritzManagedModel\">FritzManagedModel</ref.class></decl.var.parameter.type></decl.var.parameter>) <syntaxtype.keyword>throws</syntaxtype.keyword></decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 193, "key.name": "init(model:managedModel:)", "key.namelength": 58, "key.nameoffset": 5815, "key.offset": 5815, "key.overrides": [{"key.usr": "s:11FritzVision0A20MLModelInitializableP5model12managedModelx0a7ManagedG00aC0C_A2FCtKcfc"}], "key.parsed_declaration": "required public init(model: FritzMLModel, managedModel: FritzManagedModel) throws", "key.parsed_scope.end": 168, "key.parsed_scope.start": 164, "key.related_decls": [{"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithIdentifiedModel:\">init(model: SwiftIdentifiedModel)</RelatedName>"}, {"key.annotated_decl": "<RelatedName usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:error:\">init(model: FritzMLModel) throws</RelatedName>"}], "key.substructure": [], "key.typename": "(FritzVisionStylePredictor.Type) -> (FritzMLModel, FritzManagedModel) throws -> FritzVisionStylePredictor", "key.typeusr": "$s5model12managedModel11FritzVision0dE14StylePredictorC0d7ManagedC00D7MLModelC_A2FCtKcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)initWithFritzMLModel:managedModel:error:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(predict:options:completion:) public func predict(_ input: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</Type> = .init(), completion: (<Type usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</Type>?, <Type usr=\"s:s5ErrorP\">Error</Type>?) -&gt; <Type usr=\"s:s4Voida\">Void</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 6374}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 34, "key.offset": 6337}], "key.bodylength": 549, "key.bodyoffset": 6533, "key.doc.column": 15, "key.doc.comment": "Run Style Transfer on a FritzVisionImage.\n\n- Parameters:\n  - input: Image or buffer to run model on.\n  - options: Options for model execution.\n  - completion: The block to invoke after the prediction request.\n                Contains a FritzVisionSegmentationResult or error message.", "key.doc.declaration": "@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -> Void)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift\" line=\"178\" column=\"15\"><Name>predict(_:options:completion:)</Name><USR>c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)predict:options:completion:</USR><Declaration>@objc(predict:options:completion:) public func predict(_ input: FritzVisionImage, options: FritzVisionStyleModelOptions = .init(), completion: (CVPixelBuffer?, Error?) -&gt; Void)</Declaration><CommentParts><Abstract><Para>Run Style Transfer on a FritzVisionImage.</Para></Abstract><Parameters><Parameter><Name>input</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Image or buffer to run model on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for model execution.</Para></Discussion></Parameter><Parameter><Name>completion</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>The block to invoke after the prediction request. Contains a FritzVisionSegmentationResult or error message.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 178, "key.doc.name": "predict(_:options:completion:)", "key.doc.parameters": [{"discussion": [{"Para": "Image or buffer to run model on."}], "name": "input"}, {"discussion": [{"Para": "Options for model execution."}], "name": "options"}, {"discussion": [{"Para": "The block to invoke after the prediction request. Contains a FritzVisionSegmentationResult or error message."}], "name": "completion"}], "key.doc.type": "Function", "key.doclength": 323, "key.docoffset": 6012, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVision/StyleTransfer/StylePredictor.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(predict:options:completion:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>predict</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>input</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStyleModelOptions\">FritzVisionStyleModelOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>completion</decl.var.parameter.argument_label>: <decl.var.parameter.type>(<decl.var.parameter><decl.var.parameter.type><ref.typealias usr=\"c:@T@CVPixelBufferRef\">CVPixelBuffer</ref.typealias>?</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.type><ref.protocol usr=\"s:s5ErrorP\">Error</ref.protocol>?</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.typealias usr=\"s:s4Voida\">Void</ref.typealias></decl.function.returntype></decl.var.parameter.type></decl.var.parameter>)</decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 702, "key.name": "predict(_:options:completion:)", "key.namelength": 145, "key.nameoffset": 6386, "key.offset": 6381, "key.overrides": [{"key.usr": "s:11FritzVision0aB16ImagePredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0H6ResultQzSg_s5Error_pSgtXEtF"}, {"key.usr": "s:11FritzVision0A11PredictableP7predict_7options10completiony15PredictionInputQz_12ModelOptionsQzy0G6ResultQzSg_s5Error_pSgtXEtF"}], "key.parsed_declaration": "public func predict(\n  _ input: FritzVisionImage,\n  options: FritzVisionStyleModelOptions = .init(),\n  completion: (CVPixelBuffer?, Error?) -> Void\n)", "key.parsed_scope.end": 196, "key.parsed_scope.start": 178, "key.substructure": [], "key.typename": "(FritzVisionStylePredictor) -> (FritzVisionImage, FritzVisionStyleModelOptions, (CVBuffer?, Error?) -> ()) -> ()", "key.typeusr": "$s_7options10completiony11FritzVision0cD5ImageC_AC0cD17StyleModelOptionsCySo11CVBufferRefaSg_s5Error_pSgtXEtcD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor(im)predict:options:completion:"}], "key.typename": "FritzVisionStylePredictor.Type", "key.typeusr": "$s11FritzVision0aB14StylePredictorCmD", "key.usr": "c:@M@FritzVision@objc(cs)FritzVisionStylePredictor"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModelFast/FritzVisionLabelModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 968, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 806}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 36, "key.offset": 769}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 745}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 711}], "key.bodylength": 106, "key.bodyoffset": 860, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 850}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 154, "key.name": "FritzVisionLabelModelFastObjc", "key.namelength": 29, "key.nameoffset": 819, "key.offset": 813, "key.runtime_name": "FritzVisionLabelModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast\">FritzVisionLabelModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 870}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 864}], "key.bodylength": 42, "key.bodyoffset": 922, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLabelModelFast/FritzVisionLabelModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLabelModelFast\">FritzVisionLabelModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 88, "key.name": "model", "key.namelength": 5, "key.nameoffset": 888, "key.offset": 877, "key.parsed_declaration": "@objc public static var model: FritzVisionLabelModelFast", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionLabelModelFast", "key.typeusr": "$s11FritzVision0aB14LabelModelFastCD", "key.usr": "c:@M@FritzVisionLabelModelFast@objc(cs)FritzVisionLabelModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionLabelModelFast.build/DerivedSources/CoreMLGenerated/imagenet_labeling_mobilenetv2_224x224_5_1568923397/imagenet_labeling_mobilenetv2_224x224_5_1568923397.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7323, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModelFast/FritzVisionObjectModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 902, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 737}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 37, "key.offset": 699}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 675}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 641}], "key.bodylength": 108, "key.bodyoffset": 792, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 782}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 157, "key.name": "FritzVisionObjectModelFastObjc", "key.namelength": 30, "key.nameoffset": 750, "key.offset": 744, "key.runtime_name": "FritzVisionObjectModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast\">FritzVisionObjectModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 802}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 796}], "key.bodylength": 43, "key.bodyoffset": 855, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionObjectModelFast/FritzVisionObjectModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionObjectModelFast\">FritzVisionObjectModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 90, "key.name": "model", "key.namelength": 5, "key.nameoffset": 820, "key.offset": 809, "key.parsed_declaration": "@objc public static var model: FritzVisionObjectModelFast", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionObjectModelFast", "key.typeusr": "$s11FritzVision0aB15ObjectModelFastCD", "key.usr": "c:@M@FritzVisionObjectModelFast@objc(cs)FritzVisionObjectModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionObjectModelFast.build/DerivedSources/CoreMLGenerated/MobileNetV2_SSDLite/MobileNetV2_SSDLite.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7355, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingModels.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2449, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 3198, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(PaintingStyleModel) public class PaintingStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 283}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 259}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 25, "key.offset": 233}], "key.bodylength": 2870, "key.bodyoffset": 326, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 316}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(PaintingStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PaintingStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 2907, "key.name": "PaintingStyleModel", "key.namelength": 18, "key.nameoffset": 296, "key.offset": 290, "key.parsed_declaration": "public class PaintingStyleModel: NSObject", "key.parsed_scope.end": 117, "key.parsed_scope.start": 14, "key.runtime_name": "PaintingStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPaintingStyle) public enum <Type usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)PaintingStyleModel\">PaintingStyleModel</Type>.Style : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 388}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 31, "key.offset": 354}], "key.bodylength": 2377, "key.bodyoffset": 426, "key.doc.column": 15, "key.doc.comment": "Available styles.", "key.doc.declaration": "@objc(FritzVisionPaintingStyle) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift\" line=\"18\" column=\"15\"><Name>Style</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O</USR><Declaration>@objc(FritzVisionPaintingStyle) public enum FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Int, CaseIterable</Declaration><CommentParts><Abstract><Para>Available styles.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "Style", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 330, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 407}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 412}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPaintingStyle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVisionStyleModelPaintings@objc(cs)PaintingStyleModel\">PaintingStyleModel</ref.class>.<decl.name>Style</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "CaseIterable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 2409, "key.name": "Style", "key.namelength": 5, "key.nameoffset": 400, "key.offset": 395, "key.parsed_declaration": "public enum Style: Int, CaseIterable", "key.parsed_scope.end": 104, "key.parsed_scope.start": 18, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 22, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 431, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case bicentennialPrint</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>bicentennialPrint</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 17, "key.name": "bicentennialPrint", "key.namelength": 17, "key.nameoffset": 436, "key.offset": 436, "key.parsed_declaration": "case bicentennialPrint", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O17bicentennialPrintyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 458, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case femmes</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>femmes</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "femmes", "key.namelength": 6, "key.nameoffset": 463, "key.offset": 463, "key.parsed_declaration": "case femmes", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O6femmesyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 474, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case headOfClown</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>headOfClown</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "headOfClown", "key.namelength": 11, "key.nameoffset": 479, "key.offset": 479, "key.parsed_declaration": "case headOfClown", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11headOfClownyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 21, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 495, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case horsesOnSeashore</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>horsesOnSeashore</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 16, "key.name": "horsesOnSeashore", "key.namelength": 16, "key.nameoffset": 500, "key.offset": 500, "key.parsed_declaration": "case horsesOnSeashore", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O16horsesOnSeashoreyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 15, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 521, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case poppyField</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>poppyField</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 10, "key.name": "poppyField", "key.namelength": 10, "key.nameoffset": 526, "key.offset": 526, "key.parsed_declaration": "case poppyField", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O10poppyFieldyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 18, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 541, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case ritmoPlastico</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>ritmoPlastico</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 13, "key.name": "ritmoPlastico", "key.namelength": 13, "key.nameoffset": 546, "key.offset": 546, "key.parsed_declaration": "case ritmoPlastico", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O13ritmoPlasticoyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 16, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 564, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case starryNight</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>starryNight</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 11, "key.name": "starryNight", "key.namelength": 11, "key.nameoffset": 569, "key.offset": 569, "key.parsed_declaration": "case starryNight", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11starryNightyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 585, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case theScream</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theScream</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "theScream", "key.namelength": 9, "key.nameoffset": 590, "key.offset": 590, "key.parsed_declaration": "case theScream", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O9theScreamyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 604, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case theTrial</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>theTrial</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "theTrial", "key.namelength": 8, "key.nameoffset": 609, "key.offset": 609, "key.parsed_declaration": "case theTrial", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(PaintingStyleModel.Style.Type) -> PaintingStyleModel.Style", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OAEmcD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O8theTrialyA2EmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var name: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 623}], "key.bodylength": 523, "key.bodyoffset": 648, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 542, "key.name": "name", "key.namelength": 4, "key.nameoffset": 634, "key.offset": 630, "key.parsed_declaration": "public var name: String", "key.parsed_scope.end": 50, "key.parsed_scope.start": 29, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getFromName(_ name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1178}], "key.bodylength": 557, "key.bodyoffset": 1236, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getFromName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O\">Style</ref.enum>?</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 609, "key.name": "getFromName(_:)", "key.namelength": 27, "key.nameoffset": 1197, "key.offset": 1185, "key.parsed_declaration": "public static func getFromName(_ name: String) -> Style?", "key.parsed_scope.end": 75, "key.parsed_scope.start": 52, "key.substructure": [], "key.typename": "(PaintingStyleModel.Style.Type) -> (String) -> PaintingStyleModel.Style?", "key.typeusr": "$sy30FritzVisionStyleModelPaintings08PaintingcD0C0C0OSgSScD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O11getFromNameyAESgSSFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func build() -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1852}], "key.bodylength": 897, "key.bodyoffset": 1902, "key.doc.column": 17, "key.doc.comment": "Build FritzVisionStylePredictor from style.", "key.doc.declaration": "public func build() -> FritzVisionStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift\" line=\"78\" column=\"17\"><Name>build()</Name><USR>s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abC9PredictorCyF</USR><Declaration>public func build() -&gt; FritzVisionStylePredictor</Declaration><CommentParts><Abstract><Para>Build FritzVisionStylePredictor from style.</Para></Abstract></CommentParts></Function>", "key.doc.line": 78, "key.doc.name": "build()", "key.doc.type": "Function", "key.doclength": 48, "key.docoffset": 1800, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>build</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 941, "key.name": "build()", "key.namelength": 7, "key.nameoffset": 1864, "key.offset": 1859, "key.parsed_declaration": "public func build() -> FritzVisionStylePredictor", "key.parsed_scope.end": 103, "key.parsed_scope.start": 78, "key.substructure": [{"key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>!</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol>!</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1913, "key.offset": 1909, "key.parsed_declaration": "var model: SwiftIdentifiedModel!", "key.parsed_scope.end": 79, "key.parsed_scope.start": 79, "key.typename": "SwiftIdentifiedModel?", "key.typeusr": "$s17FritzManagedModel015SwiftIdentifiedC0_pSgD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abC9PredictorCyF5modelL_0a7ManagedD0015SwiftIdentifiedD0_pSgvp"}], "key.typename": "(PaintingStyleModel.Style) -> () -> FritzVisionStylePredictor", "key.typeusr": "$s11FritzVision0aB14StylePredictorCycD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O5build0aB00abC9PredictorCyF"}], "key.typename": "PaintingStyleModel.Style.Type", "key.typeusr": "$s30FritzVisionStyleModelPaintings08PaintingcD0C0C0OmD", "key.usr": "s:30FritzVisionStyleModelPaintings08PaintingcD0C0C0O"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(allModels) public static func allModels() -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3090}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 3071}], "key.bodylength": 41, "key.bodyoffset": 3153, "key.doc.column": 22, "key.doc.comment": "Returns a list of all initialized style predictors.", "key.doc.declaration": "@objc(allModels) public static func allModels() -> [FritzVisionStylePredictor]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift\" line=\"114\" column=\"22\"><Name>allModels()</Name><USR>c:@M@FritzVisionStyleModelPaintings@objc(cs)PaintingStyleModel(cm)allModels</USR><Declaration>@objc(allModels) public static func allModels() -&gt; [FritzVisionStylePredictor]</Declaration><CommentParts><Abstract><Para>Returns a list of all initialized style predictors.</Para></Abstract></CommentParts></Function>", "key.doc.line": 114, "key.doc.name": "allModels()", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 3013, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPaintings/PaintingStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(allModels)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>allModels</decl.name>() -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class>]</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 98, "key.name": "allModels()", "key.namelength": 11, "key.nameoffset": 3109, "key.offset": 3097, "key.parsed_declaration": "public static func allModels() -> [FritzVisionStylePredictor]", "key.parsed_scope.end": 116, "key.parsed_scope.start": 114, "key.substructure": [], "key.typename": "(PaintingStyleModel.Type) -> () -> [FritzVisionStylePredictor]", "key.typeusr": "$sSay11FritzVision0aB14StylePredictorCGycD", "key.usr": "c:@M@FritzVisionStyleModelPaintings@objc(cs)PaintingStyleModel(cm)allModels"}], "key.typename": "PaintingStyleModel.Type", "key.typeusr": "$s30FritzVisionStyleModelPaintings08PaintingcD0CmD", "key.usr": "c:@M@FritzVisionStyleModelPaintings@objc(cs)PaintingStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/bicentennial_print_512x512_a025_stable_flexible/bicentennial_print_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6829, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/femmes_512x512_a025_stable_flexible/femmes_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6541, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/head_of_clown_512x512_a025_stable_flexible/head_of_clown_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6709, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/horses_on_seashore_512x512_a025_stable_flexible/horses_on_seashore_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6829, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/poppy_field_512x512_a025_stable_flexible/poppy_field_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6661, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/ritmo_plastico_512x512_a025_stable_flexible/ritmo_plastico_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6733, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/starry_night_512x512_a025_stable_flexible/starry_night_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6685, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/the_scream_512x512_a025_stable_flexible/the_scream_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6637, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPaintings.build/DerivedSources/CoreMLGenerated/the_trial_512x512_a025_stable_flexible/the_trial_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6613, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternModels.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4110, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 4380, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(PatternStyleModel) public class PatternStyleModel : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 294}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 270}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 24, "key.offset": 245}], "key.bodylength": 4042, "key.bodyoffset": 336, "key.doc.column": 14, "key.doc.comment": "Enumeration of all available styles.", "key.doc.declaration": "@available(iOS 12.0, *)\n@objc(PatternStyleModel) public class PatternStyleModel : NSObject", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift\" line=\"14\" column=\"14\"><Name>PatternStyleModel</Name><USR>c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel</USR><Declaration>@available(iOS 12.0, *)\n@objc(PatternStyleModel) public class PatternStyleModel : NSObject</Declaration><CommentParts><Abstract><Para>Enumeration of all available styles.</Para></Abstract></CommentParts></Class>", "key.doc.line": 14, "key.doc.name": "PatternStyleModel", "key.doc.type": "Class", "key.doclength": 41, "key.docoffset": 204, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 326}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(PatternStyleModel)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>PatternStyleModel</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 4078, "key.name": "PatternStyleModel", "key.namelength": 17, "key.nameoffset": 307, "key.offset": 301, "key.parsed_declaration": "public class PatternStyleModel: NSObject", "key.parsed_scope.end": 168, "key.parsed_scope.start": 14, "key.runtime_name": "PatternStyleModel", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPatternStyle) public enum <Type usr=\"c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel\">PatternStyleModel</Type>.Style : <Type usr=\"s:Si\">Int</Type>, <Type usr=\"s:s12CaseIterableP\">CaseIterable</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 397}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 30, "key.offset": 364}], "key.bodylength": 3544, "key.bodyoffset": 435, "key.doc.column": 15, "key.doc.comment": "Available styles.", "key.doc.declaration": "@objc(FritzVisionPatternStyle) public enum FritzVisionStyleModelPatterns.PatternStyleModel.Style : Int, CaseIterable", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift\" line=\"18\" column=\"15\"><Name>Style</Name><USR>s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O</USR><Declaration>@objc(FritzVisionPatternStyle) public enum FritzVisionStyleModelPatterns.PatternStyleModel.Style : Int, CaseIterable</Declaration><CommentParts><Abstract><Para>Available styles.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "Style", "key.doc.type": "Other", "key.doclength": 22, "key.docoffset": 340, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 3, "key.offset": 416}, {"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 421}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enum><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPatternStyle)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>enum</syntaxtype.keyword> <ref.class usr=\"c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel\">PatternStyleModel</ref.class>.<decl.name>Style</decl.name> : <ref.struct usr=\"s:Si\">Int</ref.struct>, <ref.protocol usr=\"s:s12CaseIterableP\">CaseIterable</ref.protocol></decl.enum>", "key.inheritedtypes": [{"key.name": "Int"}, {"key.name": "CaseIterable"}], "key.kind": "source.lang.swift.decl.enum", "key.length": 3576, "key.name": "Style", "key.namelength": 5, "key.nameoffset": 409, "key.offset": 404, "key.parsed_declaration": "public enum Style: Int, CaseIterable", "key.parsed_scope.end": 155, "key.parsed_scope.start": 18, "key.substructure": [{"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 440, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case blueArrow</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>blueArrow</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "blueArrow", "key.namelength": 9, "key.nameoffset": 445, "key.offset": 445, "key.parsed_declaration": "case blueArrow", "key.parsed_scope.end": 19, "key.parsed_scope.start": 19, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O9blueArrowyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 459, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case christmasLights</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>christmasLights</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "christmasLights", "key.namelength": 15, "key.nameoffset": 464, "key.offset": 464, "key.parsed_declaration": "case christmasLights", "key.parsed_scope.end": 20, "key.parsed_scope.start": 20, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O15christmasLightsyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 484, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case comic</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>comic</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "comic", "key.namelength": 5, "key.nameoffset": 489, "key.offset": 489, "key.parsed_declaration": "case comic", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O5comicyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 499, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case filament</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>filament</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "filament", "key.namelength": 8, "key.nameoffset": 504, "key.offset": 504, "key.parsed_declaration": "case filament", "key.parsed_scope.end": 22, "key.parsed_scope.start": 22, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O8filamentyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 13, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 517, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case lampPost</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>lampPost</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 8, "key.name": "lampPost", "key.namelength": 8, "key.nameoffset": 522, "key.offset": 522, "key.parsed_declaration": "case lampPost", "key.parsed_scope.end": 23, "key.parsed_scope.start": 23, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O8lampPostyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 535, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case mosaic</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>mosaic</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "mosaic", "key.namelength": 6, "key.nameoffset": 540, "key.offset": 540, "key.parsed_declaration": "case mosaic", "key.parsed_scope.end": 24, "key.parsed_scope.start": 24, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O6mosaicyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 551, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case notreDame</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>notreDame</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "notreDame", "key.namelength": 9, "key.nameoffset": 556, "key.offset": 556, "key.parsed_declaration": "case notreDame", "key.parsed_scope.end": 25, "key.parsed_scope.start": 25, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O9notreDameyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 570, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case shades</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>shades</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "shades", "key.namelength": 6, "key.nameoffset": 575, "key.offset": 575, "key.parsed_declaration": "case shades", "key.parsed_scope.end": 26, "key.parsed_scope.start": 26, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O6shadesyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 586, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sketch</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sketch</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "sketch", "key.namelength": 6, "key.nameoffset": 591, "key.offset": 591, "key.parsed_declaration": "case sketch", "key.parsed_scope.end": 27, "key.parsed_scope.start": 27, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O6sketchyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 602, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case snowflake</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>snowflake</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "snowflake", "key.namelength": 9, "key.nameoffset": 607, "key.offset": 607, "key.parsed_declaration": "case snowflake", "key.parsed_scope.end": 28, "key.parsed_scope.start": 28, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O9snowflakeyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 14, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 621, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case sprinkles</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>sprinkles</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 9, "key.name": "sprinkles", "key.namelength": 9, "key.nameoffset": 626, "key.offset": 626, "key.parsed_declaration": "case sprinkles", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O9sprinklesyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 10, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 640, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case swirl</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>swirl</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 5, "key.name": "swirl", "key.namelength": 5, "key.nameoffset": 645, "key.offset": 645, "key.parsed_declaration": "case swirl", "key.parsed_scope.end": 30, "key.parsed_scope.start": 30, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O5swirlyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 9, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 655, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case tile</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>tile</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 4, "key.name": "tile", "key.namelength": 4, "key.nameoffset": 660, "key.offset": 660, "key.parsed_declaration": "case tile", "key.parsed_scope.end": 31, "key.parsed_scope.start": 31, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O4tileyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 11, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 669, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case vector</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>vector</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 6, "key.name": "vector", "key.namelength": 6, "key.nameoffset": 674, "key.offset": 674, "key.parsed_declaration": "case vector", "key.parsed_scope.end": 32, "key.parsed_scope.start": 32, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O6vectoryA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 17, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 685, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case kaleidoscope</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>kaleidoscope</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 12, "key.name": "kaleidoscope", "key.namelength": 12, "key.nameoffset": 690, "key.offset": 690, "key.parsed_declaration": "case kaleidoscope", "key.parsed_scope.end": 33, "key.parsed_scope.start": 33, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O12kaleidoscopeyA2EmF"}]}, {"key.kind": "source.lang.swift.decl.enumcase", "key.length": 20, "key.namelength": 0, "key.nameoffset": 0, "key.offset": 707, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>case pinkBlueRhombus</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.enumelement><syntaxtype.keyword>case</syntaxtype.keyword> <decl.name>pinkBlueRhombus</decl.name></decl.enumelement>", "key.kind": "source.lang.swift.decl.enumelement", "key.length": 15, "key.name": "pinkBlueRhombus", "key.namelength": 15, "key.nameoffset": 712, "key.offset": 712, "key.parsed_declaration": "case pinkBlueRhombus", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.typename": "(PatternStyleModel.Style.Type) -> PatternStyleModel.Style", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OAEmcD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O15pinkBlueRhombusyA2EmF"}]}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var name: <Type usr=\"s:SS\">String</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 733}], "key.bodylength": 810, "key.bodyoffset": 758, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>name</decl.name>: <decl.var.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 829, "key.name": "name", "key.namelength": 4, "key.nameoffset": 744, "key.offset": 740, "key.parsed_declaration": "public var name: String", "key.parsed_scope.end": 72, "key.parsed_scope.start": 36, "key.typename": "String", "key.typeusr": "$sSSD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O4nameSSvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public static func getFromName(_ name: <Type usr=\"s:SS\">String</Type>) -&gt; <Type usr=\"s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O\">Style</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1575}], "key.bodylength": 844, "key.bodyoffset": 1633, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>getFromName</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>name</decl.var.parameter.name>: <decl.var.parameter.type><ref.struct usr=\"s:SS\">String</ref.struct></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.enum usr=\"s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O\">Style</ref.enum>?</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 896, "key.name": "getFromName(_:)", "key.namelength": 27, "key.nameoffset": 1594, "key.offset": 1582, "key.parsed_declaration": "public static func getFromName(_ name: String) -> Style?", "key.parsed_scope.end": 112, "key.parsed_scope.start": 74, "key.substructure": [], "key.typename": "(PatternStyleModel.Style.Type) -> (String) -> PatternStyleModel.Style?", "key.typeusr": "$sy29FritzVisionStyleModelPatterns07PatterncD0C0C0OSgSScD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O11getFromNameyAESgSSFZ"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func build() -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2536}], "key.bodylength": 1389, "key.bodyoffset": 2586, "key.doc.column": 17, "key.doc.comment": "Build FritzVisionStylePredictor from style.", "key.doc.declaration": "public func build() -> FritzVisionStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift\" line=\"115\" column=\"17\"><Name>build()</Name><USR>s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O5build0aB00abC9PredictorCyF</USR><Declaration>public func build() -&gt; FritzVisionStylePredictor</Declaration><CommentParts><Abstract><Para>Build FritzVisionStylePredictor from style.</Para></Abstract></CommentParts></Function>", "key.doc.line": 115, "key.doc.name": "build()", "key.doc.type": "Function", "key.doclength": 48, "key.docoffset": 2484, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>build</decl.name>() -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1433, "key.name": "build()", "key.namelength": 7, "key.nameoffset": 2548, "key.offset": 2543, "key.parsed_declaration": "public func build() -> FritzVisionStylePredictor", "key.parsed_scope.end": 154, "key.parsed_scope.start": 115, "key.substructure": [{"key.annotated_decl": "<Declaration>var model: <Type usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</Type>!</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.protocol usr=\"c:@M@FritzManagedModel@objc(pl)FritzSwiftIdentifiedModel\">SwiftIdentifiedModel</ref.protocol>!</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 32, "key.name": "model", "key.namelength": 5, "key.nameoffset": 2597, "key.offset": 2593, "key.parsed_declaration": "var model: SwiftIdentifiedModel!", "key.parsed_scope.end": 116, "key.parsed_scope.start": 116, "key.typename": "SwiftIdentifiedModel?", "key.typeusr": "$s17FritzManagedModel015SwiftIdentifiedC0_pSgD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O5build0aB00abC9PredictorCyF5modelL_0a7ManagedD0015SwiftIdentifiedD0_pSgvp"}], "key.typename": "(PatternStyleModel.Style) -> () -> FritzVisionStylePredictor", "key.typeusr": "$s11FritzVision0aB14StylePredictorCycD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O5build0aB00abC9PredictorCyF"}], "key.typename": "PatternStyleModel.Style.Type", "key.typeusr": "$s29FritzVisionStyleModelPatterns07PatterncD0C0C0OmD", "key.usr": "s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(buildForPattern:) public static func build(_ style: <Type usr=\"s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O\">Style</Type>) -&gt; <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4091}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 23, "key.offset": 4065}], "key.bodylength": 28, "key.bodyoffset": 4162, "key.doc.column": 22, "key.doc.comment": "Build FritzVisionStylePredictor from style. Useful when using Objective-C.", "key.doc.declaration": "@objc(buildForPattern:) public static func build(_ style: Style) -> FritzVisionStylePredictor", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift\" line=\"159\" column=\"22\"><Name>build(_:)</Name><USR>c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel(cm)buildForPattern:</USR><Declaration>@objc(buildForPattern:) public static func build(_ style: Style) -&gt; FritzVisionStylePredictor</Declaration><CommentParts><Abstract><Para>Build FritzVisionStylePredictor from style. Useful when using Objective-C.</Para></Abstract></CommentParts></Function>", "key.doc.line": 159, "key.doc.name": "build(_:)", "key.doc.type": "Function", "key.doclength": 79, "key.docoffset": 3984, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(buildForPattern:)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>build</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>style</decl.var.parameter.name>: <decl.var.parameter.type><ref.enum usr=\"s:29FritzVisionStyleModelPatterns07PatterncD0C0C0O\">Style</ref.enum></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class></decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 93, "key.name": "build(_:)", "key.namelength": 21, "key.nameoffset": 4110, "key.offset": 4098, "key.parsed_declaration": "public static func build(_ style: Style) -> FritzVisionStylePredictor", "key.parsed_scope.end": 161, "key.parsed_scope.start": 159, "key.substructure": [], "key.typename": "(PatternStyleModel.Type) -> (PatternStyleModel.Style) -> FritzVisionStylePredictor", "key.typeusr": "$sy11FritzVision0aB14StylePredictorC0abC13ModelPatterns07PatterncE0C0C0OcD", "key.usr": "c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel(cm)buildForPattern:"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(allModels) public static func allModels() -&gt; [<Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4272}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 16, "key.offset": 4253}], "key.bodylength": 41, "key.bodyoffset": 4335, "key.doc.column": 22, "key.doc.comment": "Returns a list of all initialized style predictors.", "key.doc.declaration": "@objc(allModels) public static func allModels() -> [FritzVisionStylePredictor]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift\" line=\"165\" column=\"22\"><Name>allModels()</Name><USR>c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel(cm)allModels</USR><Declaration>@objc(allModels) public static func allModels() -&gt; [FritzVisionStylePredictor]</Declaration><CommentParts><Abstract><Para>Returns a list of all initialized style predictors.</Para></Abstract></CommentParts></Function>", "key.doc.line": 165, "key.doc.name": "allModels()", "key.doc.type": "Function", "key.doclength": 56, "key.docoffset": 4195, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionStyleModelPatterns/PatternStyleModel.swift", "key.fully_annotated_decl": "<decl.function.method.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(allModels)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>allModels</decl.name>() -&gt; <decl.function.returntype>[<ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionStylePredictor\">FritzVisionStylePredictor</ref.class>]</decl.function.returntype></decl.function.method.static>", "key.kind": "source.lang.swift.decl.function.method.static", "key.length": 98, "key.name": "allModels()", "key.namelength": 11, "key.nameoffset": 4291, "key.offset": 4279, "key.parsed_declaration": "public static func allModels() -> [FritzVisionStylePredictor]", "key.parsed_scope.end": 167, "key.parsed_scope.start": 165, "key.substructure": [], "key.typename": "(PatternStyleModel.Type) -> () -> [FritzVisionStylePredictor]", "key.typeusr": "$sSay11FritzVision0aB14StylePredictorCGycD", "key.usr": "c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel(cm)allModels"}], "key.typename": "PatternStyleModel.Type", "key.typeusr": "$s29FritzVisionStyleModelPatterns07PatterncD0CmD", "key.usr": "c:@M@FritzVisionStyleModelPatterns@objc(cs)PatternStyleModel"}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/blue_arrow_512x512_a025_stable_flexible/blue_arrow_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6637, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/christmas_lights_512x512_a025_stable_flexible/christmas_lights_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6781, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/comic_512x512_a025_stable_flexible/comic_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6517, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/filament_512x512_a025_stable_flexible/filament_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6589, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/kaleidoscope_512x512_a025_stable_flexible/kaleidoscope_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6685, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/lamp_post_512x512_a025_stable_flexible/lamp_post_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6613, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/mosaic_512x512_a025_stable_flexible/mosaic_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6541, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/notre_dame_512x512_a025_stable_flexible/notre_dame_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6637, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/pink_blue_rhombus_512x512_a025_stable_flexible/pink_blue_rhombus_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6805, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/shades_512x512_a025_stable_flexible/shades_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6541, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/sketch_512x512_a025_stable_flexible/sketch_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6541, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/snowflake_512x512_a025_stable_flexible/snowflake_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6613, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/sprinkles_512x512_a025_stable_flexible/sprinkles_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6613, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/swirl_512x512_a025_stable_flexible/swirl_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6517, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/tile_512x512_a025_stable_flexible/tile_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6493, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionStyleModelPatterns.build/DerivedSources/CoreMLGenerated/vector_512x512_a025_stable_flexible/vector_512x512_a025_stable_flexible.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6541, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelFast/FritzVisionPeopleSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1152, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 951}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 49, "key.offset": 901}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 877}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 843}], "key.bodylength": 132, "key.bodyoffset": 1018, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1008}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 193, "key.name": "FritzVisionPeopleSegmentationModelFastObjc", "key.namelength": 42, "key.nameoffset": 964, "key.offset": 958, "key.runtime_name": "FritzVisionPeopleSegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast\">FritzVisionPeopleSegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1028}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1022}], "key.bodylength": 55, "key.bodyoffset": 1093, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelFast/FritzVisionPeopleSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelFast\">FritzVisionPeopleSegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 114, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1046, "key.offset": 1035, "key.parsed_declaration": "@objc public static var model: FritzVisionPeopleSegmentationModelFast", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionPeopleSegmentationModelFast", "key.typeusr": "$s11FritzVision0aB27PeopleSegmentationModelFastCD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModelFast@objc(cs)FritzVisionPeopleSegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPeopleSegmentationModelFast.build/DerivedSources/CoreMLGenerated/people_segmentation_mobilenet_256x256_75_1568480498/people_segmentation_mobilenet_256x256_75_1568480498.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7033, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelAccurate/FritzVisionPeopleSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1207, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 994}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 940}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 916}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 882}], "key.bodylength": 140, "key.bodyoffset": 1065, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1055}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 205, "key.name": "FritzVisionPeopleSegmentationModelAccurateObjc", "key.namelength": 46, "key.nameoffset": 1007, "key.offset": 1001, "key.runtime_name": "FritzVisionPeopleSegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate\">FritzVisionPeopleSegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1075}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1069}], "key.bodylength": 59, "key.bodyoffset": 1144, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelAccurate/FritzVisionPeopleSegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelAccurate\">FritzVisionPeopleSegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 122, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1093, "key.offset": 1082, "key.parsed_declaration": "@objc public static var model: FritzVisionPeopleSegmentationModelAccurate", "key.parsed_scope.end": 36, "key.parsed_scope.start": 34, "key.typename": "FritzVisionPeopleSegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB31PeopleSegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModelAccurate@objc(cs)FritzVisionPeopleSegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPeopleSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/people_segmentation_icnetV2_768x768/people_segmentation_icnetV2_768x768.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6649, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelSmall/FritzVisionPeopleSegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1143, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 939}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 888}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 864}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 830}], "key.bodylength": 134, "key.bodyoffset": 1007, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 997}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 196, "key.name": "FritzVisionPeopleSegmentationModelSmallObjc", "key.namelength": 43, "key.nameoffset": 952, "key.offset": 946, "key.runtime_name": "FritzVisionPeopleSegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall\">FritzVisionPeopleSegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1017}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1011}], "key.bodylength": 56, "key.bodyoffset": 1083, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleSegmentationModelSmall/FritzVisionPeopleSegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleSegmentationModelSmall\">FritzVisionPeopleSegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1035, "key.offset": 1024, "key.parsed_declaration": "@objc public static var model: FritzVisionPeopleSegmentationModelSmall", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionPeopleSegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB28PeopleSegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionPeopleSegmentationModelSmall@objc(cs)FritzVisionPeopleSegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPeopleSegmentationModelSmall.build/DerivedSources/CoreMLGenerated/people_segmentation_mobilenet_256x256_75_1568565137/people_segmentation_mobilenet_256x256_75_1568565137.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6838, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelFast/FritzVisionOutdoorSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1104, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 900}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 849}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 825}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 791}], "key.bodylength": 134, "key.bodyoffset": 968, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 958}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 196, "key.name": "FritzVisionOutdoorSegmentationModelFastObjc", "key.namelength": 43, "key.nameoffset": 913, "key.offset": 907, "key.runtime_name": "FritzVisionOutdoorSegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast\">FritzVisionOutdoorSegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 978}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 972}], "key.bodylength": 56, "key.bodyoffset": 1044, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelFast/FritzVisionOutdoorSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelFast\">FritzVisionOutdoorSegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "model", "key.namelength": 5, "key.nameoffset": 996, "key.offset": 985, "key.parsed_declaration": "@objc public static var model: FritzVisionOutdoorSegmentationModelFast", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionOutdoorSegmentationModelFast", "key.typeusr": "$s11FritzVision0aB28OutdoorSegmentationModelFastCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModelFast@objc(cs)FritzVisionOutdoorSegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionOutdoorSegmentationModelFast.build/DerivedSources/CoreMLGenerated/outdoor_segmentation_mobilenet_256x256_75_1568520080/outdoor_segmentation_mobilenet_256x256_75_1568520080.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7058, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelAccurate/FritzVisionOutdoorSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1144, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 928}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 54, "key.offset": 873}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 849}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 815}], "key.bodylength": 142, "key.bodyoffset": 1000, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 990}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 208, "key.name": "FritzVisionOutdoorSegmentationModelAccurateObjc", "key.namelength": 47, "key.nameoffset": 941, "key.offset": 935, "key.runtime_name": "FritzVisionOutdoorSegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate\">FritzVisionOutdoorSegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1010}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1004}], "key.bodylength": 60, "key.bodyoffset": 1080, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelAccurate/FritzVisionOutdoorSegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelAccurate\">FritzVisionOutdoorSegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 124, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1028, "key.offset": 1017, "key.parsed_declaration": "@objc public static var model: FritzVisionOutdoorSegmentationModelAccurate", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionOutdoorSegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB32OutdoorSegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModelAccurate@objc(cs)FritzVisionOutdoorSegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionOutdoorSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/outdoor_segmentation_mobilenet_512x512_75_1568560755/outdoor_segmentation_mobilenet_512x512_75_1568560755.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7058, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelSmall/FritzVisionOutdoorSegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1121, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 912}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 51, "key.offset": 860}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 836}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 802}], "key.bodylength": 138, "key.bodyoffset": 981, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 971}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 201, "key.name": "FritzVisionOutdoorSegmentationModelSmallObjc", "key.namelength": 44, "key.nameoffset": 925, "key.offset": 919, "key.runtime_name": "FritzVisionOutdoorSegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall\">FritzVisionOutdoorSegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 993}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 987}], "key.bodylength": 57, "key.bodyoffset": 1060, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionOutdoorSegmentationModelSmall/FritzVisionOutdoorSegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionOutdoorSegmentationModelSmall\">FritzVisionOutdoorSegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 118, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1011, "key.offset": 1000, "key.parsed_declaration": "@objc public static var model: FritzVisionOutdoorSegmentationModelSmall", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionOutdoorSegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB29OutdoorSegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionOutdoorSegmentationModelSmall@objc(cs)FritzVisionOutdoorSegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionOutdoorSegmentationModelSmall.build/DerivedSources/CoreMLGenerated/outdoor_segmentation_mobilenet_256x256_75_1568564460/outdoor_segmentation_mobilenet_256x256_75_1568564460.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6863, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelFast/FritzVisionLivingRoomSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1143, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 930}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 53, "key.offset": 876}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 852}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 818}], "key.bodylength": 140, "key.bodyoffset": 1001, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 991}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 205, "key.name": "FritzVisionLivingRoomSegmentationModelFastObjc", "key.namelength": 46, "key.nameoffset": 943, "key.offset": 937, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast\">FritzVisionLivingRoomSegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1011}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1005}], "key.bodylength": 59, "key.bodyoffset": 1080, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelFast/FritzVisionLivingRoomSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelFast\">FritzVisionLivingRoomSegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 122, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1029, "key.offset": 1018, "key.parsed_declaration": "@objc public static var model: FritzVisionLivingRoomSegmentationModelFast", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionLivingRoomSegmentationModelFast", "key.typeusr": "$s11FritzVision0aB31LivingRoomSegmentationModelFastCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModelFast@objc(cs)FritzVisionLivingRoomSegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionLivingRoomSegmentationModelFast.build/DerivedSources/CoreMLGenerated/living_room_segmentation_mobilenet_256x256_75_1568482613/living_room_segmentation_mobilenet_256x256_75_1568482613.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7154, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelAccurate/FritzVisionLivingRoomSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1179, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 954}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 57, "key.offset": 896}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 872}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 838}], "key.bodylength": 148, "key.bodyoffset": 1029, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1019}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 217, "key.name": "FritzVisionLivingRoomSegmentationModelAccurateObjc", "key.namelength": 50, "key.nameoffset": 967, "key.offset": 961, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate\">FritzVisionLivingRoomSegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1039}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1033}], "key.bodylength": 63, "key.bodyoffset": 1112, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelAccurate/FritzVisionLivingRoomSegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelAccurate\">FritzVisionLivingRoomSegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 130, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1057, "key.offset": 1046, "key.parsed_declaration": "@objc public static var model: FritzVisionLivingRoomSegmentationModelAccurate", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionLivingRoomSegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB35LivingRoomSegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModelAccurate@objc(cs)FritzVisionLivingRoomSegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionLivingRoomSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/living_room_segmentation_mobilenet_512x512_75_1568491493/living_room_segmentation_mobilenet_512x512_75_1568491493.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7154, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelSmall/FritzVisionLivingRoomSegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1152, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 936}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 54, "key.offset": 881}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 857}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 823}], "key.bodylength": 142, "key.bodyoffset": 1008, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 998}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 208, "key.name": "FritzVisionLivingRoomSegmentationModelSmallObjc", "key.namelength": 47, "key.nameoffset": 949, "key.offset": 943, "key.runtime_name": "FritzVisionLivingRoomSegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall\">FritzVisionLivingRoomSegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1018}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1012}], "key.bodylength": 60, "key.bodyoffset": 1088, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionLivingRoomSegmentationModelSmall/FritzVisionLivingRoomSegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionLivingRoomSegmentationModelSmall\">FritzVisionLivingRoomSegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 124, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1036, "key.offset": 1025, "key.parsed_declaration": "@objc public static var model: FritzVisionLivingRoomSegmentationModelSmall", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionLivingRoomSegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB32LivingRoomSegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionLivingRoomSegmentationModelSmall@objc(cs)FritzVisionLivingRoomSegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionLivingRoomSegmentationModelSmall.build/DerivedSources/CoreMLGenerated/living_room_segmentation_mobilenet_256x256_75_1568564398/living_room_segmentation_mobilenet_256x256_75_1568564398.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6959, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHairSegmentationModelFast/FritzVisionHairSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1063, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 868}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 820}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 796}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 762}], "key.bodylength": 128, "key.bodyoffset": 933, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 923}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 187, "key.name": "FritzVisionHairSegmentationModelFastObjc", "key.namelength": 40, "key.nameoffset": 881, "key.offset": 875, "key.runtime_name": "FritzVisionHairSegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast\">FritzVisionHairSegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 937}], "key.bodylength": 53, "key.bodyoffset": 1006, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionHairSegmentationModelFast/FritzVisionHairSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelFast\">FritzVisionHairSegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 110, "key.name": "model", "key.namelength": 5, "key.nameoffset": 961, "key.offset": 950, "key.parsed_declaration": "@objc public static var model: FritzVisionHairSegmentationModelFast", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionHairSegmentationModelFast", "key.typeusr": "$s11FritzVision0aB25HairSegmentationModelFastCD", "key.usr": "c:@M@FritzVisionHairSegmentationModelFast@objc(cs)FritzVisionHairSegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHairSegmentationModelFast.build/DerivedSources/CoreMLGenerated/hair_segmentation_mobilenet_256x256_5_1568558307/hair_segmentation_mobilenet_256x256_5_1568558307.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6961, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHairSegmentationModelAccurate/FritzVisionHairSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1104, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 904}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 51, "key.offset": 852}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 828}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 794}], "key.bodylength": 129, "key.bodyoffset": 973, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 963}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 192, "key.name": "FritzVisionHairSegmentationModelAccurateObjc", "key.namelength": 44, "key.nameoffset": 917, "key.offset": 911, "key.runtime_name": "FritzVisionHairSegmentationModelAccurateObjc", "key.substructure": []}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHairSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/hair_segmentation_mobilenet_512x512_75_1568494387/hair_segmentation_mobilenet_512x512_75_1568494387.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6985, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHairSegmentationModelSmall/FritzVisionHairSegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1072, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 874}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 48, "key.offset": 825}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 801}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 767}], "key.bodylength": 130, "key.bodyoffset": 940, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 930}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 190, "key.name": "FritzVisionHairSegmentationModelSmallObjc", "key.namelength": 41, "key.nameoffset": 887, "key.offset": 881, "key.runtime_name": "FritzVisionHairSegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall\">FritzVisionHairSegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 950}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 944}], "key.bodylength": 54, "key.bodyoffset": 1014, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionHairSegmentationModelSmall/FritzVisionHairSegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionHairSegmentationModelSmall\">FritzVisionHairSegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 112, "key.name": "model", "key.namelength": 5, "key.nameoffset": 968, "key.offset": 957, "key.parsed_declaration": "@objc public static var model: FritzVisionHairSegmentationModelSmall", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionHairSegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB26HairSegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionHairSegmentationModelSmall@objc(cs)FritzVisionHairSegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHairSegmentationModelSmall.build/DerivedSources/CoreMLGenerated/hair_segmentation_mobilenet_256x256_5_1568564884/hair_segmentation_mobilenet_256x256_5_1568564884.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6766, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelFast/FritzVisionPetSegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1072, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 880}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 833}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 809}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 775}], "key.bodylength": 126, "key.bodyoffset": 944, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 934}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 184, "key.name": "FritzVisionPetSegmentationModelFastObjc", "key.namelength": 39, "key.nameoffset": 893, "key.offset": 887, "key.runtime_name": "FritzVisionPetSegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast\">FritzVisionPetSegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 954}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 948}], "key.bodylength": 52, "key.bodyoffset": 1016, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelFast/FritzVisionPetSegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelFast\">FritzVisionPetSegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "model", "key.namelength": 5, "key.nameoffset": 972, "key.offset": 961, "key.parsed_declaration": "@objc public static var model: FritzVisionPetSegmentationModelFast", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.typename": "FritzVisionPetSegmentationModelFast", "key.typeusr": "$s11FritzVision0aB24PetSegmentationModelFastCD", "key.usr": "c:@M@FritzVisionPetSegmentationModelFast@objc(cs)FritzVisionPetSegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPetSegmentationModelFast.build/DerivedSources/CoreMLGenerated/pet_segmentation_mobilenet_256x256_75_1568479918/pet_segmentation_mobilenet_256x256_75_1568479918.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6961, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelAccurate/FritzVisionPetSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1095, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 891}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 840}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 816}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 782}], "key.bodylength": 134, "key.bodyoffset": 959, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 949}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 196, "key.name": "FritzVisionPetSegmentationModelAccurateObjc", "key.namelength": 43, "key.nameoffset": 904, "key.offset": 898, "key.runtime_name": "FritzVisionPetSegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate\">FritzVisionPetSegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 969}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 963}], "key.bodylength": 56, "key.bodyoffset": 1035, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelAccurate/FritzVisionPetSegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelAccurate\">FritzVisionPetSegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "model", "key.namelength": 5, "key.nameoffset": 987, "key.offset": 976, "key.parsed_declaration": "@objc public static var model: FritzVisionPetSegmentationModelAccurate", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.typename": "FritzVisionPetSegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB28PetSegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionPetSegmentationModelAccurate@objc(cs)FritzVisionPetSegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPetSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/pet_segmentation_mobilenet_512x512_75_1568517893/pet_segmentation_mobilenet_512x512_75_1568517893.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6961, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelSmall/FritzVisionPetSegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1063, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 868}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 820}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 796}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 762}], "key.bodylength": 128, "key.bodyoffset": 933, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 923}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 187, "key.name": "FritzVisionPetSegmentationModelSmallObjc", "key.namelength": 40, "key.nameoffset": 881, "key.offset": 875, "key.runtime_name": "FritzVisionPetSegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall\">FritzVisionPetSegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 937}], "key.bodylength": 53, "key.bodyoffset": 1006, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPetSegmentationModelSmall/FritzVisionPetSegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPetSegmentationModelSmall\">FritzVisionPetSegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 110, "key.name": "model", "key.namelength": 5, "key.nameoffset": 961, "key.offset": 950, "key.parsed_declaration": "@objc public static var model: FritzVisionPetSegmentationModelSmall", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionPetSegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB25PetSegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionPetSegmentationModelSmall@objc(cs)FritzVisionPetSegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPetSegmentationModelSmall.build/DerivedSources/CoreMLGenerated/pet_segmentation_mobilenet_256x256_75_1568563916/pet_segmentation_mobilenet_256x256_75_1568563916.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6766, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelFast/FritzVisionSkySegmentationModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1054, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 862}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 46, "key.offset": 815}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 791}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 757}], "key.bodylength": 126, "key.bodyoffset": 926, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 916}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 184, "key.name": "FritzVisionSkySegmentationModelFastObjc", "key.namelength": 39, "key.nameoffset": 875, "key.offset": 869, "key.runtime_name": "FritzVisionSkySegmentationModelFastObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast\">FritzVisionSkySegmentationModelFast</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 936}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 930}], "key.bodylength": 52, "key.bodyoffset": 998, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelFast/FritzVisionSkySegmentationModelFast.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelFast\">FritzVisionSkySegmentationModelFast</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 108, "key.name": "model", "key.namelength": 5, "key.nameoffset": 954, "key.offset": 943, "key.parsed_declaration": "@objc public static var model: FritzVisionSkySegmentationModelFast", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionSkySegmentationModelFast", "key.typeusr": "$s11FritzVision0aB24SkySegmentationModelFastCD", "key.usr": "c:@M@FritzVisionSkySegmentationModelFast@objc(cs)FritzVisionSkySegmentationModelFastObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionSkySegmentationModelFast.build/DerivedSources/CoreMLGenerated/sky_segmentation_mobilenet_256x256_75_1568558807/sky_segmentation_mobilenet_256x256_75_1568558807.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6961, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelAccurate/FritzVisionSkySegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1095, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 891}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 50, "key.offset": 840}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 816}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 782}], "key.bodylength": 134, "key.bodyoffset": 959, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 949}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 196, "key.name": "FritzVisionSkySegmentationModelAccurateObjc", "key.namelength": 43, "key.nameoffset": 904, "key.offset": 898, "key.runtime_name": "FritzVisionSkySegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate\">FritzVisionSkySegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 969}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 963}], "key.bodylength": 56, "key.bodyoffset": 1035, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelAccurate/FritzVisionSkySegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelAccurate\">FritzVisionSkySegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 116, "key.name": "model", "key.namelength": 5, "key.nameoffset": 987, "key.offset": 976, "key.parsed_declaration": "@objc public static var model: FritzVisionSkySegmentationModelAccurate", "key.parsed_scope.end": 32, "key.parsed_scope.start": 30, "key.typename": "FritzVisionSkySegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB28SkySegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionSkySegmentationModelAccurate@objc(cs)FritzVisionSkySegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionSkySegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/sky_segmentation_mobilenet_512x512_75_1568486643/sky_segmentation_mobilenet_512x512_75_1568486643.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6961, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelSmall/FritzVisionSkySegmentationModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1063, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 868}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 47, "key.offset": 820}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 796}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 762}], "key.bodylength": 128, "key.bodyoffset": 933, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 923}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 187, "key.name": "FritzVisionSkySegmentationModelSmallObjc", "key.namelength": 40, "key.nameoffset": 881, "key.offset": 875, "key.runtime_name": "FritzVisionSkySegmentationModelSmallObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall\">FritzVisionSkySegmentationModelSmall</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 943}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 937}], "key.bodylength": 53, "key.bodyoffset": 1006, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionSkySegmentationModelSmall/FritzVisionSkySegmentationModelSmall.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionSkySegmentationModelSmall\">FritzVisionSkySegmentationModelSmall</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 110, "key.name": "model", "key.namelength": 5, "key.nameoffset": 961, "key.offset": 950, "key.parsed_declaration": "@objc public static var model: FritzVisionSkySegmentationModelSmall", "key.parsed_scope.end": 31, "key.parsed_scope.start": 29, "key.typename": "FritzVisionSkySegmentationModelSmall", "key.typeusr": "$s11FritzVision0aB25SkySegmentationModelSmallCD", "key.usr": "c:@M@FritzVisionSkySegmentationModelSmall@objc(cs)FritzVisionSkySegmentationModelSmallObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionSkySegmentationModelSmall.build/DerivedSources/CoreMLGenerated/sky_segmentation_mobilenet_256x256_75_1568564280/sky_segmentation_mobilenet_256x256_75_1568564280.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6766, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHumanPoseModelFast/FritzVisionHumanPoseModelFast.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 718, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHumanPoseModelFast.build/DerivedSources/CoreMLGenerated/pose_mobilenet_353x257_5_8_large_1565381656/pose_mobilenet_353x257_5_8_large_1565381656.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8079, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHumanPoseModelSmall/FritzVisionHumanPoseModelSmall.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 751, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHumanPoseModelSmall.build/DerivedSources/CoreMLGenerated/human_pose_mobilenet_353x257_5_8_large_1569859486/human_pose_mobilenet_353x257_5_8_large_1569859486.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7746, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionHumanPoseModelAccurate/FritzVisionHumanPoseModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 764, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionHumanPoseModelAccurate.build/DerivedSources/CoreMLGenerated/pose_mobilenet_tensorflow_js_513x385_1_8_large_1569858252/pose_mobilenet_tensorflow_js_513x385_1_8_large_1569858252.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 8133, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleAndPetSegmentationModelAccurate/FritzVisionPeopleAndPetSegmentationModelAccurate.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1193, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 962}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 59, "key.offset": 902}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 878}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 844}], "key.bodylength": 152, "key.bodyoffset": 1039, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1029}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 223, "key.name": "FritzVisionPeopleAndPetSegmentationModelAccurateObjc", "key.namelength": 52, "key.nameoffset": 975, "key.offset": 969, "key.runtime_name": "FritzVisionPeopleAndPetSegmentationModelAccurateObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate\">FritzVisionPeopleAndPetSegmentationModelAccurate</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1049}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1043}], "key.bodylength": 65, "key.bodyoffset": 1124, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionPeopleAndPetSegmentationModelAccurate/FritzVisionPeopleAndPetSegmentationModelAccurate.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurate\">FritzVisionPeopleAndPetSegmentationModelAccurate</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 134, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1067, "key.offset": 1056, "key.parsed_declaration": "@objc public static var model: FritzVisionPeopleAndPetSegmentationModelAccurate", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "FritzVisionPeopleAndPetSegmentationModelAccurate", "key.typeusr": "$s11FritzVision0aB37PeopleAndPetSegmentationModelAccurateCD", "key.usr": "c:@M@FritzVisionPeopleAndPetSegmentationModelAccurate@objc(cs)FritzVisionPeopleAndPetSegmentationModelAccurateObjc(cpy)model"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionPeopleAndPetSegmentationModelAccurate.build/DerivedSources/CoreMLGenerated/people_and_pet_segmentation_icnet_768x768_1_1572886302/people_and_pet_segmentation_icnet_768x768_1_1572886302.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 7105, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6493, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public struct FritzSCNPose</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 244}], "key.bodylength": 560, "key.bodyoffset": 272, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.struct><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>struct</syntaxtype.keyword> <decl.name>FritzSCNPose</decl.name></decl.struct>", "key.kind": "source.lang.swift.decl.struct", "key.length": 582, "key.name": "FritzSCNPose", "key.namelength": 12, "key.nameoffset": 258, "key.offset": 251, "key.parsed_declaration": "public struct FritzSCNPose", "key.parsed_scope.end": 32, "key.parsed_scope.start": 13, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let scenekitCameraTransform: <Type usr=\"c:@S@SCNMatrix4\">SCNMatrix4</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 342}], "key.doc.column": 14, "key.doc.comment": "Transformation matrix to place object in camera coordinates.", "key.doc.declaration": "public let scenekitCameraTransform: SCNMatrix4", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"15\" column=\"14\"><Name>scenekitCameraTransform</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransformSo10SCNMatrix4Vvp</USR><Declaration>public let scenekitCameraTransform: SCNMatrix4</Declaration><CommentParts><Abstract><Para>Transformation matrix to place object in camera coordinates.</Para></Abstract></CommentParts></Other>", "key.doc.line": 15, "key.doc.name": "scenekitCameraTransform", "key.doc.type": "Other", "key.doclength": 65, "key.docoffset": 275, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>scenekitCameraTransform</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNMatrix4\">SCNMatrix4</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "scenekitCameraTransform", "key.namelength": 23, "key.nameoffset": 353, "key.offset": 349, "key.parsed_declaration": "public let scenekitCameraTransform: SCNMatrix4", "key.parsed_scope.end": 15, "key.parsed_scope.start": 15, "key.typename": "SCNMatrix4", "key.typeusr": "$sSo10SCNMatrix4VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransformSo10SCNMatrix4Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let rotationVector: <Type usr=\"c:@S@SCNVector4\">SCNVector4</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 428}], "key.doc.column": 14, "key.doc.comment": "Axis-angle rotatation vector.", "key.doc.declaration": "public let rotationVector: SCNVector4", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"18\" column=\"14\"><Name>rotationVector</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV14rotationVectorSo10SCNVector4Vvp</USR><Declaration>public let rotationVector: SCNVector4</Declaration><CommentParts><Abstract><Para>Axis-angle rotatation vector.</Para></Abstract></CommentParts></Other>", "key.doc.line": 18, "key.doc.name": "rotationVector", "key.doc.type": "Other", "key.doclength": 34, "key.docoffset": 392, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rotationVector</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNVector4\">SCNVector4</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 30, "key.name": "rotationVector", "key.namelength": 14, "key.nameoffset": 439, "key.offset": 435, "key.parsed_declaration": "public let rotationVector: SCNVector4", "key.parsed_scope.end": 18, "key.parsed_scope.start": 18, "key.typename": "SCNVector4", "key.typeusr": "$sSo10SCNVector4VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV14rotationVectorSo10SCNVector4Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let translationVector: <Type usr=\"c:@S@SCNVector3\">SCNVector3</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 511}], "key.doc.column": 14, "key.doc.comment": "Translation vector to place object.", "key.doc.declaration": "public let translationVector: SCNVector3", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"21\" column=\"14\"><Name>translationVector</Name><USR>s:20FritzVisionRigidPose0A7SCNPoseV17translationVectorSo10SCNVector3Vvp</USR><Declaration>public let translationVector: SCNVector3</Declaration><CommentParts><Abstract><Para>Translation vector to place object.</Para></Abstract></CommentParts></Other>", "key.doc.line": 21, "key.doc.name": "translationVector", "key.doc.type": "Other", "key.doclength": 40, "key.docoffset": 469, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>translationVector</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "translationVector", "key.namelength": 17, "key.nameoffset": 522, "key.offset": 518, "key.parsed_declaration": "public let translationVector: SCNVector3", "key.parsed_scope.end": 21, "key.parsed_scope.start": 21, "key.typename": "SCNVector3", "key.typeusr": "$sSo10SCNVector3VD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV17translationVectorSo10SCNVector3Vvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(scenekitCameraTransform: <Type usr=\"c:@S@SCNMatrix4\">SCNMatrix4</Type>, rotationVector: <Type usr=\"c:@S@SCNVector4\">SCNVector4</Type>, translationVector: <Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 555}], "key.bodylength": 150, "key.bodyoffset": 680, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>scenekitCameraTransform</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNMatrix4\">SCNMatrix4</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>rotationVector</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNVector4\">SCNVector4</ref.struct></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>translationVector</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 269, "key.name": "init(scenekitCameraTransform:rotationVector:translationVector:)", "key.namelength": 116, "key.nameoffset": 562, "key.offset": 562, "key.parsed_declaration": "public init(\n  scenekitCameraTransform: SCNMatrix4,\n  rotationVector: SCNVector4,\n  translationVector: SCNVector3\n)", "key.parsed_scope.end": 31, "key.parsed_scope.start": 23, "key.substructure": [], "key.typename": "(FritzSCNPose.Type) -> (SCNMatrix4, SCNVector4, SCNVector3) -> FritzSCNPose", "key.typeusr": "$s23scenekitCameraTransform14rotationVector011translationE020FritzVisionRigidPose0G7SCNPoseVSo10SCNMatrix4V_So10SCNVector4VSo10SCNVector3VtcD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV23scenekitCameraTransform14rotationVector011translationJ0ACSo10SCNMatrix4V_So10SCNVector4VSo10SCNVector3Vtcfc"}], "key.typename": "FritzSCNPose.Type", "key.typeusr": "$s20FritzVisionRigidPose0A7SCNPoseVmD", "key.usr": "s:20FritzVisionRigidPose0A7SCNPoseV"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionRigidBodyPoseLiftingOptions</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 835}], "key.bodylength": 879, "key.bodyoffset": 888, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionRigidBodyPoseLiftingOptions</decl.name></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 926, "key.name": "FritzVisionRigidBodyPoseLiftingOptions", "key.namelength": 38, "key.nameoffset": 848, "key.offset": 842, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLiftingOptions", "key.parsed_scope.end": 64, "key.parsed_scope.start": 34, "key.runtime_name": "_TtC4main38FritzVisionRigidBodyPoseLiftingOptions", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var modelOptions: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 924}], "key.doc.column": 14, "key.doc.comment": "Custom Pose Model Options", "key.doc.declaration": "public var modelOptions: FritzVision.FritzVisionPoseModelOptions", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"37\" column=\"14\"><Name>modelOptions</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC05modelG00aB00abd5ModelG0Cvp</USR><Declaration>public var modelOptions: FritzVision.FritzVisionPoseModelOptions</Declaration><CommentParts><Abstract><Para>Custom Pose Model Options</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "modelOptions", "key.doc.type": "Other", "key.doclength": 30, "key.docoffset": 892, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>modelOptions</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseModelOptions\">FritzVisionPoseModelOptions</ref.class></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 77, "key.name": "modelOptions", "key.namelength": 12, "key.nameoffset": 935, "key.offset": 931, "key.parsed_declaration": "public var modelOptions: FritzVisionPoseModelOptions = FritzVisionPoseModelOptions()", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "FritzVisionPoseModelOptions", "key.typeusr": "$s11FritzVision0aB16PoseModelOptionsCD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC05modelG00aB00abd5ModelG0Cvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var requiredKeypointsMeetingThreshold: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1090}], "key.doc.column": 14, "key.doc.comment": "Required number of keypoints meeting threshold for valid 2D pose result", "key.doc.declaration": "public var requiredKeypointsMeetingThreshold: Int", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"40\" column=\"14\"><Name>requiredKeypointsMeetingThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC33requiredKeypointsMeetingThresholdSivp</USR><Declaration>public var requiredKeypointsMeetingThreshold: Int</Declaration><CommentParts><Abstract><Para>Required number of keypoints meeting threshold for valid 2D pose result</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "requiredKeypointsMeetingThreshold", "key.doc.type": "Other", "key.doclength": 76, "key.docoffset": 1012, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>requiredKeypointsMeetingThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 41, "key.name": "requiredKeypointsMeetingThreshold", "key.namelength": 33, "key.nameoffset": 1101, "key.offset": 1097, "key.parsed_declaration": "public var requiredKeypointsMeetingThreshold = 3", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC33requiredKeypointsMeetingThresholdSivp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var keypointThreshold: <Type usr=\"s:Sd\">Double</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1264}], "key.doc.column": 14, "key.doc.comment": "Keypoint confidence score minimum needed for a keypoint to count towards\n`requiredKeypointsMeetingThreshold`.", "key.doc.declaration": "public var keypointThreshold: Double", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"44\" column=\"14\"><Name>keypointThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC17keypointThresholdSdvp</USR><Declaration>public var keypointThreshold: Double</Declaration><CommentParts><Abstract><Para>Keypoint confidence score minimum needed for a keypoint to count towards <codeVoice>requiredKeypointsMeetingThreshold</codeVoice>.</Para></Abstract></CommentParts></Other>", "key.doc.line": 44, "key.doc.name": "keypointThreshold", "key.doc.type": "Other", "key.doclength": 120, "key.docoffset": 1142, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>keypointThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 27, "key.name": "keypointThreshold", "key.namelength": 17, "key.nameoffset": 1275, "key.offset": 1271, "key.parsed_declaration": "public var keypointThreshold = 0.6", "key.parsed_scope.end": 44, "key.parsed_scope.start": 44, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC17keypointThresholdSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var excludedKeypointIndices: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1354}], "key.doc.column": 14, "key.doc.comment": "Indices of keypoints to exclude from 3D Pose.", "key.doc.declaration": "public var excludedKeypointIndices: [Int]", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"47\" column=\"14\"><Name>excludedKeypointIndices</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC23excludedKeypointIndicesSaySiGvp</USR><Declaration>public var excludedKeypointIndices: [Int]</Declaration><CommentParts><Abstract><Para>Indices of keypoints to exclude from 3D Pose.</Para></Abstract></CommentParts></Other>", "key.doc.line": 47, "key.doc.name": "excludedKeypointIndices", "key.doc.type": "Other", "key.doclength": 50, "key.docoffset": 1302, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>excludedKeypointIndices</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 39, "key.name": "excludedKeypointIndices", "key.namelength": 23, "key.nameoffset": 1365, "key.offset": 1361, "key.parsed_declaration": "public var excludedKeypointIndices: [Int] = []", "key.parsed_scope.end": 47, "key.parsed_scope.start": 47, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC23excludedKeypointIndicesSaySiGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var smoothingOptions: <Type usr=\"s:11FritzVision18OneEuroPointFilterC\">OneEuroPointFilter</Type>.<Type usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</Type>? { get set }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1433}], "key.bodylength": 118, "key.bodyoffset": 1491, "key.doc.column": 14, "key.doc.comment": "Pose Smoothing Options", "key.doc.declaration": "public var smoothingOptions: OneEuroPointFilter.Options? { get set }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"50\" column=\"14\"><Name>smoothingOptions</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC09smoothingG00aB022OneEuroFilterPointableC0G0CySo7CGPointV_GSgvp</USR><Declaration>public var smoothingOptions: OneEuroPointFilter.Options? { get set }</Declaration><CommentParts><Abstract><Para>Pose Smoothing Options</Para></Abstract></CommentParts></Other>", "key.doc.line": 50, "key.doc.name": "smoothingOptions", "key.doc.type": "Other", "key.doclength": 27, "key.docoffset": 1404, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>smoothingOptions</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision18OneEuroPointFilterC\">OneEuroPointFilter</ref.class>.<ref.class usr=\"s:11FritzVision22OneEuroFilterPointableC7OptionsC\">Options</ref.class>?</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> <syntaxtype.keyword>set</syntaxtype.keyword> }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 170, "key.name": "smoothingOptions", "key.namelength": 16, "key.nameoffset": 1444, "key.offset": 1440, "key.parsed_declaration": "public var smoothingOptions: OneEuroPointFilter.Options?", "key.parsed_scope.end": 57, "key.parsed_scope.start": 50, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "OneEuroFilterPointable<CGPoint>.Options?", "key.typeusr": "$s11FritzVision22OneEuroFilterPointableC7OptionsCySo7CGPointV_GSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC09smoothingG00aB022OneEuroFilterPointableC0G0CySo7CGPointV_GSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public var orientationFlipAngleThreshold: <Type usr=\"s:Sd\">Double</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1696}], "key.doc.column": 14, "key.doc.comment": "Angle at which keypoints are reversed.  Helps prevent accidental rotations.", "key.doc.declaration": "public var orientationFlipAngleThreshold: Double?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"60\" column=\"14\"><Name>orientationFlipAngleThreshold</Name><USR>s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC29orientationFlipAngleThresholdSdSgvp</USR><Declaration>public var orientationFlipAngleThreshold: Double?</Declaration><CommentParts><Abstract><Para>Angle at which keypoints are reversed.  Helps prevent accidental rotations.</Para></Abstract></CommentParts></Other>", "key.doc.line": 60, "key.doc.name": "orientationFlipAngleThreshold", "key.doc.type": "Other", "key.doclength": 80, "key.docoffset": 1614, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationFlipAngleThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct>?</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 42, "key.name": "orientationFlipAngleThreshold", "key.namelength": 29, "key.nameoffset": 1707, "key.offset": 1703, "key.parsed_declaration": "public var orientationFlipAngleThreshold: Double?", "key.parsed_scope.end": 60, "key.parsed_scope.start": 60, "key.setter_accessibility": "source.lang.swift.accessibility.public", "key.typename": "Double?", "key.typeusr": "$sSdSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC29orientationFlipAngleThresholdSdSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init()</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1749}], "key.bodylength": 0, "key.bodyoffset": 1764, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>()</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 9, "key.name": "init()", "key.namelength": 6, "key.nameoffset": 1756, "key.offset": 1756, "key.parsed_declaration": "public init()", "key.parsed_scope.end": 62, "key.parsed_scope.start": 62, "key.typename": "(FritzVisionRigidBodyPoseLiftingOptions.Type) -> () -> FritzVisionRigidBodyPoseLiftingOptions", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCycD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCACycfc"}], "key.typename": "FritzVisionRigidBodyPoseLiftingOptions.Type", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD14LiftingOptionsCmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class FritzVisionRigidBodyPoseLifting&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1847}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1823}], "key.bodylength": 4574, "key.bodyoffset": 1917, "key.doc.column": 14, "key.doc.comment": "Runs 2D and 3D pose estimation for rigid bodies.", "key.doc.declaration": "@available(iOS 11.0, *)\npublic class FritzVisionRigidBodyPoseLifting<Skeleton> where Skeleton : FritzVision.SkeletonType", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Class file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"68\" column=\"14\"><Name>FritzVisionRigidBodyPoseLifting</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC</USR><Declaration>@available(iOS 11.0, *)\npublic class FritzVisionRigidBodyPoseLifting&lt;Skeleton&gt; where Skeleton : FritzVision.SkeletonType</Declaration><CommentParts><Abstract><Para>Runs 2D and 3D pose estimation for rigid bodies.</Para></Abstract></CommentParts></Class>", "key.doc.line": 68, "key.doc.name": "FritzVisionRigidBodyPoseLifting", "key.doc.type": "Class", "key.doclength": 53, "key.docoffset": 1770, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionRigidBodyPoseLifting</decl.name>&lt;<decl.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 4638, "key.name": "FritzVisionRigidBodyPoseLifting", "key.namelength": 31, "key.nameoffset": 1860, "key.offset": 1854, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLifting<Skeleton: SkeletonType>", "key.parsed_scope.end": 193, "key.parsed_scope.start": 68, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 1902}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 1892, "key.offset": 1892, "key.parsed_declaration": "public class FritzVisionRigidBodyPoseLifting<Skeleton: SkeletonType>", "key.parsed_scope.end": 68, "key.parsed_scope.start": 68, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public let poseModel: <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1920}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>poseModel</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.type></decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 49, "key.name": "poseModel", "key.namelength": 9, "key.nameoffset": 1931, "key.offset": 1927, "key.parsed_declaration": "public let poseModel: FritzVisionPosePredictor<Skeleton>", "key.parsed_scope.end": 69, "key.parsed_scope.start": 69, "key.typename": "FritzVisionPosePredictor<Skeleton>", "key.typeusr": "$s11FritzVision0aB13PosePredictorCyxGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC9poseModel0aB00abD9PredictorCyxGvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var orientationManager: <Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC\">RigidBodyPoseOrientationManager</Type>&lt;Skeleton&gt;? {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1987}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1980}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>orientationManager</decl.name>: <decl.var.type><ref.class usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC\">RigidBodyPoseOrientationManager</ref.class>&lt;Skeleton&gt;?</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 66, "key.name": "orientationManager", "key.namelength": 18, "key.nameoffset": 2004, "key.offset": 2000, "key.parsed_declaration": "public private(set) var orientationManager: RigidBodyPoseOrientationManager<Skeleton>?", "key.parsed_scope.end": 71, "key.parsed_scope.start": 71, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "RigidBodyPoseOrientationManager<Skeleton>?", "key.typeusr": "$s20FritzVisionRigidPose0c4BodyD18OrientationManagerCyxGSgD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC18orientationManagerAA0ced11OrientationH0CyxGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(model: <Type usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, modelPoints: [<Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>])</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 2103}], "key.bodylength": 65, "key.bodyoffset": 2186, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>model</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB13PosePredictorC\">FritzVisionPosePredictor</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>modelPoints</decl.var.parameter.argument_label>: <decl.var.parameter.type>[<ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct>]</decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 142, "key.name": "init(model:modelPoints:)", "key.namelength": 74, "key.nameoffset": 2110, "key.offset": 2110, "key.parsed_declaration": "public init(model: FritzVisionPosePredictor<Skeleton>, modelPoints: [SCNVector3])", "key.parsed_scope.end": 78, "key.parsed_scope.start": 75, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>.Type) -> (FritzVisionPosePredictor<Skeleton>, [SCNVector3]) -> FritzVisionRigidBodyPoseLifting<Skeleton>", "key.typeusr": "$s5model0A6Points20FritzVisionRigidPose0cde4BodyF7LiftingCyxG0cD00cdF9PredictorCyxG_SaySo10SCNVector3VGtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC5model0G6PointsACyxG0aB00abD9PredictorCyxG_SaySo10SCNVector3VGtcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func run2DPrediction(_ image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, options: <Type usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</Type> = .init()) -&gt; (pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, result: <Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;)?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3074}], "key.bodylength": 291, "key.bodyoffset": 3269, "key.doc.column": 15, "key.doc.comment": "Run 2D rigid body pose estimation on FritzVisionImage with given orientation.\n\nApplies orientation and smoothing adjustment on pose if parameters specified in options.\n\n- Parameters:\n  - image: FritzVisionImage to run 2D pose estimation on.\n  - options: Pose Lifting options\n- Returns: Modified pose and raw poseResult from 2D pose prediction.", "key.doc.declaration": "public func run2DPrediction(_ image: FritzVisionImage, options: FritzVisionRigidBodyPoseLiftingOptions = .init()) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.doc.discussion": [{"Para": "Applies orientation and smoothing adjustment on pose if parameters specified in options."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"100\" column=\"15\"><Name>run2DPrediction(_:options:)</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF</USR><Declaration>public func run2DPrediction(_ image: FritzVisionImage, options: FritzVisionRigidBodyPoseLiftingOptions = .init()) -&gt; (pose: Pose&lt;Skeleton&gt;, result: FritzVisionPoseResult&lt;Skeleton&gt;)?</Declaration><CommentParts><Abstract><Para>Run 2D rigid body pose estimation on FritzVisionImage with given orientation.</Para></Abstract><Parameters><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzVisionImage to run 2D pose estimation on.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Pose Lifting options</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Modified pose and raw poseResult from 2D pose prediction.</Para></ResultDiscussion><Discussion><Para>Applies orientation and smoothing adjustment on pose if parameters specified in options.</Para></Discussion></CommentParts></Function>", "key.doc.line": 100, "key.doc.name": "run2DPrediction(_:options:)", "key.doc.parameters": [{"discussion": [{"Para": "FritzVisionImage to run 2D pose estimation on."}], "name": "image"}, {"discussion": [{"Para": "Pose Lifting options"}], "name": "options"}], "key.doc.result_discussion": [{"Para": "Modified pose and raw poseResult from 2D pose prediction."}], "key.doc.type": "Function", "key.doclength": 388, "key.docoffset": 2684, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>run2DPrediction</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>image</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</ref.class></decl.var.parameter.type> = .init()</decl.var.parameter>) -&gt; <decl.function.returntype><tuple>(<tuple.element><tuple.element.argument_label>pose</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>, <tuple.element><tuple.element.argument_label>result</tuple.element.argument_label>: <tuple.element.type><ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</tuple.element.type></tuple.element>)</tuple>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 480, "key.name": "run2DPrediction(_:options:)", "key.namelength": 113, "key.nameoffset": 3086, "key.offset": 3081, "key.parsed_declaration": "public func run2DPrediction(\n  _ image: FritzVisionImage,\n  options: FritzVisionRigidBodyPoseLiftingOptions = .init()\n) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.parsed_scope.end": 112, "key.parsed_scope.start": 100, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>) -> (FritzVisionImage, FritzVisionRigidBodyPoseLiftingOptions) -> (pose: Pose<Skeleton>, result: FritzVisionPoseResult<Skeleton>)?", "key.typeusr": "$s_7options11FritzVision4PoseCyxG4pose_AB0bcD6ResultCyxG6resulttSgAB0bC5ImageC_0bc5RigidD00bci4BodyD14LiftingOptionsCtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15run2DPrediction_7options0aB00D0CyxG4pose_AF0abD6ResultCyxG6resulttSgAF0aB5ImageC_AA0abcedF7OptionsCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func process2DResult(_ poseResult: <Type usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, options: <Type usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</Type>) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 3717}], "key.bodylength": 542, "key.bodyoffset": 3873, "key.doc.column": 15, "key.doc.comment": "Perform post-processing on 2D Pose.\n\n- Parameter poseResult: Result of pose prediction\n- Parameter options: Pose Lifting Options", "key.doc.declaration": "public func process2DResult(_ poseResult: FritzVisionPoseResult<Skeleton>, options: FritzVisionRigidBodyPoseLiftingOptions) -> Pose<Skeleton>?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"118\" column=\"15\"><Name>process2DResult(_:options:)</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC15process2DResult_7options0aB00D0CyxGSgAF0abD6ResultCyxG_AA0abcedF7OptionsCtF</USR><Declaration>public func process2DResult(_ poseResult: FritzVisionPoseResult&lt;Skeleton&gt;, options: FritzVisionRigidBodyPoseLiftingOptions) -&gt; Pose&lt;Skeleton&gt;?</Declaration><CommentParts><Abstract><Para>Perform post-processing on 2D Pose.</Para></Abstract><Parameters><Parameter><Name>poseResult</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Result of pose prediction</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Pose Lifting Options</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 118, "key.doc.name": "process2DResult(_:options:)", "key.doc.parameters": [{"discussion": [{"Para": "Result of pose prediction"}], "name": "poseResult"}, {"discussion": [{"Para": "Pose Lifting Options"}], "name": "options"}], "key.doc.type": "Function", "key.doclength": 150, "key.docoffset": 3565, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>process2DResult</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>poseResult</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision0aB10PoseResultC\">FritzVisionPoseResult</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 692, "key.name": "process2DResult(_:options:)", "key.namelength": 123, "key.nameoffset": 3729, "key.offset": 3724, "key.parsed_declaration": "public func process2DResult(\n  _ poseResult: FritzVisionPoseResult<Skeleton>,\n  options: FritzVisionRigidBodyPoseLiftingOptions\n) -> Pose<Skeleton>?", "key.parsed_scope.end": 133, "key.parsed_scope.start": 118, "key.substructure": [{"key.annotated_decl": "<Declaration>let filtered: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>filtered</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 92, "key.name": "filtered", "key.namelength": 8, "key.nameoffset": 3942, "key.offset": 3938, "key.parsed_declaration": "let filtered = pose.keypoints.filter { !options.excludedKeypointIndices.contains($0.index) }", "key.parsed_scope.end": 124, "key.parsed_scope.start": 124, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15process2DResult_7options0aB00D0CyxGSgAF0abD6ResultCyxG_AA0abcedF7OptionsCtF8filteredL_SayAF8KeypointCyxGGvp"}, {"key.annotated_decl": "<Declaration>let pointsMeetingThreshold: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>pointsMeetingThreshold</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 91, "key.name": "pointsMeetingThreshold", "key.namelength": 22, "key.nameoffset": 4039, "key.offset": 4035, "key.parsed_declaration": "let pointsMeetingThreshold = filtered.filter { $0.score > options.keypointThreshold }.count", "key.parsed_scope.end": 125, "key.parsed_scope.start": 125, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15process2DResult_7options0aB00D0CyxGSgAF0abD6ResultCyxG_AA0abcedF7OptionsCtF22pointsMeetingThresholdL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>) -> (FritzVisionPoseResult<Skeleton>, FritzVisionRigidBodyPoseLiftingOptions) -> Pose<Skeleton>?", "key.typeusr": "$s_7options11FritzVision4PoseCyxGSgAB0bcD6ResultCyxG_0bc5RigidD00bcf4BodyD14LiftingOptionsCtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC15process2DResult_7options0aB00D0CyxGSgAF0abD6ResultCyxG_AA0abcedF7OptionsCtF"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func infer3DPose(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</Type>&gt;, image: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</Type>, frame: <Type usr=\"c:objc(cs)ARFrame\">ARFrame</Type>, options: <Type usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</Type>) -&gt; <Type usr=\"s:20FritzVisionRigidPose0A7SCNPoseV\">FritzSCNPose</Type>?</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 4860}], "key.bodylength": 1453, "key.bodyoffset": 5036, "key.doc.column": 15, "key.doc.comment": "Infer 3D Points from 2D pose. Currently only works in portrait orientation.\n\n- Parameters:\n  - pose: CustomPose result from 2D Rigid Pose Prediction.\n  - image: FritzVisionImage of current image.\n  - frame: Frame for current image.\n  - options: Options for Pose lifting.\n- Returns: FritzSCNPose object containing transforms necessary to place SCNNode in\n    SceneKit Camera Coordinates.", "key.doc.declaration": "public func infer3DPose(_ pose: Pose<Skeleton>, image: FritzVisionImage, frame: ARFrame, options: FritzVisionRigidBodyPoseLiftingOptions) -> FritzSCNPose?", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift\" line=\"144\" column=\"15\"><Name>infer3DPose(_:image:frame:options:)</Name><USR>s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF</USR><Declaration>public func infer3DPose(_ pose: Pose&lt;Skeleton&gt;, image: FritzVisionImage, frame: ARFrame, options: FritzVisionRigidBodyPoseLiftingOptions) -&gt; FritzSCNPose?</Declaration><CommentParts><Abstract><Para>Infer 3D Points from 2D pose. Currently only works in portrait orientation.</Para></Abstract><Parameters><Parameter><Name>pose</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>CustomPose result from 2D Rigid Pose Prediction.</Para></Discussion></Parameter><Parameter><Name>image</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>FritzVisionImage of current image.</Para></Discussion></Parameter><Parameter><Name>frame</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Frame for current image.</Para></Discussion></Parameter><Parameter><Name>options</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Options for Pose lifting.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>FritzSCNPose object containing transforms necessary to place SCNNode in SceneKit Camera Coordinates.</Para></ResultDiscussion></CommentParts></Function>", "key.doc.line": 144, "key.doc.name": "infer3DPose(_:image:frame:options:)", "key.doc.parameters": [{"discussion": [{"Para": "CustomPose result from 2D Rigid Pose Prediction."}], "name": "pose"}, {"discussion": [{"Para": "FritzVisionImage of current image."}], "name": "image"}, {"discussion": [{"Para": "Frame for current image."}], "name": "frame"}, {"discussion": [{"Para": "Options for Pose lifting."}], "name": "options"}], "key.doc.result_discussion": [{"Para": "FritzSCNPose object containing transforms necessary to place SCNNode in SceneKit Camera Coordinates."}], "key.doc.type": "Function", "key.doclength": 438, "key.docoffset": 4420, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>infer3DPose</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0abc4BodyD7LiftingC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>image</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionImage\">FritzVisionImage</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>frame</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"c:objc(cs)ARFrame\">ARFrame</ref.class></decl.var.parameter.type></decl.var.parameter>, <decl.var.parameter><decl.var.parameter.argument_label>options</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.class usr=\"s:20FritzVisionRigidPose0abc4BodyD14LiftingOptionsC\">FritzVisionRigidBodyPoseLiftingOptions</ref.class></decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.struct usr=\"s:20FritzVisionRigidPose0A7SCNPoseV\">FritzSCNPose</ref.struct>?</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 1623, "key.name": "infer3DPose(_:image:frame:options:)", "key.namelength": 145, "key.nameoffset": 4872, "key.offset": 4867, "key.parsed_declaration": "public func infer3DPose(\n  _ pose: Pose<Skeleton>,\n  image: FritzVisionImage,\n  frame: ARFrame,\n  options: FritzVisionRigidBodyPoseLiftingOptions\n) -> FritzSCNPose?", "key.parsed_scope.end": 192, "key.parsed_scope.start": 144, "key.substructure": [{"key.annotated_decl": "<Declaration>let originalSize: <Type usr=\"c:@S@CGSize\">CGSize</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>originalSize</decl.name>: <decl.var.type><ref.struct usr=\"c:@S@CGSize\">CGSize</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 37, "key.name": "originalSize", "key.namelength": 12, "key.nameoffset": 5046, "key.offset": 5042, "key.parsed_declaration": "let originalSize = image.originalSize", "key.parsed_scope.end": 151, "key.parsed_scope.start": 151, "key.typename": "CGSize", "key.typeusr": "$sSo6CGSizeVD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF12originalSizeL_So6CGSizeVvp"}, {"key.annotated_decl": "<Declaration>let excludedKeypoints: [<Type usr=\"s:Si\">Int</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>excludedKeypoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Si\">Int</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 55, "key.name": "excludedKeypoints", "key.namelength": 17, "key.nameoffset": 5088, "key.offset": 5084, "key.parsed_declaration": "let excludedKeypoints = options.excludedKeypointIndices", "key.parsed_scope.end": 152, "key.parsed_scope.start": 152, "key.typename": "[Int]", "key.typeusr": "$sSaySiGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF17excludedKeypointsL_SaySiGvp"}, {"key.annotated_decl": "<Declaration>let rotatedPose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>rotatedPose</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 67, "key.name": "rotatedPose", "key.namelength": 11, "key.nameoffset": 5149, "key.offset": 5145, "key.parsed_declaration": "let rotatedPose = pose.rotateKeypointsToOriginalImage(image: image)", "key.parsed_scope.end": 154, "key.parsed_scope.start": 154, "key.typename": "Pose<Skeleton>", "key.typeusr": "$s11FritzVision4PoseCyxGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF07rotatedD0L_ANvp"}, {"key.annotated_decl": "<Declaration>let keypoints: [<Type usr=\"s:11FritzVision8KeypointC\">Keypoint</Type>&lt;Skeleton&gt;]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypoints</decl.name>: <decl.var.type>[<ref.class usr=\"s:11FritzVision8KeypointC\">Keypoint</ref.class>&lt;Skeleton&gt;]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 86, "key.name": "keypoints", "key.namelength": 9, "key.nameoffset": 5222, "key.offset": 5218, "key.parsed_declaration": "let keypoints = rotatedPose.keypoints.filter { !excludedKeypoints.contains($0.index) }", "key.parsed_scope.end": 156, "key.parsed_scope.start": 156, "key.typename": "[Keypoint<Skeleton>]", "key.typeusr": "$sSay11FritzVision8KeypointCyxGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF9keypointsL_SayAK8KeypointCyxGGvp"}, {"key.annotated_decl": "<Declaration>let keypointsOpenCVCoords: [[<Type usr=\"s:Sd\">Double</Type>]]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>keypointsOpenCVCoords</decl.name>: <decl.var.type>[[<ref.struct usr=\"s:Sd\">Double</ref.struct>]]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 193, "key.name": "keypointsOpenCVCoords", "key.namelength": 21, "key.nameoffset": 5313, "key.offset": 5309, "key.parsed_declaration": "let keypointsOpenCVCoords: [[Double]] = keypoints.map", "key.parsed_scope.end": 157, "key.parsed_scope.start": 157, "key.typename": "[[Double]]", "key.typeusr": "$sSaySaySdGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF21keypointsOpenCVCoordsL_SaySaySdGGvp"}, {"key.annotated_decl": "<Declaration>var flattenedPoints: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flattenedPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 58, "key.name": "flattenedPoints", "key.namelength": 15, "key.nameoffset": 5512, "key.offset": 5508, "key.parsed_declaration": "var flattenedPoints = keypointsOpenCVCoords.flatMap { $0 }", "key.parsed_scope.end": 164, "key.parsed_scope.start": 164, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF15flattenedPointsL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>let includedModelPoints: [<Type usr=\"c:@S@SCNVector3\">SCNVector3</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>includedModelPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"c:@S@SCNVector3\">SCNVector3</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 129, "key.name": "includedModelPoints", "key.namelength": 19, "key.nameoffset": 5576, "key.offset": 5572, "key.parsed_declaration": "let includedModelPoints = modelPoints.enumerated().filter", "key.parsed_scope.end": 166, "key.parsed_scope.start": 166, "key.typename": "[SCNVector3]", "key.typeusr": "$sSaySo10SCNVector3VGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF19includedModelPointsL_SaySo10SCNVector3VGvp"}, {"key.annotated_decl": "<Declaration>let dentastix3DOpenCV: [[<Type usr=\"s:Sf\">Float</Type>]]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>dentastix3DOpenCV</decl.name>: <decl.var.type>[[<ref.struct usr=\"s:Sf\">Float</ref.struct>]]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 72, "key.name": "dentastix3DOpenCV", "key.namelength": 17, "key.nameoffset": 5711, "key.offset": 5707, "key.parsed_declaration": "let dentastix3DOpenCV = includedModelPoints.map { [$0.x, -$0.y, -$0.z] }", "key.parsed_scope.end": 170, "key.parsed_scope.start": 170, "key.typename": "[[Float]]", "key.typeusr": "$sSaySaySfGGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF17dentastix3DOpenCVL_SaySaySfGGvp"}, {"key.annotated_decl": "<Declaration>var flattened3DModelPoints: [<Type usr=\"s:Sd\">Double</Type>]</Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flattened3DModelPoints</decl.name>: <decl.var.type>[<ref.struct usr=\"s:Sd\">Double</ref.struct>]</decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 80, "key.name": "flattened3DModelPoints", "key.namelength": 22, "key.nameoffset": 5788, "key.offset": 5784, "key.parsed_declaration": "var flattened3DModelPoints = dentastix3DOpenCV.flatMap { $0 }.map { Double($0) }", "key.parsed_scope.end": 171, "key.parsed_scope.start": 171, "key.typename": "[Double]", "key.typeusr": "$sSaySdGD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF22flattened3DModelPointsL_SaySdGvp"}, {"key.annotated_decl": "<Declaration>let fx: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>fx</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 38, "key.name": "fx", "key.namelength": 2, "key.nameoffset": 5874, "key.offset": 5870, "key.parsed_declaration": "let fx = frame.camera.intrinsics[0][0]", "key.parsed_scope.end": 173, "key.parsed_scope.start": 173, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF2fxL_Sfvp"}, {"key.annotated_decl": "<Declaration>let numKeypoints: <Type usr=\"s:Si\">Int</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/FritzVisionRigidBodyPoseProcessing.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>numKeypoints</decl.name>: <decl.var.type><ref.struct usr=\"s:Si\">Int</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 62, "key.name": "numKeypoints", "key.namelength": 12, "key.nameoffset": 5917, "key.offset": 5913, "key.parsed_declaration": "let numKeypoints = modelPoints.count - excludedKeypoints.count", "key.parsed_scope.end": 174, "key.parsed_scope.start": 174, "key.typename": "Int", "key.typeusr": "$sSiD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF12numKeypointsL_Sivp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (FritzVisionRigidBodyPoseLifting<Skeleton>) -> (Pose<Skeleton>, FritzVisionImage, ARFrame, FritzVisionRigidBodyPoseLiftingOptions) -> FritzSCNPose?", "key.typeusr": "$s_5image5frame7options20FritzVisionRigidPose0D7SCNPoseVSg0dE00G0CyxG_AH0dE5ImageCSo7ARFrameCAD0def4BodyG14LiftingOptionsCtcD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC11infer3DPose_5image5frame7optionsAA0A7SCNPoseVSg0aB00D0CyxG_AK0aB5ImageCSo7ARFrameCAA0abcedF7OptionsCtF"}], "key.typename": "FritzVisionRigidBodyPoseLifting<Skeleton>.Type", "key.typeusr": "$s20FritzVisionRigidPose0abc4BodyD7LiftingCyxGmD", "key.usr": "s:20FritzVisionRigidPose0abc4BodyD7LiftingC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 2587, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public class RigidBodyPoseOrientationManager&lt;Skeleton&gt; where Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 625}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 601}], "key.bodylength": 1890, "key.bodyoffset": 695, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>RigidBodyPoseOrientationManager</decl.name>&lt;<decl.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\"><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name></decl.generic_type_param>&gt; <syntaxtype.keyword>where</syntaxtype.keyword> <decl.generic_type_requirement>Skeleton : <ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_requirement></decl.class>", "key.kind": "source.lang.swift.decl.class", "key.length": 1954, "key.name": "RigidBodyPoseOrientationManager", "key.namelength": 31, "key.nameoffset": 638, "key.offset": 632, "key.parsed_declaration": "public class RigidBodyPoseOrientationManager<Skeleton: SkeletonType>", "key.parsed_scope.end": 86, "key.parsed_scope.start": 29, "key.substructure": [{"key.annotated_decl": "<Declaration>Skeleton : <Type usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</Type></Declaration>", "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 12, "key.offset": 680}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.generic_type_param><decl.generic_type_param.name>Skeleton</decl.generic_type_param.name> : <decl.generic_type_param.constraint><ref.protocol usr=\"s:11FritzVision12SkeletonTypeP\">SkeletonType</ref.protocol></decl.generic_type_param.constraint></decl.generic_type_param>", "key.inheritedtypes": [{"key.name": "SkeletonType"}], "key.kind": "source.lang.swift.decl.generic_type_param", "key.length": 22, "key.name": "Skeleton", "key.namelength": 8, "key.nameoffset": 670, "key.offset": 670, "key.parsed_declaration": "public class RigidBodyPoseOrientationManager<Skeleton: SkeletonType>", "key.parsed_scope.end": 29, "key.parsed_scope.start": 29, "key.typename": "Skeleton.Type", "key.typeusr": "$sxmD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public internal(set) var flipOrientationDegrees: <Type usr=\"s:Sd\">Double</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.internal", "key.length": 13, "key.offset": 911}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 904}], "key.doc.column": 28, "key.doc.comment": "Degree threshold for flipping pose.  If the absolute value of the angle\nof the previous pose direction and current pose direction is greater than the\nthreshold, the pose will be flipped.", "key.doc.declaration": "public internal(set) var flipOrientationDegrees: Double {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"34\" column=\"28\"><Name>flipOrientationDegrees</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesSdvp</USR><Declaration>public internal(set) var flipOrientationDegrees: Double {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Degree threshold for flipping pose.  If the absolute value of the angle of the previous pose direction and current pose direction is greater than the threshold, the pose will be flipped.</Para></Abstract></CommentParts></Other>", "key.doc.line": 34, "key.doc.name": "flipOrientationDegrees", "key.doc.type": "Other", "key.doclength": 203, "key.docoffset": 699, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>internal</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>flipOrientationDegrees</decl.name>: <decl.var.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 34, "key.name": "flipOrientationDegrees", "key.namelength": 22, "key.nameoffset": 929, "key.offset": 925, "key.parsed_declaration": "public internal(set) var flipOrientationDegrees: Double", "key.parsed_scope.end": 34, "key.parsed_scope.start": 34, "key.setter_accessibility": "source.lang.swift.accessibility.internal", "key.typename": "Double", "key.typeusr": "$sSdD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesSdvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var previousPoseFlipped: <Type usr=\"s:Sb\">Bool</Type> {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1039}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1032}], "key.doc.column": 27, "key.doc.comment": "If true, `previousPose` flipped from its original orientation.", "key.doc.declaration": "public private(set) var previousPoseFlipped: Bool {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"37\" column=\"27\"><Name>previousPoseFlipped</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD7FlippedSbvp</USR><Declaration>public private(set) var previousPoseFlipped: Bool {\n    get\n    }</Declaration><CommentParts><Abstract><Para>If true, <codeVoice>previousPose</codeVoice> flipped from its original orientation.</Para></Abstract></CommentParts></Other>", "key.doc.line": 37, "key.doc.name": "previousPoseFlipped", "key.doc.type": "Other", "key.doclength": 67, "key.docoffset": 963, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>previousPoseFlipped</decl.name>: <decl.var.type><ref.struct usr=\"s:Sb\">Bool</ref.struct></decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 31, "key.name": "previousPoseFlipped", "key.namelength": 19, "key.nameoffset": 1056, "key.offset": 1052, "key.parsed_declaration": "public private(set) var previousPoseFlipped = false", "key.parsed_scope.end": 37, "key.parsed_scope.start": 37, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Bool", "key.typeusr": "$sSbD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD7FlippedSbvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public private(set) var previousPose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;Skeleton&gt;? {\n  get\n  }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.setter_access.private", "key.length": 12, "key.offset": 1141}, {"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1134}], "key.doc.column": 27, "key.doc.comment": "Previous pose after orientation applied.", "key.doc.declaration": "public private(set) var previousPose: FritzVision.Pose<Skeleton>? {\n    get\n    }", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Other file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"40\" column=\"27\"><Name>previousPose</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD00aB00D0CyxGSgvp</USR><Declaration>public private(set) var previousPose: FritzVision.Pose&lt;Skeleton&gt;? {\n    get\n    }</Declaration><CommentParts><Abstract><Para>Previous pose after orientation applied.</Para></Abstract></CommentParts></Other>", "key.doc.line": 40, "key.doc.name": "previousPose", "key.doc.type": "Other", "key.doclength": 45, "key.docoffset": 1087, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>private</syntaxtype.keyword>(set) <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>previousPose</decl.name>: <decl.var.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;Skeleton&gt;?</decl.var.type> {\n  get\n  }</decl.var.instance>", "key.kind": "source.lang.swift.decl.var.instance", "key.length": 33, "key.name": "previousPose", "key.namelength": 12, "key.nameoffset": 1158, "key.offset": 1154, "key.parsed_declaration": "public private(set) var previousPose: Pose<Skeleton>?", "key.parsed_scope.end": 40, "key.parsed_scope.start": 40, "key.setter_accessibility": "source.lang.swift.accessibility.private", "key.typename": "Pose<Skeleton>?", "key.typeusr": "$s11FritzVision4PoseCyxGSgD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC08previousD00aB00D0CyxGSgvp"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public init(flipOrientationDegrees: <Type usr=\"s:Sd\">Double</Type>)</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1413}], "key.bodylength": 60, "key.bodyoffset": 1458, "key.doc.column": 10, "key.doc.comment": "Initialize RigidPoseOrientationManager\n\n- Parameter flipOrientationDegrees: Degree threshold for flipping orientation\n    of pose.", "key.doc.declaration": "public init(flipOrientationDegrees: Double)", "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"48\" column=\"10\"><Name>init(flipOrientationDegrees:)</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesACyxGSd_tcfc</USR><Declaration>public init(flipOrientationDegrees: Double)</Declaration><CommentParts><Abstract><Para>Initialize RigidPoseOrientationManager</Para></Abstract><Parameters><Parameter><Name>flipOrientationDegrees</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Degree threshold for flipping orientation of pose.</Para></Discussion></Parameter></Parameters></CommentParts></Function>", "key.doc.line": 48, "key.doc.name": "init(flipOrientationDegrees:)", "key.doc.parameters": [{"discussion": [{"Para": "Degree threshold for flipping orientation of pose."}], "name": "flipOrientationDegrees"}], "key.doc.type": "Function", "key.doclength": 152, "key.docoffset": 1259, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.constructor><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>init</syntaxtype.keyword>(<decl.var.parameter><decl.var.parameter.argument_label>flipOrientationDegrees</decl.var.parameter.argument_label>: <decl.var.parameter.type><ref.struct usr=\"s:Sd\">Double</ref.struct></decl.var.parameter.type></decl.var.parameter>)</decl.function.constructor>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 99, "key.name": "init(flipOrientationDegrees:)", "key.namelength": 36, "key.nameoffset": 1420, "key.offset": 1420, "key.parsed_declaration": "public init(flipOrientationDegrees: Double)", "key.parsed_scope.end": 50, "key.parsed_scope.start": 48, "key.substructure": [], "key.typename": "<Skeleton where Skeleton : SkeletonType> (RigidBodyPoseOrientationManager<Skeleton>.Type) -> (Double) -> RigidBodyPoseOrientationManager<Skeleton>", "key.typeusr": "$s22flipOrientationDegrees20FritzVisionRigidPose0f4BodygB7ManagerCyxGSd_tcD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC04flipF7DegreesACyxGSd_tcfc"}, {"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>public func orientPose(_ pose: <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</Type>&gt;) -&gt; <Type usr=\"s:11FritzVision4PoseC\">Pose</Type>&lt;<Type usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</Type>&gt;</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1780}], "key.bodylength": 737, "key.bodyoffset": 1846, "key.doc.column": 15, "key.doc.comment": "Orient pose according to previous pose and current pose direction.\n\nThe current `pose` is compared against the previously oriented pose.\n\n- Parameter pose: Custom pose to align with previous pose.\n- Returns: Oriented pose.", "key.doc.declaration": "public func orientPose(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.doc.discussion": [{"Para": "The current `pose` is compared against the previously oriented pose."}], "key.doc.file": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.doc.full_as_xml": "<Function file=\"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift\" line=\"58\" column=\"15\"><Name>orientPose(_:)</Name><USR>s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF</USR><Declaration>public func orientPose(_ pose: Pose&lt;Skeleton&gt;) -&gt; Pose&lt;Skeleton&gt;</Declaration><CommentParts><Abstract><Para>Orient pose according to previous pose and current pose direction.</Para></Abstract><Parameters><Parameter><Name>pose</Name><Direction isExplicit=\"0\">in</Direction><Discussion><Para>Custom pose to align with previous pose.</Para></Discussion></Parameter></Parameters><ResultDiscussion><Para>Oriented pose.</Para></ResultDiscussion><Discussion><Para>The current <codeVoice>pose</codeVoice> is compared against the previously oriented pose.</Para></Discussion></CommentParts></Function>", "key.doc.line": 58, "key.doc.name": "orientPose(_:)", "key.doc.parameters": [{"discussion": [{"Para": "Custom pose to align with previous pose."}], "name": "pose"}], "key.doc.result_discussion": [{"Para": "Oriented pose."}], "key.doc.type": "Function", "key.doclength": 255, "key.docoffset": 1523, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.function.method.instance><syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>func</syntaxtype.keyword> <decl.name>orientPose</decl.name>(<decl.var.parameter><decl.var.parameter.argument_label>_</decl.var.parameter.argument_label> <decl.var.parameter.name>pose</decl.var.parameter.name>: <decl.var.parameter.type><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.var.parameter.type></decl.var.parameter>) -&gt; <decl.function.returntype><ref.class usr=\"s:11FritzVision4PoseC\">Pose</ref.class>&lt;<ref.generic_type_param usr=\"s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC8Skeletonxmfp\">Skeleton</ref.generic_type_param>&gt;</decl.function.returntype></decl.function.method.instance>", "key.kind": "source.lang.swift.decl.function.method.instance", "key.length": 797, "key.name": "orientPose(_:)", "key.namelength": 34, "key.nameoffset": 1792, "key.offset": 1787, "key.parsed_declaration": "public func orientPose(_ pose: Pose<Skeleton>) -> Pose<Skeleton>", "key.parsed_scope.end": 85, "key.parsed_scope.start": 58, "key.substructure": [{"key.annotated_decl": "<Declaration>let angle: <Type usr=\"s:Sf\">Float</Type></Declaration>", "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/RigidPoseOrientationManager.swift", "key.fully_annotated_decl": "<decl.var.local><syntaxtype.keyword>let</syntaxtype.keyword> <decl.name>angle</decl.name>: <decl.var.type><ref.struct usr=\"s:Sf\">Float</ref.struct></decl.var.type></decl.var.local>", "key.kind": "source.lang.swift.decl.var.local", "key.length": 77, "key.name": "angle", "key.namelength": 5, "key.nameoffset": 1959, "key.offset": 1955, "key.parsed_declaration": "let angle = previousPose.direction.angle(between: pose.direction) * 180 / .pi", "key.parsed_scope.end": 63, "key.parsed_scope.start": 63, "key.typename": "Float", "key.typeusr": "$sSfD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF5angleL_Sfvp"}], "key.typename": "<Skeleton where Skeleton : SkeletonType> (RigidBodyPoseOrientationManager<Skeleton>) -> (Pose<Skeleton>) -> Pose<Skeleton>", "key.typeusr": "$sy11FritzVision4PoseCyxGADcD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC06orientD0y0aB00D0CyxGAHF"}], "key.typename": "RigidBodyPoseOrientationManager<Skeleton>.Type", "key.typeusr": "$s20FritzVisionRigidPose0c4BodyD18OrientationManagerCyxGmD", "key.usr": "s:20FritzVisionRigidPose0c4BodyD18OrientationManagerC"}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionRigidPose/SCNVector+Extensions.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 13147, "key.offset": 0, "key.substructure": [{"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 18, "key.name": "MARK: Axis aliases", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 9994}, {"key.kind": "source.lang.swift.syntaxtype.comment.mark", "key.length": 17, "key.name": "MARK: - Debugging", "key.namelength": 0, "key.nameoffset": 0, "key.offset": 10313}]}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionPoseLiftingModel+Downloadable.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 1897, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc(FritzVisionPoseLiftingModelObjc) public class FritzVisionPoseLiftingModelObjc : <Type usr=\"c:objc(cs)NSObject\">NSObject</Type></Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1729}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 38, "key.offset": 1690}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 1666}], "key.bodylength": 110, "key.bodyoffset": 1785, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 1775}], "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionPoseLiftingModel+Downloadable.swift", "key.fully_annotated_decl": "<decl.class><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name>(FritzVisionPoseLiftingModelObjc)</syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>class</syntaxtype.keyword> <decl.name>FritzVisionPoseLiftingModelObjc</decl.name> : <ref.class usr=\"c:objc(cs)NSObject\">NSObject</ref.class></decl.class>", "key.inheritedtypes": [{"key.name": "NSObject"}], "key.kind": "source.lang.swift.decl.class", "key.length": 160, "key.name": "FritzVisionPoseLiftingModelObjc", "key.namelength": 31, "key.nameoffset": 1742, "key.offset": 1736, "key.parsed_declaration": "public class FritzVisionPoseLiftingModelObjc: NSObject", "key.parsed_scope.end": 59, "key.parsed_scope.start": 54, "key.runtime_name": "FritzVisionPoseLiftingModelObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: <Type usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel\">FritzVisionPoseLiftingModel</Type> { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 1795}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 1789}], "key.bodylength": 44, "key.bodyoffset": 1849, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionMultiPoseModel/FritzVisionPoseLiftingModel+Downloadable.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type><ref.class usr=\"c:@M@FritzVision@objc(cs)FritzVisionPoseLiftingModel\">FritzVisionPoseLiftingModel</ref.class></decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 92, "key.name": "model", "key.namelength": 5, "key.nameoffset": 1813, "key.offset": 1802, "key.parsed_declaration": "@objc public static var model: FritzVisionPoseLiftingModel", "key.parsed_scope.end": 58, "key.parsed_scope.start": 56, "key.typename": "FritzVisionPoseLiftingModel", "key.typeusr": "$s11FritzVision0aB16PoseLiftingModelCD", "key.usr": "c:@M@FritzVisionMultiPoseModel@objc(cs)FritzVisionPoseLiftingModelObjc(cpy)model"}], "key.typename": "FritzVisionPoseLiftingModelObjc.Type", "key.typeusr": "$s25FritzVisionMultiPoseModel0abd7LiftingE4ObjcCmD", "key.usr": "c:@M@FritzVisionMultiPoseModel@objc(cs)FritzVisionPoseLiftingModelObjc"}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionMultiPoseModel.build/DerivedSources/CoreMLGenerated/poseLifter/poseLifter.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6020, "key.offset": 0, "key.substructure": []}}, {"/Users/chris/fritz/swift-sdk/Source/FritzVisionDepthModel/FritzVisionDepthModel+PackagedModel.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 936, "key.offset": 0, "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 786}, {"key.attribute": "source.decl.attribute.objc.name", "key.length": 32, "key.offset": 753}, {"key.attribute": "source.decl.attribute.available", "key.length": 23, "key.offset": 729}, {"key.attribute": "source.decl.attribute.available", "key.length": 33, "key.offset": 695}], "key.bodylength": 98, "key.bodyoffset": 836, "key.elements": [{"key.kind": "source.lang.swift.structure.elem.typeref", "key.length": 8, "key.offset": 826}], "key.inheritedtypes": [{"key.name": "NSObject"}], "key.internal_diagnostic": "Unavailable in the current compilation context.", "key.kind": "source.lang.swift.decl.class", "key.length": 142, "key.name": "FritzVisionDepthModelObjc", "key.namelength": 25, "key.nameoffset": 799, "key.offset": 793, "key.runtime_name": "FritzVisionDepthModelObjc", "key.substructure": [{"key.accessibility": "source.lang.swift.accessibility.public", "key.annotated_decl": "<Declaration>@objc public static var model: FritzVisionDepthModel { get }</Declaration>", "key.attributes": [{"key.attribute": "source.decl.attribute.public", "key.length": 6, "key.offset": 846}, {"key.attribute": "source.decl.attribute.objc", "key.length": 5, "key.offset": 840}], "key.bodylength": 38, "key.bodyoffset": 894, "key.filepath": "/Users/chris/fritz/swift-sdk/Source/FritzVisionDepthModel/FritzVisionDepthModel+PackagedModel.swift", "key.fully_annotated_decl": "<decl.var.static><syntaxtype.attribute.builtin><syntaxtype.attribute.name>@objc</syntaxtype.attribute.name></syntaxtype.attribute.builtin> <syntaxtype.keyword>public</syntaxtype.keyword> <syntaxtype.keyword>static</syntaxtype.keyword> <syntaxtype.keyword>var</syntaxtype.keyword> <decl.name>model</decl.name>: <decl.var.type>FritzVisionDepthModel</decl.var.type> { <syntaxtype.keyword>get</syntaxtype.keyword> }</decl.var.static>", "key.kind": "source.lang.swift.decl.var.static", "key.length": 80, "key.name": "model", "key.namelength": 5, "key.nameoffset": 864, "key.offset": 853, "key.parsed_declaration": "@objc public static var model: FritzVisionDepthModel", "key.parsed_scope.end": 33, "key.parsed_scope.start": 31, "key.typename": "<<error type>>", "key.typeusr": "$sXeD", "key.usr": "s:21FritzVisionDepthModel0abcD4ObjcC5modelXevpZ"}]}]}}, {"/Users/chris/fritz/swift-sdk/build/Fritz.build/Release-iphoneos/FritzVisionDepthModel.build/DerivedSources/CoreMLGenerated/depth_mobilenet_224x224_1_1564969669/depth_mobilenet_224x224_1_1564969669.swift": {"key.diagnostic_stage": "source.diagnostic.stage.swift.parse", "key.length": 6673, "key.offset": 0, "key.substructure": []}}]