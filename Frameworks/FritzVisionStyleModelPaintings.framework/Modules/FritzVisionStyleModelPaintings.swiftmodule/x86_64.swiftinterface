// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.2 (swiftlang-1100.0.278 clang-1100.0.33.9)
// swift-module-flags: -target x86_64-apple-ios9.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name FritzVisionStyleModelPaintings
import CoreML
import Foundation
import FritzManagedModel
import FritzVision
@_exported import FritzVisionStyleModelPaintings
import Swift
@available(iOS 12.0, *)
@objc(PaintingStyleModel) public class PaintingStyleModel : ObjectiveC.NSObject {
  @objc(FritzVisionPaintingStyle) public enum Style : Swift.Int, Swift.CaseIterable {
    case bicentennialPrint
    case femmes
    case headOfClown
    case horsesOnSeashore
    case poppyField
    case ritmoPlastico
    case starryNight
    case theScream
    case theTrial
    public var name: Swift.String {
      get
    }
    public static func getFromName(_ name: Swift.String) -> FritzVisionStyleModelPaintings.PaintingStyleModel.Style?
    public func build() -> FritzVision.FritzVisionStylePredictor
    public typealias RawValue = Swift.Int
    public init?(rawValue: Swift.Int)
    public var rawValue: Swift.Int {
      get
    }
    public typealias AllCases = [FritzVisionStyleModelPaintings.PaintingStyleModel.Style]
    public static var allCases: [FritzVisionStyleModelPaintings.PaintingStyleModel.Style] {
      get
    }
  }
  @objc(allModels) public static func allModels() -> [FritzVision.FritzVisionStylePredictor]
  @objc override dynamic public init()
  @objc deinit
}
@available(iOS 12.0, *)
extension FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Swift.Equatable {}
@available(iOS 12.0, *)
extension FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Swift.Hashable {}
@available(iOS 12.0, *)
extension FritzVisionStyleModelPaintings.PaintingStyleModel.Style : Swift.RawRepresentable {}
